{"version":3,"sources":["images/apple cookies.jpg","logo.svg","alert-components/AlertNavBar.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alerts/AlertPodas.jsx","alert-components/AccionDetallada.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/BarraDeLuz.jsx","components/FechaYHora.jsx","components/AccionesRapidas.jsx","components/TemperaturaYHumedad.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/AlertHeader.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/Armario.jsx","Pages/Layout.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/FormularioAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","App.js","Pages/Poda.jsx","reducers/index.js","Pages/PantallaDeCarga.jsx","serviceWorker.js","index.js"],"names":["module","exports","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Component","DetallePlanta","src","fotoPlanta","alt","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","DetalleAcciones","alertRiegos","faTint","alertPodas","faCut","alertFumigaciones","faBug","BreadcrumbPlanta","item","return","nombre","AlertPlanta","type","alertEliminarPlanta","alertCambiarCiclo","AlertPodas","podas","Object","values","reverse","map","poda","fecha","AccionDetallada","accion","agua","tipoDeRiego","console","log","keys","aditivos","aditivo","AlertRiego","riegos","riego","fumigaciones","fumigacion","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","a","firebase","ref","child","id","remove","setState","AlertNuevaPlanta","faCheckCircle","document","getElementById","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","push","format","alertNuevaPlanta","plantas","key","faPlusCircle","connect","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","calcularFaltante","horaDeFinal","horaDeInicio","time","add","hours","parseInt","minutes","calcularTranscurrido","cambiarEstadoDeLampara","calcularEstadoDeBarra","cicloLuminico","slice","indexOf","interval","setInterval","actualizarCicloLuminico","style","width","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","FechaYHora","AccionesRapidas","to","TempreaturaYHumedad","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","Armario","AlertCambiarInicio","update","horas","faCogs","TemperaturaYHumedad","Layout","children","AlertConfirmarAccion","accionfn","NavBarAccion","CheckboxPlanta","checked","handleClick","llave","ElegirPlantaAccion","seleccionarPlanta","ElegirTipoDeRiego","cambiarTipoDeRiego","BotoneraConfirmacionAccion","faCheck","confirmarAccion","FormularioAccion","action","htmlFor","onChange","cambiarLitrosDeAgua","target","cantidadDeAgua","cambiarAditivo","Riego","regar","planta","guardarRiegoBD","idPlanta","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","adivito","Insecticida","platnas","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","store","data","Poda","podar","guardarPodaBD","reducer","PantallaDeCarga","faCannabis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","loading","on","snapshot","val","createStore","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e80a4c5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col text-left\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center\">\n                    {this.props.title}\n                </div>\n                <div className=\"col text-right\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nclass DetallePlanta extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4 mb-4\">\n                <div className=\"col-4 text-center\">\n                    <img src={fotoPlanta} alt=\"\" className='alert-foto'/>\n                </div>\n                <div className=\"col-8 align-self-center\">\n                    <div className=\"container\">\n                        <div className=\"list-group\">\n                            <div className=\"list-group-item list-group-item-action\">\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\n                                    <h6 className=''>Genetica</h6>\n                                    <h6 className='text-right '>{this.props.genetica}</h6>\n                                </div>\n                            </div>\n                            <div className=\"list-group-item list-group-item-action\">\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\n                                    <h6 className=''>Edad</h6>\n                                    <h6 className='text-right '>{this.props.edad} Dias</h6>\n                                </div>\n                            </div>\n                            <div className=\"list-group-item list-group-item-action\">\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\n                                    <h6 className=''>Fecha de Germinacion</h6>\n                                    <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\n                                </div>\n                            </div>\n                            <div className=\"list-group-item list-group-item-action\">\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\n                                    <h6 className=''>Inicio de Vegetativo</h6>\n                                    <h6 className='text-right '>{\n                                        this.props.inicioVegetativo?\n                                            `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                </div>\n                            </div>\n                            <div className=\"list-group-item list-group-item-action\">\n                                <div className=\"d-flex w-100 justify-content-between align-items-center\">\n                                    <h6 className=''>Inicio de Floracion</h6>\n                                    <h6 className='text-right '>{\n                                        this.props.inicioFloracion?\n                                        `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\n                                        :\n                                        '--/--/----'\n                                    }</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default DetallePlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nclass DetalleAcciones extends Component{\n    render(){\n        return(\n            <div className=\"row pt-2 pb-2 botonera justify-content-around \">\n                <div className=\"col-auto align-self-center\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertRiegos()\n                    }}>\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Riegos</small>\n                    </div>\n                </div>\n                <div className=\"col-auto align-self-center\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertPodas()\n                    }}>\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Podas</small>\n                    </div>\n                </div>\n                <div className=\"col-auto align-self-center\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertFumigaciones()\n                    }}>\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default DetalleAcciones","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nclass AlertPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\n                />\n                <DetallePlanta \n                    genetica={this.props.genetica}\n                    edad={this.props.edad}\n                    nacimiento={this.props.nacimiento}\n                    inicioVegetativo={this.props.inicioVegetativo}\n                    inicioFloracion={this.props.inicioFloracion}\n                />\n                <DetalleAcciones\n                    alertRiegos={this.props.alertRiegos}\n                    alertPodas={this.props.alertPodas}\n                    alertFumigaciones={this.props.alertFumigaciones}\n                />\n                <div className=\"row mt-4 justify-content-center\">\n                    <div className=\"col-auto\">\n                        <div className=\"btn-group\">\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    {this.props.podas?\n                        <div className=\"list-group\">\n                            {Object.values(this.props.podas).reverse().map(poda=>(\n                                <div className=\"list-group-item list-group-item-action list-group-item-info\">\n                                    <h5 className='text-dark'>{poda.fecha}</h5>\n                                </div>\n                            ))}\n                        </div>\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\n\nclass AccionDetallada extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto\">\n                        <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h5 className='text-dark'>{this.props.accion.agua} L de agua</h5>\n                    </div>\n                    <div className=\"col text-right\">\n                        <h5>\n                            <div className=\"badge badge-pill badge-dark\">\n                                {this.props.accion.tipoDeRiego}\n                            </div>\n                        </h5>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {console.log(this.props.accion)}\n                    {Object.keys(this.props.accion.aditivos).map(aditivo=>(\n                        <div className=\"col-auto\">\n                            <span className='badge badge-pill badge-dark'>\n                                <div className=\"col-auto\">\n                                    {aditivo}\n                                </div>\n                                <div className=\"col-auto\">\n                                    {this.props.accion.aditivos[aditivo]} ml\n                                </div>\n                            </span>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport {Link,Route} from 'react-router-dom'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    {this.props.riegos?\n                        <div className=\"list-group\">\n                            {Object.values(this.props.riegos).reverse().map(riego=>(\n                                <div className=\"list-group-item list-group-item-action \">\n                                    <AccionDetallada accion={riego}/>\n                                </div>\n                            ))}\n                        </div>\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-outline-light\" onClick={e=>{\n                                        \n                                    }}>Riego</button>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nclass alertFumigaciones extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                        {this.props.fumigaciones?\n                            <div className=\"list-group\">\n                                {Object.values(this.props.fumigaciones).reverse().map(fumigacion=>(\n                                    <div className=\"list-group-item list-group-item-action list-group-item-info\">\n                                        <AccionDetallada accion={fumigacion}/>\n                                    </div>\n                                ))}\n                            </div>\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                </div>\n            </div>\n        )\n    }\n}\nexport default alertFumigaciones","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/alertPlanta.css'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertPlanta from '../alerts/AlertPlanta'\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport * as firebase from 'firebase'\nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        alertPlanta={this.alertPlanta}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    alertPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertPlanta\n                        genetica={this.props.genetica}\n                        edad={this.state.edad}\n                        nombre={this.props.nombre}\n                        nacimiento={this.props.nacimiento}\n                        inicioVegetativo={this.props.inicioVegetativo}\n                        inicioFloracion={this.props.inicioFloracion}\n                        onClose={onClose}\n                        alertEliminarPlanta={this.alertEliminarPlanta}\n                        alertCambiarCiclo={this.alertCambiarCiclo}\n                        alertRiegos={this.alertRiegos}\n                        alertPodas={this.alertPodas}\n                        alertFumigaciones={this.alertFumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    alertRiegos=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertRiego\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        riegos={this.props.riegos}\n                    />\n                </div>\n            );\n        }\n    })\n    alertPodas=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertPodas\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        podas={this.props.podas}\n                    />\n                </div>\n            );\n        }\n    })\n    alertFumigaciones=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertFumigaciones\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        fumigaciones={this.props.fumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await firebase.database().ref().child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-3\">\n                <div className=\"card bg-success\" >\n                    <img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title text-dark\">{this.props.nombre}</h5>\n                        <h6 className=\"card-subtitle mb-2 text-dark\">{this.state.edad} dias</h6>\n                        <button type='button' className='btn btn-outline-light card-link' onClick={this.alertPlanta}>Mas Info</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport * as firebase from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await firebase.database().ref().child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-center\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta \n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                            />\n                        ))\n                        :\n                        <>\n                            <div className=\"col-12 text-center\">\n                                <h2 className='text-white'>Aun No hay plantas</h2>\n                                <small>Agrega una!</small>\n                            </div>\n                        </>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport * as firebase from 'firebase'\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined\n    }\n    componentDidMount(){\n        const interval = setInterval(() => {\n            const cicloLuminico = this.actualizarCicloLuminico()\n                const transcurrido = this.calcularTranscurrido()\n                this.setState({\n                    cicloLuminico:cicloLuminico,\n                    transcurrido:transcurrido,\n                    faltante:this.calcularFaltante()\n                })\n                const barra = document.getElementById('barraLuz')\n                barra.style.width=`${this.calcularEstadoDeBarra(transcurrido,cicloLuminico)}%`\n        }, 1000);\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const time = moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(),'m')\n            const hours = parseInt(time/60)\n            const minutes = time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            const time = moment(this.props.horaDeFinal,'h').diff(moment(),'m')\n            const hours = parseInt(time/60)\n            const minutes = time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n            const hours = parseInt(time/60)\n            const minutes = time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            const time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n            const hours = parseInt(time/60)\n            const minutes = time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n    }\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                    <div className=\"col-12 text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row mt-2 mb-2\">\n                    <div className=\"col\">\n                        <div className=\"progress\">\n                            <div className=\"progress-bar bg-success progress-bar-animated progress-bar-striped\" role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:undefined\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        if(this.state.fecha){\n            return(\n                \n                <h1>{this.state.fecha}</h1>\n            )\n        }\n        else{\n            return(\n                <h1>--/--/-- --:--:--</h1>\n            )\n        }\n    }\n}\nexport default FechaYHora","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row justify-content-center\" role='group'>\n                <div className=\"col-auto\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Poda</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Insecticida</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nclass TempreaturaYHumedad extends Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col text-center\">\n                        <h4>\n                            <span className='badge badge-pill badge-info'>\n                                - C\n                            </span>\n                        </h4>\n                    </div>\n                    <div className=\"col\">\n                        <h4>\n                            <span className='badge badge-pill badge-info'>\n                                h - %\n                            </span>\n                        </h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default TempreaturaYHumedad","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React , {Component} from 'react'\n\nclass AlertHeader extends Component{\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col-12 text-center\">\n                    <h4 className='alert-titulo'>{this.props.nombre}</h4>\n                </div>\n                <div className=\"col-12 text-center\">\n                    <h3 className='text-white'>{this.props.title}</h3>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertHeader","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertHeader from '../alert-components/AlertHeader'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\nimport FechaYHora from '../components/FechaYHora'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCogs, faArrowLeft, faTimes, faExclamationCircle, faCheck, faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport * as firebase from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await firebase.database().ref().update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        const minutos = document.getElementById('inputMinutos').value\n        await firebase.database().ref().update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        const minutos = document.getElementById('inputMinutos').value\n        await firebase.database().ref().update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    render(){\n        return(\n            <>\n                <div className=\"container-fluid\">\n                    <div className=\"row mt-3\">\n                        <div className=\"col-10 text-right\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={this.alertConfiguracion}/>\n                        </div>\n                    </div>\n                    <div className='row'>\n                        <div className='col-12 form-group'>\n                            <FechaYHora/>\n                        </div>\n                        <div className='col-6 offset-3'>\n                            <TemperaturaYHumedad/>\n                        </div>\n                    </div>\n                    <div className='row mb-2'>\n                        <div className='col'>\n                            <BarraDeLuz/>            \n                        </div>\n                    </div>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <div className='row mt-4'>\n                        <CarouselPlantas/>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nclass Layout extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                    {this.props.children}\n            </div>\n        )\n    }\n}\nexport default Layout","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                        }}>Si, Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-light'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nclass ElegirPlantaAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4 justify-content-center\">\n                <div className=\"col-12 text-center\">\n                    <p className='text-white'>Elegir las plantas</p>\n                </div>\n                {this.props.plantas?\n                    Object.keys(this.props.plantas).map(key=>(\n                        <CheckboxPlanta checked={this.props.plantas[key]} llave={key} handleClick={e=>{\n                            this.props.seleccionarPlanta(key)\n                        }}/>\n                    ))\n                :\n                null\n                }\n            </div>\n        )\n    }\n}\nexport default ElegirPlantaAccion","import React, {Component} from 'react'\n\nclass ElegirTipoDeRiego extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-12 text-center\">\n                    <p className='text-white'>Elegir el tipo de riego</p>\n                </div>\n                <div className=\"col text-center\">\n                    <button type='button' className={this.props.tipoDeRiego==='Tierra'?'btn btn-success':'btn btn-outline-light'} onClick={e=>{this.props.cambiarTipoDeRiego('Tierra')}}>\n                        Tierra\n                    </button>\n                </div>\n                <div className=\"col text-center\">\n                    <button type='button' className={this.props.tipoDeRiego==='Foliar'?'btn btn-success':'btn btn-outline-light'} onClick={e=>{this.props.cambiarTipoDeRiego('Foliar')}}>\n                        Foliar\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default ElegirTipoDeRiego","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Link} from 'react-router-dom'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                <div className=\"col text-center\">\n                    <FontAwesomeIcon icon={faCheck} className='icon continueIcon' onClick={\n                        e=>{\n                            this.props.confirmarAccion('Riego')\n                        }\n                    }/>\n                </div>\n                <div className=\"col text-center\">\n                    <Link to='/'>\n                        <FontAwesomeIcon icon={faTimes} className='icon cancelIcon'/>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import React , {Component} from 'react'\n\nclass FormularioAccion extends Component{\n    render(){\n        return(\n            <form action=\"\">\n                <div className=\"form-row mt-4\">\n                    <div className=\"form-group col-2 offset-5\">\n                        <label htmlFor=\"inputLitos\">Litros de Agua</label>\n                        <input type=\"number\"\n                            onChange={e=>{\n                                this.props.cambiarLitrosDeAgua(e.target.value)\n                            }} \n                            value={this.props.cantidadDeAgua} \n                            className='form-control' \n                            id='inputLitros'/>\n                    </div>\n                </div>\n                {this.props.aditivos?\n                <>\n                    <div className=\"form-row\">\n                        <div className=\"col-auto\">\n                            <p>Indicar Cantidades de {this.props.aditivo} (ml)</p>\n                        </div>\n                    </div>\n                    <div className=\"form-row mt-4 justify-content-center\">\n                        {this.props.aditivos.map(aditivo=>(\n                            <div className=\"form-group col-auto \">\n                                <label >{aditivo}</label>\n                                <input type=\"number\" \n                                    className='form-control' \n                                    id='inputFertilizante' \n                                    onChange={e=>{\n                                        this.props.cambiarAditivo([aditivo],e.target.value)\n                                    }}\n                                />\n                            </div>\n                        ))}\n                    </div>\n                </>\n                :\n                null\n                }\n                <div className=\"form-row mt-4\">\n                    <div className=\"form-group col-6 offset-3\">\n                        <label htmlFor=\"inputTextArea\">Comentario del Riego</label>\n                        <textarea type=\"text\" className='form-control' id='inputTextArea'/>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\nexport default FormularioAccion","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport * as firebase from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion';\nclass Riego extends Component{\n    state={\n        tipoDeRiego:'Tierra',\n        cantidadDeAgua:undefined,\n        plantas: undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:!this.state.plantas[id],\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>{\n            plantas={\n                ...plantas,\n                [key]:false,\n            }\n        })\n        this.setState({\n            plantas:plantas,\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.regar}\n                    />\n                </div>\n            );\n        }\n    })\n    regar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta]){\n                this.guardarRiegoBD(planta,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        Object.keys(fertilizantes).map(fertilizante=>{\n            fertilizantesFinal={\n                ...fertilizantesFinal,\n                [fertilizante]:fertilizantes[fertilizante]\n            }\n        })\n        await firebase.database().ref().child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Riego'\n                />\n                <ElegirPlantaAccion\n                    seleccionarPlanta={this.seleccionarPlanta}\n                    plantas={this.state.plantas}\n                />\n                <ElegirTipoDeRiego\n                    tipoDeRiego={this.state.tipoDeRiego}    \n                    cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                />\n                <FormularioAccion\n                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                    cantidadDeAgua={this.state.cantidadDeAgua}\n                    cambiarAditivo={this.cambiarAditivo}\n                    adivito='Fertlizante'\n                    aditivos={this.props.aditivos}\n                />\n                <BotoneraConfirmacionAccion\n                    confirmarAccion={this.confirmarAccion}\n                    aditivos={this.props.aditivos}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport * as firebase from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion'\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:'Tierra',\n        cantidadDeAgua:undefined,\n        platnas:undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:!this.state.plantas[id],\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>{\n            plantas={\n                ...plantas,\n                [key]:false,\n            }\n        })\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.fumigar}\n                    />\n                </div>\n            );\n        }\n    })\n    fumigar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta]){\n                this.guardrarFumigacionDB(planta,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        Object.keys(insecticidas).map(insecticida=>{\n            insecticidasFinal={\n                ...insecticidasFinal,\n                [insecticida]:insecticidas[insecticida]\n            }\n        })\n        await firebase.database().ref().child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Insecticida'\n                />\n                <ElegirPlantaAccion\n                    seleccionarPlanta={this.seleccionarPlanta}\n                    plantas={this.state.plantas}\n                />\n                <ElegirTipoDeRiego\n                    tipoDeRiego={this.state.tipoDeRiego}\n                    cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                />\n                <FormularioAccion\n                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                    cantidadDeAgua={this.state.cantidadDeAgua}\n                    cambiarAditivo={this.cambiarAditivo}\n                    adivito='Insecticida'\n                    aditivos={this.props.aditivos}\n                />\n                <BotoneraConfirmacionAccion\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    const databaseRef = await firebase.database().ref()\n    databaseRef.on('value', snapshot=>{\n      data= snapshot.val()\n      store=createStore(reducer, data)\n      this.setState({loading:false})\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <PantallaDeCarga/>\n      )\n    }\n    else{\n      return (\n        <Provider store={store}>\n          <Layout>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={Armario}/>\n                <Route exact path='/Riego' component={Riego}/>\n                <Route exact path='/Poda' component={Poda}/>\n                <Route exact path='/Insecticida' component={Insecticida}/>\n              </Switch>\n            </HashRouter>\n          </Layout>\n        </Provider>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport * as firebase from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\n\nclass Poda extends Component{\n    state={\n        plantas:undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:!this.state.plantas[id],\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>(\n            plantas={\n                ...plantas,\n                [key]:false,\n            }\n        ))\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.podar}\n                    />\n                </div>\n            );\n        }\n    })\n    podar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta]){\n                this.guardarPodaBD(planta)\n            }\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await firebase.database().ref().child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n        })\n    }\n    render(){\n        console.log(this.state)\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Poda'\n                />\n                <ElegirPlantaAccion\n                    seleccionarPlanta={this.seleccionarPlanta}\n                    plantas={this.state.plantas}\n                />\n                <BotoneraConfirmacionAccion\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className=\"App justify-content-center\">\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-12 text-center'>\n                            <h1>Cargando</h1>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center mt-4\">\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport * as firebase from 'firebase'\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}