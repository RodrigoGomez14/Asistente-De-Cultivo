{"version":3,"sources":["images/background.png","images/reloj.svg","images/addFile.svg","images/periodo.svg","images/ciclo.svg","images/sea of green.png","images/semilla.svg","images/vegetativo.svg","images/floracion.svg","images/maceta.svg","images/adn.svg","images/balanza.svg","images/cosecha.svg","images/riegos.svg","images/timeline.svg","images/fumigacion.svg","images/transplante.svg","images/podas.svg","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/TarjetaArmario.jsx","components/BarraDeLuz.jsx","components/Navbar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","components/FormLogin.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","components/ListConfig.jsx","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","components/DetallePlanta.jsx","components/DetalleAcciones.jsx","components/BotoneraConfiguracionPlanta.jsx","components/InputCantidadCosechada.jsx","Pages/Planta.jsx","Pages/PlantaHistorial.jsx","components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaFumigaciones.jsx","Pages/PlantaTransplantes.jsx","Pages/PlantaPodas.jsx","Pages/PlantaTimeLine.jsx","Pages/PlantaHistorialTimeLine.jsx","Pages/PlantaHistorialRiegos.jsx","Pages/PlantaHistorialFumigaciones.jsx","Pages/PlantaHistorialTransplantes.jsx","Pages/PlantaHistorialPodas.jsx","Pages/NotFound.jsx","components/ElegirNuevaMaceta.jsx","Pages/Transplante.jsx","components/FormCaracteristicasNuevaPlanta.jsx","components/FormEtapaNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","components/ResumenNuevaPlanta.jsx","components/FormNuevoAditivoCaracteristicas.jsx","components/FormNuevoAditivoDosificaciones.jsx","Pages/NuevoAditivo.jsx","App.js","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","main","padding","spacing","TarjetaPlanta","props","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","className","Grow","in","timeout","Paper","elevation","to","pathname","id","src","fotoPlanta","alt","console","log","nombre","carousel","display","flexWrap","overflow","textLight","color","contrastText","icon","connect","state","user","uid","plantas","data","Typography","variant","Object","keys","map","key","history","IconButton","AddCircleOutline","Button","endIcon","text","FechaYHora","format","fecha","setFecha","hora","setHora","setInterval","flexGrow","marginTop","marginLeft","marginRight","flexDirection","alignItems","width","listText","itemList","fleWrap","paperMain","type","secondary","dark","borderRadius","avatar","height","TarjetaArmario","periodo","horaDeInicio","cicloLuminico","convertirHora","Avatar","periodoImg","ListItemText","ciclo","reloj","root","list","justifyContent","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","minutoDeInicio","minutoFinal","actualizarEstadoDeLampara","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","actualizarBarraDeEstado","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","menuButton","title","danger","error","NavBar","page","plantaId","plantaDelHistorial","setMenuOpened","React","anchorEl","Boolean","AppBar","position","Toolbar","edge","onClick","e","location","replace","goBack","aria-label","ArrowBackRounded","size","Menu","maxWidth","MenuDrawer","menuOpened","image","Drawer","anchor","open","onClose","CardMedia","component","List","ListItem","button","ListItemIcon","HomeOutlined","faTint","faCut","faBug","NatureOutlined","faCogs","a","auth","signOut","faTimes","drawer","app","minHeight","maxHeight","textAlign","fontSize","Layout","children","foto","paddingBottom","CheckboxPlanta","this","checked","handleClick","llave","Component","formControl","margin","minWidth","selectEmpty","alert","light","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","planta","i","FormControlLabel","control","Checkbox","selected","onChange","value","label","Alert","severity","AlertTitle","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","pos","containerPlantas","paddingLeft","paddingTop","listItemText","ResumenAccion","tipoDePoda","nuevaMaceta","Divider","parseFloat","slice","indexOf","toFixed","resetContainer","paperSecondary","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","etapa","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","rootLastStep","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","database","ref","child","translateMonth","month","newDate","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","heading","typography","pxToRem","secondaryHeading","paperDark","expansionPanel","expandIcon","addButton","deleteButton","deleteText","TableAditivos","splice","update","setExpanded","tipoDeAditivo","startIcon","AddOutlined","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","marca","ExpansionPanelDetails","descripcion","tipoDeAplicacion","j","aplicacion","k","EditOutlined","gutterBottom","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","widht","PantallaDeCarga","faCannabis","form","borderColor","submit","border","background","link","textDecoration","checkBox","linkButtons","FormSignIn","inputUser","setInputUser","inputPassword","setInputPassword","userError","passwordError","logIn","loading","LockOutlined","noValidate","required","fullWidth","helperText","autoFocus","Link","href","grey","objectFit","SignInPage","setloading","setUserError","setPasswordError","signInWithEmailAndPassword","then","catch","code","Grid","container","item","xs","md","FormLogin","inputNombre","setInputNombre","signIn","createUserWithEmailAndPassword","updateProfile","displayName","LogInPage","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","FormControlSwitch","textField","inputCicloLuminico","getFullDate","year","getFullYear","getMonth","days","getDate","ListConfig","switchValue","setSwitchValue","cambiarHoraDeInicio","cambiarPeriodo","cambiarCicloLuminico","errorCicloLuminico","setErrorCicloLuminico","horaDeRespaldo","setHoraDeRespaldo","Switch","readOnly","startAdornment","InputAdornment","Array","fill","hour","inicioFloracion","localStorage","getItem","switchModoOscuro","setSwitchModoOscuro","setTheme","setItem","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","historial","lineColor","reverse","dateText","dateInnerStyle","overflowX","DetallePlanta","adn","genetica","maceta","volumenMaceta","semilla","vegetativo","inicioVegetativo","floracion","cosecha","balanza","outline","timeline","imageIcon","verticalAlign","iconRoot","paddingRight","DetalleAcciones","direction","justify","Icon","riegos","fumigacion","transplante","podas","editButton","editText","cosecharButton","success","cosecharText","BotoneraConfiguracionPlanta","cosecharPlanta","eliminarPlanta","InputCantidadCosechada","inputCantidad","setInputCantidad","guardarCantidadCosechada","InputProps","CheckCircle","textShadow","buttonText","buttonDanger","buttonTextDanger","backdrop","zIndex","paperPrimary","gridList","transform","rightPanel","rowBotonera","paperTile","iniciarVegetativo","setIniciarVegetativo","addPhoto","fumigaciones","transplantes","remove","comenzarVegetativo","GridList","cols","tileData","tile","GridListTile","edit","delete","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","convertToArray","acciones","aux","array","arrayRiegos","arrayFumigaciones","arrayPodas","arrayTransplantes","riego","poda","sort","b","obtenerArray","NotFound","ElegirNuevaMaceta","nuevoVolumen","Transplante","transplantar","setNuevaMaceta","guardarTransplanteDB","input","inputWrapper","select","FormCaracteristicasNuevaPlanta","setNombre","setGenetica","setVolumenMaceta","setInicioGerminacion","setEtapa","placeholder","FormEtapaNuevaPlanta","periodoArmario","inicioGerminacion","setInicioVegetativo","setInicioFloracion","Input","renderInputs","convertirFecha","lastIndexOf","day","guardarNuevaPlantaDB","firstPaper","secondPaper","dosisList","FormNuevoAditivoCaracteristicas","updateState","multiline","FormNuevoAditivoDosificaciones","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","vacio","store","inputs","setInputs","setDosis","agregarAditivo","ClasificarDosis","Foliar","newAditivo","Tierra","valor","indexDosis","newDosis","tipoDeDosis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","themeProvider","createMuiTheme","white","ThemeProvider","exact","path","Armario","Aplicables","render","Historial","Planta","PlantaHistorial","NuevaPlanta","NuevoAditivo","PlantaRiegos","PlantaTimeLine","PlantaPodas","PlantaTransplantes","PlantaFumigaciones","PlantaHistorialRiegos","PlantaHistorialTimeLine","PlantaHistorialPodas","PlantaHistorialTransplantes","PlantaHistorialFumigaciones","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.52b39b34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c43b7cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/reloj.824ae534.svg\";","module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/periodo.8f445686.svg\";","module.exports = __webpack_public_path__ + \"static/media/ciclo.1fb4973b.svg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.837d7016.png\";","module.exports = __webpack_public_path__ + \"static/media/semilla.8d6d8461.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetativo.03c6ad6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/floracion.a3290606.svg\";","module.exports = __webpack_public_path__ + \"static/media/maceta.f2707776.svg\";","module.exports = __webpack_public_path__ + \"static/media/adn.4b7d438c.svg\";","module.exports = __webpack_public_path__ + \"static/media/balanza.8463ba47.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosecha.db5aeefe.svg\";","module.exports = __webpack_public_path__ + \"static/media/riegos.44b6984a.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeline.0a789f67.svg\";","module.exports = __webpack_public_path__ + \"static/media/fumigacion.3e1c6a94.svg\";","module.exports = __webpack_public_path__ + \"static/media/transplante.1dfeaf43.svg\";","module.exports = __webpack_public_path__ + \"static/media/podas.68404d6c.svg\";","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {useState,useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nimport {Link} from 'react-router-dom'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Grow} from '@material-ui/core' \r\nimport {makeStyles} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor:theme.palette.primary.main,\r\n      padding:theme.spacing(1)\r\n    },\r\n  }));\r\n\r\nexport const TarjetaPlanta=(props)=>{\r\n    let [edad,setEdad]=useState(undefined)\r\n    useEffect(()=>{\r\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\r\n    })\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"col-auto\">\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={6} className={classes.paper}>\r\n                    <Link className='text-white' to={{\r\n                        pathname:'/Planta',\r\n                        props:{\r\n                            id:props.id\r\n                        }\r\n                    }}>\r\n                        <Card className=\"card\" >\r\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            {console.log(props)}\r\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Overlay>\r\n                        </Card>\r\n                    </Link>\r\n                </Paper>\r\n            </Grow>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {TarjetaPlanta} from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport {Button,Typography,Grow,IconButton,makeStyles} from '@material-ui/core'\r\nimport {AddCircleOutline} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme=>({\r\n    carousel:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto'\r\n    },\r\n    textLight:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    icon:{\r\n        color: theme.palette.primary.contrastText\r\n    }\r\n}))\r\nconst CarouselPlantas=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container\">\r\n            {props.plantas?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <Grow in={true}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                <Typography variant='subtitle1' className={classes.textLight}>\r\n                                    Plantas Dentro Del Armario\r\n                                </Typography>\r\n                            </Grow>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <div className={classes.carousel}>\r\n                            {Object.keys(props.plantas).map(key=>(\r\n                                <TarjetaPlanta\r\n                                    user={props.user}\r\n                                    id={key}\r\n                                    key={key}\r\n                                    history={props.history}\r\n                                    nombre={props.plantas[key].nombre}\r\n                                />\r\n                            ))}\r\n                            <div className=\"col-auto align-self-center\">\r\n                                <Grow in={true}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                    <Link to='/Nueva-Planta'>\r\n                                        <IconButton\r\n                                        >\r\n                                            <AddCircleOutline className={classes.icon} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Grow>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className=\"row mb-3\">\r\n                    <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                        <div className=\"col-12 text-center\">\r\n                            <Typography  variant='h6' className={classes.textLight}>No hay plantas</Typography>\r\n                            <Link to='/Nueva-Planta'>\r\n                                <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutline/>}>\r\n                                    Agrega una!\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Grow>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\r\nimport moment from 'moment'\r\nimport {Typography,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const  FechaYHora=()=>{\r\n    const classes = useStyles()\r\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')}`)\r\n    let [hora,setHora] = useState(` ${moment().format('LT')}`)\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setFecha(`${moment().format('DD/MM/YYYY')}`)\r\n            setHora(`${moment().format('LT')}`)\r\n        }, 1000);\r\n    });\r\n    return(\r\n        <>\r\n            <Typography variant='h4' className={classes.text}>{fecha}</Typography>\r\n            <Typography variant='h4' className={classes.text}>{hora}</Typography>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Paper,List,ListItem,ListItemText,makeStyles,Grow,Avatar} from '@material-ui/core'\r\nimport periodoImg from '../images/periodo.svg'\r\nimport reloj from '../images/reloj.svg'\r\nimport ciclo from '../images/ciclo.svg'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(1),\r\n        flexGrow:'1',\r\n        marginTop:theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'180px'\r\n    },\r\n    listText:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    itemList:{\r\n        display:'flex',\r\n        fleWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginTop:theme.spacing(2)\r\n    },\r\n    paperMain:{\r\n        display:'flex',\r\n        width:'100%',\r\n        padding:theme.spacing(1),\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    },\r\n    avatar:{\r\n        padding:theme.spacing(1),\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n    }\r\n}))\r\nexport const TarjetaArmario = ({periodo,horaDeInicio,cicloLuminico})=>{\r\n    const convertirHora=hora=>{\r\n        return hora<10?`0${hora}:00 Hs`:`${hora}:00 Hs`\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Grow in={true}\r\n        {...(true ? { timeout: 1500 } : {})}>\r\n            <>\r\n                <div className=\"col-auto p-0\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={periodoImg} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Periodo' secondary={periodo}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto p-0\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={ciclo} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Ciclo Luminico' secondary={convertirHora(cicloLuminico)}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto p-0\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={reloj} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Hora De Inicio' secondary={convertirHora(horaDeInicio)}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto p-0\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={reloj} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Hora De Final' secondary={convertirHora(horaDeInicio+cicloLuminico)}/>\r\n                    </Paper>\r\n                </div>\r\n            </>\r\n        </Grow>\r\n    )\r\n}","import React, {useEffect,useState} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {FechaYHora} from '../components/FechaYHora'\r\nimport './styles/table.css'\r\nimport {Paper,Typography} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grow}from '@material-ui/core'\r\nimport {TarjetaArmario} from '../components/TarjetaArmario'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        width:'100%',\r\n        padding:theme.spacing(2),  \r\n    },\r\n    text:{\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    list:{\r\n        justifyContent:'center',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto'\r\n    }\r\n}));\r\n\r\nexport const BarraDeLuz=(props)=>{\r\n    let [activo,setActivo]=useState(0)\r\n    let [faltante,setFaltante]=useState(undefined)\r\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\r\n    let [transcurrido,setTranscurrido]=useState(undefined)\r\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\r\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\r\n    let [intervalo,setIntervalo]=useState(undefined)\r\n\r\n    const getMinutes=(moment)=>{\r\n        const date = new Date()\r\n        const minutes= date.getMinutes()+date.getHours()*60\r\n        return minutes\r\n    }\r\n    const actualizarEstadoDeLampara=(minutes)=>{\r\n        let minutoDeInicio = props.horaDeInicio*60\r\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\r\n        if(minutoFinal>1440){\r\n            if(minutes<minutoDeInicio){\r\n                minutoFinal=minutoFinal-1440\r\n                if(minutes<minutoFinal){\r\n                    setLampraEncendida(true)\r\n                }\r\n                else{\r\n                    setLampraEncendida(false)\r\n                }\r\n            }\r\n            else{\r\n                setLampraEncendida(true)\r\n            }\r\n        }\r\n        else{\r\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\r\n                setLampraEncendida(true)\r\n            }\r\n            else{\r\n                setLampraEncendida(false)\r\n            }\r\n        }\r\n    }\r\n    const actualizarTranscurrido=minutes=>{\r\n\r\n        let minutoDeInicio = props.horaDeInicio*60\r\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\r\n        if(minutoFinal>1440){\r\n            if(minutes<minutoDeInicio){\r\n                minutoFinal=minutoFinal-1440\r\n                if(minutes<minutoFinal){\r\n                    console.log(minutes+(1440-minutoDeInicio))\r\n                }\r\n                else{\r\n                    console.log(minutes-minutoFinal)\r\n                }\r\n            }\r\n            else{\r\n                console.log(minutes-minutoDeInicio)\r\n            }\r\n        }\r\n        else{\r\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\r\n                console.log(minutes-minutoDeInicio)\r\n            }\r\n            else{\r\n                console.log(minutoFinal-minutes)\r\n            }\r\n        }\r\n\r\n\r\n        if(lamparaEncendida){\r\n            setTranscurrido(minutes-(props.horaDeInicio*60))\r\n            console.log(minutes-(props.horaDeInicio*60))\r\n        }\r\n        else{\r\n            if(props.horaDeInicio+props.cicloLuminico>24){\r\n                setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico-24)*60))\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n    }\r\n    const actualizarFaltante=minutes=>{\r\n        if(lamparaEncendida){\r\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\r\n            setFaltante(diferencia)\r\n        }\r\n        else{\r\n            if(props.horaDeInicio+props.cicloLuminico>24){\r\n                const diferencia = ((props.horaDeInicio)*60)-minutes\r\n                setFaltante(diferencia)\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n    }\r\n    const actualizarBarraDeEstado=()=>{\r\n        const barra = document.getElementById('barraLuz')\r\n        if(lamparaEncendida){\r\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n        else{\r\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\r\n            console.log(porcentaje)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        const minutes= getMinutes()\r\n        actualizarEstadoDeLampara(minutes)\r\n        actualizarTranscurrido(minutes)\r\n        actualizarFaltante(minutes)\r\n        actualizarBarraDeEstado()\r\n    })\r\n    const calcularHoraFinal=()=>{\r\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\r\n        if(horaDeFinal>24){\r\n            horaDeFinal=horaDeFinal-24\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00 +1`\r\n        }\r\n        else{\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00`\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Grow in={true}\r\n        {...(true ? { timeout: 1500 } : {})}>\r\n            <div className={classes.root}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto ml-auto mr-auto\">\r\n                            <FechaYHora/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {!lamparaEncendida?\r\n                            <div className=\"col text-center\">\r\n                                <Typography variant='h6' className={classes.text}>\r\n                                    Descansando...\r\n                                </Typography>\r\n                            </div>\r\n                            :\r\n                            <div className=\"col text-center\">\r\n                                <Typography variant ='h6' className={classes.text}>\r\n                                    Creciendo...\r\n                                </Typography>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"progress\">\r\n                                <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row flex-nowrap overflow-auto\">\r\n                        <TarjetaArmario periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Grow>\r\n    )\r\n}","import React , {useState}from 'react'\r\nimport {makeStyles, Hidden} from '@material-ui/core'\r\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel,Avatar,Menu,MenuItem} from '@material-ui/core'\r\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nimport {auth} from 'firebase'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles( theme=>({\r\n    appBar:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    avatar:{\r\n        color: theme.palette.primary.contrastText,\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    danger:{\r\n        color:theme.palette.error.main\r\n    }\r\n}))\r\n\r\nexport const NavBar = ({page,plantaId,history,plantaDelHistorial,setMenuOpened}) =>{\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleMenu = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n    return(\r\n        <AppBar className={classes.appBar} position=\"static\" >\r\n            <Toolbar>\r\n            {page!=='Armario'&&\r\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                    if(plantaId){\r\n                        if(plantaDelHistorial){\r\n                            if(history.location.pathname==='/Historial/Planta'){\r\n                                history.replace('/Historial')\r\n                            }\r\n                            else{\r\n                                history.replace({\r\n                                    pathname:'/Historial/Planta',\r\n                                    props:{\r\n                                        id:plantaId\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(history.location.pathname==='/Planta'){\r\n                                history.replace('/')\r\n                            }\r\n                            else{\r\n                                history.replace({\r\n                                    pathname:'/Planta',\r\n                                    props:{\r\n                                        id:plantaId\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    else{\r\n                        history.goBack()\r\n                    }\r\n                }} color=\"inherit\" aria-label=\"menu\">\r\n                    <ArrowBackRounded />\r\n                </IconButton>\r\n            }\r\n            <Typography variant=\"h6\" className={classes.title} >\r\n                {page}\r\n            </Typography>\r\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                setMenuOpened(true)\r\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport {auth} from 'firebase'\r\nimport {Card,CardMedia,IconButton} from '@material-ui/core'\r\nimport {HomeOutlined,NatureOutlined,ArrowBackOutlined} from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug , faCogs,faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    paper:{\r\n        maxWidth:'280px',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n        overflow:'auto',\r\n        height:'100%'\r\n    },\r\n    icon:{\r\n        color:\r\n            theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n}))\r\nexport const MenuDrawer = ({menuOpened,setMenuOpened,image,history})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\r\n            <Paper className={classes.paper} elevation={6}>\r\n                <Card>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Sea Of Green\"\r\n                        image={image}\r\n                        title=\"Sea Of Green\"\r\n                    />\r\n                </Card>\r\n                <List>\r\n                    <Link to='/' className='outline-none text-dark'>\r\n                        <ListItem button key={'Armario'} >\r\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Armario'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Riego' className='outline-none text-dark'>\r\n                        <ListItem button key={'Regar'} >\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Regar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Poda' className='outline-none text-dark'>\r\n                        <ListItem button key={'Podar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Podar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Insecticida' className='outline-none text-dark'>\r\n                        <ListItem button key={'Fumigar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Transplante' className='outline-none text-dark'>\r\n                        <ListItem button key={'Transplantar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Transplantar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aplicables' className='outline-none text-dark'>\r\n                        <ListItem button key={'Aditivos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Historial' className='outline-none text-dark'>\r\n                        <ListItem button key={'Historial'}>\r\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aditivos' className='outline-none text-dark'>\r\n                        <ListItem button key={'Carencias y Excesos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Configuracion' className='outline-none text-dark'>\r\n                        <ListItem button key={'Configuracion'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                            await auth().signOut()\r\n                            history.replace('/')\r\n                        }}>\r\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                        <ListItemText primary={'Cerrar Sesion'} />\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n        </Drawer>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {Paper} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\nimport {NavBar} from '../components/Navbar'\r\nimport {MenuDrawer} from '../components/MenuDrawer'\r\nimport foto from '../images/sea of green.png'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n    },\r\n    icon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    app:{\r\n        minHeight: '100vh',\r\n        height: '100vh',\r\n        maxHeight:'100vh',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\n\r\nexport const Layout=({page,children,history,plantaId,user,plantaDelHistorial})=>{\r\n    const classes = useStyles();\r\n    let [menuOpened,setMenuOpened]=useState(false)\r\n    let [selectedTabs,setSelectedTabs]=useState('recents')\r\n    return(\r\n        <Paper className={classes.app}>\r\n            {user &&\r\n            <>\r\n                <NavBar page={page} plantaId={plantaId} plantaDelHistorial={plantaDelHistorial} history={history} setMenuOpened={setMenuOpened}/>\r\n                <Paper elevation={6}>\r\n                    <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened} image={foto} history={history}/>\r\n                </Paper>\r\n            </>\r\n            }\r\n            {children}\r\n        </Paper>\r\n    )\r\n}","import React , {Component,useState} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport {BarraDeLuz} from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database,storage} from 'firebase'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Input,Button, TextField} from '@material-ui/core'\r\nimport { Redirect } from 'react-router';\r\n\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto',\r\n        paddingBottom:theme.spacing(2)\r\n    }\r\n}))\r\nconst Armario=(props)=>{\r\n    const classes = useStyles()\r\n    const cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    const cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    let [file,setFile]=useState(undefined)\r\n    const subirImagen=(file)=>{\r\n\r\n    } \r\n    \r\n    if(!props.periodo||!props.horaDeInicio||!props.cicloLuminico){\r\n        return(\r\n            <Redirect to='/Configuracion'/>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Layout history={props.history} page=\"Armario\" user={props.user}>\r\n                <Paper className={classes.root}>\r\n                    <BarraDeLuz periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico}/>\r\n                    <CarouselPlantas history={props.history}/>\r\n                </Paper>\r\n            </Layout>\r\n        )   \r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        cicloLuminico:state.data.cicloLuminico,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab/'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    formControl:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container pt-4\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas.length?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                className={classes.formControl}\r\n                                control={\r\n                                    <Checkbox color='primary'  checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        <div className=\"col-12\">\r\n                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Plantas En el Armario - <Link to='/Nueva-Planta'>Agrega una ahora!</Link> </AlertTitle> </Alert>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                        <FormControlLabel\r\n                            className={classes.radio}\r\n                            value=\"top\"\r\n                            control={<Radio\r\n                                value=\"Tierra\" \r\n                                name=\"Tierra\"\r\n                                color='primary'\r\n                            />}\r\n                            label='Tierra'\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"top\"\r\n                            className={classes.radio}\r\n                            control={<Radio\r\n                                value=\"Foliar\"\r\n                                name=\"Foliar\"\r\n                                color='primary'\r\n                            />}\r\n                            label=\"Foliar\"\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                    </RadioGroup>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    buttonPrimary:{\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport const BotoneraConfirmacionAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n            <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Volver\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={\r\n                            e=>{\r\n                                props.confirmarAccion(props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                    Guardar {props.accion}\r\n                </Button>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Alert,AlertTitle} from '@material-ui/lab';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    title:{\r\n        color: theme.palette.primary.contrastText,\r\n        marginTop:theme.spacing(1)\r\n    }\r\n  }));\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid className='pt-4'>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <Typography variant='h6' className={classes.title}>Aditivos (ml)</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos?\r\n                                        props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        :\r\n                                        <div className=\"col-12\">\r\n                                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </AlertTitle> </Alert>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  root:{\r\n      margin:'0'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    color:theme.palette.secondary.contrastText,\r\n    padding: theme.spacing(1)\r\n},\r\ncontainerPlantas:{\r\n    textAlign:'left',\r\n    paddingLeft:theme.spacing(2),\r\n    paddingTop:theme.spacing(2)\r\n},\r\nlistItemText:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    '& .MuiTypography-colorTextSecondary':{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    },\r\n},\r\ntitle:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n}\r\n}));\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda,nuevaMaceta})=>{\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n            {tipoDePoda &&\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Tipo De Poda' secondary={tipoDePoda}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            {nuevaMaceta &&  \r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Nuevo Volumen De Maceta' secondary={`${nuevaMaceta} Lt`}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            {tipoDeRiego&&cantidadDeAgua&&\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText}  primary='Tipo De Riego' secondary={tipoDeRiego}/>    \r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Cantidad De Agua' secondary={`${cantidadDeAgua} Lt`}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            <Divider/>\r\n            <div className={classes.containerPlantas}>\r\n                <Typography className={classes.title} variant='h6'>\r\n                    Plantas Seleccionadas\r\n                </Typography>\r\n                <List>\r\n                    {plantas.map(planta => (\r\n                        planta.selected &&\r\n                        <ListItem>\r\n                            <ListItemText className={classes.listItemText} primary={planta.nombre}/>    \r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n            <Divider/>\r\n            {tipoDeRiego &&\r\n                <div className={classes.containerPlantas}>\r\n                    <Typography className={classes.title} variant='h6'>\r\n                        Aditivos Usados\r\n                    </Typography>\r\n                    <List>\r\n                        {aditivos?\r\n                            Object.keys(aditivos).map(aditivo=>{\r\n                                const dosis= aditivos[aditivo]\r\n                                return(\r\n                                    <ListItem>\r\n                                        <ListItemText className={classes.listItemText} primary={aditivo} secondary={`${parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} ${dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}`}/>    \r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                            :\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItemText} primary='-'/>    \r\n                            </ListItem>\r\n                        }\r\n                    </List>\r\n                </div>\r\n            }\r\n    </div>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{\r\n    height:'100%',\r\n    width:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'space.around',\r\n    overflow:'auto',\r\n    borderRadius:'0',\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText\r\n    \r\n  },\r\n  buttonPrimary:{\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperSecondary:{\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.primary.dark:theme.palette.primary.main,\r\n    paddingBottom:theme.spacing(2),\r\n    paddingTop:theme.spacing(2),\r\n    borderRadius:'0'\r\n  },\r\n  padding:{\r\n    paddingBottom:theme.spacing(1),\r\n    color:theme.palette.primary.contrastText,\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light\r\n  },\r\n  stepper:{\r\n    backgroundColor:'transparent'\r\n  },\r\n  stepTitle:{\r\n    '& .MuiStepLabel-label':{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n  },\r\n  resetContainer:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    width:'500px'\r\n  },\r\n  rootLastStep:{\r\n    display:'flex',\r\n    justifyContent:'center'\r\n  }\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants,nuevaMaceta,etapa,nombre})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(tipoDeAccion==='Nueva Planta'){\r\n      if(activeStep===0){\r\n        return etapa && nombre?false:true\r\n      }\r\n    }\r\n    else if(tipoDeAccion==='Nuevo Aditivo'){\r\n      if(activeStep===0){\r\n        return false\r\n      }\r\n    }\r\n    else{\r\n      if(activeStep===0){\r\n        return selectedPlants.length?false:true\r\n      }\r\n      else if(activeStep===1){\r\n        if(tipoDeAccion==='Poda'){\r\n          return tipoDePoda?false:true\r\n        }\r\n        else if(tipoDeAccion==='Transplante'){\r\n          return nuevaMaceta?false:true\r\n        }\r\n        else{\r\n          return tipoDeRiego?false:true\r\n        }\r\n      }\r\n      else if(activeStep===2){\r\n          return cantidadDeAgua?false:true\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n    <Grow in={true}\r\n      {...(true ? { timeout: 1500 } : {})}>\r\n        <div>\r\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\r\n            {steps.map((step, index) => (\r\n              step?\r\n                <Step key={step.title}>\r\n                  <Paper elevation={3} className={classes.paperSecondary}>\r\n                    <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\r\n                  </Paper>\r\n                  <StepContent>\r\n                    <Paper elevation={6} className={classes.padding}>\r\n                        <Typography>{step.content}</Typography>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={classes.button}\r\n                            >\r\n                                Atras\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.buttonPrimary}\r\n                                disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                            >\r\n                                {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                      </Paper>\r\n                    </StepContent>\r\n                </Step>\r\n                :\r\n                null\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length && (\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n              <div className={classes.rootLastStep}>\r\n                <Paper square elevation={6} className={classes.resetContainer}>\r\n                    {resumenAccion}\r\n                    <BotoneraConfirmacionAccion\r\n                        accion={tipoDeAccion}\r\n                        handleBack={handleBack}\r\n                        confirmarAccion={confirmarAccion}\r\n                    />\r\n                </Paper>\r\n              </div>\r\n            </Grow>\r\n          )}\r\n        </div>\r\n      </Grow>\r\n    </Paper>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {Layout} from './Layout'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:this.translateMonth(moment().format('LLL')),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    translateMonth=date=>{\r\n        const month = date.slice(0,date.indexOf(' '))\r\n        const newDate = date.slice(date.indexOf(' ')+1)\r\n        switch (month) {\r\n            case 'January':\r\n                return `Enero ${newDate}`\r\n                break;\r\n            case 'February':\r\n                return `Febrero ${newDate}`\r\n                break;\r\n            case 'March':\r\n                return `Marzo ${newDate}`\r\n                break;\r\n            case 'April':\r\n                return `Abril ${newDate}`\r\n                break;\r\n            case 'May':\r\n                return `Mayo ${newDate}`\r\n                break;\r\n            case 'June':\r\n                return `Junio ${newDate}`\r\n                break;\r\n            case 'July':\r\n                return `Julio ${newDate}`\r\n                break;\r\n            case 'August':\r\n                return `Agosto ${newDate}`\r\n                break;\r\n            case 'September':\r\n                return `Septiembre ${newDate}`\r\n                break;\r\n            case 'October':\r\n                return `Octubre ${newDate}`\r\n                break;\r\n            case 'November':\r\n                return `Noviembre ${newDate}`\r\n                break;\r\n            case 'December':\r\n                return `Diciembre ${newDate}`\r\n                break;\r\n            default:\r\n            break;\r\n        }\r\n        return date\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n        <Layout history={this.props.history} page='Riego' user={this.props.user}>\r\n            <StepperAccion \r\n                step1='Plantas'\r\n                step2='Tipo De Riego'\r\n                step3='Cantidad de agua y aditivos'\r\n                selectedPlants={selectedPlants}\r\n                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                tipoDeRiego={this.state.tipoDeRiego}\r\n                confirmarAccion={this.confirmarAccion}\r\n                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                tipoDeAccion='Riego'\r\n                steps={[\r\n                        {\r\n                        title:'Plantas',\r\n                        content:(\r\n                            <ElegirPlantaAccion\r\n                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                plantas={this.state.plantas}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Tipo De Riego',\r\n                        content:(\r\n                            <ElegirTipoDeRiego\r\n                                tipoDeRiego={this.state.tipoDeRiego}    \r\n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Cantidad De Agua y Aditivos',\r\n                        content:(\r\n                            <FormularioAccion\r\n                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                    tipoDeRiego={this.state.tipoDeRiego}\r\n                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                    cambiarAditivo={this.cambiarAditivo}\r\n                                    adivito='Fertlizante'\r\n                                    aditivos={this.props.aditivos}\r\n                                    aditivosUsados={this.state.aditivos}\r\n                                    eliminarAditivo={this.eliminarAditivo}\r\n                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                    expanded={this.state.expanded}\r\n                                />\r\n                        )},\r\n                ]}\r\n            />\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:this.translateMonth(moment().format('LLL')),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    translateMonth=date=>{\r\n        const month = date.slice(0,date.indexOf(' '))\r\n        const newDate = date.slice(date.indexOf(' ')+1)\r\n        switch (month) {\r\n            case 'January':\r\n                return `Enero ${newDate}`\r\n                break;\r\n            case 'February':\r\n                return `Febrero ${newDate}`\r\n                break;\r\n            case 'March':\r\n                return `Marzo ${newDate}`\r\n                break;\r\n            case 'April':\r\n                return `Abril ${newDate}`\r\n                break;\r\n            case 'May':\r\n                return `Mayo ${newDate}`\r\n                break;\r\n            case 'June':\r\n                return `Junio ${newDate}`\r\n                break;\r\n            case 'July':\r\n                return `Julio ${newDate}`\r\n                break;\r\n            case 'August':\r\n                return `Agosto ${newDate}`\r\n                break;\r\n            case 'September':\r\n                return `Septiembre ${newDate}`\r\n                break;\r\n            case 'October':\r\n                return `Octubre ${newDate}`\r\n                break;\r\n            case 'November':\r\n                return `Noviembre ${newDate}`\r\n                break;\r\n            case 'December':\r\n                return `Diciembre ${newDate}`\r\n                break;\r\n            default:\r\n            break;\r\n        }\r\n        return date\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Fumigacion' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100\">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Fumigacion'\r\n                                steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Tipo De Riego',\r\n                                    content:(\r\n                                        <ElegirTipoDeRiego\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Cantidad De Agua y Aditivos',\r\n                                    content:(\r\n                                        <FormularioAccion\r\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                            cambiarAditivo={this.cambiarAditivo}\r\n                                            aditivo='Insecticida'\r\n                                            aditivos={this.props.aditivos}\r\n                                            aditivosUsados={this.state.aditivos}\r\n                                            eliminarAditivo={this.eliminarAditivo}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{Fragment} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n    },\r\n    paperDark: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText,\r\n        borderRadius:'0'\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    addButton:{\r\n        marginBottom:theme.spacing(1),\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    deleteText:{\r\n        color:theme.palette.error.main\r\n    }\r\n}));\r\n\r\n\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleChange = panel => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <div className=\"container mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <Link to={{\r\n                            pathname:'/Nuevo-Aditivo',\r\n                            props:{\r\n                                tipoDeAditivo:title\r\n                            }\r\n                        }}>\r\n                            <Button \r\n                                variant='text' \r\n                                className={classes.addButton} \r\n                                startIcon={<AddOutlined/>}\r\n                                >\r\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {aditivos?\r\n                    aditivos.map((aditivo,i)=>(\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <Grow in={true}\r\n                            {...(true ? { timeout: 1500 } : {})}>\r\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\r\n                                <Paper elevation={4} className={classes.paperDark}>\r\n                                    <ExpansionPanelSummary\r\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id=\"panel1bh-header\"\r\n                                    >\r\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                </Paper>\r\n                                <Paper elevation={6} className={classes.paperMain}>\r\n                                    <ExpansionPanelDetails>\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row mb-2\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Descripcion\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col text-left\">\r\n                                                    <Typography variant='body2'>\r\n                                                        {aditivo.descripcion}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Dosificaciones\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                    <Typography  variant ='h6'>\r\n                                                            {tipoDeAplicacion}\r\n                                                    </Typography>\r\n                                                    <List>\r\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\r\n                                                            </ListItem> \r\n                                                        ))}\r\n                                                    </List>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                            <div className=\"row my-2 justify-content-around\">\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                    >   \r\n                                                        <EditOutlined />\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption'  gutterBottom>\r\n                                                        Editar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={e=>{eliminarAditivo(i)}}\r\n                                                    >\r\n                                                        <DeleteOutline className={classes.deleteButton}/>\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption' className={classes.deleteText} gutterBottom>\r\n                                                        Eliminar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ExpansionPanelDetails>\r\n                                    </Paper>\r\n                            </ExpansionPanel>\r\n                        </Grow>\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                    :\r\n                    <Typography>Aun no hay ningun Aditivo</Typography>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\r\nimport {TableAditivos} from './TableAditivos'\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paperMain: {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    paperDark: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    borderRadius:'0'\r\n    },\r\n    tabs:{\r\n        \"&.MuiTabs-scroller\":{\r\n            '&.MuiTabs-indicator':{\r\n                color: '#fff'\r\n            }\r\n        },\r\n    },\r\n    tab:{\r\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\r\n            color: '#fff',\r\n        }\r\n    },\r\n  }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [value, setValue] = useState(0);\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container-fluid overflow-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 px-0\">\r\n                    <Paper className={classes.paperDark}>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(e,value)=>{\r\n                                setValue(value)\r\n                            }}\r\n                            className={classes.tabs}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\r\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Aplicables=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page='Aditivos' user={props.user}>\r\n            <Paper elevation={3} className={classes.root}>\r\n                <TabAditivos user={props.user} fertilizantes={props.fertilizantes} insecticidas={props.insecticidas}/>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user.uid,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport {Paper,makeStyles,Typography} from '@material-ui/core'\r\nimport './styles/loading.css'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n        height:'100vh',\r\n        widht:'100%'\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText,\r\n    }\r\n}))\r\nexport const PantallaDeCarga =()=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className='row'>\r\n                <div className='col-12 text-center'>\r\n                    <Typography variant='h2'className={classes.title}>Cargando</Typography>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center mt-4\">\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link,FormControlLabel,Checkbox} from '@material-ui/core'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiOutlinedInput-input':{\r\n        color:theme.palette.primary.contrastText,\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.primary.contrastText\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused':{\r\n        color:theme.palette.secondary.contrastText\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      color:theme.palette.primary.contrastText,\r\n      '&.MuiButton-outlined':{\r\n        border: `1px solid ${theme.palette.primary.contrastText}`\r\n      },\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText,\r\n      '& .MuiLink-underlineHover':{\r\n        textDecoration:'none',\r\n        color:theme.palette.primary.contrastText,\r\n      }\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    checkBox:{\r\n        color: theme.palette.primary.contrastText,\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    linkButtons:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    }\r\n  }));\r\nexport const FormSignIn = ({inputUser,setInputUser,inputPassword,setInputPassword,userError,passwordError,loading,logIn})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Inicia Sesion\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                color='primary'\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                error={userError}\r\n                helperText={userError?'Usuario No Encontrado':null}\r\n                name=\"email\"\r\n                value={inputUser}\r\n                onChange={e=>{setInputUser(e.target.value)}}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                variant=\"filled\"\r\n                color='primary'\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                value={inputPassword}\r\n                helperText={passwordError?'Contraseña incorrecta':null}\r\n                error={passwordError}\r\n                onChange={e=>{setInputPassword(e.target.value)}}\r\n                label=\"contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                />\r\n                <FormControlLabel\r\n                className={classes.checkBox}\r\n                control={<Checkbox value=\"remember\"  />}\r\n                label=\"Recuerdame\"\r\n                />\r\n                <Button\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={e=>{logIn()}}\r\n                >\r\n                Ingresar!\r\n                </Button>\r\n                <div className={classes.linkButtons}>\r\n                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                        Olvidaste tu contraseña?\r\n                    </Link>\r\n                    <Link variant=\"body2\">\r\n                        <LinkRouter to='/Login' className={classes.link}>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                        </LinkRouter>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/background.png'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Layout} from './Layout'\r\nimport {FormSignIn} from '../components/FormSignIn'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  \r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const logIn=async()=>{\r\n        setloading(true)\r\n        setUserError(undefined)\r\n        setPasswordError(undefined)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(()=>{\r\n          setloading(false)\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n          setloading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5}>\r\n              {!loading?\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <FormSignIn logIn={logIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword} userError={userError} passwordError={passwordError} />\r\n              </Paper>\r\n              :\r\n              <PantallaDeCarga/>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n}","import React,{useState} from 'react'\r\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link} from '@material-ui/core'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nimport {auth,database} from 'firebase'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiOutlinedInput-input':{\r\n        color:theme.palette.primary.contrastText,\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.primary.contrastText\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused':{\r\n        color:theme.palette.secondary.contrastText\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      color:theme.palette.primary.contrastText,\r\n      '&.MuiButton-outlined':{\r\n        border: `1px solid ${theme.palette.primary.contrastText}`\r\n      },\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n      color:theme.palette.primary.contrastText\r\n    }\r\n  }));\r\nexport const FormLogin=({setloading,history})=>{\r\n    const classes = useStyles()\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [inputNombre,setInputNombre]=useState(undefined)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [nombreError,setNombreError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n\r\n    const signIn=async()=>{\r\n      setloading(true)\r\n      await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n      .then(async e=>{\r\n          e.user.updateProfile({\r\n            displayName:inputNombre\r\n          })\r\n          await database().ref().child(e.user.uid).update({\r\n              horaDeInicio:'',\r\n              cicloLuminico:'',\r\n              periodo:''\r\n          })\r\n          history.push('/')\r\n          setloading(false)\r\n      })\r\n      .catch(error=>{\r\n        if(error.code==='auth/user-not-found'){\r\n          setUserError(error)\r\n        }\r\n        else{\r\n          setPasswordError(error)\r\n        }\r\n        setloading(false)\r\n      })\r\n  }\r\n    return(\r\n          <div className={classes.root}>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Registrate\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='primary'\r\n                    required\r\n                    fullWidth\r\n                    id=\"Nombre\"\r\n                    label=\"Nombre\"\r\n                    name=\"nombre\"\r\n                    value={inputNombre}\r\n                    onChange={e=>{setInputNombre(e.target.value)}}\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='primary'\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                />\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='secondary'\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  color='#fff'\r\n                  variant=\"outlined\"\r\n                  className={classes.submit}\r\n                  onClick={e=>{signIn()}}\r\n                >\r\n                Registrate!\r\n                </Button>\r\n                <Link variant=\"body2\">\r\n                      <LinkRouter to='/' className={classes.link}>\r\n                        Ya tienes una cuenta? Ingresa!\r\n                      </LinkRouter>\r\n                  </Link>\r\n            </form>\r\n            </div>\r\n          </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth, database} from 'firebase'\r\nimport foto from '../images/background.png'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {Layout} from './Layout'\r\nimport {FormLogin} from '../components/FormLogin'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [loading,setloading]=useState(false)\r\n\r\n    return (\r\n      <Layout>\r\n          <Grid container component=\"main\" className={classes.root}>\r\n              <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n                <img src={foto} alt=\"\" className={classes.img}/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} md={5}>\r\n                {!loading?\r\n                  <Paper elevation={3} className={classes.paper}>\r\n                    <FormLogin setloading={setloading} history={history}/>\r\n                  </Paper>\r\n                  :\r\n                  <PantallaDeCarga/>\r\n                }\r\n            </Grid>\r\n          </Grid>\r\n      </Layout>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ElegirTipoDePoda=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.tipoDePoda}\r\n                            className={classes.radio}\r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:this.translateMonth(moment().format('LLL')),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    \r\n    translateMonth=date=>{\r\n        const month = date.slice(0,date.indexOf(' '))\r\n        const newDate = date.slice(date.indexOf(' ')+1)\r\n        switch (month) {\r\n            case 'January':\r\n                return `Enero ${newDate}`\r\n                break;\r\n            case 'February':\r\n                return `Febrero ${newDate}`\r\n                break;\r\n            case 'March':\r\n                return `Marzo ${newDate}`\r\n                break;\r\n            case 'April':\r\n                return `Abril ${newDate}`\r\n                break;\r\n            case 'May':\r\n                return `Mayo ${newDate}`\r\n                break;\r\n            case 'June':\r\n                return `Junio ${newDate}`\r\n                break;\r\n            case 'July':\r\n                return `Julio ${newDate}`\r\n                break;\r\n            case 'August':\r\n                return `Agosto ${newDate}`\r\n                break;\r\n            case 'September':\r\n                return `Septiembre ${newDate}`\r\n                break;\r\n            case 'October':\r\n                return `Octubre ${newDate}`\r\n                break;\r\n            case 'November':\r\n                return `Noviembre ${newDate}`\r\n                break;\r\n            case 'December':\r\n                return `Diciembre ${newDate}`\r\n                break;\r\n            default:\r\n            break;\r\n        }\r\n        return date\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Poda' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100 \">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDePoda={this.state.tipoDePoda}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                                tipoDeAccion='Poda'\r\n                                steps={[\r\n                                {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                        />\r\n                                    )},\r\n                                {\r\n                                    title:'Tipo De Poda',\r\n                                    content:(\r\n                                        <ElegirTipoDePoda\r\n                                            handleChange={(nuevoTipoDePoda=>{\r\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                            })}\r\n                                            tipoDePoda={this.state.tipoDePoda}\r\n                                        />\r\n                                )}]\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React,{useState}from 'react'\r\nimport { Paper,ListItem,List,ListItemText,FormControl,InputLabel,Select,MenuItem,makeStyles,Switch,FormControlLabel,TextField,InputAdornment,Grow,Button, Typography } from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {database} from 'firebase'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    paper:{\r\n        marginTop:theme.spacing(1),\r\n        width:'500px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        padding:theme.spacing(1),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n    },\r\n    FormControl:{\r\n        marginTop:theme.spacing(2),\r\n    },\r\n    FormControlSwitch:{\r\n        marginLeft:'auto',\r\n        marginRight:'auto'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    inputCicloLuminico:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nexport const ListConfig =({switchValue,setSwitchValue,horaDeInicio,cambiarHoraDeInicio,periodo,cambiarPeriodo,cicloLuminico,cambiarCicloLuminico,plantas,user})=>{\r\n    const classes = useStyles()\r\n    let [errorCicloLuminico,setErrorCicloLuminico]= useState(undefined)\r\n    let [horaDeRespaldo,setHoraDeRespaldo]= useState(undefined)\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <FormControlLabel\r\n                    className={classes.FormControlSwitch}\r\n                    control={\r\n                        <Switch checked={switchValue} onChange={e=>{setSwitchValue(e.target.checked)}} value=\"switch\" />\r\n                    }\r\n                    label=\"Modo Oscuro\"\r\n                />\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Periodo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        readOnly={periodo&&true}\r\n                        id=\"select\"\r\n                        value={periodo}\r\n                        onChange={e=>{\r\n                            cambiarPeriodo(e.target.value)\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Hora De Inicio Del Ciclo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        id=\"select\"\r\n                        value={horaDeInicio}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">HS</InputAdornment>\r\n                        }\r\n                        onChange={e=>{\r\n                            cambiarHoraDeInicio(e.target.value)\r\n                        }}\r\n                    >\r\n                        {new Array(24).fill(undefined).map((hour,index)=>(\r\n                            <MenuItem value={index}>\r\n                                {index<10?`0${index}:00`:`${index}:00`}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Duracion Del Ciclo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        id=\"select\"\r\n                        value={cicloLuminico}\r\n                        error={errorCicloLuminico}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">HS</InputAdornment>\r\n                        }\r\n                        onChange={e=>{\r\n                            console.log(e.target.value)\r\n                            if(e.target.value<13&&periodo==='Vegetativo'){\r\n                                setErrorCicloLuminico('Si este es menor de 13 Hs el armario pasara al periodo de Floracion, se establecera la fecha de inicio de floracion de cada planta al dia de hoy')\r\n                                setHoraDeRespaldo(e.target.value)\r\n                            }\r\n                            if(e.target.value>=13&&periodo==='Floracion'){\r\n                                setErrorCicloLuminico('Si este es mayor de 13 Hs el armario pasara al periodo Vegetativo')\r\n                                setHoraDeRespaldo(e.target.value)\r\n                            }\r\n                            else{\r\n                                cambiarCicloLuminico(e.target.value)\r\n                            }\r\n                        }}\r\n                    >\r\n                        {new Array(25).fill(undefined).map((hour,index)=>(\r\n                            index&&\r\n                                <MenuItem value={index}>\r\n                                    {index}\r\n                                </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {errorCicloLuminico&&\r\n                <Grow in={true}>\r\n                <   Alert className={classes.alert} variant=\"filled\" severity=\"warning\">\r\n                        <Typography>\r\n                            Quiere cambiar el ciclo luminico a {horaDeRespaldo} HS?\r\n                        </Typography>\r\n                        {errorCicloLuminico}\r\n                        <Button\r\n                            variant='contained'\r\n                            onClick={e=>{\r\n                                const periodo = horaDeRespaldo>=13?'Vegetativo':'Floracion'\r\n                                cambiarCicloLuminico(horaDeRespaldo)\r\n                                cambiarPeriodo(periodo)\r\n                                if(periodo==='Floracion'){\r\n                                    {plantas&&\r\n                                        Object.keys(plantas).map(async key=>{\r\n                                            if(!plantas[key].inicioFloracion){\r\n                                                await database().ref().child(user).child('plantas').child(key).update({\r\n                                                    inicioFloracion:getFullDate()\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }\r\n                                setErrorCicloLuminico(undefined)\r\n                            }}>\r\n                            Continuar\r\n                        </Button>\r\n                    </Alert>\r\n                </Grow>\r\n                }\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nimport {ListConfig} from '../components/ListConfig'\r\nimport {database}from 'firebase'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space.around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Configuracion=(props)=>{\r\n    let [switchModoOscuro,setSwitchModoOscuro]= useState(localStorage.getItem('theme')==='dark'?true:false)\r\n    const setSwitchValue=value=>{\r\n        setSwitchModoOscuro(value)\r\n        if(!value){\r\n            props.setTheme('light')\r\n            localStorage.setItem('theme','light')\r\n        }\r\n        else{\r\n            props.setTheme('dark')\r\n            localStorage.setItem('theme','dark')\r\n        }\r\n    }\r\n    const cambiarHoraDeInicio=horaDeInicio=>{\r\n        database().ref().child(props.user).update({\r\n            horaDeInicio:horaDeInicio\r\n        })\r\n    }\r\n    const cambiarPeriodo=periodo=>{\r\n        database().ref().child(props.user).update({\r\n            periodo:periodo\r\n        })\r\n    }\r\n    const cambiarCicloLuminico=cicloLuminico=>{\r\n        database().ref().child(props.user).update({\r\n            cicloLuminico:cicloLuminico\r\n        })\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page='Configuracion' user={props.user}>\r\n            <Paper className={classes.root}>\r\n                <ListConfig\r\n                    user={props.user}\r\n                    switchValue={switchModoOscuro} \r\n                    setSwitchValue={setSwitchValue} \r\n                    horaDeInicio={props.horaDeInicio}\r\n                    cambiarHoraDeInicio={cambiarHoraDeInicio}\r\n                    periodo={props.periodo} \r\n                    cambiarPeriodo={cambiarPeriodo}\r\n                    cicloLuminico={props.cicloLuminico}\r\n                    cambiarCicloLuminico={cambiarCicloLuminico}\r\n                    plantas={props.plantas}\r\n                />\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas,\r\n    periodo:state.data.periodo,\r\n    horaDeInicio:state.data.horaDeInicio,\r\n    cicloLuminico:state.data.cicloLuminico\r\n})\r\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\r\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {Paper,makeStyles,Grow} from '@material-ui/core'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    root: {\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    paper:{\r\n        width: '250px',\r\n    },\r\n    cardHeader:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\r\n    const classes= useStyles()\r\n    return(\r\n        <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n            <Paper elevation={6} className={classes.paper}>\r\n                <Card className=\"card\" >\r\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-left\">\r\n                                    <h4 className=\"card-title text-white\">{nombre}</h4>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Overlay>\r\n                </Card>\r\n            </Paper>\r\n        </Grow>\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Typography} from '@material-ui/core'\r\nimport {CardHistorial} from '../components/CardHistorial'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto',\r\n        paddingBottom:theme.spacing(2)\r\n    }\r\n}))\r\nconst Historial=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page={'Historial'} user={props.user}>\r\n            <Paper elevation={3} className={classes.root}>\r\n                <Timeline lineColor={'#ddd'}>\r\n                    {props.historial?\r\n                        Object.keys(props.historial).reverse().map(planta=>(\r\n                            <TimelineItem\r\n                                dateText={props.historial[planta].fechaDeCorte}\r\n                                dateInnerStyle={{ background: '#00796b', color: '#fff', width:'250px'}}\r\n                            >\r\n                                <Link className='text-white' to={{\r\n                                    pathname:'/Historial/Planta',\r\n                                    props:{\r\n                                        id:planta,\r\n                                    }\r\n                                }}>\r\n                                    <CardHistorial cantidadDeGramos={props.historial[planta].cantidadDeGramos} nombre={props.historial[planta].nombre} fechaDeCorte={props.historial[planta].fechaDeCorte}/>\r\n                                </Link>\r\n                            </TimelineItem>\r\n                        )):\r\n                        <div className=\"col-auto\">\r\n                            <Typography>\r\n                                No hay plantas en el historial\r\n                            </Typography>\r\n                        </div>\r\n                    }\r\n                </Timeline>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    historial:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia,ListItemAvatar,Avatar,Grow} from '@material-ui/core'\r\nimport { PortableWifiOff, Height } from '@material-ui/icons';\r\nimport semilla from '../images/semilla.svg'\r\nimport vegetativo from '../images/vegetativo.svg'\r\nimport floracion from '../images/floracion.svg'\r\nimport maceta from '../images/maceta.svg'\r\nimport adn from '../images/adn.svg'\r\nimport balanza from '../images/balanza.svg'\r\nimport cosecha from '../images/cosecha.svg'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(1),\r\n        flexGrow:'1',\r\n        marginTop:theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        width:'180px',\r\n    },\r\n    listText:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    itemList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflowX:'auto',\r\n        width:'100%'\r\n    },\r\n    avatar:{\r\n        padding:theme.spacing(1),\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n    }\r\n}))\r\n\r\nexport const DetallePlanta=(props)=>{\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    const classes = useStyles()\r\n            \r\n    return(\r\n        <Grow in={true}\r\n        {...(true ? { timeout: 1500 } : {})}>\r\n            <>\r\n                <div className=\"col-auto\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={adn} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Genetica' secondary={props.genetica}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={maceta} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Volumen Maceta' secondary={`${props.volumenMaceta} Lt`}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={semilla} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Inicio De Germinacion' secondary={props.nacimiento?props.nacimiento:'-'}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={vegetativo} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Inicio De Vegetativo' secondary={props.inicioVegetativo?props.inicioVegetativo:'-'}/>\r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={floracion} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Inicio De Floracion' secondary={props.inicioFloracion?props.inicioFloracion:'-'}/>\r\n                    </Paper>\r\n                </div>\r\n                {props.fechaDeCorte &&\r\n                    <div className=\"col-auto\">\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <Avatar src={cosecha} className={classes.avatar}/>\r\n                            <ListItemText className={classes.listText} primary='Fecha De Corte' secondary={props.fechaDeCorte}/>\r\n                        </Paper>\r\n                    </div>\r\n                }\r\n                {props.cantidadDeGramos &&\r\n                    <div className=\"col-auto\">\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <Avatar src={balanza} className={classes.avatar}/>\r\n                            <ListItemText className={classes.listText} primary='Cantidad Cosechada' secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\r\n                        </Paper>\r\n                    </div>\r\n                }\r\n            </>\r\n        </Grow>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,makeStyles,Avatar,Paper,Grid,SvgIcon,Icon} from '@material-ui/core'\r\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\r\n\r\nimport riegos from '../images/riegos.svg'\r\nimport timeline from '../images/timeline.svg'\r\nimport fumigacion from '../images/fumigacion.svg'\r\nimport transplante from '../images/transplante.svg'\r\nimport podas from '../images/podas.svg'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    link:{\r\n        textDecoration:'none',\r\n        outline:'none',\r\n        margin:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginBottom:theme.spacing(2),\r\n    },\r\n    paper:{\r\n        marginTop:theme.spacing(3),\r\n        marginBottom:theme.spacing(2),\r\n        width:'90%',\r\n\r\n    },\r\n    avatar:{\r\n        width:theme.spacing(5),\r\n        height:theme.spacing(5)\r\n    },\r\n    timeline:{\r\n        width:'80%',\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    imageIcon: {\r\n        height: '100%',\r\n        verticalAlign:'top',\r\n    },\r\n    iconRoot: {\r\n        paddingRight:theme.spacing(7),\r\n        height:theme.spacing(5),\r\n        textAlign: 'center'\r\n      }\r\n}))\r\n\r\nexport const DetalleAcciones =({id,history})=>{\r\n    const classes= useStyles()\r\n    return(\r\n            <div className={classes.root}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Grid \r\n                        container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\"\r\n                    >\r\n                        <Grid item xs={12} justify=\"center\">\r\n                            <Link\r\n                                to={{ \r\n                                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Timeline':'/Planta/Timeline',\r\n                                    props:{\r\n                                        id:id\r\n                            }}}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color='primary'\r\n                                    className={classes.timeline}\r\n                                >\r\n                                    <Icon classes={{root: classes.iconRoot}}>\r\n                                        <img className={classes.imageIcon} src={timeline}/>\r\n                                    </Icon>\r\n                                    Linea Temporal\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Link\r\n                            to={{ \r\n                                pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\r\n                                props:{\r\n                                    id:id\r\n                            }}}>\r\n                                <Button\r\n                                    variant=\"text\"\r\n                                    className={classes.button}\r\n                                >\r\n                                    <Icon classes={{root: classes.iconRoot}}>\r\n                                        <img className={classes.imageIcon} src={riegos}/>\r\n                                    </Icon>\r\n                                    Riegos\r\n                                </Button>\r\n                            </Link>            \r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Link                \r\n                            to={{ \r\n                            pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\r\n                            props:{\r\n                                id:id\r\n                            }}}>\r\n                                <Button\r\n                                    variant=\"text\"\r\n                                    className={classes.button}\r\n                                >   \r\n                                    <Icon classes={{root: classes.iconRoot}}>\r\n                                        <img className={classes.imageIcon} src={fumigacion}/>\r\n                                    </Icon>\r\n                                    Fumigaciones\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Link                \r\n                            to={{ \r\n                            pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Transplantes':'/Planta/Transplantes',\r\n                            props:{\r\n                                id:id\r\n                            }}}>\r\n                                <Button\r\n                                    variant=\"text\"\r\n                                    className={classes.button}\r\n                                >   \r\n                                    <Icon classes={{root: classes.iconRoot}}>\r\n                                        <img className={classes.imageIcon} src={transplante}/>\r\n                                    </Icon>\r\n                                    Transplantes\r\n                                </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid xs={12} sm={6}>\r\n                            <Link \r\n                                to={{ \r\n                                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\r\n                                    props:{\r\n                                        id:id\r\n                                }}}>\r\n                                    <Button\r\n                                        variant=\"text\"\r\n                                        className={classes.button}\r\n                                    >\r\n                                    <Icon classes={{root: classes.iconRoot}}>\r\n                                        <img className={classes.imageIcon} src={podas}/>\r\n                                    </Icon>\r\n                                        Podas\r\n                                    </Button>\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </div>\r\n    )\r\n}","import React , {useState} from 'react'\r\nimport {makeStyles,IconButton,Typography,SvgIcon} from '@material-ui/core'\r\nimport {DeleteOutline,EditOutlined,NatureOutlined} from '@material-ui/icons'\r\nconst useStyles= makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        paddingBottom:theme.spacing(1)\r\n    },\r\n    editButton:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    editText:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    deleteText:{\r\n        color:theme.palette.error.main\r\n    },\r\n    cosecharButton:{\r\n        color:theme.palette.success.main\r\n    },\r\n    cosecharText:{\r\n        color:theme.palette.success.main\r\n    },\r\n}))\r\n\r\nexport const BotoneraConfiguracionPlanta =({inicioFloracion,cosecharPlanta,eliminarPlanta}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            {inicioFloracion &&\r\n                <div className='d-flex flex-column'>\r\n                    <IconButton\r\n                        variant=\"contained\"\r\n                        onClick={cosecharPlanta}\r\n                        className={classes.cosecharButton}\r\n                        >\r\n                        <NatureOutlined/>\r\n                    </IconButton>\r\n                    <Typography variant='caption' className={classes.cosecharText}>\r\n                        Cosechar\r\n                    </Typography>\r\n                </div>\r\n            }\r\n            <div className='d-flex flex-column'>\r\n                <IconButton\r\n                    variant=\"contained\"\r\n                    className={classes.editButton}\r\n                    >\r\n                    <EditOutlined/>\r\n                </IconButton>\r\n                <Typography variant='caption'className={classes.editText}>\r\n                    Editar\r\n                </Typography>\r\n            </div> \r\n            <div className='d-flex flex-column'>\r\n                <IconButton\r\n                    variant=\"contained\"\r\n                    className={classes.deleteButton}\r\n                    onClick={e=>{\r\n                        eliminarPlanta()\r\n                    }}\r\n                >\r\n                    <DeleteOutline/>\r\n                </IconButton>\r\n                <Typography variant='caption' className={classes.deleteText}>\r\n                Eliminar\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {makeStyles,Typography,ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails,TextField,InputAdornment,Button} from '@material-ui/core'\r\nimport {CheckCircle,ExpandMore} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        marginTop:theme.spacing(1)\r\n    },\r\n    expansionPanel:{\r\n        width:'50%'\r\n    },\r\n    ExpansionPanelDetails:{\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center'\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\nexport const InputCantidadCosechada = ({inputCantidad,setInputCantidad,guardarCantidadCosechada}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <ExpansionPanel className={classes.expansionPanel}>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\r\n                    <TextField id=\"outlined-basic\" \r\n                        value={inputCantidad}\r\n                        type='number'\r\n                        label=\"Cantidad Cosechada\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                gr\r\n                            </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        onChange={e=>{\r\n                            setInputCantidad(e.target.value)\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={e=>{\r\n                            guardarCantidadCosechada()\r\n                        }}\r\n                        endIcon={\r\n                            <CheckCircle/>\r\n                        }\r\n                        >\r\n                        Guardar \r\n                    </Button>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState, useEffect}from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../components/DetallePlanta'\r\nimport {DetalleAcciones} from '../components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,GridListTile,CardMedia,Card,Paper,GridList, Divider,Button,Grow,Input,Typography, IconButton,TextField} from '@material-ui/core'\r\nimport {AddAPhotoOutlined} from '@material-ui/icons'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {database,storage} from 'firebase'\r\nimport moment from 'moment'\r\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\r\nimport {connect} from 'react-redux'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    buttonTextDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    paperPrimary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        width:'100%',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        '& .MuiGridListTile-root':{\r\n            width:'30% !important'\r\n        }\r\n    },\r\n    media: {\r\n        height:'100%'\r\n    },\r\n    rightPanel:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        height:'100%',\r\n        justifyContent:'space-between',\r\n        padding:theme.spacing(1),\r\n    },\r\n    rowBotonera:{\r\n        marginTop:'auto',\r\n        width:'100%',\r\n        flexGrow:'1',\r\n        display:'flex'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1),\r\n        '& .MuiAlert-message':{\r\n            width:'100%'\r\n        }\r\n    },\r\n    paperTile:{\r\n        width:'100% !important',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center'\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst translateMonth=date=>{\r\n    const month = date.slice(0,date.indexOf(' '))\r\n    const newDate = date.slice(date.indexOf(' ')+1)\r\n    switch (month) {\r\n        case 'January':\r\n            return `Enero ${newDate}`\r\n            break;\r\n        case 'February':\r\n            return `Febrero ${newDate}`\r\n            break;\r\n        case 'March':\r\n            return `Marzo ${newDate}`\r\n            break;\r\n        case 'April':\r\n            return `Abril ${newDate}`\r\n            break;\r\n        case 'May':\r\n            return `Mayo ${newDate}`\r\n            break;\r\n        case 'June':\r\n            return `Junio ${newDate}`\r\n            break;\r\n        case 'July':\r\n            return `Julio ${newDate}`\r\n            break;\r\n        case 'August':\r\n            return `Agosto ${newDate}`\r\n            break;\r\n        case 'September':\r\n            return `Septiembre ${newDate}`\r\n            break;\r\n        case 'October':\r\n            return `Octubre ${newDate}`\r\n            break;\r\n        case 'November':\r\n            return `Noviembre ${newDate}`\r\n            break;\r\n        case 'December':\r\n            return `Diciembre ${newDate}`\r\n            break;\r\n        default:\r\n        break;\r\n    }\r\n    return date\r\n}\r\nconst Planta =(props)=>{\r\n    const classes = useStyles()\r\n    let [inputCantidad, setInputCantidad]= useState(undefined)\r\n    let [iniciarVegetativo, setIniciarVegetativo]= useState(false)\r\n    let [addPhoto, setAddPhoto]= useState(false)\r\n    let [loading,setLoading]=useState(true)\r\n    const cosecharPlanta=async ()=>{\r\n        await database().ref().child(props.user).child('historial').child(props.location.props.id).update({\r\n            nombre:props.plantas[props.location.props.id].nombre?props.plantas[props.location.props.id].nombre:null,\r\n            nacimiento:props.plantas[props.location.props.id].nacimiento?props.plantas[props.location.props.id].nacimiento:null,\r\n            genetica:props.plantas[props.location.props.id].genetica?props.plantas[props.location.props.id].genetica:null,\r\n            inicioVegetativo:props.plantas[props.location.props.id].inicioVegetativo?props.plantas[props.location.props.id].inicioVegetativo:null,\r\n            inicioFloracion:props.plantas[props.location.props.id].inicioFloracion?props.plantas[props.location.props.id].inicioFloracion:null,\r\n            podas:props.plantas[props.location.props.id].podas?props.plantas[props.location.props.id].podas:null,\r\n            riegos:props.plantas[props.location.props.id].riegos?props.plantas[props.location.props.id].riegos:null,\r\n            fumigaciones:props.plantas[props.location.props.id].fumigaciones?props.plantas[props.location.props.id].fumigaciones:null,\r\n            transplantes:props.plantas[props.location.props.id].transplantes?props.plantas[props.location.props.id].transplantes:null,\r\n            fechaDeCorte:translateMonth(moment().format('LLL'))\r\n        })\r\n        props.history.replace({\r\n            pathname:'Historial/Planta',\r\n            props:{\r\n                id:props.location.props.id\r\n            }\r\n        })\r\n        await database().ref().child(props.user).child('plantas').child(props.location.props.id).remove()\r\n    }\r\n    const eliminarPlanta=async ()=>{\r\n        props.history.replace('/')\r\n        await database().ref().child(props.user).child('plantas').child(props.location.props.id).remove()\r\n    }\r\n    const comenzarVegetativo=async ()=>{\r\n        await database().ref().child(props.user).child('plantas').child(props.location.props.id).update({\r\n            inicioVegetativo:getFullDate()\r\n        })\r\n        setIniciarVegetativo(false)\r\n    }\r\n    /*{!loading?\r\n        photos.length?\r\n            photos.map(tile => (\r\n            <GridListTile  className={classes.tile}>\r\n                <img/>\r\n            </GridListTile>\r\n            ))\r\n            :\r\n            <Paper\r\n                className={classes.paperTile}\r\n                elevation={3}\r\n            >\r\n                <IconButton\r\n                    onClick={e=>{setAddPhoto(true)}}\r\n                    variant=\"contained\"\r\n                    >\r\n                    <AddAPhotoOutlined/>\r\n                </IconButton>\r\n                <Typography variant='caption'>No hay Fotos Agrega Una</Typography>\r\n            </Paper>\r\n        :\r\n        <Paper>\r\n            ...cargando...\r\n        </Paper>\r\n    }*/\r\n    return(\r\n        props.location.props?\r\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n                                \r\n                            </GridList>\r\n                        </div>\r\n                        {addPhoto&&\r\n                        <Grow in={iniciarVegetativo}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                            <>\r\n                                <TextField type='file' variant='outlined' onChange={e=>{}}/>\r\n                            </>\r\n                        </Grow>\r\n                        }\r\n                        <div className=\"row flex-nowrap overflow-auto\">\r\n                            <DetallePlanta \r\n                                genetica={props.plantas[props.location.props.id].genetica}\r\n                                cantidadDeGramos={props.plantas[props.location.props.id].cantidadDeGramos}\r\n                                plantaDelHistorial={props.plantas[props.location.props.id].plantaDelHistorial}\r\n                                edad={props.plantas[props.location.props.id].edad}\r\n                                nacimiento={props.plantas[props.location.props.id].nacimiento}\r\n                                inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\r\n                                inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\r\n                                fechaDeCorte={props.plantas[props.location.props.id].fechaDeCorte}\r\n                                volumenMaceta={props.plantas[props.location.props.id].volumenMaceta}\r\n                            />\r\n                        </div>\r\n                        {!props.plantas[props.location.props.id].inicioFloracion &&\r\n                            <div className=\"row mt-2 justify-content-center\">\r\n                                {props.plantas[props.location.props.id].nacimiento && !props.plantas[props.location.props.id].inicioVegetativo &&\r\n                                    <Button variant='contained' color='primary' onClick={e=>{setIniciarVegetativo(true)}}>\r\n                                        Iniciar periodo Vegetativo\r\n                                    </Button>\r\n                                }\r\n                            </div>\r\n                        }\r\n                        {iniciarVegetativo&&\r\n                            <Grow in={iniciarVegetativo}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                <Alert variant='filled' severity='warning' className={classes.alert}>\r\n                                    <AlertTitle>Iniciar Vegetativo?</AlertTitle>\r\n                                    Si continua se guardara el dia de la fecha como el inicio del ciclo Vegetativo\r\n                                    <Button variant='text' color='warning' onClick={e=>{comenzarVegetativo()}}>\r\n                                        Continuar\r\n                                    </Button>\r\n                                </Alert>\r\n                            </Grow>\r\n                        }\r\n                        <div className=\"row\">\r\n                            <DetalleAcciones\r\n                                history={props.history}\r\n                                id={props.location.props.id}\r\n                            />\r\n                        </div>\r\n                        <Divider/>\r\n                            {!props.plantas[props.location.props.id].plantaDelHistorial &&\r\n                                <div className={classes.rowBotonera}>\r\n                                    <BotoneraConfiguracionPlanta\r\n                                        inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\r\n                                        cosecharPlanta={cosecharPlanta}\r\n                                        eliminarPlanta={eliminarPlanta}\r\n                                        nacimiento={props.location.props.nacimiento}\r\n                                        inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\r\n                                        comenzarVegetativo={comenzarVegetativo}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        <Divider/>\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(Planta)","import React,{useState}from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../components/DetallePlanta'\r\nimport {DetalleAcciones} from '../components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,GridListTile,CardMedia,Paper,GridList, Divider,Button,Grow} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\r\nimport {connect} from 'react-redux'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    buttonTextDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    paperPrimary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        width:'100%',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        '& .MuiGridListTile-root':{\r\n            width:'30% !important'\r\n        }\r\n    },\r\n    media: {\r\n        height:'100%'\r\n    },\r\n    rightPanel:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        height:'100%',\r\n        justifyContent:'space-between',\r\n        padding:theme.spacing(1),\r\n    },\r\n    rowBotonera:{\r\n        width:'100%',\r\n        flexGrow:'1',\r\n        display:'flex'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1),\r\n        '& .MuiAlert-message':{\r\n            width:'100%'\r\n        }\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst PlantaHistorial =(props)=>{\r\n    const classes = useStyles()\r\n    let [inputCantidad, setInputCantidad]= useState(undefined)\r\n    let [iniciarVegetativo, setIniciarVegetativo]= useState(false)\r\n    const guardarCantidadCosechada=async ()=>{\r\n        await database().ref().child(props.user).child('historial').child(props.location.props.id).update({\r\n            cantidadDeGramos:inputCantidad+' gr'\r\n        })\r\n    }\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n                                {tileData.map(tile => (\r\n                                <GridListTile key={tile.img} className={classes.tile}>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={fotoPlanta}\r\n                                    />\r\n                                </GridListTile>\r\n                                ))}\r\n                            </GridList>\r\n                        </div>\r\n                        <div className=\"row flex-nowrap overflow-auto\">\r\n                            <DetallePlanta \r\n                                genetica={props.plantas[props.location.props.id].genetica}\r\n                                cantidadDeGramos={props.plantas[props.location.props.id].cantidadDeGramos}\r\n                                plantaDelHistorial={props.plantas[props.location.props.id].plantaDelHistorial}\r\n                                edad={props.plantas[props.location.props.id].edad}\r\n                                nacimiento={props.plantas[props.location.props.id].nacimiento}\r\n                                inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\r\n                                inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\r\n                                fechaDeCorte={props.plantas[props.location.props.id].fechaDeCorte}\r\n                                volumenMaceta={props.plantas[props.location.props.id].volumenMaceta}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {!props.plantas[props.location.props.id].cantidadDeGramos &&\r\n                                <InputCantidadCosechada inputCantidad={inputCantidad} setInputCantidad={setInputCantidad} guardarCantidadCosechada={guardarCantidadCosechada} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <DetalleAcciones\r\n                                history={props.history}\r\n                                id={props.location.props.id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorial)","import React , {useState,useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor:theme.palette.primary.main,\r\n        borderRadius:'0'\r\n    },\r\n    edit:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    delete:{\r\n        color:theme.palette.error.main\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.secondary.contrastText,\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    listItemText:{\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText\r\n        }\r\n    }\r\n  }));\r\nexport const AccionDetallada=(props)=>{\r\n    const classes= useStyles()\r\n    let [show,setShow] = useState(false)\r\n    \r\n    const eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(true)\r\n        }, 100);\r\n    })\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-10 offset-1\">\r\n                <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\r\n                        <Paper elevation={4} className={classes.paperDark}>\r\n                            <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                            >\r\n                                <Typography className={classes.heading}>{props.tipoDeAccion}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                        </Paper>\r\n                        <Paper elevation={4} >\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"container\">\r\n                                    {props.accion.agua &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.agua} L. De Agua \r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.tipoDeRiego &&\r\n                                        <div className=\"row my-2\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.tipoDePoda &&\r\n                                        <div className=\"col text-left\">\r\n                                            <Typography variant='h5'>\r\n                                                Poda {props.accion.tipoDePoda}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.volumenMaceta &&\r\n                                        <div className=\"col text-left\">\r\n                                            <Typography variant='h5'>\r\n                                                Nuevo Volumen {props.accion.volumenMaceta} Lt\r\n                                            </Typography>\r\n                                        </div>\r\n                                    }\r\n                                    <Divider/>\r\n                                    {props.tipoDeAccion!=='podas' && props.tipoDeAccion!=='transplantes' && \r\n                                        <div className=\"row my-2\">\r\n                                            {props.accion.aditivos?\r\n                                                <>\r\n                                                    <div className=\"col-12 text-left\">\r\n                                                        <Typography variant='h5'>\r\n                                                            Aditivos Usados\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                    <List>\r\n                                                        {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\r\n                                                            <>\r\n                                                                <ListItem>\r\n                                                                    <ListItemText\r\n                                                                        className={classes.listItemText}\r\n                                                                        primary={aditivo}\r\n                                                                        secondary={props.accion.aditivos[aditivo]+' ml'} \r\n                                                                    />\r\n                                                                </ListItem>\r\n                                                            </>\r\n                                                        ))}\r\n                                                    </List>\r\n                                                </>\r\n                                                :\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography>\r\n                                                        No se utilizaron Aditivos\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                    <Divider/>\r\n                                    {!props.plantaDelHistorial &&\r\n                                        <div className=\"row my-2 justify-content-around\">\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                >   \r\n                                                        <EditOutlined />\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' gutterBottom>\r\n                                                    Editar\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={e=>{eliminarAccion()}}\r\n                                                >\r\n                                                        <DeleteOutline className={classes.delete}/>\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' className={classes.delete} gutterBottom>\r\n                                                    Eliminar\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </Paper>\r\n                    </ExpansionPanel>\r\n                </Grow>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {makeStyles,Paper} from '@material-ui/core';\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaRiegos =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Riegos'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.plantas[props.location.props.id].riegos?\r\n                                <Timeline lineColor={'#ddd'}>\r\n                                        {Object.keys(props.plantas[props.location.props.id].riegos).reverse().map((id,i)=>(\r\n                                            <TimelineItem\r\n                                                dateText={props.plantas[props.location.props.id].riegos[id].fecha}\r\n                                                dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                            >   \r\n                                                <AccionDetallada \r\n                                                    handleChange={handleChange} \r\n                                                    index={i} \r\n                                                    expanded={expanded} \r\n                                                    plantaDelHistorial={false}\r\n                                                    user={props.user} \r\n                                                    accion={props.plantas[props.location.props.id].riegos[id]} \r\n                                                    tipoDeAccion='riegos' \r\n                                                    idPlanta={props.location.props.id} \r\n                                                    id={id} \r\n                                                    id={id}\r\n                                                />\r\n                                        </TimelineItem>\r\n                                        ))}\r\n                                </Timeline>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Riego')\r\n                                            }}>Riegala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaRiegos)\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaFumigaciones =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Fumigaciones'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].fumigaciones?\r\n                                <Timeline lineColor={'#ddd'}>\r\n                                    {Object.keys(props.plantas[props.location.props.id].fumigaciones).reverse().map((id,i)=>(\r\n                                        <TimelineItem\r\n                                            dateText={props.plantas[props.location.props.id].fumigaciones[id].fecha}\r\n                                            dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                        > \r\n                                            <AccionDetallada \r\n                                                handleChange={handleChange} \r\n                                                index={i} \r\n                                                plantaDelHistorial={false} \r\n                                                expanded={expanded} \r\n                                                user={props.user}\r\n                                                index={i} \r\n                                                accion={props.plantas[props.location.props.id].fumigaciones[id]} \r\n                                                tipoDeAccion='fumigaciones' \r\n                                                idPlanta={props.location.props.id} \r\n                                                id={id} \r\n                                                key={id}\r\n                                            />\r\n                                        </TimelineItem>\r\n                                        ))}\r\n                                </Timeline>\r\n                                \r\n                                    :\r\n                                    <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Insecticida')\r\n                                            }}>Fumigala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaFumigaciones)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaTransplantes =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Transplantes'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].transplantes?\r\n                                <Timeline lineColor={'#ddd'}>\r\n                                    {Object.keys(props.plantas[props.location.props.id].transplantes).reverse().map((id,i)=>(\r\n                                        <TimelineItem\r\n                                            dateText={props.plantas[props.location.props.id].transplantes[id].fecha}\r\n                                            dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                        >\r\n                                            <AccionDetallada \r\n                                                handleChange={handleChange} \r\n                                                index={i} \r\n                                                expanded={expanded} \r\n                                                plantaDelHistorial={false} \r\n                                                user={props.user} \r\n                                                accion={props.plantas[props.location.props.id].transplantes[id]} \r\n                                                tipoDeAccion='transplantes' \r\n                                                idPlanta={props.location.props.id} \r\n                                                id={id} \r\n                                                key={id}\r\n                                            />\r\n                                        </TimelineItem>   \r\n                                    ))}\r\n                                </Timeline>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Transplante')\r\n                                            }}>Transplatala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaTransplantes)","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n})) \r\nconst PlantaPodas =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Podas'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.plantas[props.location.props.id].podas?\r\n                        <Timeline lineColor={'#ddd'}>\r\n                            {Object.keys(props.plantas[props.location.props.id].podas).reverse().map((id,i)=>(\r\n                                <TimelineItem\r\n                                dateText={props.plantas[props.location.props.id].podas[id].fecha}\r\n                                dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                >\r\n                                    <AccionDetallada \r\n                                        user={props.user} \r\n                                        index={i}  \r\n                                        plantaDelHistorial={false} \r\n                                        expanded={expanded} \r\n                                        handleChange={handleChange} \r\n                                        accion={props.plantas[props.location.props.id].podas[id]} \r\n                                        tipoDePoda={props.plantas[props.location.props.id].podas[id].tipoDePoda}\r\n                                        tipoDeAccion='podas' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}/>\r\n                                </TimelineItem>\r\n                                ))}\r\n                        </Timeline>\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                        props.history.push('/Poda')\r\n                                    }}>Podala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </div>        \r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaPodas)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Typography} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    paper:{\r\n        padding:theme.spacing(1)\r\n    }\r\n})) \r\nconst PlantaTimeLine =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n    let [arrayAcciones,setArrayAcciones]= useState([])\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    const convertToArray=(acciones=[],tipoDeAccion)=>{\r\n        let aux = []\r\n        Object.keys(acciones).map(key=>{\r\n            aux.push({accion:acciones[key],tipoDeAccion:tipoDeAccion,id:key})\r\n        })\r\n        return aux\r\n    }\r\n    const obtenerArray=()=>{\r\n        if(props.location.props){\r\n            let aux =[]\r\n            const arrayRiegos= convertToArray(props.plantas[props.location.props.id].riegos,'Riego')\r\n            const arrayFumigaciones= convertToArray(props.plantas[props.location.props.id].fumigaciones,'Fumigacion')\r\n            const arrayPodas= convertToArray(props.plantas[props.location.props.id].podas,'Poda')\r\n            const arrayTransplantes= convertToArray(props.plantas[props.location.props.id].transplantes,'Transplante')\r\n            arrayRiegos.map(riego=>{\r\n                aux.push(riego)\r\n            })\r\n            arrayFumigaciones.map(fumigacion=>{\r\n                aux.push(fumigacion)\r\n            })\r\n            arrayPodas.map(poda=>{\r\n                aux.push(poda)\r\n            })\r\n            arrayTransplantes.map(transplante=>{\r\n                aux.push(transplante)\r\n            })\r\n            return aux.sort(function compare(a, b) {\r\n                if (a.id < b.id) {\r\n                  return -1;\r\n                }\r\n                if (a.id > b.id) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              }).reverse()\r\n        }\r\n    }\r\n    const array = obtenerArray()\r\n    return(\r\n        props.location.props?\r\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Timeline'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    {array.length?\r\n                            <Timeline lineColor={'#fff'}>\r\n                                {array.map((accion,i)=>(\r\n                                    <TimelineItem\r\n                                        dateText={accion.accion.fecha}\r\n                                        dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                    >   \r\n                                        <AccionDetallada \r\n                                            handleChange={handleChange} \r\n                                            index={i} \r\n                                            expanded={expanded} \r\n                                            plantaDelHistorial={true}\r\n                                            user={props.user} \r\n                                            accion={accion.accion} \r\n                                            tipoDeAccion={accion.tipoDeAccion} \r\n                                            idPlanta={props.location.props.id} \r\n                                            id={accion.id} \r\n                                        />\r\n                                    </TimelineItem>\r\n                                ))}\r\n                            </Timeline>\r\n                            :\r\n                            <Typography variant='h4'> No se ha realizando nada sobre esta planta</Typography>\r\n                        }\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaTimeLine)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Typography} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    paper:{\r\n        padding:theme.spacing(1)\r\n    }\r\n})) \r\nconst PlantaHistorialTimeLine =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n    let [arrayAcciones,setArrayAcciones]= useState([])\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    const convertToArray=(acciones=[],tipoDeAccion)=>{\r\n        let aux = []\r\n        Object.keys(acciones).map(key=>{\r\n            aux.push({accion:acciones[key],tipoDeAccion:tipoDeAccion,id:key})\r\n        })\r\n        return aux\r\n    }\r\n    const obtenerArray=()=>{\r\n        if(props.location.props){\r\n            let aux =[]\r\n            const arrayRiegos= convertToArray(props.plantas[props.location.props.id].riegos,'Riego')\r\n            const arrayFumigaciones= convertToArray(props.plantas[props.location.props.id].fumigaciones,'Fumigacion')\r\n            const arrayPodas= convertToArray(props.plantas[props.location.props.id].podas,'Poda')\r\n            const arrayTransplantes= convertToArray(props.plantas[props.location.props.id].transplantes,'Transplante')\r\n            arrayRiegos.map(riego=>{\r\n                aux.push(riego)\r\n            })\r\n            arrayFumigaciones.map(fumigacion=>{\r\n                aux.push(fumigacion)\r\n            })\r\n            arrayPodas.map(poda=>{\r\n                aux.push(poda)\r\n            })\r\n            arrayTransplantes.map(transplante=>{\r\n                aux.push(transplante)\r\n            })\r\n            return aux.sort(function compare(a, b) {\r\n                if (a.id < b.id) {\r\n                  return -1;\r\n                }\r\n                if (a.id > b.id) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              }).reverse()\r\n        }\r\n    }\r\n    const array = obtenerArray()\r\n    return(\r\n        props.location.props?\r\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Timeline'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    {array.length?\r\n                        <Timeline lineColor={'#fff'}>\r\n                            {array.map((accion,i)=>(\r\n                                <TimelineItem\r\n                                    dateText={accion.accion.fecha}\r\n                                    dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                >   \r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        expanded={expanded} \r\n                                        plantaDelHistorial={true}\r\n                                        user={props.user} \r\n                                        accion={accion.accion} \r\n                                        tipoDeAccion={accion.tipoDeAccion} \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={accion.id} \r\n                                    />\r\n                                </TimelineItem>\r\n                            ))}\r\n                        </Timeline>\r\n                        :\r\n                        <Typography variant='h4'> No se ha realizando nada sobre esta planta</Typography>\r\n                    }\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialTimeLine)","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {makeStyles,Paper} from '@material-ui/core';\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaHistorialRiegos =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Riegos'}  plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].riegos?\r\n                                Object.keys(props.plantas[props.location.props.id].riegos).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        expanded={expanded} \r\n                                        plantaDelHistorial={true}\r\n                                        user={props.user} \r\n                                        accion={props.plantas[props.location.props.id].riegos[id]} \r\n                                        tipoDeAccion='riegos' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        id={id}\r\n                                    />\r\n                                ))\r\n                                :\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialRiegos)\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaHistorialFumigaciones =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Fumigaciones'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].fumigaciones?\r\n                                Object.keys(props.plantas[props.location.props.id].fumigaciones).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        plantaDelHistorial={true} \r\n                                        expanded={expanded} \r\n                                        user={props.user}\r\n                                        index={i} \r\n                                        accion={props.plantas[props.location.props.id].fumigaciones[id]} \r\n                                        tipoDeAccion='fumigaciones' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}/>\r\n                                ))\r\n                                :\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialFumigaciones)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaHistorialTransplantes =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Transplantes'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].transplantes?\r\n                                Object.keys(props.plantas[props.location.props.id].transplantes).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        expanded={expanded} \r\n                                        plantaDelHistorial={true} \r\n                                        user={props.user} \r\n                                        accion={props.plantas[props.location.props.id].transplantes[id]} \r\n                                        tipoDeAccion='transplantes' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}\r\n                                    />\r\n                                ))\r\n                                :\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialTransplantes)","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n})) \r\nconst PlantaHistorialPodas =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Podas'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.plantas[props.location.props.id].podas?\r\n                            Object.keys(props.plantas[props.location.props.id].podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada \r\n                                    user={props.user} \r\n                                    index={i}  \r\n                                    plantaDelHistorial={true} \r\n                                    expanded={expanded} \r\n                                    handleChange={handleChange} \r\n                                    accion={props.plantas[props.location.props.id].podas[id]} \r\n                                    tipoDePoda={props.plantas[props.location.props.id].podas[id].tipoDePoda}\r\n                                    tipoDeAccion='podas' \r\n                                    idPlanta={props.location.props.id} \r\n                                    id={id} \r\n                                    key={id}/>\r\n                            ))\r\n                            :\r\n                            <div className=\"row justify-content-center mt-4\">\r\n                                <div className=\"col-auto\">\r\n                                    <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n                    </div>        \r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialPodas)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport const NotFound = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>la pagina no se encuentra disponible</h1>\r\n            <Link to='/'>\r\n                Vuelve al Home\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles,InputAdornment} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    },\r\n    textLight:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\n\r\nexport const ElegirNuevaMaceta=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.nuevoVolumen}\r\n                            className={classes.radio}\r\n                            color='primary'\r\n                            type='number'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    Lt\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect } from 'react-redux'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nimport {ElegirPlantaAccion} from '../components/ElegirPlantaAccion'\r\nimport {ElegirNuevaMaceta} from '../components/ElegirNuevaMaceta'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\n class Transplante extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n        nuevaMaceta:undefined,\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.transplantar()\r\n        this.props.history.push('/')\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    setNuevaMaceta=(nuevoVolumen)=>{\r\n        this.setState({nuevaMaceta:nuevoVolumen})\r\n    }\r\n    transplantar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarTransplanteDB(planta.id,this.state.nuevaMaceta)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarTransplanteDB= async (idPlanta,nuevoVolumen)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('transplantes').push({\r\n            volumenMaceta:nuevoVolumen,\r\n            fecha:this.translateMonth(moment().format('LLL')),\r\n        })\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).update({\r\n            volumenMaceta:nuevoVolumen,\r\n        })\r\n    }\r\n    translateMonth=date=>{\r\n        const month = date.slice(0,date.indexOf(' '))\r\n        const newDate = date.slice(date.indexOf(' ')+1)\r\n        switch (month) {\r\n            case 'January':\r\n                return `Enero ${newDate}`\r\n                break;\r\n            case 'February':\r\n                return `Febrero ${newDate}`\r\n                break;\r\n            case 'March':\r\n                return `Marzo ${newDate}`\r\n                break;\r\n            case 'April':\r\n                return `Abril ${newDate}`\r\n                break;\r\n            case 'May':\r\n                return `Mayo ${newDate}`\r\n                break;\r\n            case 'June':\r\n                return `Junio ${newDate}`\r\n                break;\r\n            case 'July':\r\n                return `Julio ${newDate}`\r\n                break;\r\n            case 'August':\r\n                return `Agosto ${newDate}`\r\n                break;\r\n            case 'September':\r\n                return `Septiembre ${newDate}`\r\n                break;\r\n            case 'October':\r\n                return `Octubre ${newDate}`\r\n                break;\r\n            case 'November':\r\n                return `Noviembre ${newDate}`\r\n                break;\r\n            case 'December':\r\n                return `Diciembre ${newDate}`\r\n                break;\r\n            default:\r\n            break;\r\n        }\r\n        return date\r\n    }\r\n    render(){\r\n    let selectedPlants=[]\r\n    if(this.state.plantas){\r\n        this.state.plantas.map(planta=>(\r\n            planta.selected?\r\n                selectedPlants.push(planta.nombre)\r\n                :\r\n                null\r\n        ))\r\n    }\r\n        return(\r\n        <Layout history={this.props.history} page='Transplante' user={this.props.user}>\r\n            <div className=\"container-fluid overflow-auto h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-12 px-0\">\r\n                        <StepperAccion \r\n                            step1='Plantas'\r\n                            step2='Nuevo Volumen de tierra'\r\n                            selectedPlants={selectedPlants}\r\n                            confirmarAccion={this.confirmarAccion}\r\n                            nuevaMaceta={this.state.nuevaMaceta}\r\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} nuevaMaceta={this.state.nuevaMaceta}/>}\r\n                            tipoDeAccion='Transplante'\r\n                            steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {\r\n                                    title:'Nuevo Volumen de tierra',\r\n                                    content:(\r\n                                        <ElegirNuevaMaceta\r\n                                            handleChange={this.setNuevaMaceta}\r\n                                            nuevoVolumen={this.state.nuevaMaceta}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n        )\r\n    }\r\n }\r\n const mapStateToProps=state=>({\r\n     user:state.user.uid,\r\n     plantas:state.data.plantas,\r\n\r\n })\r\n export default connect(mapStateToProps,null)(Transplante)","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    input:{\r\n        marginTop:theme.spacing(1),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    inputWrapper:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        marginTop:theme.spacing(1)\r\n    },\r\n    select:{\r\n        width:'100%'\r\n    }\r\n}))\r\n\r\n\r\nexport const FormCaracteristicasNuevaPlanta =({nombre,setNombre,genetica,setGenetica,volumenMaceta,setVolumenMaceta,etapa,setInicioGerminacion,getFullDate,setEtapa})=>{\r\n    \r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <form className={classes.form}>\r\n                <TextField label=\"Nombre\" className={classes.input} value={nombre} placeholder='Planta 1' onChange={e=>{setNombre(e.target.value)}}/>\r\n                <TextField label=\"Genetica\"  className={classes.input} value={genetica} placeholder='Purple Kush' onChange={e=>{setGenetica(e.target.value)}}/>\r\n                <TextField \r\n                    label=\"Volumen De Maceta\" \r\n                    className={classes.formControl}\r\n                    value={volumenMaceta}\r\n                    placeholder={10}\r\n                    type='number'  \r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            Lt\r\n                        </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={e=>{setVolumenMaceta(e.target.value)}}/>\r\n                <FormControl className={classes.select}>\r\n                    <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\r\n                    <Select\r\n                        labelId=\"etapa-select-label\"\r\n                        id=\"etapa-select\"\r\n                        value={etapa}\r\n                        onChange={e=>{\r\n                            const etapa = e.target.value\r\n                            if(etapa==='Vegetativo'){\r\n                                setInicioGerminacion(getFullDate())\r\n                                setEtapa(e.target.value)\r\n                            }\r\n                            else{\r\n                                setInicioGerminacion(undefined)\r\n                                setEtapa(e.target.value)}\r\n                            }\r\n                        }\r\n                    >\r\n                        <MenuItem value={'Germinacion'}>Germinacion</MenuItem>\r\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControlLabel,InputLabel,Select,MenuItem,Button,InputAdornment,Input} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(2),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    input:{\r\n        marginTop:theme.spacing(1),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    inputWrapper:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        marginTop:theme.spacing(3)\r\n    }\r\n}))\r\n\r\nexport const FormEtapaNuevaPlanta =({getFullDate,periodoArmario,inicioGerminacion,setInicioGerminacion,inicioVegetativo,setInicioVegetativo,inicioFloracion,setInicioFloracion,etapa})=>{\r\n    const classes = useStyles()\r\n    const date = getFullDate()\r\n    const renderInputs=()=>{\r\n        switch (etapa) {\r\n            case 'Germinacion':\r\n                if(periodoArmario==='Vegetativo'){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <FormControlLabel\r\n                                label='Inicio de Germinacion'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <Alert variant='outlined' severity=\"error\">\r\n                            <AlertTitle>No es recomendable introducir una semilla germinando en un armario con periodo de Floracion</AlertTitle>\r\n                        </Alert>\r\n                    )\r\n                }\r\n                break;\r\n            case 'Vegetativo':\r\n                if(periodoArmario===etapa ){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <FormControlLabel\r\n                                label='Inicio de Germinacion'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                            <Alert variant='outlined' severity=\"warning\">\r\n                                <AlertTitle>Si ingresa esta planta al armario comenzara su periodo de floracion el dia de hoy</AlertTitle>\r\n                            </Alert>\r\n                            <div className={classes.inputWrapper}> \r\n                            <FormControlLabel\r\n                                label='Inicio de Germinacion'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                                <FormControlLabel\r\n                                label='Inicio de Vegetativo'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n                break;\r\n            case 'Floracion':\r\n                if(periodoArmario===etapa){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <FormControlLabel\r\n                                label='Inicio de Germinacion'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                                <FormControlLabel\r\n                                label='Inicio de Vegetativo'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                            <FormControlLabel\r\n                                label='Inicio de Floracion'\r\n                                labelPlacement='top'\r\n                                control={\r\n                                    <Input type='date' value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\r\n                                }\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <Alert variant='outlined' severity=\"error\">\r\n                            <AlertTitle>No es recomendable introducir una planta en periodo de floracion en un armario con periodo Vegetativo</AlertTitle>\r\n                        </Alert>\r\n                    )\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n            <form className={classes.form}>\r\n                {renderInputs()}\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport {FormCaracteristicasNuevaPlanta} from '../components/FormCaracteristicasNuevaPlanta'\r\nimport {FormEtapaNuevaPlanta} from '../components/FormEtapaNuevaPlanta'\r\nimport addFile from '../images/addFile.svg'\r\nimport {makeStyles, Paper} from '@material-ui/core'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nimport {ResumenNuevaPlanta} from '../components/ResumenNuevaPlanta'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst convertirFecha=fecha=>{\r\n    const year = fecha.slice(0,fecha.indexOf('-'))\r\n    const month=fecha.slice(fecha.indexOf('-')+1,fecha.lastIndexOf('-'))\r\n    const day=fecha.slice(fecha.lastIndexOf('-')+1)\r\n    return `${day}/${month}/${year}`\r\n}\r\nconst  NuevaPlanta=(props)=>{\r\n    const classes = useStyles()\r\n    let [nombre,setNombre]=useState(undefined)\r\n    let [genetica,setGenetica]=useState(undefined)\r\n    let [etapa,setEtapa]=useState(undefined)\r\n    let [volumenMaceta,setVolumenMaceta]= useState(undefined)\r\n    let [inicioGerminacion,setInicioGerminacion]= useState(getFullDate())\r\n    let [inicioVegetativo,setInicioVegetativo]= useState(undefined)\r\n    let [inicioFloracion,setInicioFloracion]= useState(undefined)\r\n    \r\n    const guardarNuevaPlantaDB= async ()=>{\r\n        console.log(props.periodo==='Floracion'?'fecha':'nofecha')\r\n        await database().ref().child(props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica?genetica:'Desconocida',\r\n            volumenMaceta:volumenMaceta?volumenMaceta:null,\r\n            nacimiento:inicioGerminacion?convertirFecha(inicioGerminacion):null,\r\n            inicioVegetativo:inicioVegetativo?convertirFecha(inicioVegetativo):null,\r\n            inicioFloracion:inicioFloracion?convertirFecha(inicioFloracion):props.periodo==='Floracion'? getFullDate():null\r\n        })\r\n        props.history.replace('/')\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Nueva Planta' user={props.user}>\r\n            <StepperAccion\r\n                tipoDeAccion='Nueva Planta'\r\n                confirmarAccion={guardarNuevaPlantaDB}\r\n                nombre={nombre}\r\n                etapa={etapa}\r\n                steps={[\r\n                    {\r\n                        title:'Caracteristicas',\r\n                        content:(\r\n                            <FormCaracteristicasNuevaPlanta \r\n                                nombre={nombre} \r\n                                genetica={genetica} \r\n                                etapa={etapa}\r\n                                setNombre={setNombre}\r\n                                setGenetica={setGenetica} \r\n                                setEtapa={setEtapa}\r\n                                volumenMaceta={volumenMaceta}\r\n                                setVolumenMaceta={setVolumenMaceta}\r\n                                periodoArmario={props.periodo}\r\n                                getFullDate={getFullDate}\r\n                                setInicioGerminacion={setInicioGerminacion}\r\n                            />\r\n                        )\r\n                    },\r\n                    {\r\n                        title:'Inicio de Etapas',\r\n                        content:(\r\n                            <FormEtapaNuevaPlanta\r\n                                inicioGerminacion={inicioGerminacion}\r\n                                inicioVegetativo={inicioVegetativo}\r\n                                inicioFloracion={inicioFloracion}\r\n                                setInicioGerminacion={setInicioGerminacion}\r\n                                setInicioVegetativo={setInicioVegetativo}\r\n                                setInicioFloracion={setInicioFloracion}\r\n                                etapa={etapa}\r\n                                getFullDate={getFullDate}\r\n                                periodoArmario={props.periodo}\r\n                            />\r\n                        )\r\n                    },\r\n                ]}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    periodo:state.data.periodo\r\n})\r\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  root:{\r\n      margin:'0'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    color:theme.palette.secondary.contrastText,\r\n    padding: theme.spacing(1)\r\n},\r\ncontainerPlantas:{\r\n    textAlign:'left',\r\n    paddingLeft:theme.spacing(2),\r\n    paddingTop:theme.spacing(2)\r\n},\r\nlistItemText:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    '& .MuiTypography-colorTextSecondary':{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    },\r\n},\r\ntitle:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n}\r\n}));\r\n\r\nexport const ResumenNuevaPlanta=({})=>{\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText className={classes.listItemText} primary='Tipo De Poda' />    \r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);\r\n}","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    firstPaper:{\r\n        width:'300px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop:theme.spacing(1),\r\n        padding:theme.spacing(4),\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(1),\r\n        width:'80%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivoCaracteristicas = ({updateState}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.form}>\r\n                <TextField label=\"Nombre\"  onChange={e=>{\r\n                    updateState(e.target.value,'nombre')\r\n                }}/>\r\n                <TextField label=\"Marca\"  onChange={e=>{\r\n                    updateState(e.target.value,'marca')\r\n                }}/>\r\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\r\n                    updateState(e.target.value,'descripcion')\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        paddingTop:theme.spacing(2)\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1)\r\n    },\r\n    firstPaper:{\r\n        width:'300px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop:theme.spacing(1),\r\n        padding:theme.spacing(4),\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(1),\r\n        width:'80%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivoDosificaciones = ({updateState}) =>{\r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    const classes = useStyles()\r\n    return(\r\n        <div className='container-fluid'>\r\n            <Button\r\n                variant='outlined'\r\n                color='#fff'\r\n                className={classes.button}\r\n                startIcon={<AddOutlined/>}\r\n                onClick={e=>{\r\n                    setCantidadDeDosis(cantidadDeDosis+=1)\r\n                }}\r\n            >\r\n                Agregar otra dosis\r\n            </Button>\r\n            <div className='row flex-nowrap overflow-auto'>\r\n                {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                    <form className='col-auto d-flex flex-column'>\r\n                        <TextField label=\"Etapa\"  color='#fff' placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                            updateState(e.target.value,'etapa','dosis'+i)\r\n                        }}/>\r\n                        <TextField label=\"Cantidad\" type='number' color='#fff' onChange={e=>{\r\n                            updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                        }}/>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                color='#fff'\r\n                                onChange={e=>{\r\n                                    updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'1'}>gr/L</MenuItem>\r\n                                <MenuItem value={'2'}>ml/L</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                color='#fff'\r\n                                id=\"demo-simple-select\"\r\n                                onChange={e=>{\r\n                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'Tierra'}>Tierra</MenuItem>\r\n                                <MenuItem value={'Foliar'}>Foliar</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport addFile from '../images/addFile.svg'\r\nimport { FormNuevoAditivoCaracteristicas } from '../components/FormNuevoAditivoCaracteristicas'\r\nimport { FormNuevoAditivoDosificaciones } from '../components/FormNuevoAditivoDosificaciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\n\r\n\r\nconst NuevoAditivo=(props)=>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const classes = useStyles()\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos =[]\r\n        if(props.location.props.tipoDeAditivo==='Fertilizantes'){\r\n            if(props.fertilizantes){\r\n                newAditivos=props.fertilizantes\r\n            } \r\n        }\r\n        else{\r\n            if(props.insecticidas){\r\n                newAditivos=props.insecticidas\r\n            }\r\n        }\r\n        newAditivos.push(newAditivo)\r\n        switch (props.location.props.tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(props.user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                props.history.goBack()\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(props.user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                props.history.goBack()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n\r\n    if(!props.location.props){\r\n        return(\r\n            <Redirect to='Aplicables'/>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Layout page='Nuevo Aditivo' user={props.user} history={props.history}>\r\n                <StepperAccion\r\n                confirmarAccion={agregarAditivo}\r\n                tipoDeAccion='Nuevo Aditivo'\r\n                steps={[\r\n                    {\r\n                        title:'Caracteristicas',\r\n                        content:(\r\n                            <FormNuevoAditivoCaracteristicas\r\n                                updateState={updateState}\r\n                            />\r\n                        )\r\n                    },\r\n                    {\r\n                        title:'Dosificaciones',\r\n                        content:(\r\n                            <FormNuevoAditivoDosificaciones\r\n                                updateState={updateState} \r\n                            />\r\n                        )\r\n                    },\r\n                    ]}\r\n                />\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    fertilizantes:state.data.fertilizantes,\r\n    insecticidas:state.data.insecticidas\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoAditivo)","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\r\nimport Configuracion from './Pages/Configuracion';\r\nimport Historial from './Pages/Historial';\r\nimport Planta from './Pages/Planta'\r\nimport PlantaHistorial from './Pages/PlantaHistorial'\r\nimport PlantaRiegos from './Pages/PlantaRiegos'\r\nimport PlantaFumigaciones from './Pages/PlantaFumigaciones'\r\nimport PlantaTransplantes from './Pages/PlantaTransplantes'\r\nimport PlantaPodas from './Pages/PlantaPodas'\r\nimport PlantaTimeLine from './Pages/PlantaTimeLine'\r\nimport PlantaHistorialTimeLine from './Pages/PlantaHistorialTimeLine'\r\nimport PlantaHistorialRiegos from './Pages/PlantaHistorialRiegos'\r\nimport PlantaHistorialFumigaciones from './Pages/PlantaHistorialFumigaciones'\r\nimport PlantaHistorialTransplantes from './Pages/PlantaHistorialTransplantes'\r\nimport PlantaHistorialPodas from './Pages/PlantaHistorialPodas'\r\nimport {NotFound} from './Pages/NotFound'\r\nimport Transplante from './Pages/Transplante'\r\nimport NuevaPlanta from './Pages/NuevaPlanta'\r\nimport NuevoAditivo from './Pages/NuevoAditivo'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true,\r\n    theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'light'\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n    const theme = localStorage.getItem('theme')\r\n    console.log(theme)\r\n    if(!theme){\r\n        localStorage.setItem('theme','light')\r\n    }\r\n  }\r\n  \r\nsetTheme=theme=>{\r\n  console.log(theme)\r\n  this.setState({theme:theme})\r\n}\r\n  render(){\r\n    const themeProvider = createMuiTheme({\r\n      palette: {\r\n          white:'#fff',\r\n          primary: {\r\n          light: '#48a999',\r\n          main: '#00796b',\r\n          dark: '#004c40',\r\n          contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n          light: '#4f5b62',\r\n          main: '#263238',\r\n          dark: '#000a12',\r\n          contrastText: '#000',\r\n          },\r\n          danger:'#c62828',\r\n          type:this.state.theme\r\n      },\r\n  });\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <ThemeProvider theme={themeProvider}>\r\n              <PantallaDeCarga/>\r\n          </ThemeProvider>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n              <Provider store={this.state.store}>\r\n                <HashRouter>\r\n                  <Switch>\r\n                    <Route exact path='/' component={Armario}/>\r\n                    <Route exact path='/Riego' component={Riego}/>\r\n                    <Route exact path='/Poda' component={Poda}/>\r\n                    <Route exact path='/Transplante' component={Transplante}/>\r\n                    <Route exact path='/Insecticida' component={Insecticida}/>\r\n                    <Route exact path='/Aplicables' component={Aplicables}/>\r\n                    <Route exact path='/Configuracion' render={(props) => <Configuracion {...props} setTheme={this.setTheme} />}/>\r\n                    <Route exact path='/Historial' component={Historial}/>\r\n                    <Route exact path='/Planta' component={Planta}/>\r\n                    <Route exact path='/Historial/Planta' component={PlantaHistorial}/>\r\n                    <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\r\n                    <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\r\n                    <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\r\n                    <Route exact path='/Planta/Timeline' component={PlantaTimeLine}/>\r\n                    <Route exact path='/Planta/Podas' component={PlantaPodas}/>\r\n                    <Route exact path='/Planta/Transplantes' component={PlantaTransplantes}/>\r\n                    <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                    <Route exact path='/Historial/Planta/Riegos' component={PlantaHistorialRiegos}/>\r\n                    <Route exact path='/Historial/Planta/Timeline' component={PlantaHistorialTimeLine}/>\r\n                    <Route exact path='/Historial/Planta/Podas' component={PlantaHistorialPodas}/>\r\n                    <Route exact path='/Historial/Planta/Transplantes' component={PlantaHistorialTransplantes}/>\r\n                    <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaHistorialFumigaciones}/>\r\n                    <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n                  </Switch>\r\n                </HashRouter>\r\n              </Provider>\r\n            </ThemeProvider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={SignInPage}/>\r\n                <Route exact path='/Login' component={LogInPage}/>\r\n                <Route  component={NotFound}/>\r\n              </Switch>\r\n            </HashRouter>\r\n          </ThemeProvider>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}