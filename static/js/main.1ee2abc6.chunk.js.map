{"version":3,"sources":["images/addFile.svg","alerts/AlertEliminarPlanta.jsx","alert-components/AlertNavBar.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","components/NavBar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","Pages/Planta.jsx","alert-components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","alert-components/BreadcrumbPlanta.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","Pages/NotFound.jsx","components/FormNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","Pages/NuevoAditivo.jsx","serviceWorker.js","index.js","images/apple cookies.jpg","images/sea of green.jpg"],"names":["module","exports","Component","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","dark","padding","spacing","TarjetaPlanta","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","Grow","in","timeout","Paper","elevation","to","pathname","src","fotoPlanta","alt","nombre","CarouselPlantas","Typography","plantas","Object","keys","map","key","user","genetica","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","id","history","Button","variant","color","faPlusCircle","IconButton","AddCircleOutline","connect","state","data","text","contrastText","FechaYHora","format","fecha","setFecha","setInterval","marginTop","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","horaDeInicio","cicloLuminico","actualizarEstadoDeLampara","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","width","console","log","actualizarBarraDeEstado","periodo","horaDeFinal","parseInt","calcularHoraFinal","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","main","menuButton","marginRight","flexGrow","NavBar","page","planta","switchTheme","setSwitchTheme","setRedirect","setTheme","setMenuOpened","AppBar","position","Toolbar","edge","location","replace","goBack","aria-label","ArrowBackRounded","AccountCircle","Hidden","xsDown","FormControlLabel","control","Switch","checked","onChange","target","localStorage","setItem","value","label","size","Menu","drawer","maxWidth","height","type","secondary","MenuDrawer","menuOpened","Drawer","anchor","open","CardMedia","component","image","foto","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","faTint","faCut","faBug","NatureOutlined","faCogs","a","auth","signOut","root","app","minHeight","display","textAlign","flexDirection","alignItems","justifyContent","fontSize","Layout","children","redirect","themeProvider","createMuiTheme","white","light","danger","getItem","ThemeProvider","Armario","nuevoPeriodo","selectedTab","cambioDePeriodo","database","ref","child","update","cambiarHoraDeInicio","horas","cambiarHoraDeFinal","CheckboxPlanta","handleClick","llave","formControl","margin","minWidth","selectEmpty","alert","checkbox","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","i","Checkbox","selected","Alert","severity","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","transform","pos","background","ResumenAccion","tipoDePoda","Grid","item","xs","container","justify","gutterBottom","parseFloat","slice","indexOf","toFixed","resetContainer","paperSecondary","paddingBottom","paddingTop","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","firstPaper","secondPaper","dosisList","flexWrap","overflow","form","FormNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","updateState","valor","indexDosis","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","multiline","startIcon","AddOutlined","Array","fill","vacio","placeholder","AlertBotoneraConfirmacion","faCheckCircle","cambiarHora","alertConfiguracion","faTimesCircle","AlertNuevoAditivo","heading","typography","pxToRem","secondaryHeading","paperMain","paperDark","expansionPanel","textShadow","buttonText","expandIcon","addButton","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","j","aplicacion","k","confirmAlert","customUI","alertEditarAditivo","EditOutlined","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","grey","objectFit","avatar","borderColor","submit","border","link","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","md","Avatar","noValidate","required","fullWidth","helperText","autoFocus","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","then","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","CardHeader","subheader","Historial","historial","plantaDelHistorial","gridList","titleBar","listRoot","backgroundImage","listItem","DetallePlanta","tileData","GridList","cols","tile","GridListTile","Divider","store","textDecoration","outline","DetalleAcciones","ButtonGroup","endIcon","InvertColorsOutlined","BugReportOutlined","buttonDanger","buttonTextDanger","backdrop","zIndex","Planta","inputCantidad","setInputCantidad","cosecharPlanta","remove","guardarCantidadCosechada","eliminarPlanta","CheckCircle","alertEliminarPlanta","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","NotFound","FormNuevaPlanta","guardarNuevaPlantaDB","setNombre","setGenetica","setEtapa","CheckCircleOutlineOutlined","NuevaPlanta","addFile","NuevoAditivo","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.1ee2abc6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","import React , {Component} from 'react'\r\n\r\nclass AlertEliminarPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                            this.props.eliminarPlanta()\r\n                            this.props.onClose()\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNavBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row align-items-center mb-2\">\r\n                <div className=\"col-auto mr-auto\">\r\n                    {this.props.alertPlanta?\r\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\r\n                            this.props.alertPlanta()\r\n                        }} className='alert-icon'/>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"col-auto text-center text-light\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"col-auto ml-auto\">\r\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\r\n                        this.props.onClose()\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNavBar","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\n\r\nclass AlertCambiarCiclo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar \r\n                    alertPlanta={this.props.alertPlanta} \r\n                    onClose={this.props.onclose} \r\n                />\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarCiclo","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {useState,useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\r\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nimport {Link} from 'react-router-dom'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Grow} from '@material-ui/core' \r\nimport {makeStyles} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor:theme.palette.primary.dark,\r\n      padding:theme.spacing(1)\r\n    },\r\n  }));\r\n\r\nexport const TarjetaPlanta=(props)=>{\r\n    let [edad,setEdad]=useState(undefined)\r\n    useEffect(()=>{\r\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\r\n    })\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"col-auto\">\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={6} className={classes.paper}>\r\n                    <Link className='text-white' to={{\r\n                        pathname:'/Planta',\r\n                        props:{\r\n                            ...props\r\n                        }\r\n                    }}>\r\n                        <Card className=\"card\" >\r\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Overlay>\r\n                        </Card>\r\n                    </Link>\r\n                </Paper>\r\n            </Grow>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {TarjetaPlanta} from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport {Button,Typography,Grow,IconButton} from '@material-ui/core'\r\nimport {AddCircleOutline} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nclass CarouselPlantas extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container h-100 mt-2 mb-2 justify-content-center d-flex flex-column \">\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <Grow in={true}\r\n                            {...(true ? { timeout: 1500 } : {})}>\r\n                            <Typography>\r\n                                Plantas Dentro Del Armario\r\n                            </Typography>\r\n                        </Grow>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\r\n                    {this.props.plantas?\r\n                        Object.keys(this.props.plantas).map(key=>(\r\n                            <TarjetaPlanta\r\n                                user={this.props.user}\r\n                                nacimiento={this.props.plantas[key].nacimiento} \r\n                                genetica={this.props.plantas[key].genetica}\r\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \r\n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \r\n                                podas={this.props.plantas[key].podas} \r\n                                riegos={this.props.plantas[key].riegos}\r\n                                fumigaciones={this.props.plantas[key].fumigaciones}\r\n                                nombre={this.props.plantas[key].nombre}\r\n                                id={key}\r\n                                key={key}\r\n                                history={this.props.history}\r\n                            />\r\n                        ))\r\n                        :\r\n                        <div className=\"col-12 text-center\">\r\n                            <h2 className='text-white'>Aun No hay plantas</h2>\r\n                            <Link to='/Nueva-Planta'>\r\n                                <Button variant=\"contained\" color=\"primary\">\r\n                                    Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col-auto\">\r\n                        <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                            <Link to='/Nueva-Planta'>\r\n                                <IconButton\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                >\r\n                                    <AddCircleOutline />\r\n                                </IconButton>\r\n                            </Link>\r\n                        </Grow>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\r\nimport moment from 'moment'\r\nimport {Typography,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const  FechaYHora=()=>{\r\n    const classes = useStyles()\r\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setFecha(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\r\n        }, 1000);\r\n    });\r\n    return(\r\n        <Typography variant='h4' className={classes.text}>{fecha}</Typography>\r\n    )\r\n}","import React, {useEffect,useState} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {FechaYHora} from '../components/FechaYHora'\r\nimport './styles/table.css'\r\nimport {Paper,Typography} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grow}from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop:theme.spacing(3),\r\n        padding:theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    text:{\r\n        color: theme.palette.primary.contrastText\r\n    }\r\n}));\r\n\r\nexport const BarraDeLuz=(props)=>{\r\n    let [activo,setActivo]=useState(0)\r\n    let [faltante,setFaltante]=useState(undefined)\r\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\r\n    let [transcurrido,setTranscurrido]=useState(undefined)\r\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\r\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\r\n    let [intervalo,setIntervalo]=useState(undefined)\r\n\r\n    const getMinutes=(moment)=>{\r\n        const date = new Date()\r\n        const minutes= date.getMinutes()+date.getHours()*60\r\n        return minutes\r\n    }\r\n    const actualizarEstadoDeLampara=(minutes)=>{\r\n        if(props.horaDeInicio*60+props.cicloLuminico*60> minutes){\r\n            setLampraEncendida(true)\r\n        }\r\n        else{\r\n            setLampraEncendida(false)\r\n        }\r\n    }\r\n    const actualizarTranscurrido=minutes=>{\r\n        if(lamparaEncendida){\r\n            setTranscurrido(minutes-(props.horaDeInicio*60))\r\n        }\r\n        else{\r\n            setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico)*60))\r\n        }\r\n    }\r\n    const actualizarFaltante=minutes=>{\r\n        if(lamparaEncendida){\r\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\r\n            setFaltante(diferencia)\r\n        }\r\n        else{\r\n            const diferencia = ((props.horaDeInicio+24)*60)-minutes\r\n            setFaltante(diferencia)\r\n        }\r\n    }\r\n    const actualizarBarraDeEstado=()=>{\r\n        const barra = document.getElementById('barraLuz')\r\n        if(lamparaEncendida){\r\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n        else{\r\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\r\n            console.log(porcentaje)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        const minutes= getMinutes()\r\n        actualizarEstadoDeLampara(minutes)\r\n        actualizarTranscurrido(minutes)\r\n        actualizarFaltante(minutes)\r\n        actualizarBarraDeEstado()\r\n    })\r\n    const calcularHoraFinal=()=>{\r\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\r\n        if(horaDeFinal>24){\r\n            horaDeFinal=horaDeFinal-24\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00 +1`\r\n        }\r\n        else{\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00`\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8 offset-md-2\">\r\n                    <Grow in={true}\r\n                    {...(true ? { timeout: 1500 } : {})}>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-auto ml-auto mr-auto\">\r\n                                        <FechaYHora/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography className={classes.text}>Periodo {props.periodo}</Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography className={classes.text}>Ciclo Luminico {props.cicloLuminico} Hs ({props.horaDeInicio}:00 - {calcularHoraFinal()})</Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography className={classes.text}>\r\n                                            Transcurrido {` ${parseInt(transcurrido/60)<10? '0'+parseInt(transcurrido/60):parseInt(transcurrido/60) } : ${parseInt(transcurrido%60)<10? '0'+parseInt(transcurrido%60):parseInt(transcurrido%60)}`}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography className={classes.text}>\r\n                                            Faltante (Hs)  {` ${parseInt(faltante/60)<10? '0'+parseInt(faltante/60):parseInt(faltante/60) } : ${parseInt(faltante%60)<10? '0'+parseInt(faltante%60):parseInt(faltante%60)}`}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {!lamparaEncendida?\r\n                                        <div className=\"col text-center\">\r\n                                            <span className='badge badge-pill p-3 badge-dark'>\r\n                                                <Typography>\r\n                                                    Descansando...\r\n                                                </Typography>\r\n                                            </span>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"col text-center\">\r\n                                            <span className='badge badge-pill p-3 badge-success'>\r\n                                                <Typography>\r\n                                                    Creciendo...\r\n                                                </Typography>\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"row mt-4\">\r\n                                    <div className=\"col-10 offset-1\">\r\n                                        <div className=\"progress\">\r\n                                            <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grow>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {makeStyles, Hidden} from '@material-ui/core'\r\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel} from '@material-ui/core'\r\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles( theme=>({\r\n    appBar:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    }\r\n}))\r\n\r\nexport const NavBar = ({page,planta,history,switchTheme,setSwitchTheme,setRedirect,theme,setTheme,setMenuOpened}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <AppBar className={classes.appBar} position=\"static\" >\r\n            <Toolbar>\r\n            {page!=='Armario'?\r\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                    if(!planta){\r\n                        if(history.location.pathname==='/Planta'){\r\n                            history.replace('/')\r\n                        }\r\n                        else{\r\n                            history.goBack()\r\n                        }\r\n                    }\r\n                    else{\r\n                        setRedirect(true)\r\n                    }\r\n                }} color=\"inherit\" aria-label=\"menu\">\r\n                    <ArrowBackRounded />\r\n                </IconButton>\r\n                :\r\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                    \r\n                }} color=\"inherit\" aria-label=\"menu\">\r\n                    <AccountCircle />\r\n                </IconButton>\r\n            }\r\n            <Typography variant=\"h6\" className={classes.title} >\r\n                {page}\r\n            </Typography>\r\n            <Hidden\r\n                xsDown\r\n            >\r\n                <FormControlLabel \r\n                    control={\r\n                        <Switch\r\n                            checked={switchTheme}\r\n                            onChange={e=>{\r\n                                setSwitchTheme(e.target.checked)\r\n                                localStorage.setItem('theme',theme==='dark'?'light':'dark')\r\n                                setTheme(theme==='dark'?'light':'dark')\r\n                            }}\r\n                            value=\"theme\"\r\n                        />\r\n                    }\r\n                    label='Modo Oscuro'\r\n                />\r\n            </Hidden>\r\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                setMenuOpened(true)\r\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport foto from '../images/sea of green.jpg'\r\nimport {auth} from 'firebase'\r\nimport {Card,CardMedia,} from '@material-ui/core'\r\nimport {HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    drawer:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n    },\r\n    icon:{\r\n        color:theme.palette.type==='dark'?\r\n            theme.palette.primary.contrastText:\r\n            theme.palette.secondary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.type==='dark'?\r\n            theme.palette.primary.contrastText:\r\n            theme.palette.secondary.contrastText\r\n    },\r\n}))\r\nexport const MenuDrawer = ({menuOpened,setMenuOpened,})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\r\n            <div className={classes.drawer}>\r\n                <Card>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Sea Of Green\"\r\n                        image={foto}\r\n                        title=\"Sea Of Green\"\r\n                    />\r\n                </Card>\r\n                <List>\r\n                    <Link to='/' className='outline-none text-dark'>\r\n                        <ListItem button key={'Armario'} >\r\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Armario'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Riego' className='outline-none text-dark'>\r\n                        <ListItem button key={'Regar'} >\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Regar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Poda' className='outline-none text-dark'>\r\n                        <ListItem button key={'Podar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Podar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Insecticida' className='outline-none text-dark'>\r\n                        <ListItem button key={'Fumigar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aplicables' className='outline-none text-dark'>\r\n                        <ListItem button key={'Aditivos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Historial' className='outline-none text-dark'>\r\n                        <ListItem button key={'Historial'}>\r\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aditivos' className='outline-none text-dark'>\r\n                        <ListItem button key={'Carencias y Excesos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Configuracion' className='outline-none text-dark'>\r\n                        <ListItem button key={'Configuracion'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                            await auth().signOut()\r\n                        }}>\r\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                        <ListItemText primary={'Cerrar Sesion'} />\r\n                    </ListItem>\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {Paper} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\nimport {NavBar} from '../components/NavBar'\r\nimport {MenuDrawer} from '../components/MenuDrawer'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n    },\r\n    icon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    app:{\r\n        minHeight: '100vh',\r\n        height: '100vh',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\n\r\nexport const Layout=({page,children,history,planta,user})=>{\r\n    const classes = useStyles();\r\n    let [menuOpened,setMenuOpened]=useState(false)\r\n    let [selectedTabs,setSelectedTabs]=useState('recents')\r\n    let [redirect,setRedirect]=useState(false)\r\n    let [theme,setTheme]=useState()\r\n    let [switchTheme,setSwitchTheme]=useState(false)\r\n    const themeProvider = createMuiTheme({\r\n        palette: {\r\n            white:'#fff',\r\n            primary: {\r\n            light: '#48a999',\r\n            main: '#00796b',\r\n            dark: '#004c40',\r\n            contrastText: '#fff',\r\n            },\r\n            secondary: {\r\n            light: '#519657',\r\n            main: '#81c784',\r\n            dark: '#b2fab4',\r\n            contrastText: '#000',\r\n            },\r\n            danger:'#c62828',\r\n            type:theme\r\n        },\r\n    });\r\n    useEffect(()=>{\r\n        const theme = localStorage.getItem('theme')\r\n        if(theme){\r\n            setTheme(theme)\r\n            setSwitchTheme(theme==='light'?false:true)\r\n        }\r\n        else{\r\n            setTheme('light')\r\n            localStorage.setItem('theme','light')\r\n            setSwitchTheme(theme==='light'?false:true)\r\n        }\r\n    },)\r\n    if(redirect){\r\n        return(\r\n            <Redirect to={{\r\n                pathname:'/Planta',\r\n                props:{...planta}\r\n            }}/>\r\n        )\r\n    }\r\n    return(\r\n        <ThemeProvider theme={themeProvider}>\r\n            <Paper className={classes.app}>\r\n                {user &&\r\n                <>\r\n                    <NavBar page={page} planta={planta} history={history} switchTheme={switchTheme} setSwitchTheme={setSwitchTheme} theme={theme} setTheme={setTheme} setRedirect={setRedirect} setMenuOpened={setMenuOpened}/>\r\n                    <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened}/>\r\n                </>\r\n                }\r\n                {children}\r\n            </Paper>\r\n        </ThemeProvider>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport {BarraDeLuz} from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database} from 'firebase'\r\nimport {Layout} from './Layout'\r\n\r\nclass Armario extends Component{\r\n    state={\r\n        nuevoPeriodo:undefined,\r\n        menuOpened:false,\r\n        selectedTab:'recents'\r\n    }\r\n    cambioDePeriodo=async()=>{\r\n        await database().ref().child(this.props.user).update({\r\n            periodo:this.state.nuevoPeriodo\r\n        })\r\n    }\r\n    cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page=\"Armario\" user={this.props.user}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <BarraDeLuz periodo={this.props.periodo} horaDeInicio={this.props.horaDeInicio} cicloLuminico={this.props.cicloLuminico}/>      \r\n                    </div>\r\n                </div>\r\n                <CarouselPlantas history={this.props.history}/>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        cicloLuminico:state.data.cicloLuminico,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\r\nclass AlertConfirmarAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.accionfn()\r\n                            this.props.onClose()\r\n                            this.props.history.goBack()\r\n                        }}>Confirmar</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}>Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfirmarAccion","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab/'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    checkbox:{\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.primary.contrastText\r\n        }\r\n    }\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container pt-4\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas.length?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' className={classes.checkbox} checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                    />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        <div className=\"col-12\">\r\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.secondary.contrastText\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                        <FormControlLabel\r\n                            className={classes.radio}\r\n                            value=\"top\"\r\n                            control={<Radio\r\n                                value=\"Tierra\" \r\n                                name=\"Tierra\"\r\n                                color='primary'\r\n                            />}\r\n                            label='Tierra'\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"top\"\r\n                            className={classes.radio}\r\n                            control={<Radio\r\n                                value=\"Foliar\"\r\n                                name=\"Foliar\"\r\n                                color='primary'\r\n                            />}\r\n                            label=\"Foliar\"\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                    </RadioGroup>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n        backgroundColor:theme.palette.secondary.main,\r\n        color:theme.palette.secondary.contrastText,\r\n        '& :hover':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    buttonPrimary:{\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport const BotoneraConfirmacionAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n            <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Atras\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={\r\n                            e=>{\r\n                                props.confirmarAccion(props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                    Guardar {props.accion}\r\n                </Button>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n  }));\r\n  /*\r\n  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >    \r\n                    <Typography>\r\n                        Cantidad de Agua y Aditivos\r\n                    </Typography>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            {props.cantidadDeAgua?\r\n                                <Typography>\r\n                                    {props.cantidadDeAgua} L\r\n                                </Typography>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            {props.aditivosUsados?\r\n                                <Typography className=\"col-auto\">\r\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\r\n                                        const cantidad = props.aditivosUsados[aditivo]\r\n                                        return(\r\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\r\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\r\n                                            </span>\r\n                                        )\r\n                                    })}\r\n                                </Typography>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                    </div>\r\n                </ExpansionPanelSummary>*/\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid className='pt-4'>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <p className='text-light'>Aditivos (ml)</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos?\r\n                                        props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        :\r\n                                        <div className=\"col-12\">\r\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n      background:theme.palette.secondary.main,\r\n      color:theme.palette.secondary.contrastText,\r\n      padding: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Grid item xs={12}>\r\n        <Grid container justify=\"space-around\" alignItems='center' className='mb-2' >\r\n            <Grid item>     \r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                        Plantas Seleccionadas\r\n                    </Typography>\r\n                    {plantas.map(planta => (\r\n                        planta.selected?\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                <strong>{planta.nombre}</strong>\r\n                            </Typography>\r\n                            :\r\n                            null\r\n                    ))}\r\n                </Paper>\r\n            </Grid>\r\n            {tipoDeRiego?\r\n                <>  \r\n                    <Grid item>      \r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                Tipo De Riego\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                <strong>{tipoDeRiego}</strong>\r\n                            </Typography>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>      \r\n                        <Paper elevation={6} className={classes.paper}>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                <strong>{cantidadDeAgua} L de agua</strong>\r\n                            </Typography>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                Aditivos usados\r\n                            </Typography>\r\n                            {aditivos?\r\n                                Object.keys(aditivos).map(aditivo=>{\r\n                                    const dosis= aditivos[aditivo]\r\n                                    return(\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\r\n                                        </Typography>\r\n                                    )\r\n                                })\r\n                                :\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <strong>-</strong>\r\n                                </Typography>\r\n                            }\r\n                        </Paper>\r\n                    </Grid>\r\n                </>\r\n                :\r\n                <Grid item>      \r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            Tipo De Poda\r\n                        </Typography>\r\n                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                            <strong>{tipoDePoda}</strong>\r\n                        </Typography>\r\n                    </Paper>\r\n                </Grid>\r\n            }\r\n        </Grid>\r\n    </Grid>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  buttonPrimary:{\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    backgroundColor:theme.palette.secondary.main,\r\n    color:theme.palette.secondary.contrastText,\r\n    '& :hover':{\r\n      color:theme.palette.primary.contrastText,\r\n    }\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperSecondary:{\r\n    backgroundColor:theme.palette.primary.dark,\r\n    paddingBottom:theme.spacing(2),\r\n    paddingTop:theme.spacing(2),\r\n  },\r\n  padding:{\r\n    paddingBottom:theme.spacing(1),\r\n    color:theme.palette.primary.contrastText,\r\n  },\r\n  stepper:{\r\n    backgroundColor:'transparent'\r\n  },\r\n  stepTitle:{\r\n    '& .MuiStepLabel-label':{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n  },\r\n  resetContainer:{\r\n    background:'linear-gradient(transparent 15%, #000)',\r\n    height:'100%',\r\n    paddingTop:theme.spacing(1)\r\n  }\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(activeStep===0){\r\n      return selectedPlants.length?false:true\r\n    }\r\n    else if(activeStep===1){\r\n      if(tipoDeAccion==='Poda'){\r\n        return tipoDePoda?false:true\r\n      }\r\n      else{\r\n        return tipoDeRiego?false:true\r\n      }\r\n    }\r\n    else if(activeStep===2){\r\n        return cantidadDeAgua?false:true\r\n    }\r\n  }\r\n  return (\r\n    <Grow in={true}\r\n      {...(true ? { timeout: 1500 } : {})}>\r\n      <div className={classes.root}>\r\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\r\n            {steps.map((step, index) => (\r\n              step?\r\n                    <Step key={step.title}>\r\n                      <Paper elevation={3} className={classes.paperSecondary}>\r\n                        <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\r\n                      </Paper>\r\n                      <StepContent>\r\n                        <Paper elevation={6} className={classes.padding}>\r\n                            <Typography>{step.content}</Typography>\r\n                            <div className={classes.actionsContainer}>\r\n                                <div>\r\n                                <Button\r\n                                    disabled={activeStep === 0}\r\n                                    onClick={handleBack}\r\n                                    className={classes.button}\r\n                                >\r\n                                    Atras\r\n                                </Button>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={handleNext}\r\n                                    className={classes.buttonPrimary}\r\n                                    disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                                >\r\n                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                                </Button>\r\n                                </div>\r\n                            </div>\r\n                          </Paper>\r\n                        </StepContent>\r\n                    </Step>\r\n                    :\r\n                    null\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length && (\r\n            <Paper square elevation={6} className={classes.resetContainer}>\r\n                {resumenAccion}\r\n                <BotoneraConfirmacionAccion\r\n                    accion={tipoDeAccion}\r\n                    handleBack={handleBack}\r\n                    confirmarAccion={confirmarAccion}\r\n                />\r\n            </Paper>\r\n          )}\r\n      </div>\r\n    </Grow>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {Layout} from './Layout'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Riego' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100\">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                step1='Plantas'\r\n                                step2='Tipo De Riego'\r\n                                step3='Cantidad de agua y aditivos'\r\n                                selectedPlants={selectedPlants}\r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Riego'\r\n                                steps={[\r\n                                        {\r\n                                        title:'Plantas',\r\n                                        content:(\r\n                                            <ElegirPlantaAccion\r\n                                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                                plantas={this.state.plantas}\r\n                                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                                expanded={this.state.expanded}\r\n                                            />\r\n                                        )},\r\n                                        {title:'Tipo De Riego',\r\n                                        content:(\r\n                                            <ElegirTipoDeRiego\r\n                                                tipoDeRiego={this.state.tipoDeRiego}    \r\n                                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                                expanded={this.state.expanded}\r\n                                            />\r\n                                        )},\r\n                                        {title:'Cantidad De Agua y Aditivos',\r\n                                        content:(\r\n                                            <FormularioAccion\r\n                                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                                    tipoDeRiego={this.state.tipoDeRiego}\r\n                                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                                    cambiarAditivo={this.cambiarAditivo}\r\n                                                    adivito='Fertlizante'\r\n                                                    aditivos={this.props.aditivos}\r\n                                                    aditivosUsados={this.state.aditivos}\r\n                                                    eliminarAditivo={this.eliminarAditivo}\r\n                                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                                    expanded={this.state.expanded}\r\n                                                />\r\n                                        )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Fumigacion' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100\">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Fumigacion'\r\n                                steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Tipo De Riego',\r\n                                    content:(\r\n                                        <ElegirTipoDeRiego\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Cantidad De Agua y Aditivos',\r\n                                    content:(\r\n                                        <FormularioAccion\r\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                            cambiarAditivo={this.cambiarAditivo}\r\n                                            aditivo='Insecticida'\r\n                                            aditivos={this.props.aditivos}\r\n                                            aditivosUsados={this.state.aditivos}\r\n                                            eliminarAditivo={this.eliminarAditivo}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        alignItems:'center'\r\n    },\r\n    firstPaper:{\r\n        width:'75%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        padding:theme.spacing(4)\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        maxWidth:'75%',\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        minWidth:'200px',\r\n        margin:theme.spacing(1),\r\n        flexDirection:'column'\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivo = ({aditivos,tipoDeAditivo,user,history}) =>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos=aditivos\r\n        newAditivos.push(newAditivo)\r\n        console.log(tipoDeAditivo)\r\n        switch (tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    \r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    let dosisList = []\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper elevation={4} className={classes.firstPaper}>\r\n                <Typography>\r\n                    Caracteristicas\r\n                </Typography>\r\n                <TextField label=\"Nombre\"  onChange={e=>{\r\n                    updateState(e.target.value,'nombre')\r\n                }}/>\r\n                <TextField label=\"Marca\"  onChange={e=>{\r\n                    updateState(e.target.value,'marca')\r\n                }}/>\r\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\r\n                    updateState(e.target.value,'descripcion')\r\n                }}/>\r\n            </Paper>\r\n            <Paper elevation={4} className={classes.secondPaper}>\r\n                <Typography>\r\n                    Dosificacion\r\n                </Typography>\r\n                <Button\r\n                    variant='text'\r\n                    color='primary'\r\n                    startIcon={<AddOutlined/>}\r\n                    onClick={e=>{\r\n                        setCantidadDeDosis(cantidadDeDosis+=1)\r\n                    }}\r\n                >\r\n                    Agregar otra dosis\r\n                </Button>\r\n                <div className={classes.dosisList}>\r\n                    {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                        <form className={classes.form}>\r\n                            <TextField label=\"Etapa\"  placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                                updateState(e.target.value,'etapa','dosis'+i)\r\n                            }}/>\r\n                            <TextField label=\"Cantidad\" onChange={e=>{\r\n                                updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                            }}/>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    onChange={e=>{\r\n                                        updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value={'1'}>gr/L</MenuItem>\r\n                                    <MenuItem value={'2'}>ml/L</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    onChange={e=>{\r\n                                        updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                    }}\r\n                                >\r\n                                    <MenuItem value={'Tierra'}>Tierra</MenuItem>\r\n                                    <MenuItem value={'Foliar'}>Foliar</MenuItem>\r\n                                </Select>\r\n                            </FormControl>\r\n                        </form>\r\n                    ))}\r\n                </div>\r\n            </Paper>\r\n            <Button\r\n                variant='contained'\r\n                color='primary'\r\n                onClick={e=>{\r\n                    agregarAditivo()\r\n                }}\r\n            >\r\n                Agregar {tipoDeAditivo}!\r\n            </Button>\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertBotoneraConfirmacion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                        this.props.cambiarHora()\r\n                        this.props.alertConfiguracion()\r\n                    }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                        this.props.alertConfiguracion()\r\n                    }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertBotoneraConfirmacion","import React ,{useState}from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport {database} from 'firebase'\r\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos=aditivos\r\n        newAditivos.push(newAditivo)\r\n        switch (tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        console.log(valor)\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\r\n            <AlertNavBar\r\n                onClose={onClose}\r\n                title={tipoDeAditivo}\r\n            />\r\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\r\n                updateState(valor,nombre,dosis)\r\n            }}/>\r\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\r\n        </div>\r\n    )\r\n}","import React,{Fragment} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px white'\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    addButton:{\r\n        marginBottom:theme.spacing(1)\r\n    }\r\n  }));\r\n\r\n\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const alertNuevoAditivo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                        aditivo={aditivo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleChange = panel => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <div className=\"container mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <Link to={{\r\n                            pathname:'/Nuevo-Aditivo',\r\n                            props:{\r\n                                tipoDeAditivo:title\r\n                            }\r\n                        }}>\r\n                            <Button \r\n                                variant='primary' \r\n                                className={classes.addButton} \r\n                                startIcon={<AddOutlined/>}\r\n                                >\r\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {aditivos?\r\n                    aditivos.map((aditivo,i)=>(\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <Grow in={true}\r\n                            {...(true ? { timeout: 1500 } : {})}>\r\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\r\n                                <Paper elevation={4} className={classes.paperDark}>\r\n                                    <ExpansionPanelSummary\r\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id=\"panel1bh-header\"\r\n                                    >\r\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                </Paper>\r\n                                <Paper elevation={6} className={classes.paperMain}>\r\n                                    <ExpansionPanelDetails>\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row mb-2\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Descripcion\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col text-left\">\r\n                                                    <Typography variant='body2'>\r\n                                                        {aditivo.descripcion}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Dosificacion\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                    <Typography  variant ='h6'>\r\n                                                            {tipoDeAplicacion}\r\n                                                    </Typography>\r\n                                                    <List>\r\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\r\n                                                            </ListItem> \r\n                                                        ))}\r\n                                                    </List>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                            <div className=\"row my-2 justify-content-around\">\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={e=>{alertEditarAditivo(aditivo)}}\r\n                                                    >   \r\n                                                        <EditOutlined className={classes.buttonText}/>\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\r\n                                                        Editar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={e=>{eliminarAditivo(i)}}\r\n                                                    >\r\n                                                        <DeleteOutline className={classes.buttonText}/>\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\r\n                                                        Eliminar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ExpansionPanelDetails>\r\n                                    </Paper>\r\n                            </ExpansionPanel>\r\n                        </Grow>\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                    :\r\n                    <h1>Agrega {title}</h1>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\r\nimport {TableAditivos} from './TableAditivos'\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paperMain: {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    paperDark: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    },\r\n    tabs:{\r\n        \"&.MuiTabs-scroller\":{\r\n            '&.MuiTabs-indicator':{\r\n                color: '#fff'\r\n            }\r\n        },\r\n    },\r\n    tab:{\r\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\r\n            color: '#fff',\r\n        }\r\n    },\r\n  }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [value, setValue] = useState(0);\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container-fluid overflow-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 px-0\">\r\n                    <Paper className={classes.paperDark}>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(e,value)=>{\r\n                                setValue(value)\r\n                            }}\r\n                            className={classes.tabs}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\r\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './Layout'\r\nclass Aplicables extends Component{\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page='Aditivos' user={this.props.user}>\r\n                <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport {Paper,makeStyles} from '@material-ui/core'\r\nimport './styles/loading.css'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        height:'100%'\r\n    }\r\n}))\r\nexport const PantallaDeCarga =()=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className='row'>\r\n                <div className='col-12 text-center'>\r\n                    <h1>Cargando</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center mt-4\">\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const login=async()=>{\r\n        setloading(true)\r\n        setUserError(undefined)\r\n        setPasswordError(undefined)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Inicia Sesion\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    error={userError}\r\n                    helperText={userError?'Usuario No Encontrado':null}\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                    autoFocus\r\n                    />\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    helperText={passwordError?'Contraseña incorrecta':null}\r\n                    error={passwordError}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"secondary\" />}\r\n                    label=\"Recuerdame\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{login()}}\r\n                    >\r\n                    Ingresar!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                        Olvidaste tu contraseña?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link variant=\"body2\">\r\n                          <LinkRouter to='/Login' className={classes.link}>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                          </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth, database} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const signin=async()=>{\r\n        setloading(true)\r\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(async e=>{\r\n            await database().ref().child(e.user.uid).update({\r\n                horaDeInicio:0,\r\n                horaDeFinal:0,\r\n                periodo:'Vegetativo'\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography>\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Registrate\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      value={inputUser}\r\n                      onChange={e=>{setInputUser(e.target.value)}}\r\n                      autoFocus\r\n                    />\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      value={inputPassword}\r\n                      onChange={e=>{setInputPassword(e.target.value)}}\r\n                      label=\"contraseña\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    color='#fff'\r\n                    variant=\"outlined\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{signin()}}\r\n                    >\r\n                    Registrate!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link>\r\n                            <LinkRouter to='/' className={classes.link}>\r\n                                Ya tienes una cuenta? Ingresa!\r\n                            </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.secondary.contrastText\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ElegirTipoDePoda=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.tipoDePoda}\r\n                            className={classes.radio}\r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:moment().format('LLL'),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Poda' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100 \">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDePoda={this.state.tipoDePoda}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                                tipoDeAccion='Poda'\r\n                                steps={[\r\n                                {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                        />\r\n                                    )},\r\n                                {\r\n                                    title:'Tipo De Poda',\r\n                                    content:(\r\n                                        <ElegirTipoDePoda\r\n                                            handleChange={(nuevoTipoDePoda=>{\r\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                            })}\r\n                                            tipoDePoda={this.state.tipoDePoda}\r\n                                        />\r\n                                )}]\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React, { Component } from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nclass Configuracion extends Component{\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page='Configuracion' user={this.props.user}>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            Configuracion\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\r\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {Card,CardHeader,CardMedia,CardActions,makeStyles,IconButton} from '@material-ui/core'\r\nconst useStyles= makeStyles(theme=>({\r\n    root: {\r\n        width: 250,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardHeader:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\r\n    const classes= useStyles()\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                title={cantidadDeGramos?`${nombre} (${cantidadDeGramos})`:nombre}\r\n                subheader={fechaDeCorte}\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={fotoPlanta}\r\n            />\r\n        </Card>\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Typography} from '@material-ui/core'\r\nimport {CardHistorial} from '../components/CardHistorial'\r\nclass Historial extends Component{\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page={'Historial'} user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto\">\r\n                    <div className=\"row justify-content-center\">\r\n                        {this.props.historial?\r\n                            Object.keys(this.props.historial).map(planta=>(\r\n                                <div className=\"col-auto mt-3\">\r\n                                    <Link className='text-white' to={{\r\n                                        pathname:'/Historial/Planta',\r\n                                        props:{\r\n                                            ...this.props.historial[planta],\r\n                                            user:this.props.user,\r\n                                            id:planta,\r\n                                            history:this.props.history,\r\n                                            plantaDelHistorial:true\r\n                                        }\r\n                                    }}>\r\n                                        <CardHistorial cantidadDeGramos={this.props.historial[planta].cantidadDeGramos} nombre={this.props.historial[planta].nombre} fechaDeCorte={this.props.historial[planta].fechaDeCorte}/>\r\n                                    </Link>\r\n                                </div>\r\n                            )):\r\n                            <div className=\"col-auto\">\r\n                                <Typography>\r\n                                    No hay plantas en el historial\r\n                                </Typography>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    historial:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia} from '@material-ui/core'\r\nimport { PortableWifiOff } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        '& .MuiGridListTile-root':{\r\n            width:'30% !important'\r\n        }\r\n    },\r\n    title: {\r\n        color: theme.palette.primary.light,\r\n    },\r\n    titleBar: {\r\n        background:\r\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n    },\r\n    listRoot: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundImage:`url(${fotoPlanta})`,\r\n\r\n    },\r\n    listItem:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.dark\r\n    },\r\n    media: {\r\n        height:'100%'\r\n    },\r\n}))\r\n\r\nexport const DetallePlanta=(props)=>{\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    const classes = useStyles()\r\n            \r\n    return(\r\n        <>\r\n            <Col xs={12} className='p-0'>\r\n                <GridList className={classes.gridList} cols={2.5}>\r\n                    {tileData.map(tile => (\r\n                    <GridListTile key={tile.img} className={classes.tile}>\r\n                        <CardMedia\r\n                            className={classes.media}\r\n                            image={fotoPlanta}\r\n                        />\r\n                    </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </Col>\r\n            <div className='col-12 col-sm-8 col-md-6 col-lg-3 mt-2'>\r\n                <div className={classes.listRoot}>\r\n                    <Paper elevation={3}>\r\n                        <List component='nav'>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItem} primary=\"Genetica\" secondary={props.genetica}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItem} primary=\"Edad\" secondary={props.edad}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Germinacion\" secondary={`${props.nacimiento} (${moment().diff(moment(props.nacimiento),'days')} Dias)`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Vegetativo\" secondary={`${props.inicioVegetativo} (${moment().diff(moment(props.inicioVegetativo),'days')} Dias)`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Floracion\" secondary={`${props.inicioFloracion} (${moment().diff(moment(props.inicioFloracion),'days')} Dias)`}/>\r\n                            </ListItem>\r\n                            {props.plantaDelHistorial && props.fechaDeCorte &&\r\n                            <>\r\n                                <Divider/>\r\n                                <ListItem>\r\n                                    <ListItemText className={classes.listItem} primary=\"Fecha de Corte\" secondary={`${props.fechaDeCorte}`}/>\r\n                                </ListItem>\r\n                            </>\r\n                            }\r\n                            {props.plantaDelHistorial && props.cantidadDeGramos &&\r\n                            <>\r\n                                <Divider/>\r\n                                <ListItem>\r\n                                    <ListItemText className={classes.listItem} primary=\"Cantidad Cosechada\" secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\r\n                                </ListItem>\r\n                            </>\r\n                            }\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,makeStyles,ButtonGroup} from '@material-ui/core'\r\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    link:{\r\n        color:theme.palette.secondary.contrastText,\r\n        textDecoration:'none',\r\n        outline:'none'\r\n    }\r\n}))\r\n\r\nexport const DetalleAcciones =(props)=>{\r\n    const classes= useStyles()\r\n    return(\r\n        <div className=\"col text-center\">\r\n            {console.log(props.history.location.pathname)}\r\n            <ButtonGroup>\r\n                <Link\r\n                className={classes.link} \r\n                to={{ \r\n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\r\n                    props:{\r\n                        ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        endIcon={<InvertColorsOutlined/>}\r\n                    >\r\n                        Riegos\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}\r\n                to={{ \r\n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\r\n                    props:{\r\n                        ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        endIcon={<FontAwesomeIcon icon={faCut}/>}\r\n                    >\r\n                        Podas\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}                 \r\n                to={{ \r\n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\r\n                props:{\r\n                    ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        endIcon={<BugReportOutlined/>}\r\n                    >\r\n                        Fumigaciones\r\n                    </Button>\r\n                </Link>\r\n            </ButtonGroup>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport {Layout} from './Pages/Layout'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\r\nimport Configuracion from './Pages/Configuracion';\r\nimport Historial from './Pages/Historial';\r\nimport {Planta} from './Pages/Planta'\r\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\r\nimport {PlantaPodas} from './Pages/PlantaPodas'\r\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\r\nimport {NotFound} from './Pages/NotFound'\r\nimport NuevaPlanta from './Pages/NuevaPlanta'\r\nimport NuevoAditivo from './Pages/NuevoAditivo'\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true,\r\n    theme:'dark'\r\n  }\r\n  cambiarPeriodo(nuevoPeriodo){\r\n    this.setState({\r\n      periodo:nuevoPeriodo\r\n    })\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user.uid,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <Layout user={this.state.user}>\r\n            <PantallaDeCarga/>\r\n          </Layout>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <Provider store={this.state.store}>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={Armario}/>\r\n                <Route exact path='/Riego' component={Riego}/>\r\n                <Route exact path='/Poda' component={Poda}/>\r\n                <Route exact path='/Insecticida' component={Insecticida}/>\r\n                <Route exact path='/Aplicables' component={Aplicables}/>\r\n                <Route exact path='/Configuracion' component={Configuracion}/>\r\n                <Route exact path='/Historial' component={Historial}/>\r\n                <Route exact path='/Planta' component={Planta}/>\r\n                <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\r\n                <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\r\n                <Route exact path='/Historial/Planta' component={Planta}/>\r\n                <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\r\n                <Route exact path='/Planta/Podas' component={PlantaPodas}/>\r\n                <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                <Route exact path='/Historial/Planta/Riegos' component={PlantaRiegos}/>\r\n                <Route exact path='/Historial/Planta/Podas' component={PlantaPodas}/>\r\n                <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n              </Switch>\r\n            </HashRouter>\r\n          </Provider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route exact path='/' component={SignInPage}/>\r\n              <Route exact path='/Login' component={LogInPage}/>\r\n              <Route  component={NotFound}/>\r\n            </Switch>\r\n          </HashRouter>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React,{useState}from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\r\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {DeleteOutline, EditOutlined, CheckCircle,ExpandMore} from '@material-ui/icons'\r\nimport {IconButton,Button,ButtonGroup,makeStyles,TextField,Paper,ExpansionPanel,ExpansionPanelSummary,Typography,ExpansionPanelDetails} from '@material-ui/core'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    buttonTextDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    ExpansionPanelDetails:{\r\n    flexDirection:'column',\r\n    alignItems:'center',\r\n    justifyContent:'center'\r\n    }\r\n}))\r\n\r\nexport const Planta =(props)=>{\r\n    const classes = useStyles()\r\n    let [collapseInputCantidad,setCollapseInputCantidad] = useState(false)\r\n    let [inputCantidad, setInputCantidad]= useState(undefined)\r\n    const cosecharPlanta=async ()=>{\r\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\r\n            nombre:props.location.props.nombre?props.location.props.nombre:null,\r\n            nacimiento:props.location.props.nacimiento?props.location.props.nacimiento:null,\r\n            genetica:props.location.props.genetica?props.location.props.genetica:null,\r\n            inicioVegetativo:props.location.props.inicioVegetativo?props.location.props.inicioVegetativo:null,\r\n            inicioFloracion:props.location.props.inicioFloracion?props.location.props.inicioFloracion:null,\r\n            podas:props.location.props.podas?props.location.props.podas:null,\r\n            riegos:props.location.props.riegos?props.location.props.riegos:null,\r\n            fumigaciones:props.location.props.fumigaciones?props.location.props.fumigaciones:null,\r\n            fechaDeCorte:moment().format('LLL')\r\n        })\r\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\r\n        props.location.props.history.goBack()\r\n    }\r\n    const guardarCantidadCosechada=async ()=>{\r\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\r\n            cantidadDeGramos:inputCantidad+' gr'\r\n        })\r\n        props.location.props.history.goBack()\r\n    }\r\n    const eliminarPlanta=async ()=>{\r\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\r\n        props.location.props.history.replace('/')\r\n    }\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre} user={props.location.props.user}>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                        <DetallePlanta \r\n                            genetica={props.location.props.genetica}\r\n                            cantidadDeGramos={props.location.props.cantidadDeGramos}\r\n                            plantaDelHistorial={props.location.props.plantaDelHistorial}\r\n                            edad={props.location.props.edad}\r\n                            nacimiento={props.location.props.nacimiento}\r\n                            inicioVegetativo={props.location.props.inicioVegetativo}\r\n                            inicioFloracion={props.location.props.inicioFloracion}\r\n                            fechaDeCorte={props.location.props.fechaDeCorte}\r\n                        />\r\n                        <DetalleAcciones\r\n                            {...props.location.props}\r\n                        />\r\n                    </div>\r\n                    {props.location.props.plantaDelHistorial && !props.location.props.cantidadDeGramos &&\r\n                        <div className=\"row my-2 justify-content-center\">\r\n                            <div className=\"col-6 offset-3\">\r\n                                <ExpansionPanel>\r\n                                    <ExpansionPanelSummary\r\n                                    expandIcon={<ExpandMore />}\r\n                                    aria-controls=\"panel1a-content\"\r\n                                    id=\"panel1a-header\"\r\n                                    >\r\n                                        <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                    <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\r\n                                        <TextField id=\"outlined-basic\" \r\n                                            value={inputCantidad}\r\n                                            label=\"Cantidad Cosechada (gr)\" \r\n                                            variant=\"outlined\"\r\n                                            onChange={e=>{\r\n                                                setInputCantidad(e.target.value)\r\n                                            }}\r\n                                        />\r\n                                        <Button\r\n                                            variant=\"contained\"\r\n                                            color=\"secondary\"\r\n                                            onClick={e=>{\r\n                                                guardarCantidadCosechada()\r\n                                            }}\r\n                                            endIcon={\r\n                                                <CheckCircle/>\r\n                                            }\r\n                                            >\r\n                                            Guardar \r\n                                        </Button>\r\n                                    </ExpansionPanelDetails>\r\n                                </ExpansionPanel>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {!props.location.props.plantaDelHistorial &&\r\n                        <div className=\"row my-2 justify-content-around\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color='secondary'\r\n                                onClick={cosecharPlanta}\r\n                                endIcon={\r\n                                    <DeleteOutline/>\r\n                                }\r\n                                >\r\n                                Cosechar\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={props.location.props.alertEliminarPlanta}\r\n                                endIcon={\r\n                                    <EditOutlined/>\r\n                                }\r\n                            >   \r\n                                Editar\r\n                            </Button>                 \r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                onClick={e=>{\r\n                                    eliminarPlanta()\r\n                                }}\r\n                                endIcon={\r\n                                    <DeleteOutline/>\r\n                                }>\r\n                                    Eliminar\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color:theme.palette.secondary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.secondary.contrastText,\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n  }));\r\nexport const AccionDetallada=(props)=>{\r\n    const classes= useStyles()\r\n    let [show,setShow] = useState(false)\r\n    \r\n    const eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(true)\r\n        }, 100);\r\n    })\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-10 offset-1\">\r\n                <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\r\n                        <Paper elevation={4} className={classes.paperDark}>\r\n                            <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                            >\r\n                                <Typography className={classes.heading}>{props.accion.fecha}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                        </Paper>\r\n                        <Paper elevation={4} className={classes.paperMain}>\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"container\">\r\n                                    {props.accion.agua?\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.agua} L. De Agua \r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    <div className=\"row my-2\">\r\n                                        {props.accion.tipoDeRiego?\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\r\n                                                </Typography>\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"col text-left\">\r\n                                                <Typography variant='h5'>\r\n                                                    Poda {props.accion.tipoDePoda}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        }\r\n                                    </div>\r\n                                    <Divider/>\r\n                                    {props.tipoDeAccion!=='podas'?\r\n                                        <div className=\"row my-2\">\r\n                                            <div className=\"col-12 text-left\">\r\n                                                <Typography variant='h5'>\r\n                                                    Aditivos Usados\r\n                                                </Typography>\r\n                                            </div>\r\n                                            {props.accion.aditivos?\r\n                                                <List>\r\n                                                    {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\r\n                                                        <>\r\n                                                            <Divider/>\r\n                                                            <ListItem>\r\n                                                                <ListItemText\r\n                                                                    primary={aditivo}\r\n                                                                    secondary={props.accion.aditivos[aditivo]+' ml'} \r\n                                                                />\r\n                                                            </ListItem>\r\n                                                        </>\r\n                                                    ))}\r\n                                                </List>\r\n                                                :\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography>\r\n                                                        No se utilizaron Aditivos\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                    <Divider/>\r\n                                    {!props.plantaDelHistorial &&\r\n                                        <div className=\"row my-2 justify-content-around\">\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                >   \r\n                                                        <EditOutlined className={classes.buttonText}/>\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' className={classes.buttonText} gutterBottom>\r\n                                                    Editar\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={e=>{eliminarAccion()}}\r\n                                                >\r\n                                                        <DeleteOutline className={classes.buttonText}/>\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' className={classes.buttonText} gutterBottom>\r\n                                                    Eliminar\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </Paper>\r\n                    </ExpansionPanel>\r\n                </Grow>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {makeStyles} from '@material-ui/core';\r\nimport {Layout} from './Layout'\r\n\r\nexport const PlantaRiegos =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.location.props.riegos?\r\n                            Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\r\n                                <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                {!props.location.props.plantaDelHistorial &&\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Riego')\r\n                                            }}>Riegala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {Component} from 'react'\r\n\r\nclass BreadcrumbPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='breadcrumb bg-light text-dark mb-0'>\r\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\r\n                    this.props.return()\r\n                }}>\r\n                    {this.props.nombre}\r\n                </div>\r\n                {this.props.item?\r\n                    <div className=\"breadcrumb-item active\">\r\n                        {this.props.item}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BreadcrumbPlanta","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaPodas =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                    {props.location.props.podas?\r\n                        Object.keys(props.location.props.podas).reverse().map((id,i)=>(\r\n                            <AccionDetallada user={props.location.props.user} index={i}  plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} handleChange={handleChange} accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                        ))\r\n                        :\r\n                        <>\r\n                            <div className=\"row justify-content-center mt-4\">\r\n                                <div className=\"col-auto\">\r\n                                    <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\r\n                                </div>\r\n                            </div>\r\n                            {!props.location.props.plantaDelHistorial &&\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </>\r\n                    }\r\n                </div>        \r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaFumigaciones =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.location.props.fumigaciones?\r\n                            Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\r\n                                <AccionDetallada handleChange={handleChange} index={i} plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                {!props.location.props.plantaDelHistorial &&\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Insecticida')\r\n                                            }}>Fumigala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport const NotFound = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>la pagina no se encuentra disponible</h1>\r\n            <Link to='/'>\r\n                Vuelve al Home\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button} from '@material-ui/core'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100vh',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(2),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}))\r\n\r\n\r\nexport const FormNuevaPlanta =({guardarNuevaPlantaDB})=>{\r\n    const classes = useStyles()\r\n    let [nombre,setNombre]=useState(undefined)\r\n    let [genetica,setGenetica]=useState(undefined)\r\n    let [etapa,setEtapa]=useState('Germiacion')\r\n    let [selectedDate,setSelectedDate]=useState(undefined)\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n    };\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper elevation={6}>\r\n                <form className={classes.form}>\r\n                    <Typography className={classes.title}>\r\n                        Ingresa los siguientes datos\r\n                    </Typography>\r\n                    <TextField label=\"Nombre\" value={nombre} onChange={e=>{setNombre(e.target.value)}}/>\r\n                    <TextField label=\"Genetica\" value={genetica} onChange={e=>{setGenetica(e.target.value)}}/>\r\n                    <FormControl className={classes.formControl}>\r\n                        <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\r\n                        <Select\r\n                            labelId=\"etapa-select-label\"\r\n                            id=\"etapa-select\"\r\n                            value={etapa}\r\n                            onChange={e=>{setEtapa(e.target.value)}}\r\n                        >\r\n                            <MenuItem value={'Germinacion'}>Germinacion</MenuItem>\r\n                            <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                            <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </form>\r\n            </Paper>\r\n            <Button\r\n                variant='contained'\r\n                color='primary'\r\n                startIcon={<CheckCircleOutlineOutlined/>}\r\n                onClick={e=>{\r\n                    guardarNuevaPlantaDB(nombre,genetica,etapa)\r\n                }}\r\n            >\r\n                Agregar Planta!\r\n            </Button>\r\n        </div>\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {Paper, Grid} from '@material-ui/core'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport {FormNuevaPlanta} from '../components/FormNuevaPlanta'\r\nimport addFile from '../images/addFile.svg'\r\nclass NuevaPlanta extends Component{\r\n    guardarNuevaPlantaDB= async (nombre,genetica,etapa)=>{\r\n        await database().ref().child(this.props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica,\r\n            etapa:etapa,\r\n            nacimiento:moment().format('L')\r\n        })\r\n        this.props.history.replace('/')\r\n    }\r\n    render(){\r\n        return(\r\n            <Layout page='Nueva Planta' user={this.props.user} history={this.props.history}>\r\n                <Grid container component=\"main\">\r\n                    <Grid item xs={false} sm={4} md={7}>\r\n                        <img src={addFile}/>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={8} md={5}square>\r\n                        <FormNuevaPlanta guardarNuevaPlantaDB={this.guardarNuevaPlantaDB} />\r\n                    </Grid>\r\n                </Grid>\r\n            </Layout>\r\n    \r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user\r\n})\r\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React,{Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {Paper, Grid} from '@material-ui/core'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport addFile from '../images/addFile.svg'\r\nimport { FormNuevoAditivo } from '../alert-components/FormNuevoAditivo'\r\nimport {Redirect} from 'react-router-dom'\r\nclass NuevoAditivo extends Component{\r\n    render(){\r\n        if(!this.props.location.props){\r\n            return(\r\n                <Redirect to='Aplicables'/>\r\n            )\r\n        }\r\n        else{\r\n            return(\r\n                <Layout page='Nuevo Aditivo' user={this.props.user} history={this.props.history}>\r\n                    <Grid container component=\"main\">\r\n                        <Grid item xs={0} sm={0} md={7}>\r\n                            <img src={addFile}/>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={8} md={5}square>\r\n                            <FormNuevoAditivo  \r\n                                aditivos={this.props.location.props.tipoDeAditivo==='Fertilizantes'?this.props.fertilizantes:this.props.insecticidas}\r\n                                tipoDeAditivo={this.props.location.props.tipoDeAditivo}\r\n                                user={this.props.user}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Layout>\r\n            )\r\n        }\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user,\r\n    fertilizantes:state.data.fertilizantes,\r\n    insecticidas:state.data.insecticidas\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoAditivo)","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";"],"sourceRoot":""}