{"version":3,"sources":["images/sea of green.jpg","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","App.js","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","Pages/Planta.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","onClick","e","alertRiegos","icon","faTint","alertPodas","faCut","alertFumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","user","idPlanta","tipoDeAccion","remove","alert","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertPodas","defaultActiveKey","podas","reverse","history","push","AlertRiego","riegos","fumigaciones","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","database","setState","Paper","elevation","to","pathname","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","format","alertNuevaPlanta","plantas","Button","color","faPlusCircle","connect","data","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","signOut","auth","faCogs","closeNavbar","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Layout","page","children","classes","useState","menuOpened","setMenuOpened","Drawer","anchor","open","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","primary","Divider","AppBar","position","Toolbar","IconButton","edge","goBack","aria-label","ArrowBackRounded","AccountCircle","Typography","Menu","Armario","selectedTab","AlertCambiarInicio","update","horas","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","selectEmpty","marginTop","alignItems","ElegirPlantaAccion","seleccionarPlanta","length","FormGroup","row","planta","FormControlLabel","control","Checkbox","selected","onChange","label","Alert","severity","ElegirTipoDeRiego","cambiarTipoDeRiego","RadioGroup","target","Radio","labelPlacement","BotoneraConfirmacionAccion","handleBack","confirmarAccion","faCheck","size","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","marginBottom","ResumenAccion","Grid","container","justify","CardContent","gutterBottom","parseFloat","toFixed","height","flexDirection","justifyContent","actionsContainer","resetContainer","padding","StepperAccion","steps","resumenAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","lg","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","TabPanel","other","component","hidden","aria-labelledby","Box","p","store","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","overflow","image","backgroundColor","grey","objectFit","paper","avatar","main","form","submit","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","foto","Avatar","noValidate","required","fullWidth","helperText","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","Planta","location","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,0C,0eCyE5BC,E,iLAnEP,OACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,gCACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,EAAEC,OAAO,GAAIC,GAAI,CAACF,KAAK,EAAEC,OAAO,GAAIE,GAAI,CAACH,KAAK,EAAEC,OAAO,GAAIJ,UAAU,oBAChF,kBAACO,EAAA,EAAD,CAAOC,IAAKC,IAAYT,UAAU,QAAQU,IAAI,GAAGC,eAAa,KAElE,kBAACV,EAAA,EAAD,CAAKK,GAAI,EAAGN,UAAU,qBAClB,kBAACY,EAAA,EAAD,CAAWZ,UAAU,aACjB,kBAACa,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,QAAQ,QACzB,+BACI,4BACI,4BACI,wBAAIhB,UAAU,IAAd,aAEJ,4BACI,wBAAIA,UAAU,eAAeiB,KAAKC,MAAMC,YAGhD,4BACI,4BACI,wBAAInB,UAAU,IAAd,SAEJ,4BACI,wBAAIA,UAAU,eAAeiB,KAAKC,MAAME,KAAxC,WAGR,4BACI,4BACI,wBAAIpB,UAAU,IAAd,yBAEJ,4BACI,wBAAIA,UAAU,eAAeiB,KAAKC,MAAMG,WAAxC,KAAsDC,MAASC,KAAKD,IAAOL,KAAKC,MAAMG,YAAY,QAAlG,YAGR,4BACI,4BACI,wBAAIrB,UAAU,IAAd,yBAEJ,4BACI,wBAAIA,UAAU,eACViB,KAAKC,MAAMM,iBAAX,UACOP,KAAKC,MAAMM,iBADlB,aACuCF,MAASC,KAAKD,IAAOL,KAAKC,MAAMM,kBAAkB,QADzF,UAGI,gBAIhB,4BACI,4BACI,wBAAIxB,UAAU,IAAd,wBAEJ,4BACI,wBAAIA,UAAU,eACViB,KAAKC,MAAMO,gBAAX,UACGR,KAAKC,MAAMO,gBADd,cACmCH,MAASC,KAAKD,IAAOL,KAAKC,MAAMO,iBAAiB,QADpF,UAGA,yB,GAzDhBC,a,gBCgCbC,E,iLA/BF,IAAD,OACJ,OACI,kBAAC5B,EAAA,EAAD,CAAKC,UAAU,8CACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAQF,UAAU,sCACvB,yBAAKA,UAAU,cAAc4B,QAAS,SAAAC,GAClC,EAAKX,MAAMY,gBAEX,kBAAC,IAAD,CAAiBC,KAAMC,IAAQhC,UAAU,oBACzC,2BAAOA,UAAU,8BAAjB,YAGR,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAQF,UAAU,sCACvB,yBAAKA,UAAU,cAAc4B,QAAS,SAAAC,GAClC,EAAKX,MAAMe,eAEX,kBAAC,IAAD,CAAiBF,KAAMG,IAAOlC,UAAU,oBACxC,2BAAOA,UAAU,8BAAjB,WAGR,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAOF,UAAU,sCACtB,yBAAKA,UAAU,cAAc4B,QAAS,SAAAC,GAClC,EAAKX,MAAMiB,sBAEX,kBAAC,IAAD,CAAiBJ,KAAMK,IAAOpC,UAAU,oBACxC,2BAAOA,UAAU,8BAAjB,uB,GAzBM0B,aCwBfW,E,iLAxBF,IAAD,OACJ,OACI,yBAAKrC,UAAU,+BACX,yBAAKA,UAAU,oBACViB,KAAKC,MAAMoB,YACR,kBAAC,IAAD,CAAiBP,KAAMQ,IAAaX,QAAS,SAAAC,GACzC,EAAKX,MAAMoB,eACZtC,UAAU,eAEb,MAGR,yBAAKA,UAAU,mCACViB,KAAKC,MAAMsB,OAEhB,yBAAKxC,UAAU,oBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASzC,UAAU,mCAAmC4B,QAAS,SAAAC,GAClF,EAAKX,MAAMwB,mB,GAlBThB,aCmBXiB,E,iLAnBF,IAAD,OACJ,OACI,yBAAK3C,UAAU,sCACX,yBAAKA,UAAWiB,KAAKC,MAAM0B,KAAM,kBAAkB,yBAA0BhB,QAAS,SAAAC,GAClF,EAAKX,MAAM2B,WAEV5B,KAAKC,MAAM4B,QAEf7B,KAAKC,MAAM0B,KACR,yBAAK5C,UAAU,0BACViB,KAAKC,MAAM0B,MAGhB,U,GAdWlB,a,QC6ChBqB,E,2MAxCXC,a,sBAAc,8BAAAC,EAAA,sEACQC,oBAAUC,IAAI,EAAKjC,MAAMkC,IADjC,OACJD,EADI,OAEJE,EAAOC,SAASC,eAAe,SAASC,MAAM,GAEpDL,EAAIM,IAAIJ,GAAMK,MAAK,SAAA7B,GACf8B,QAAQC,IAAI,mCALN,2C,wEASV,OACI,yBAAK5D,UAAU,mDACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,WAEhD,kBAAC,EAAD,CACI3B,SAAUF,KAAKC,MAAMC,SACrBC,KAAMH,KAAKC,MAAME,KACjBC,WAAYJ,KAAKC,MAAMG,WACvBG,iBAAkBP,KAAKC,MAAMM,iBAC7BC,gBAAiBR,KAAKC,MAAMO,kBAEhC,kBAAC,EAAD,CACIK,YAAab,KAAKC,MAAMY,YACxBG,WAAYhB,KAAKC,MAAMe,WACvBE,kBAAmBlB,KAAKC,MAAMiB,oBAElC,yBAAKnC,UAAU,mCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,4BAAQ6D,KAAK,SAAS7D,UAAU,sBAAqB4B,QAASX,KAAKC,MAAM4C,qBAAzE,mBACA,4BAAQD,KAAK,SAAS7D,UAAU,wBAAuB4B,QAASX,KAAKC,MAAM6C,mBAA3E,yB,GAjCFrC,a,kBC+FXsC,E,2MA/FXC,e,sBAAgB,sBAAAhB,EAAA,sEACNiB,aAAoBf,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMD,MAAM,WAAWA,MAAM,EAAKjD,MAAMmD,UAAUF,MAAM,EAAKjD,MAAMoD,cAAcH,MAAM,EAAKjD,MAAMkC,IAAImB,SAD3I,OAEZ,EAAKrD,MAAMsD,QAFC,2C,wEAIP,IAAD,OACJ,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ7E,UAAU,qBAAqB8E,SAAU7D,KAAKC,MAAM6D,OACnF,yBAAK/E,UAAU,mBACX,yBAAKA,UAAU,OACgB,UAA1BiB,KAAKC,MAAMoD,aACZ,yBAAKtE,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAciB,KAAKC,MAAM8D,OAAOC,QAElD,yBAAKjF,UAAU,oBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASb,QAAS,SAAAC,GAAI,EAAKoC,sBAG1D,yBAAKjE,UAAU,OACViB,KAAKC,MAAMgE,WACR,yBAAKlF,UAAU,OACX,6BACA,wBAAIA,UAAU,cAAciB,KAAKC,MAAMgE,aAG3C,OAKR,yBAAKlF,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAciB,KAAKC,MAAM8D,OAAOC,QAElD,yBAAKjF,UAAU,oBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASb,QAAS,SAAAC,GAAI,EAAKoC,sBAG1D,yBAAKjE,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAciB,KAAKC,MAAM8D,OAAOG,KAA9C,eAEJ,yBAAKnF,UAAU,YACX,4BACI,yBAAKA,UAAU,gCACViB,KAAKC,MAAM8D,OAAOI,gBAKlCnE,KAAKC,MAAM8D,OAAOK,SACf,yBAAKrF,UAAU,OACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAiB+B,KAAMuD,QAI/B,SAOnBrE,KAAKC,MAAM8D,OAAOK,SACf,kBAACX,EAAA,EAAUa,SAAX,CAAoBT,SAAU7D,KAAKC,MAAM6D,OACrC,kBAACN,EAAA,EAAKe,KAAN,KACI,yBAAKxF,UAAU,mBACX,yBAAKA,UAAU,OACNyF,OAAOC,KAAKzE,KAAKC,MAAM8D,OAAOK,UAAUM,KAAI,SAACC,EAAQC,GAAT,OACzC,yBAAK7F,UAAU,WAAW8F,IAAKF,EAAQC,GACnC,0BAAM7F,UAAU,+BACZ,yBAAKA,UAAU,YACV4F,GAEL,yBAAK5F,UAAU,YACV,EAAKkB,MAAM8D,OAAOK,SAASO,GADhC,gBAWhC,U,GA1FMlE,aCsCfqE,E,iLArCF,IAAD,OACJ,OACI,yBAAK/F,UAAU,yBACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,OAAQF,KAAK,QAAQC,OAAQ5B,KAAKC,MAAMoB,gBAExF,yBAAKtC,UAAU,8BACX,kBAAC0E,EAAA,EAAD,CAAWsB,iBAAiB,KACvB/E,KAAKC,MAAM+E,MACRR,OAAOC,KAAKzE,KAAKC,MAAM+E,OAAOC,UAAUP,KAAI,SAACvC,EAAGyC,GAAJ,OACxC,kBAAC,EAAD,CAAiBzB,KAAM,EAAKlD,MAAMkD,KAAMW,MAAOc,EAAGrB,MAAO,EAAKtD,MAAMsD,MAAOQ,OAAQ,EAAK9D,MAAM+E,MAAM7C,GAAK8B,WAAY,EAAKhE,MAAM+E,MAAM7C,GAAI8B,WAAWZ,aAAa,QAAQD,SAAU,EAAKnD,MAAMmD,SAAUjB,GAAIA,EAAI0C,IAAK1C,OAG1N,oCACI,yBAAKpD,UAAU,mCACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,wCAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACf,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,GAChD,EAAKX,MAAMwB,UACX,EAAKxB,MAAMiF,QAAQC,KAAK,WAFhC,2B,GAxBX1E,aCsCV2E,E,iLArCF,IAAD,OACJ,OACI,yBAAKrG,UAAU,yBACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,OAAQF,KAAM,QAASC,OAAQ5B,KAAKC,MAAMoB,gBAE1F,yBAAKtC,UAAU,8BACX,kBAAC0E,EAAA,EAAD,CAAWsB,iBAAiB,KACvB/E,KAAKC,MAAMoF,OACRb,OAAOC,KAAKzE,KAAKC,MAAMoF,QAAQJ,UAAUP,KAAI,SAACvC,EAAGyC,GAAJ,OACzC,kBAAC,EAAD,CAAiBzB,KAAM,EAAKlD,MAAMkD,KAAMW,MAAOc,EAAGrB,MAAO,EAAKtD,MAAMsD,MAAOQ,OAAQ,EAAK9D,MAAMoF,OAAOlD,GAAKkB,aAAa,SAASD,SAAU,EAAKnD,MAAMmD,SAAUjB,GAAIA,EAAI0C,IAAK1C,OAGhL,oCACI,yBAAKpD,UAAU,mCACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,wCAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,GACpD,EAAKX,MAAMwB,UACX,EAAKxB,MAAMiF,QAAQC,KAAK,YAF5B,4B,GAxBf1E,aCsCVS,E,iLArCF,IAAD,OACJ,OACI,yBAAKnC,UAAU,yBACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,OAAQF,KAAK,eAAeC,OAAQ5B,KAAKC,MAAMoB,gBAE/F,yBAAKtC,UAAU,8BACX,kBAAC0E,EAAA,EAAD,CAAWsB,iBAAiB,KACvB/E,KAAKC,MAAMqF,aACRd,OAAOC,KAAKzE,KAAKC,MAAMqF,cAAcL,UAAUP,KAAI,SAACvC,EAAGyC,GAAJ,OAC/C,kBAAC,EAAD,CAAiBzB,KAAM,EAAKlD,MAAMkD,KAAKW,MAAOc,EAAGrB,MAAO,EAAKtD,MAAMsD,MAAOQ,OAAQ,EAAK9D,MAAMqF,aAAanD,GAAKkB,aAAa,eAAeD,SAAU,EAAKnD,MAAMmD,SAAUjB,GAAIA,EAAI0C,IAAK1C,OAGvL,oCACA,yBAAKpD,UAAU,mCACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,0CAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACf,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,GAChD,EAAKX,MAAMwB,UACX,EAAKxB,MAAMiF,QAAQC,KAAK,kBAFhC,6B,GAxBJ1E,aCuBjB8E,E,iLAzBF,IAAD,OACJ,OACI,yBAAKxG,UAAU,qCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,kCAA2DiB,KAAKC,MAAM4B,OAAtE,mBAGR,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQyG,IAAI,SAASzG,UAAU,iBAAiB4B,QAAS,SAAAC,GACrD,EAAKX,MAAMwF,iBACX,EAAKxF,MAAMwB,YAFf,iBAKJ,yBAAK1C,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAU,oBAAoB4B,QAASX,KAAKC,MAAMwB,SAAxE,mB,GAjBUhB,aC6BnBiF,E,iLA1BP,OACI,yBAAK3G,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAM0F,UAExB,yBAAK5G,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,kCAA2DiB,KAAKC,MAAM4B,OAAtE,mBAGR,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQyG,IAAI,SAASzG,UAAU,iBAAiB4B,QAAS,SAAAC,MAAzD,iBAGJ,yBAAK7B,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAU,oBAAoB4B,QAASX,KAAKC,MAAMwB,SAAxE,mB,GAnBQhB,a,+WCDzB,IAAMmF,EAAQC,IAAOC,IAAR,KAGPC,EAAMF,IAAOG,IAAV,KAIHxC,EAAOqC,IAAOC,IAAV,K,ukBC4JFG,G,2MApJXC,MAAM,CACF/F,UAAKgG,G,EAETtD,oBAAoB,kBAAIuD,uBAAa,CACjCC,SAAW,YAAe,IAAb5E,EAAY,EAAZA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,EAAD,CACIoE,KAAM,EAAKlD,MAAMkD,KACjBtB,OAAQ,EAAK5B,MAAM4B,OACnB4D,eAAgB,EAAKA,eACrBhE,QAASA,S,EAM7BqB,kBAAkB,kBAAIsD,uBAAa,CAC/BC,SAAW,YAAe,IAAb5E,EAAY,EAAZA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,EAAD,CACIoE,KAAM,EAAKlD,MAAMkD,KACjB9B,YAAa,EAAKA,YAClBI,QAASA,EACTI,OAAQ,EAAK5B,MAAM4B,c,EAMvCR,YAAY,kBAAI+E,uBAAa,CACzBC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,yBACX,kBAAC,EAAD,iBACQ,EAAKkB,MADb,CAEIwB,QAASA,EACToB,oBAAqB,EAAKA,oBAC1BC,kBAAmB,EAAKA,kBACxBjC,YAAa,EAAKA,YAClBG,WAAY,EAAKA,WACjBE,kBAAmB,EAAKA,0B,EAM5CL,YAAY,kBAAIuF,uBAAa,CACzBC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,oBACX,kBAAC,EAAD,CACIoE,KAAM,EAAKlD,MAAMkD,KACjBC,SAAU,EAAKnD,MAAMkC,GACrBoB,MAAO,EAAK1C,YACZY,QAASA,EACTJ,YAAa,EAAKA,YAClBQ,OAAQ,EAAK5B,MAAM4B,OACnBwD,OAAQ,EAAKpF,MAAMoF,OACnBH,QAAS,EAAKjF,MAAMiF,e,EAMxClE,WAAW,kBAAIoF,uBAAa,CACxBC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,oBACX,kBAAC,EAAD,CACIoE,KAAM,EAAKlD,MAAMkD,KACjBC,SAAU,EAAKnD,MAAMkC,GACrBoB,MAAO,EAAKvC,WACZS,QAASA,EACTJ,YAAa,EAAKA,YAClBQ,OAAQ,EAAK5B,MAAM4B,OACnBmD,MAAO,EAAK/E,MAAM+E,MAClBE,QAAS,EAAKjF,MAAMiF,e,EAMxChE,kBAAkB,kBAAIkF,uBAAa,CAC/BC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,oBACX,kBAACuH,EAAD,CACInD,KAAM,EAAKlD,MAAMkD,KACjBC,SAAU,EAAKnD,MAAMkC,GACrBoB,MAAO,EAAKrC,kBACZO,QAASA,EACTJ,YAAa,EAAKA,YAClBQ,OAAQ,EAAK5B,MAAM4B,OACnByD,aAAc,EAAKrF,MAAMqF,aACzBJ,QAAS,EAAKjF,MAAMiF,e,EAWxCO,e,sBAAe,sBAAAzD,EAAA,sEACLuE,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMD,MAAM,WAAWA,MAAM,EAAKjD,MAAMkC,IAAImB,SADzE,2C,mFAJXtD,KAAKwG,SAAS,CACVrG,KAAKE,MAASC,KAAKD,IAAOL,KAAKC,MAAMG,YAAY,Y,+BAOrD,OACI,yBAAKrB,UAAU,YACX,kBAAC0H,EAAA,EAAD,CAAOC,UAAW,GACd,kBAAC,IAAD,CAAMC,GAAI,CACNC,SAAS,UACT3G,MAAM,GAAD,GACED,KAAKC,MADP,CAEDiB,kBAAkBlB,KAAKkB,kBACvBL,YAAYb,KAAKa,YACjBG,WAAWhB,KAAKgB,WAChB8B,kBAAkB9C,KAAK8C,kBACvBD,oBAAoB7C,KAAK6C,wBAG7B,kBAAC,EAAD,CAAM9D,UAAU,iBACZ,kBAACgH,EAAD,CAAKxG,IAAKC,IAAYT,UAAU,eAAeU,IAAI,QACnD,kBAACmG,EAAD,CAAS7G,UAAU,qEACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAciB,KAAKC,MAAM4B,UAG/C,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,iCAAiCiB,KAAKkG,MAAM/F,KAA1D,qB,GAzIhBM,a,SCyCboG,I,uLArDF,IAAD,OACJ,OACI,yBAAK9H,UAAU,qCACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,yCAGR,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,WAIJ,2BAAO6D,KAAK,OAAO7D,UAAU,eAAeoD,GAAG,iBAEnD,yBAAKpD,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,aAIJ,2BAAO6D,KAAK,OAAO7D,UAAU,eAAeoD,GAAG,qBAI3D,yBAAKpD,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACI+B,KAAMgG,IACN/H,UAAU,0BACV4B,QAAS,SAAAC,GACL,IAAMiB,EAASQ,SAASC,eAAe,eAAeyE,MAChD7G,EAAWmC,SAASC,eAAe,iBAAiByE,MAC1D,EAAK9G,MAAM+G,qBAAqBnF,EAAO3B,GACvC,EAAKD,MAAMwB,cAGvB,yBAAK1C,UAAU,YACX,kBAAC,IAAD,CACI+B,KAAMmG,IACNtG,QAAS,SAAAC,GACL,EAAKX,MAAMwB,WAEf1C,UAAU,iC,GA/CH0B,c,UCSzByG,G,2MACFF,qB,uCAAsB,WAAOnF,EAAO3B,GAAd,SAAA8B,EAAA,sEACZuE,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMD,MAAM,WAAWiC,KAAK,CAChEtD,OAAOA,EACP3B,SAASA,EACTE,WAAWC,MAAS8G,OAAO,OAJb,2C,0DAOtBC,iBAAiB,kBAAIhB,uBAAa,CAC9BC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,yBACX,kBAAC,GAAD,CACI0C,QAASA,EACTuF,qBAAsB,EAAKA,4B,wEAMtC,IAAD,OACJ,OACI,yBAAKjI,UAAU,aACX,yBAAKA,UAAU,0EACViB,KAAKC,MAAMoH,QACR7C,OAAOC,KAAKzE,KAAKC,MAAMoH,SAAS3C,KAAI,SAAAG,GAAG,OACnC,kBAAC,GAAD,CACI1B,KAAM,EAAKlD,MAAMkD,KACjB/C,WAAY,EAAKH,MAAMoH,QAAQxC,GAAKzE,WACpCF,SAAU,EAAKD,MAAMoH,QAAQxC,GAAK3E,SAClCK,iBAAkB,EAAKN,MAAMoH,QAAQxC,GAAKtE,iBAC1CC,gBAAiB,EAAKP,MAAMoH,QAAQxC,GAAKrE,gBACzCwE,MAAO,EAAK/E,MAAMoH,QAAQxC,GAAKG,MAC/BK,OAAQ,EAAKpF,MAAMoH,QAAQxC,GAAKQ,OAChCC,aAAc,EAAKrF,MAAMoH,QAAQxC,GAAKS,aACtCzD,OAAQ,EAAK5B,MAAMoH,QAAQxC,GAAKhD,OAChCM,GAAI0C,EACJA,IAAKA,EACLK,QAAS,EAAKjF,MAAMiF,aAI5B,yBAAKnG,UAAU,sBACX,wBAAIA,UAAU,cAAd,sBACA,kBAACuI,GAAA,EAAD,CAAQvH,QAAQ,YAAYwH,MAAM,UAAU5G,QAASX,KAAKoH,kBAA1D,eACgB,kBAAC,IAAD,CAAiBtG,KAAM0G,IAAczI,UAAU,sBAIvE,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAiB+B,KAAM0G,IAAczI,UAAU,aAAa4B,QAASX,KAAKoH,0B,GAlDpE3G,aA+DfgH,iBANS,SAAAvB,GACpB,MAAM,CACF/C,KAAK+C,EAAM/C,KACXkE,QAAQnB,EAAMwB,KAAKL,WAGY,KAAxBI,CAA8BP,ICtD9BS,G,2MAjBXzB,MAAM,CACFlC,MAAM,GAAD,OAAI3D,MAAS8G,OAAO,cAApB,YAAqC9G,MAAS8G,OAAO,Q,mFAE1C,IAAD,OACfS,aAAY,WACR,EAAKpB,SAAS,CACVxC,MAAM,GAAD,OAAK3D,MAAS8G,OAAO,cAArB,YAAsC9G,MAAS8G,OAAO,WAEhE,O,+BAGH,OAEI,4BAAKnH,KAAKkG,MAAMlC,W,GAdHvD,aCInBoH,G,2MAEF3B,MAAM,CACF4B,OAAO,EACPC,cAAS5B,EACT6B,kBAAa7B,EACb8B,sBAAiB9B,EACjB+B,UAAS,G,EAEbC,iBAAkB,SAACF,GACf,IAAID,EAAe,EAAKI,qBAAqBH,GAC1C,EAAKhI,MAAMoI,cAAc,EAAKpI,MAAMqI,YACnC5F,QAAQC,IAAItC,IAAO,EAAKJ,MAAMoI,aAAa,KAAK/H,KAAKD,MAAS,MAG9DqC,QAAQC,KAAKtC,IAAO,EAAKJ,MAAMoI,aAAa,KAAK/H,KAAKD,MAAS,MAEnE,IAAMkI,EAAgB,EAAKC,0BAiB3B,OAhBGR,EAAaS,MAAM,EAAE,GAAGF,GACvBP,EAAeA,EAAaS,MAAM,EAAE,GAAGF,EAAcP,EAAaS,MAAM,GACxE,EAAKjC,SAAS,CACV0B,UAAS,KAIb,EAAK1B,SAAS,CACV0B,UAAS,IAGjB,EAAK1B,SAAS,CACV+B,cAAeA,EACfP,aAAcA,EACdD,SAAS,EAAKW,qBAEX,CAACV,EAAaO,I,EAEzBI,0BAA0B,WACtB,IAAMC,EAAS,EAAKT,iBAAiB,EAAKU,2BAC5BxG,SAASC,eAAe,YAChCwG,MAAMC,MAAZ,UAAqB,EAAKC,sBAAsBJ,EAAS,GAAGA,EAAS,IAArE,M,EAEJC,wBAAwB,WACpB,IAAMI,EAAO5I,MAAS8G,OAAO,MAAMsB,MAAM,EAAE,GAE3C,OADA/F,QAAQC,MACLsG,GAAM,EAAKhJ,MAAMoI,cAAgBY,EAAO,EAAKhJ,MAAMqI,a,EA4B1DI,iBAAiB,WACb,GAAG,EAAKzI,MAAMqI,aAAa,EAAKrI,MAAMoI,aAAa,CAE/C,IAAIa,OAAO/C,EAEP+C,EADJ,EAAKhD,MAAMgC,SACA7H,MAASC,KAAKD,IAAO,EAAKJ,MAAMoI,aAAa,KAAK,KAElDhI,MAASC,KAAKD,IAAO,EAAKJ,MAAMqI,YAAY,KAAKa,IAAI,EAAE,QAAQ,KAC1E,IAAMC,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,MAAM,GAAN,OAAUE,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,GAI/D,IAAIJ,OAAO/C,EAEP+C,EADJ,EAAKhD,MAAMgC,UACC7H,MAASC,KAAKD,IAAO,EAAKJ,MAAMoI,aAAa,KAAK,KAEnDhI,MAASC,KAAKD,IAAO,EAAKJ,MAAMqI,YAAY,KAAK,KAC5D,IAAMc,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,MAAM,GAAN,OAAUE,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,EAA/D,M,EAGRlB,qBAAqB,SAACH,GAClB,GAAG,EAAKhI,MAAMqI,aAAa,EAAKrI,MAAMoI,aAAa,CAC/C,IAAIa,OAAO/C,EAEP+C,EADJ,EAAKhD,MAAMgC,SACA7H,MAASC,KAAKD,IAAO,EAAKJ,MAAMsJ,KAAK,KAAK,MAEzClJ,MAASC,KAAKD,IAAO,EAAKJ,MAAMqI,YAAY,KAAK,KAC7D,IAAMc,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,OADAxG,QAAQC,IAAR,uBAA4ByG,EAAM,GAAI,IAAIA,EAAMA,EAAhD,YAAyDE,EAAQ,GAAI,IAAIA,EAAQA,IAC3E,GAAN,OAAUF,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,GAG/D,IAAIJ,OAAO/C,EAEP+C,EADJ,EAAKhD,MAAMgC,SACA7H,MAASC,KAAKD,IAAO,EAAKJ,MAAMoI,aAAa,KAAKc,IAAI,EAAE,QAAQ,KAEhE9I,MAASC,KAAKD,IAAO,EAAKJ,MAAMqI,YAAY,KAAKa,IAAI,EAAE,QAAQ,KAC1E,IAAMC,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,OADAxG,QAAQC,IAAR,wBAA6ByG,EAAM,GAAI,IAAIA,EAAMA,EAAjD,YAA0DE,EAAQ,GAAI,IAAIA,EAAQA,IAC5E,GAAN,OAAUF,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,EAA/D,M,EAGRE,uBAAuB,WACnB,EAAKhD,SAAS,CACVyB,kBAAkB,EAAK/B,MAAM+B,oB,EAGrCe,sBAAsB,SAAChB,EAAcO,GACjC,OAAG,EAAKtI,MAAMqI,YAAa,EAAKrI,MAAMoI,cAEZ,GADRgB,SAASrB,EAAaS,MAAM,EAAET,EAAayB,QAAQ,OACtCJ,SAASrB,EAAaS,MAAMT,EAAayB,QAAQ,KAAK,MACnD,GAAdlB,GAAkB,K,mFAhFtB,IAAD,OACfvI,KAAK2I,4BACL,IAAMe,EAAW9B,aAAY,WACzB,EAAKe,8BACN,KACH3I,KAAKwG,SAAS,CACVkD,SAAUA,M,6CAIdC,cAAc3J,KAAKkG,MAAMwD,Y,gDAGzB,OAAG1J,KAAKC,MAAMqI,aAAatI,KAAKC,MAAMoI,aAC3BhI,IAAOL,KAAKC,MAAMqI,YAAY,KAAKa,IAAI,EAAE,QAAQ7I,KAAKD,IAAOL,KAAKC,MAAMoI,aAAa,KAAK,KAI1FhI,IAAOL,KAAKC,MAAMqI,YAAY,KAAKhI,KAAKD,IAAOL,KAAKC,MAAMoI,aAAa,KAAK,O,+BAwEvF,OACI,yBAAKtJ,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,QAGR,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,uCAAaiB,KAAKC,MAAM2J,WAGhC,yBAAK7K,UAAU,OACX,yBAAKA,UAAU,mBACX,8CAAoBiB,KAAKkG,MAAMqC,cAA/B,QAAmDvI,KAAKC,MAAMoI,aAA9D,SAAkFrI,KAAKC,MAAMqI,YAA7F,UAGR,yBAAKvJ,UAAU,OACX,yBAAKA,UAAU,mBAAf,qBACuBiB,KAAKkG,MAAM8B,cAElC,yBAAKjJ,UAAU,mBAAf,iBACmBiB,KAAKkG,MAAM6B,WAGlC,yBAAKhJ,UAAU,OACViB,KAAKkG,MAAMgC,SACR,yBAAKnJ,UAAU,mBACX,0BAAMA,UAAU,mCAAhB,mBAKJ,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,sCAAhB,kBAMZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAWiB,KAAKkG,MAAMgC,SAAS,kEAAmE,qEAAuE2B,KAAK,cAAc1H,GAAG,WAAW2H,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,gB,GAxLrQvJ,aAuMVgH,iBAPO,SAAAvB,GAClB,MAAM,CACF0D,QAAQ1D,EAAMwB,KAAKkC,QACnBvB,aAAanC,EAAMwB,KAAKW,aACxBC,YAAYpC,EAAMwB,KAAKY,eAGQ,KAAxBb,CAA8BI,IC/I9BoC,G,iLA5DF,IAAD,OACJ,OACI,yBAAKlL,UAAU,qCACX,kBAAC,EAAD,CACI0C,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,8BAEX,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,kBACf,2BAAOA,UAAU,SACT,+BACI,4BACI,wBAAIA,UAAU,cAAd,WACA,wBAAIA,UAAU,yBACV,4BAAQmL,KAAK,GAAG/H,GAAG,IACf,4BAAQ4E,MAAM,IACT/G,KAAKC,MAAM2J,SAEhB,4BAAQ7C,MAAM,IAAd,eAGA,4BAAQA,MAAM,IAAd,gBAMZ,4BACI,wBAAIhI,UAAU,cAAd,4BACA,wBAAIA,UAAU,yBAAyBiB,KAAKC,MAAMoI,aAAlD,QAEJ,4BACI,wBAAItJ,UAAU,cAAd,4BACA,wBAAIA,UAAU,yBAAyBiB,KAAKC,MAAMqI,YAAlD,YAMpB,yBAAKvJ,UAAU,8BACX,yBAAKA,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,kBAAkB4B,QAAS,SAAAC,GACvD,EAAKX,MAAMkK,wBADf,oBAIJ,yBAAKpL,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,kBAAkB4B,QAAS,SAAAC,GACvD,EAAKX,MAAMmK,uBADf,2BAIJ,yBAAKrL,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,kBAAkB4B,QAAS,SAAAC,GACvD,EAAKX,MAAMoK,sBADf,gC,GApDgB5J,aCoBzB6J,G,iLAlBF,IAAD,OACJ,OACI,yBAAKvL,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAMgG,IAAe/H,UAAU,0BAA0B4B,QAAS,SAAAC,GAC/E,EAAKX,MAAMsK,cACX,EAAKtK,MAAMuK,yBAGnB,yBAAKzL,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAMmG,IAAelI,UAAU,wBAAwB4B,QAAS,SAAAC,GAC7E,EAAKX,MAAMuK,8B,GAZK/J,aCyBzBgK,GA1Ba,WACxB,OACI,yBAAK1L,UAAU,mCACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,SAIJ,2BAAO2L,WAAS,EAAC9H,KAAK,SAAS+H,IAAI,IAAIC,IAAI,KAAKzI,GAAG,aAAapD,UAAU,mBAGlF,yBAAKA,UAAU,UACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,YAIJ,2BAAO6D,KAAK,SAAS+H,IAAI,IAAIC,IAAI,KAAKzI,GAAG,eAAepD,UAAU,qBCAvE8L,G,iLAhBP,OACI,yBAAK9L,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMuK,mBACxB/I,QAASzB,KAAKC,MAAMwB,QACpBF,MAAM,oCAEV,kBAAC,GAAD,MACA,kBAAC,GAAD,CACIgJ,YAAavK,KAAKC,MAAM6K,mBACxBN,mBAAoBxK,KAAKC,MAAMuK,0B,GAZnB/J,aCkBjBoK,G,iLAhBP,OACI,yBAAK9L,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMuK,mBACxB/I,QAASzB,KAAKC,MAAMwB,QACpBF,MAAM,oCAEV,kBAAC,GAAD,MACA,kBAAC,GAAD,CACIgJ,YAAavK,KAAKC,MAAM8K,oBACxBP,mBAAoBxK,KAAKC,MAAMuK,0B,GAZnB/J,aC2CjBuK,G,iLA1CF,IAAD,OACJ,OACI,yBAAKjM,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMuK,mBACxB/I,QAASzB,KAAKC,MAAMwB,QACpBF,MAAM,gCAEV,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAqC,gBAA1BiB,KAAKC,MAAMgL,aAA6B,kBAAkB,0BAA2BtK,QAAS,SAAAC,GAC3H,EAAKX,MAAMiL,oBAAoB,iBADnC,gBAIJ,yBAAKnM,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAqC,eAA1BiB,KAAKC,MAAMgL,aAA4B,kBAAkB,0BAA2BtK,QAAS,SAAAC,GAC1H,EAAKX,MAAMiL,oBAAoB,gBADnC,eAIJ,yBAAKnM,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAqC,cAA1BiB,KAAKC,MAAMgL,aAA2B,kBAAkB,0BAA2BtK,QAAS,SAAAC,GACzH,EAAKX,MAAMiL,oBAAoB,eADnC,eAKR,yBAAKnM,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAMgG,IAAe/H,UAAU,0BAA0B4B,QAAS,SAAAC,GAC/E,EAAKX,MAAMkL,kBACX,EAAKlL,MAAMuK,yBAGnB,yBAAKzL,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAMmG,IAAelI,UAAU,wBAAwB4B,QAAS,SAAAC,GAC7E,EAAKX,MAAMuK,+B,GAnCL/J,a,oHCFRoF,IAAOC,IAAV,M,koBCCvB,IAAMsF,GAAqBC,YAAH,MAUlBC,GAAYC,YAAH,KACKH,IAIPI,GAAO3F,IAAO4F,IAAR,KACbH,IAOOI,GAAK7F,IAAO8F,GAAV,MCCAC,GAxBO,WACd,OACI,yBAAK7M,UAAU,gDAAgD8K,KAAK,SAChE,yBAAK9K,UAAU,wBACX,4CAEJ,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAM4H,GAAG,UACL,4BAAQ/D,KAAK,SAAS7D,UAAU,yBAAhC,WAGR,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAM4H,GAAG,SACL,4BAAQ/D,KAAK,SAAS7D,UAAU,yBAAhC,WAGR,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAM4H,GAAG,gBACL,4BAAQ/D,KAAK,SAAS7D,UAAU,yBAAhC,e,UCXlByM,G,2MACFK,Q,sBAAQ,sBAAA7J,EAAA,sEACE8J,iBAAOD,UADT,gCAEG,kBAAC,IAAD,CAAUlF,GAAG,OAFhB,2C,wEAIC,IAAD,OACJ,OACI,kBAAC,GAAD,KACI,yBAAK5H,UAAU,6DACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAiB+B,KAAMiL,IAAQhN,UAAU,aAAa4B,QAAS,SAAAC,GAC3D,EAAKX,MAAMuK,yBAGnB,yBAAKzL,UAAU,kBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASzC,UAAU,aAAa4B,QAAS,SAAAC,GAAI,EAAKX,MAAM+L,mBAGvF,kBAACN,GAAD,MACC1L,KAAKC,MAAMoH,QACR,kBAAC,GAAD,MAEA,KAEJ,kBAACqE,GAAD,MACA,yBAAK3M,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAM4H,GAAG,eACL,4BAAQ/D,KAAK,SAAS7D,UAAU,iBAAhC,cAGR,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAM4H,GAAG,2BACL,4BAAQ/D,KAAK,SAAS7D,UAAU,iBAAhC,+BAIZ,6BACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,kBAAC,KAAD,CAAQgB,QAAQ,SAASY,QAAS,SAAAC,GAAI,EAAKiL,YAA3C,yB,GAzCPpL,a,IAwDNgH,cALS,SAAAvB,GACpB,MAAM,CACFmB,QAAQnB,EAAMmB,WAGiB,KAAxBI,CAA8B+D,I,4JC7CvCS,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BjL,MAAO,CACL8K,SAAU,OAGHI,GAAO,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAKC,EAAoB,EAApBA,SAASzH,EAAW,EAAXA,QAC1B0H,EAAUX,KAD2B,EAEZY,oBAAS,GAFG,oBAEtCC,EAFsC,KAE3BC,EAF2B,OAGRF,mBAAS,WAHD,8BAIvC,OACI,yBAAK9N,UAAU,kDACX,yBAAKA,UAAU,wBACX,kBAACiO,GAAA,EAAD,CAAQC,OAAO,QAAQC,KAAMJ,EAAYrL,QAAS,SAAAb,GAAImM,GAAc,KAChE,yBAAKhO,UAAU,8DACX,6BACI,kBAACoO,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,IAAI5H,UAAU,0BACnB,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,WAClB,kBAACyI,GAAA,EAAD,KAAc,kBAACC,GAAA,EAAD,OACd,kBAACC,GAAA,EAAD,CAAcC,QAAS,eAInC,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,QAAQ5H,UAAU,0BACvB,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,SAClB,kBAACyI,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMC,OACrC,kBAACyM,GAAA,EAAD,CAAcC,QAAS,aAInC,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,OAAO5H,UAAU,0BACtB,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,SAClB,kBAACyI,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMG,OACrC,kBAACuM,GAAA,EAAD,CAAcC,QAAS,aAInC,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,cAAc5H,UAAU,0BAC7B,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,WAClB,kBAACyI,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMK,OACrC,kBAACqM,GAAA,EAAD,CAAcC,QAAS,eAInC,kBAACC,GAAA,EAAD,OAEJ,6BACI,kBAACA,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,cAAc5H,UAAU,0BAC7B,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,YAClB,kBAACyI,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMK,OACrC,kBAACqM,GAAA,EAAD,CAAcC,QAAS,gBAInC,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,YAAY5H,UAAU,0BAC3B,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,uBAClB,kBAACyI,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMK,OACrC,kBAACqM,GAAA,EAAD,CAAcC,QAAS,2BAInC,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAAC,IAAD,CAAMxG,GAAG,iBAAiB5H,UAAU,0BAChC,kBAACqO,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,iBAClB,kBAACyI,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMiL,OACrC,kBAACyB,GAAA,EAAD,CAAcC,QAAS,qBAInC,kBAACC,GAAA,EAAD,MACA,kBAACP,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAUC,QAAM,EAACxI,IAAK,gBAAiB9F,UAAU,cAAc4B,QAAO,uCAAE,WAAMC,GAAN,SAAAoB,EAAA,sEAC1D8J,iBAAOD,UADmD,2CAAF,uDAGlE,kBAACyB,GAAA,EAAD,KAAc,kBAAC,IAAD,CAAiBxM,KAAMU,IAASzC,UAAU,iBACxD,kBAACyO,GAAA,EAAD,CAAcC,QAAS,uBAM3C,yBAAK1O,UAAU,OACX,yBAAKA,UAAU,OACf,kBAAC4O,GAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,GAAA,EAAD,KACQ,YAAPnB,EACG,kBAACoB,GAAA,EAAD,CAAYC,KAAK,MAAMhP,UAAW6N,EAAQN,WAAY3L,QAAS,SAAAC,GAC3DsE,EAAQ8I,UACTzG,MAAM,UAAU0G,aAAW,QAC1B,kBAACC,GAAA,EAAD,OAGJ,kBAACJ,GAAA,EAAD,CAAYC,KAAK,MAAMhP,UAAW6N,EAAQN,WAAY3L,QAAS,SAAAC,KAE5D2G,MAAM,UAAU0G,aAAW,QAC1B,kBAACE,GAAA,EAAD,OAGR,kBAACC,GAAA,EAAD,CAAYrO,QAAQ,KAAKhB,UAAW6N,EAAQrL,OACvCmL,GAEL,kBAACoB,GAAA,EAAD,CAAYC,KAAK,MAAMhP,UAAW6N,EAAQN,WAAY3L,QAAS,SAAAC,GAC3DmM,GAAc,IACfxF,MAAM,UAAU0G,aAAW,QAC1B,kBAACI,GAAA,EAAD,YAOf1B,ICjIX2B,G,2MACFpI,MAAM,CACF+E,kBAAa9E,EACb2G,YAAW,EACXyB,YAAY,W,EAEhBpE,oBAAoB,kBAAI/D,uBAAa,CACjCC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACI0C,QAASA,EACT+I,mBAAoB,EAAKA,mBACzBS,aAAc,EAAK/E,MAAM+E,aACzBC,oBAAqB,SAAAD,GACjB,EAAKzE,SAAS,CACVyE,aAAaA,KAGrBE,gBAAiB,EAAKA,uB,EAM1Cf,mBAAmB,kBAAIhE,uBAAa,CAChCC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAACyP,GAAD,CACI/M,QAASA,EACT+I,mBAAoB,EAAKA,mBACzBO,oBAAqB,EAAKA,2B,EAM9CV,kBAAkB,kBAAIjE,uBAAa,CAC/BC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACI0C,QAASA,EACT+I,mBAAoB,EAAKA,mBACzBM,mBAAoB,EAAKA,0B,EAM7CN,mBAAmB,kBAAIpE,uBAAa,CAChCC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACI6K,QAAS,EAAK3J,MAAM2J,QACpBtB,YAAa,EAAKrI,MAAMqI,YACxBD,aAAc,EAAKpI,MAAMoI,aACzB5G,QAASA,EACT4I,kBAAmB,EAAKA,kBACxBD,mBAAoB,EAAKA,mBACzBD,oBAAqB,EAAKA,2B,EAM9CgB,gB,sBAAgB,sBAAAnJ,EAAA,sEACNuE,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMsL,OAAO,CACjD7E,QAAQ,EAAK1D,MAAM+E,eAFX,2C,EAKhBF,oB,sBAAoB,4BAAA/I,EAAA,6DACV0M,EAAQrM,SAASC,eAAe,cAAcyE,MADpC,SAGVR,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMsL,OAAO,CACjDpG,aAAcgB,SAASqF,KAJX,2C,EAOpB5D,mB,sBAAmB,4BAAA9I,EAAA,6DACT0M,EAAQrM,SAASC,eAAe,cAAcyE,MADrC,SAGTR,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMsL,OAAO,CACjDnG,YAAae,SAASqF,KAJX,2C,wEAQf,OACI,kBAAC,GAAD,CAAQxJ,QAASlF,KAAKC,MAAMiF,QAASwH,KAAK,WACtC,yBAAK3N,UAAU,mEACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,QAGR,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAiBmG,QAASlF,KAAKC,MAAMiF,iB,GAjGvCzE,aAiHPgH,iBATS,SAAAvB,GACpB,MAAM,CACF/C,KAAK+C,EAAM/C,KACXkE,QAAQnB,EAAMwB,KAAKL,QACnBuC,QAAQ1D,EAAMwB,KAAKkC,QACnBvB,aAAanC,EAAMwB,KAAK6B,KACxBjB,YAAYpC,EAAMwB,KAAKY,eAGQ,KAAxBb,CAA8B6G,ICnIvCK,ICD6BlO,YCGRA,Y,iLFAnB,OACI,yBAAK1B,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAWiB,KAAKC,MAAM2O,QAAQ,kBAAkB,uBAAwBjO,QAASX,KAAKC,MAAM4O,aAC7G7O,KAAKC,MAAMoH,QAAQrH,KAAKC,MAAM6O,OAAOjN,a,GAL7BpB,c,IAgBdgH,cALS,SAAAvB,GACpB,MAAM,CACFmB,QAAQnB,EAAMmB,WAGiB,KAAxBI,CAA8BkH,I,sCGLvC1C,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnC4C,YAAa,CACTC,OAAQ7C,EAAMK,QAAQ,GACtByC,SAAU,IACVlG,MAAM,mBAEVmG,YAAa,CACTC,UAAWhD,EAAMK,QAAQ,IAE7BjJ,MAAM,CACF6L,WAAW,cAkCJC,GA/BiB,SAAC,GAA+B,IAA9BhI,EAA6B,EAA7BA,QAAQiI,EAAqB,EAArBA,kBAChC1C,EAAUX,KAChB,OACI,kBAACnN,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,yBAAKJ,UAAU,aACX,yBAAKA,UAAU,mCACVsI,EAAQkI,OACT,kBAACC,GAAA,EAAD,CAAWC,KAAG,GACTpI,EAAQ3C,KAAI,SAACgL,EAAO9K,GAAR,OACT,kBAAC+K,GAAA,EAAD,CACAC,QACI,kBAACC,GAAA,EAAD,CAAUtI,MAAM,UAAUqH,QAASc,EAAOI,SAAUC,SAAU,SAAAnP,GAC1D0O,EAAkB1K,IACtBmC,MAAO2I,EAAO7N,SAElBmO,MAAON,EAAO7N,aAKtB,yBAAK9C,UAAU,UACX,kBAACkR,GAAA,EAAD,CAAOC,SAAS,UAAUnR,UAAW6N,EAAQrJ,OAA7C,IAAqD,+DAAoC,kBAAC,IAAD,CAAMoD,GAAG,eAAT,qBAApC,KAArD,W,6BCzCfwJ,GAAkB,SAAC,GAAoC,IAAnChM,EAAkC,EAAlCA,YAAYiM,EAAsB,EAAtBA,mBACzC,OACI,kBAACtR,EAAA,EAAD,KACI,yBAAKC,UAAU,6BACX,kBAACsR,GAAA,EAAD,CAAYpC,aAAW,WAAW/D,KAAK,WAAWnD,MAAO5C,EAAa4L,SAAU,SAAAnP,GAAIwP,EAAmBxP,EAAE0P,OAAOvJ,QAAS0I,KAAG,GACxH,kBAACE,GAAA,EAAD,CACI5I,MAAM,MACN6I,QAAS,kBAACW,GAAA,EAAD,CACLxJ,MAAM,SACNmD,KAAK,SACL3C,MAAM,YAEVyI,MAAM,SACNQ,eAAe,QAEnB,kBAACb,GAAA,EAAD,CACI5I,MAAM,MACN6I,QAAS,kBAACW,GAAA,EAAD,CACLxJ,MAAM,SACNmD,KAAK,SACL3C,MAAM,YAEVyI,MAAM,SACNQ,eAAe,YCExBC,G,iLA3BF,IAAD,OACJ,OACI,yBAAK1R,UAAU,YACX,yBAAKA,UAAU,4BACX,kBAACuI,GAAA,EAAD,CACI3G,QAASX,KAAKC,MAAMyQ,WACpB3R,UAAU,QAFd,SAMA,kBAACuI,GAAA,EAAD,CACIvH,QAAQ,YACRwH,MAAM,UACN5G,QACI,SAAAC,GACI,EAAKX,MAAM0Q,gBAAgB,EAAK1Q,MAAM8D,UAI9C,kBAAC,IAAD,CAAiBjD,KAAM8P,IAASC,KAAK,KAAK9R,UAAU,SATxD,WAUaiB,KAAKC,MAAM8D,c,GArBHtD,a,yTCFvBoF,IAAOiL,GAAV,MAIGjL,IAAOkL,GAAV,MAJR,I,kDCYD9E,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnC4C,YAAa,CACXC,OAAQ7C,EAAMK,QAAQ,GACtByC,SAAU,IACVlG,MAAM,mBAERmG,YAAa,CACXC,UAAWhD,EAAMK,QAAQ,IAE3BjJ,MAAM,CACF6L,WAAW,cAuCN4B,GAAiB,SAAC/Q,GAC3B,IAAM2M,EAAUX,KAChB,OACI,kBAACnN,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,kBAACQ,EAAA,EAAD,CAAWsR,OAAK,GACZ,kBAACC,GAAA,EAAD,KACI,kBAACA,GAAA,EAAKpS,IAAN,CAAUM,GAAI,CAACF,KAAK,EAAEC,OAAO,GAAIJ,UAAU,6CACvC,kBAACoS,GAAA,EAAD,CAAWhP,GAAG,iBAAiBS,KAAK,SAASmE,MAAO9G,EAAMmR,eAAgBpB,MAAM,iBAAiBjQ,QAAQ,WAAWgQ,SAAU,SAAAnP,GAC1HX,EAAMoR,oBAAoBzQ,EAAE0P,OAAOvJ,OAC/BnG,EAAE0P,OAAOvJ,OACT9G,EAAMqR,8BAIlB,kBAACJ,GAAA,EAAKpS,IAAN,CAAUC,UAAU,yDAChB,yBAAKA,UAAU,YACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,aAAb,mBAGR,yBAAKA,UAAU,aACX,yBAAKA,UAAU,6CACVkB,EAAMmE,SACHnE,EAAMmE,SAASM,KAAI,SAACC,EAAQC,GAAT,OACnBD,EAAQ4M,MAAMtR,EAAMkE,aAChB,kBAAC,WAAD,CAAUU,IAAK,QAAQD,GACnB,yBAAK7F,UAAU,oBACX,kBAACyS,GAAA,EAAD,CAAazS,UAAW6N,EAAQmC,aAC5B,kBAAC0C,GAAA,EAAD,CAAatP,GAAG,kCACXwC,EAAQ9C,QAEb,kBAAC6P,GAAA,EAAD,CACIC,QAAQ,kCACRxP,GAAG,4BACHyP,UAAW3R,EAAMmR,eACjBrB,SAAU,SAAAnP,GACHA,EAAE0P,OAAOvJ,MACR9G,EAAM4R,eAAe,CAAClN,EAAQ9C,QAAQjB,EAAE0P,OAAOvJ,OAG/C9G,EAAM6R,gBAAgB,CAACnN,EAAQ9C,WAI3C,kBAACkQ,GAAA,EAAD,CAAUhL,MAAM,IAAhB,KACSvC,OAAOC,KAAKE,EAAQ4M,MAAMtR,EAAMkE,cAAcO,KAAI,SAAAG,GAAG,OAClD,kBAACkN,GAAA,EAAD,CAAUhL,MAAOpC,EAAQ4M,MAAMtR,EAAMkE,aAAaU,IAAOF,EAAQ4M,MAAMtR,EAAMkE,aAAaU,GAA1F,IAAiGA,UAOzH,QAGJ,yBAAK9F,UAAU,UACX,kBAACkR,GAAA,EAAD,CAAOC,SAAS,UAAUnR,UAAW6N,EAAQrJ,OAA7C,IAAqD,8DAAmC,kBAAC,IAAD,CAAMoD,GAAG,eAAT,qBAAnC,KAArD,c,8BC9GtCsF,GAAYC,aAAW,CAC3B8F,KAAM,CACJ/C,SAAU,KAEZgD,OAAQ,CACNC,QAAS,eACTlD,OAAQ,QACRmD,UAAW,cAEb5Q,MAAO,CACL6Q,SAAU,IAEZC,IAAK,CACHC,aAAc,MAILC,GAAc,SAAC,GAA4D,IAA3DpO,EAA0D,EAA1DA,YAAYkD,EAA8C,EAA9CA,QAAQjD,EAAsC,EAAtCA,SAASgN,EAA6B,EAA7BA,eAAenN,EAAc,EAAdA,WACjE2I,EAAUX,KACH,0BAAMlN,UAAW6N,EAAQqF,QAAzB,UACb,OACE,kBAACO,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,GAAI,IACX,kBAACuT,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAe3T,UAAU,QAC7C,kBAACyT,GAAA,EAAD,CAAM7Q,MAAI,GACN,kBAAC8E,EAAA,EAAD,CAAOC,UAAW,GACd,kBAAC,KAAD,CAAM3H,UAAW6N,EAAQoF,KAAMjS,QAAQ,YACnC,kBAAC4S,GAAA,EAAD,KACI,kBAACvE,GAAA,EAAD,CAAYrP,UAAW6N,EAAQrL,MAAOgG,MAAM,gBAAgBqL,cAAY,GAAxE,yBAGCvL,EAAQ3C,KAAI,SAAAgL,GAAM,OACfA,EAAOI,SACH,kBAAC1B,GAAA,EAAD,CAAYrP,UAAW6N,EAAQyF,IAAK9K,MAAM,iBACtC,gCAASmI,EAAO7N,SAGpB,YAMvBsC,EACG,oCACI,kBAACqO,GAAA,EAAD,CAAM7Q,MAAI,GACN,kBAAC8E,EAAA,EAAD,CAAOC,UAAW,GACd,kBAAC,KAAD,CAAM3H,UAAW6N,EAAQoF,KAAMjS,QAAQ,YACnC,kBAAC4S,GAAA,EAAD,KACI,kBAACvE,GAAA,EAAD,CAAYrP,UAAW6N,EAAQrL,MAAOgG,MAAM,gBAAgBqL,cAAY,GAAxE,iBAGI,kBAACxE,GAAA,EAAD,CAAYrP,UAAW6N,EAAQyF,IAAK9K,MAAM,iBACtC,gCAASpD,QAMjC,kBAACqO,GAAA,EAAD,CAAM7Q,MAAI,GACN,kBAAC8E,EAAA,EAAD,CAAOC,UAAW,GACd,kBAAC,KAAD,CAAM3H,UAAW6N,EAAQoF,KAAMjS,QAAQ,YACnC,kBAAC4S,GAAA,EAAD,KACI,kBAACvE,GAAA,EAAD,CAAYrP,UAAW6N,EAAQyF,IAAK9K,MAAM,iBACtC,gCAAS6J,EAAT,eAEJ,kBAAChD,GAAA,EAAD,CAAYrP,UAAW6N,EAAQrL,MAAOgG,MAAM,gBAAgBqL,cAAY,GAAxE,mBAGCxO,EACGI,OAAOC,KAAKL,GAAUM,KAAI,SAAAC,GACtB,IAAM4M,EAAOnN,EAASO,GACtB,OACI,kBAACyJ,GAAA,EAAD,CAAYrP,UAAW6N,EAAQyF,IAAK9K,MAAM,iBACtC,oCAAU5C,EAAV,IAAoBkO,WAAWtB,EAAM9I,MAAM,EAAE8I,EAAM9H,QAAQ,MAAM2H,GAAgB0B,QAAQ,GAAzF,IAA8FvB,EAAM9I,MAAM8I,EAAM9H,QAAQ,KAAK8H,EAAM9H,QAAQ,WAKvJ,kBAAC2E,GAAA,EAAD,CAAYrP,UAAW6N,EAAQyF,IAAK9K,MAAM,iBACtC,2CAS5B,kBAACiL,GAAA,EAAD,CAAM7Q,MAAI,GACN,kBAAC8E,EAAA,EAAD,CAAOC,UAAW,GACd,kBAAC,KAAD,CAAM3H,UAAW6N,EAAQoF,KAAMjS,QAAQ,YACnC,kBAAC4S,GAAA,EAAD,KACI,kBAACvE,GAAA,EAAD,CAAYrP,UAAW6N,EAAQrL,MAAOgG,MAAM,gBAAgBqL,cAAY,GAAxE,gBAGA,kBAACxE,GAAA,EAAD,CAAYrP,UAAW6N,EAAQyF,IAAK9K,MAAM,iBACtC,gCAAStD,W,wCChGvCgI,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJrD,MAAO,OACPgK,OAAO,OACPb,QAAQ,OACRc,cAAc,SACdC,eAAe,UAEjB5F,OAAQ,CACN8B,UAAWhD,EAAMK,QAAQ,GACzBD,YAAaJ,EAAMK,QAAQ,IAE7B0G,iBAAkB,CAChBZ,aAAcnG,EAAMK,QAAQ,IAE9B2G,eAAgB,CACdC,QAASjH,EAAMK,QAAQ,QAKb6G,GAAc,SAAC,GAA2G,IAA1GC,EAAyG,EAAzGA,MAAMlC,EAAmG,EAAnGA,eAAejN,EAAoF,EAApFA,YAAYwM,EAAwE,EAAxEA,gBAAgB4C,EAAwD,EAAxDA,cAAclQ,EAA0C,EAA1CA,aAAaY,EAA6B,EAA7BA,WAAWuP,EAAkB,EAAlBA,eAC7G5G,EAAUX,KADqH,EAEjGwH,IAAM5G,SAAS,GAFkF,oBAE9H6G,EAF8H,KAElHC,EAFkH,KAG/HC,EAAa,WACjBD,GAAc,SAAAE,GAAc,OAAIA,EAAiB,MAG7CnD,EAAa,WACjBiD,GAAc,SAAAE,GAAc,OAAIA,EAAiB,MAM7CC,EAAY,SAACJ,EAAWvP,EAAYiN,GACxC,OAAgB,IAAbsC,GACMF,EAAejE,OAEH,IAAbmE,EACY,SAAfrQ,GACMY,GAGAE,EAGU,IAAbuP,GACGtC,OADN,GAIP,OACE,yBAAKrS,UAAW6N,EAAQR,MACtB,kBAAC2H,GAAA,EAAD,CAASL,WAAYA,EAAYhN,UAAW,EAAGsN,YAAY,YACxDV,EAAM5O,KAAI,SAACuP,EAAMnQ,GAAP,OACPmQ,EACI,kBAACC,GAAA,EAAD,CAAMrP,IAAKoP,EAAK1S,OACZ,kBAAC4S,GAAA,EAAD,KAAYF,EAAK1S,OACrB,kBAAC6S,GAAA,EAAD,KACI,kBAAChG,GAAA,EAAD,KAAa6F,EAAKI,SAClB,yBAAKtV,UAAW6N,EAAQsG,kBACpB,6BACA,kBAAC5L,GAAA,EAAD,CACIsK,SAAyB,IAAf8B,EACV/S,QAAS+P,EACT3R,UAAW6N,EAAQS,QAHvB,SAOA,kBAAC/F,GAAA,EAAD,CACIvH,QAAQ,YACRwH,MAAM,UACN5G,QAASiT,EACT7U,UAAW6N,EAAQS,OACnBuE,SAAUkC,EAAYJ,EAAWvP,EAAYiN,IAE5CsC,IAAeJ,EAAM/D,OAAS,EAAI,YAAc,iBAO7D,SAGTmE,IAAeJ,EAAM/D,QACpB,kBAAC9I,EAAA,EAAD,CAAO6N,QAAM,EAAC5N,UAAW,EAAG3H,UAAW6N,EAAQuG,gBAC1CI,EACD,kBAAC,GAAD,CACIxP,OAAQV,EACRqN,WAAYA,EACZC,gBAAiBA,O,ikBCrF3B4D,G,2MACFrO,MAAM,CACF/B,iBAAYgC,EACZiL,oBAAejL,EACfkB,QAAS,GACTmN,SAAS,U,EAEblF,kBAAkB,SAACxL,GACf,IAAI2Q,EAAkB,EAAKvO,MAAMmB,QACjCoN,EAAkB3Q,GAAOgM,UAAU2E,EAAkB3Q,GAAOgM,SAC5D,EAAKtJ,SAAS,CACVa,QAAQoN,K,EAoBhB9D,gBAAgB,WACZ,EAAK+D,QACL,EAAKzU,MAAMiF,QAAQC,KAAK,M,EAE5BuP,MAAM,WACF,EAAKxO,MAAMmB,QAAQ3C,KAAI,SAAAgL,GAInB,OAHGA,EAAOI,UACN,EAAK6E,eAAejF,EAAOvN,GAAG,EAAK+D,MAAMkL,eAAe,EAAKlL,MAAM/B,YAAY,EAAK+B,MAAM9B,UAEvF,S,EAGfuQ,e,uCAAgB,WAAOvR,EAASc,EAAKC,EAAYyQ,GAAjC,eAAA5S,EAAA,6DACR6S,EAAqB,GACtBD,GACCpQ,OAAOC,KAAKmQ,GAAelQ,KAAI,SAAAoQ,GAC3B,IAAMvD,EAAOqD,EAAcE,GAK3B,OAJAD,EAAmB,MACZA,EADW,eAEbC,EAAcjC,WAAWtB,EAAM9I,MAAM,EAAE8I,EAAM9H,QAAQ,MAAM,EAAKvD,MAAMkL,gBAAgB0B,QAAQ,KAE5F,QATH,SAYNvM,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMD,MAAM,WAAWA,MAAME,GAAUF,MAAM,UAAUiC,KAAK,CAChGjB,KAAKA,EACLC,YAAYA,EACZH,MAAM3D,MAAS8G,OAAO,OACtB/C,SAASyQ,IAhBD,2C,8DAmBhBzE,mBAAmB,SAACjM,GAChB,EAAKqC,SAAS,CACVrC,YAAYA,K,EAIpBkN,oBAAoB,SAAC0D,GACjB,EAAKvO,SAAS,CACV4K,eAAe2D,K,EAGvBlD,eAAe,SAACiD,EAAaE,GACzB,EAAKxO,SAAS,CACVpC,SAAS,MAAI,EAAK8B,MAAM9B,SAAhB,eAA0B0Q,EAAcE,O,EAGxD1D,wBAAwB,WACpB,EAAK9K,SAAS,CAACpC,cAAS+B,K,EAE5B2L,gBAAgB,SAACgD,GACb,IAAIG,EAAc,EAAK/O,MAAM9B,gBACtB6Q,EAAYH,GAChBtQ,OAAOC,KAAKwQ,GAAa1F,OACxB,EAAK/I,SAAS,CAACpC,SAAS6Q,IAGxB,EAAKzO,SAAS,CAACpC,SAAS,Q,EAGhC8Q,qBAAqB,SAACC,GAClB,EAAK3O,SAAS,CAACgO,SAASW,K,mFA9ER,IAAD,OACX9N,EAAQ,GACTrH,KAAKC,MAAMoH,SACV7C,OAAOC,KAAKzE,KAAKC,MAAMoH,SAAS3C,KAAI,SAAAG,GAAG,OACnCwC,EAAQlC,KACJ,CACA2K,UAAS,EACTjO,OAAO,EAAK5B,MAAMoH,QAAQxC,GAAKhD,OAC/BM,GAAG0C,OAKf7E,KAAKwG,SAAS,CACVa,QAAQA,M,+BAmEZ,IAAImM,EAAe,GASnB,OARGxT,KAAKkG,MAAMmB,SACVrH,KAAKkG,MAAMmB,QAAQ3C,KAAI,SAAAgL,GAAM,OACzBA,EAAOI,SACH0D,EAAerO,KAAKuK,EAAO7N,QAE3B,QAIR,kBAAC,GAAD,CAAQqD,QAASlF,KAAKC,MAAMiF,QAASwH,KAAK,SACtC,yBAAK3N,UAAU,0BACX,yBAAKA,UAAU,OACf,kBAAC,GAAD,CACIqW,MAAM,UACNC,MAAM,gBACNC,MAAM,8BACN9B,eAAgBA,EAChBpC,eAAgBpR,KAAKkG,MAAMkL,eAC3BjN,YAAanE,KAAKkG,MAAM/B,YACxBwM,gBAAiB3Q,KAAK2Q,gBACtB4C,cAAe,kBAAC,GAAD,CAAelM,QAASrH,KAAKkG,MAAMmB,QAASlD,YAAanE,KAAKkG,MAAM/B,YAAaiN,eAAgBpR,KAAKkG,MAAMkL,eAAgBhN,SAAUpE,KAAKkG,MAAM9B,WAChKf,aAAa,QACbiQ,MAAO,CACC,CACA/R,MAAM,UACN8S,QACI,kBAAC,GAAD,CACI/E,kBAAmBtP,KAAKsP,kBACxBjI,QAASrH,KAAKkG,MAAMmB,QACpB6N,qBAAsBlV,KAAKkV,qBAC3BV,SAAUxU,KAAKkG,MAAMsO,YAG7B,CAACjT,MAAM,gBACP8S,QACI,kBAAC,GAAD,CACIlQ,YAAanE,KAAKkG,MAAM/B,YACxBiM,mBAAoBpQ,KAAKoQ,mBACzB8E,qBAAsBlV,KAAKkV,qBAC3BV,SAAUxU,KAAKkG,MAAMsO,YAG7B,CAACjT,MAAM,8BACP8S,QACI,kBAAC,GAAD,CACQ/C,wBAAyBtR,KAAKsR,wBAC9BnN,YAAanE,KAAKkG,MAAM/B,YACxBkN,oBAAqBrR,KAAKqR,oBAC1BD,eAAgBpR,KAAKkG,MAAMkL,eAC3BS,eAAgB7R,KAAK6R,eACrB0D,QAAQ,cACRnR,SAAUpE,KAAKC,MAAMmE,SACrBoR,eAAgBxV,KAAKkG,MAAM9B,SAC3B0N,gBAAiB9R,KAAK8R,gBACtBoD,qBAAsBlV,KAAKkV,qBAC3BV,SAAUxU,KAAKkG,MAAMsO,sB,GAvJ7C/T,aAyKLgH,iBAPS,SAAAvB,GACpB,MAAM,CACF/C,KAAK+C,EAAM/C,KACXkE,QAAQnB,EAAMwB,KAAKL,QACnBjD,SAAS8B,EAAMwB,KAAKkN,iBAGW,KAAxBnN,CAA8B8M,I,ikBC1KvCkB,G,2MACFvP,MAAM,CACF/B,iBAAYgC,EACZiL,oBAAejL,EACfkB,QAAQ,GACRmN,SAAS,U,EAEblF,kBAAkB,SAACxL,GACf,IAAI2Q,EAAkB,EAAKvO,MAAMmB,QACjCoN,EAAkB3Q,GAAOgM,UAAU2E,EAAkB3Q,GAAOgM,SAC5D,EAAKtJ,SAAS,CACVa,QAAQoN,K,EAoBhB9D,gBAAgB,WACZ,EAAK+E,UACL,EAAKzV,MAAMiF,QAAQC,KAAK,M,EAE5BuQ,QAAQ,WACJ,EAAKxP,MAAMmB,QAAQ3C,KAAI,SAAAgL,GAInB,OAHGA,EAAOI,UACN,EAAK6F,qBAAqBjG,EAAOvN,GAAG,EAAK+D,MAAMkL,eAAe,EAAKlL,MAAMkL,eAAe,EAAKlL,MAAM9B,SAAS,EAAK8B,MAAM/B,aAEpH,S,EAGfwR,qB,uCAAsB,WAAOvS,EAASc,EAAKkN,EAAewE,EAAazR,GAAjD,eAAAnC,EAAA,6DACd6T,EAAoB,GACrBD,GACCpR,OAAOC,KAAKmR,GAAclR,KAAI,SAAAoR,GAC1B,IAAMvE,EAAOqE,EAAaE,GAK1B,OAJAD,EAAkB,MACXA,EADU,eAEZC,EAAajD,WAAWtB,EAAM9I,MAAM,EAAE8I,EAAM9H,QAAQ,MAAM,EAAKvD,MAAMkL,gBAAgB0B,QAAQ,KAE3F,QATG,SAYZvM,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMD,MAAM,WAAWA,MAAME,GAAUF,MAAM,gBAAgBiC,KAAK,CACtGjB,KAAKA,EACLkN,eAAeA,EACfpN,MAAM3D,MAAS8G,OAAO,OACtB/C,SAASyR,EACT1R,YAAYA,IAjBE,2C,gEAoBtBiM,mBAAmB,SAACjM,GAChB,EAAKqC,SAAS,CACVrC,YAAYA,K,EAGpBkN,oBAAoB,SAAC0D,GACjB,EAAKvO,SAAS,CACV4K,eAAe2D,K,EAGvBlD,eAAe,SAACiD,EAAaE,GACzB,EAAKxO,SAAS,CACVpC,SAAS,MAAI,EAAK8B,MAAM9B,SAAhB,eAA0B0Q,EAAcE,O,EAGxDlD,gBAAgB,SAACgD,GACb,IAAIG,EAAc,EAAK/O,MAAM9B,gBACtB6Q,EAAYH,GAChBtQ,OAAOC,KAAKwQ,GAAa1F,OACxB,EAAK/I,SAAS,CAACpC,SAAS6Q,IAGxB,EAAKzO,SAAS,CAACpC,SAAS,Q,EAGhCkN,wBAAwB,WACpB,EAAK9K,SAAS,CAACpC,cAAS+B,K,EAE5B+O,qBAAqB,SAACC,GAClB,EAAK3O,SAAS,CAACgO,SAASW,K,mFA9ER,IAAD,OACX9N,EAAQ,GACTrH,KAAKC,MAAMoH,SACV7C,OAAOC,KAAKzE,KAAKC,MAAMoH,SAAS3C,KAAI,SAAAG,GAAG,OACnCwC,EAAQlC,KACJ,CACA2K,UAAS,EACTjO,OAAO,EAAK5B,MAAMoH,QAAQxC,GAAKhD,OAC/BM,GAAG0C,OAKf7E,KAAKwG,SAAS,CACVa,QAAQA,M,+BAmEZ,IAAImM,EAAe,GASnB,OARGxT,KAAKkG,MAAMmB,SACVrH,KAAKkG,MAAMmB,QAAQ3C,KAAI,SAAAgL,GAAM,OACzBA,EAAOI,SACH0D,EAAerO,KAAKuK,EAAO7N,QAE3B,QAIR,kBAAC,GAAD,CAAQqD,QAASlF,KAAKC,MAAMiF,QAASwH,KAAK,cACtC,yBAAK3N,UAAU,0BACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,CACIqS,eAAgBpR,KAAKkG,MAAMkL,eAC3BjN,YAAanE,KAAKkG,MAAM/B,YACxBwM,gBAAiB3Q,KAAK2Q,gBACtB6C,eAAgBA,EAChBD,cAAe,kBAAC,GAAD,CAAelM,QAASrH,KAAKkG,MAAMmB,QAASlD,YAAanE,KAAKkG,MAAM/B,YAAaiN,eAAgBpR,KAAKkG,MAAMkL,eAAgBhN,SAAUpE,KAAKkG,MAAM9B,WAChKf,aAAa,aACbiQ,MAAO,CACH,CACA/R,MAAM,UACN8S,QACI,kBAAC,GAAD,CACI/E,kBAAmBtP,KAAKsP,kBACxBjI,QAASrH,KAAKkG,MAAMmB,QACpB6N,qBAAsBlV,KAAKkV,qBAC3BV,SAAUxU,KAAKkG,MAAMsO,YAG7B,CAACjT,MAAM,gBACP8S,QACI,kBAAC,GAAD,CACIlQ,YAAanE,KAAKkG,MAAM/B,YACxBiM,mBAAoBpQ,KAAKoQ,mBACzB8E,qBAAsBlV,KAAKkV,qBAC3BV,SAAUxU,KAAKkG,MAAMsO,YAG7B,CAACjT,MAAM,8BACP8S,QACI,kBAAC,GAAD,CACI/C,wBAAyBtR,KAAKsR,wBAC9BnN,YAAanE,KAAKkG,MAAM/B,YACxBkN,oBAAqBrR,KAAKqR,oBAC1BD,eAAgBpR,KAAKkG,MAAMkL,eAC3BS,eAAgB7R,KAAK6R,eACrBlN,QAAQ,cACRP,SAAUpE,KAAKC,MAAMmE,SACrBoR,eAAgBxV,KAAKkG,MAAM9B,SAC3B0N,gBAAiB9R,KAAK8R,gBACtBoD,qBAAsBlV,KAAKkV,qBAC3BV,SAAUxU,KAAKkG,MAAMsO,sB,GApJnC/T,aAsKXgH,iBAPS,SAAAvB,GACpB,MAAM,CACF/C,KAAK+C,EAAM/C,KACXkE,QAAQnB,EAAMwB,KAAKL,QACnBjD,SAAS8B,EAAMwB,KAAKkO,gBAGW,KAAxBnO,CAA8BgO,I,gDCnLhCM,GAAmB,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAYrR,EAAY,EAAZA,QAAY,EACbkI,mBAAS,GADI,oBACjDoJ,EADiD,KACjCC,EADiC,KAEhDC,EAAiB,CAAC,qBAAqB,oBAAoB,oBAC7DC,EAAY,GAyBhB,OAxBGzR,GACCH,OAAOC,KAAKE,EAAQ4M,OAAO7M,KAAI,SAACP,EAAYS,GAoBxC,OAnBAsR,EAAmBD,GAAiB,GAEhCzR,OAAOC,KAAKE,EAAQ4M,MAAMpN,IAAcO,KAAI,SAAC2R,EAAaC,GAKtD,OAJAF,EAAUjR,KAAK,CACXtD,OAAOwU,EACPrB,SAASrQ,EAAQ4M,MAAMpN,GAAakS,KAEjC,QAYR,QAIX,kBAACnF,GAAA,EAAD,CAAMnS,UAAU,kCACX2D,QAAQC,IAAIsT,GACb,kBAACtW,EAAA,EAAD,CAAWsR,OAAK,GACZ,kBAACnS,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,GAAII,GAAI,CAACH,KAAK,GAAIC,OAAO,GAAIoX,GAAI,CAACrX,KAAK,EAAEC,OAAO,IACrD,kBAACsE,EAAA,EAAD,CAAWsB,iBAAiB,KACxB,kBAACvB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ7E,UAAU,qBAAqB8E,SAAS,KACvE,yBAAK9E,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,uBAKhB,kBAAC0E,EAAA,EAAUa,SAAX,CAAoBX,GAAIH,IAAKe,KAAMV,SAAS,KACxC,yBAAK9E,UAAU,aACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,4BACX,kBAACmS,GAAA,EAAKsF,MAAN,KACI,kBAACtF,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,UAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc9T,KAAK,OAAOT,GAAG,SAAS4N,SAAU,SAAAnP,GAC5CoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,eAIvC,yBAAKhI,UAAU,4BACX,kBAACmS,GAAA,EAAKsF,MAAN,KACI,kBAACtF,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,SAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc9T,KAAK,OAAOT,GAAG,QAAS4N,SAAU,SAAAnP,GAC5CoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,cAIvC,yBAAKhI,UAAU,UACX,kBAACmS,GAAA,EAAKsF,MAAN,KACI,kBAACtF,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,eAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc/S,GAAG,WAAWgT,KAAK,IAAIxU,GAAG,cAAe4N,SAAU,SAAAnP,GAC7DoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,wBAQvD,kBAACvD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ7E,UAAU,qBAAqB8E,SAAS,KACvE,yBAAK9E,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,oBAKhB,kBAAC0E,EAAA,EAAUa,SAAX,CAAoBX,GAAIH,IAAKe,KAAMxF,UAAU,OAAO8E,SAAS,KACrD,kBAACqN,GAAA,EAAD,KACI,kBAACvR,EAAA,EAAD,KACI,kBAACb,EAAA,EAAD,CAAKC,UAAU,6BACdqX,EAAU7G,OACP6G,EAAU1R,KAAI,SAACkS,EAAMhS,GAAP,OACV,yBAAK7F,UAAU,YACX,kBAACmS,GAAA,EAAKsF,MAAN,KACI,kBAACtF,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,SAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc9T,KAAK,OAAOT,GAAI,QAAQyC,EAAGiS,YAAaV,EAAiBvR,GAAGuR,EAAiBvR,GAAG,KAAMkS,aAAa,mBAAmB/G,SAAU,SAAAnP,GAC1IoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,QAAQ,QAAQnC,MAE/C,kBAACsM,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,YAGA,kBAACgY,GAAA,EAAD,KACI,kBAAC7F,GAAA,EAAKwF,QAAN,CAAc9T,KAAK,SAAST,GAAI,WAAWyC,EAAGmL,SAAU,SAAAnP,GACpDoV,EAAYnD,WAAWjS,EAAE0P,OAAOvJ,OAAO,WAAW,QAAQnC,MAE9D,kBAACmS,GAAA,EAAWC,QAAZ,KACI,kBAAC9F,GAAA,EAAKwF,QAAN,CAAc/S,GAAG,SAASxB,GAAI,cAAcyC,EAAGmL,SAAU,SAAAnP,GACrDoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,cAAc,QAAQnC,KAEjD,4BAAQmC,MAAM,IAAI+I,UAAQ,GAA1B,QACA,4BAAQ/I,MAAM,KAAd,WAIZ,kBAACmK,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,iBAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc/S,GAAG,SAASxB,GAAI,cAAcyC,EAAGmL,SAAU,SAAAnP,GACrDoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,cAAc,QAAQnC,KAEjD,qCACA,4BAAQmC,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,gBAMhB,IAAIkQ,MAAMhB,GAAiBiB,UAAK/Q,GAAWzB,KAAI,SAACkS,EAAMhS,GAAP,OAC3C,yBAAK7F,UAAU,YACX,kBAACmS,GAAA,EAAKsF,MAAN,KACI,kBAACtF,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,SAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc9T,KAAK,OAAOT,GAAI,QAAQyC,EAAGiS,YAAaV,EAAiBvR,GAAGuR,EAAiBvR,GAAG,KAAMmL,SAAU,SAAAnP,GAC1GoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,QAAQ,QAAQnC,MAE/C,kBAACsM,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,YAGA,kBAACgY,GAAA,EAAD,KACI,kBAAC7F,GAAA,EAAKwF,QAAN,CAAc9T,KAAK,SAAST,GAAI,WAAWyC,EAAGmL,SAAU,SAAAnP,GACpDoV,EAAYnD,WAAWjS,EAAE0P,OAAOvJ,OAAO,WAAW,QAAQnC,MAE9D,kBAACmS,GAAA,EAAWC,QAAZ,KACI,kBAAC9F,GAAA,EAAKwF,QAAN,CAAc/S,GAAG,SAASxB,GAAI,cAAcyC,EAAGmL,SAAU,SAAAnP,GACrDoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,cAAc,QAAQnC,KAEjD,4BAAQmC,MAAM,IAAI+I,UAAQ,GAA1B,QACA,4BAAQ/I,MAAM,KAAd,WAIZ,kBAACmK,GAAA,EAAKuF,MAAN,CAAY1X,UAAU,aAAtB,iBAGA,kBAACmS,GAAA,EAAKwF,QAAN,CAAc/S,GAAG,SAASxB,GAAI,cAAcyC,EAAGmL,SAAU,SAAAnP,GACrDoV,EAAYpV,EAAE0P,OAAOvJ,MAAM,cAAc,QAAQnC,KAEjD,qCACA,4BAAQmC,MAAM,UAAd,UACA,4BAAQA,MAAM,UAAd,gBAMhB,yBAAKhI,UAAU,8BACX,kBAAC,IAAD,CAAiB+B,KAAM0G,IAAcD,MAAM,QAAQsJ,KAAK,KAAKlQ,QAAS,SAAAC,GAClEsV,EAAmBD,GAAiB,kB,6jBChLzF,IAAMkB,GAAoB,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,cAAc3V,EAAqC,EAArCA,QAAqC,IAA7B2C,gBAA6B,MAApB,GAAoB,EAAjBO,EAAiB,EAAjBA,QAAQxB,EAAS,EAATA,KAAS,EACvD0J,mBAAS,IAD8C,oBAC3EwK,EAD2E,KACpEC,EADoE,OAEzDzK,mBAAS,IAFgD,oBAE3E0E,EAF2E,KAErEgG,EAFqE,KAG5EC,EAAkB,WACpB,IAAIjD,EAAM,GACNkD,EAAO,GAgBX,OAfAjT,OAAOC,KAAK8M,GAAO7M,KAAI,SAAAgT,GACnB,IAAIC,EAAapG,EAAMmG,GAAUC,YAAY,OAAO,OACnB,WAA9BpG,EAAMmG,GAAUvT,YACfsT,EAAO,MACAA,EADD,eAEDlG,EAAMmG,GAAUE,MAFf,UAEyBrG,EAAMmG,GAAU1C,SAFzC,YAEqD2C,KAI3DpD,EAAM,MACCA,EADF,eAEAhD,EAAMmG,GAAUE,MAFhB,UAE0BrG,EAAMmG,GAAU1C,SAF1C,YAEsD2C,QAI7D,CAACpD,QAAMkD,WAEXI,EAAc,uCAAE,oCAAA7V,EAAA,wDACGwV,IAAdjD,EADW,EACXA,MAAMkD,EADK,EACLA,OACPK,EAAY,CACdjW,OAAOwV,EAAOxV,OACdkW,MAAMV,EAAOU,MACbC,YAAYX,EAAOW,YACnBzG,MAAM,CACF0G,OAAO1D,EACPkD,OAAOA,KAGXxC,EAAY7Q,GACJe,KAAK2S,GAZC,KAaVV,EAbU,OAcT,kBAdS,OAmBT,iBAnBS,wCAeJ7Q,qBAAWrE,MAAMgB,MAAMC,GAAMsL,OAAO,CACtCmG,cAAcK,IAhBR,4DAoBJ1O,qBAAWrE,MAAMgB,MAAMC,GAAMsL,OAAO,CACtCmH,aAAaX,IArBP,wFAAF,qDA4Bde,EAAY,SAACkC,EAAMrW,EAAOsW,GAC5BzV,QAAQC,IAAIuV,GACTC,EACCZ,EAAS,MACFhG,EADC,eAEH4G,EAFG,MAGG5G,EAAM4G,GAHT,eAICtW,EAAQqW,OAKjBZ,EAAU,MACHD,EADE,eAEJxV,EAAQqW,MAIrB,OACI,yBAAKnZ,UAAU,wFACX,kBAAC,EAAD,CACI0C,QAASA,EACTF,MAAO6V,IAEX,kBAAC,GAAD,CAAkBzS,QAASA,EAASqR,YAAa,SAACkC,EAAMrW,EAAO0P,GAC3DyE,EAAYkC,EAAMrW,EAAO0P,MAE7B,kBAAC,GAAD,CAA2BhH,YAAasN,EAAgBrN,mBAAoB/I,M,2DCjElFwK,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJrD,MAAO,QAETqP,QAAS,CACPhG,SAAUjG,EAAMkM,WAAWC,QAAQ,KAErCC,iBAAkB,CAChBnG,SAAUjG,EAAMkM,WAAWC,QAAQ,IACnC/Q,MAAO4E,EAAMqM,QAAQC,KAAKC,eAKnBC,GAAgB,SAAC,GAA0B,IAAzBpX,EAAwB,EAAxBA,MAAM6C,EAAkB,EAAlBA,SAASjB,EAAS,EAATA,KA8BpC2O,EAAe,uCAAC,WAAO3P,GAAP,eAAAH,EAAA,uDACdiT,EAAc7Q,GACNwU,OAAOzW,EAAG,GAFJ,KAGVZ,EAHU,OAIT,kBAJS,OAST,iBATS,uCAKJgF,qBAAWrE,MAAMgB,MAAMC,GAAMsL,OAAO,CACvCmG,cAAcK,IANP,2DAUJ1O,qBAAWrE,MAAMgB,MAAMC,GAAMsL,OAAO,CACtCmH,aAAaX,IAXP,wFAAD,sDAkBfrI,EAAUX,KAhDmC,EAiDnBwH,IAAM5G,UAAS,GAjDI,oBAiD5C2H,EAjD4C,KAiDlCqE,EAjDkC,KAsDnD,OACI,yBAAK9Z,UAAU,iBACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACP,kBAAC,KAAD,CAAQgB,QAAQ,oBAAoBY,QAAS,SAAAC,GA1DzCwF,uBAAa,CACrCC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIoE,KAAMA,EACNiB,SAAUA,EACVgT,cAAe7V,EACfE,QAASA,UAkDL,SAGmB,kBAARF,EAAwB,eAAe,cAC9C,kBAAC,IAAD,CAAiBT,KAAM0G,IAAczI,UAAU,YAI/D,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACNqF,EACGA,EAASM,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC6B,EAAA,EAAD,CAAOC,UAAW,GACd,kBAACoS,GAAA,EAAD,CAAgBtE,SAAUA,IAAa,QAAQ5P,EAAGmL,UArBjEoF,EAqBwF,QAAQvQ,EArBvF,SAACmU,EAAOC,GACpCH,IAAYG,GAAa7D,MAqBa,kBAAC8D,GAAA,EAAD,CACAC,WAAY,kBAAC,KAAD,MACZC,gBAAc,mBACdhX,GAAG,mBAEC,kBAACiM,GAAA,EAAD,CAAYrP,UAAW6N,EAAQwL,SAAUzT,EAAQ9C,OAAjD,IAAyD,0BAAM9C,UAAU,+BAA+B4F,EAAQoT,SAEpH,kBAACqB,GAAA,EAAD,KACI,yBAAKra,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,iDAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,+BACK4F,EAAQqT,eAIrB,6BACA,yBAAKjZ,UAAU,OACX,yBAAKA,UAAU,sBACX,kDAKPyF,OAAOC,KAAKE,EAAQ4M,OAAO7M,KAAI,SAAC2U,EAAiB/C,GAAlB,OAC5B,kBAAC,WAAD,CAAUzR,IAAK,mBAAmByR,GAC9B,yBAAKvX,UAAU,iBACX,yBAAKA,UAAU,oBACX,0BAAMA,UAAU,+BACXsa,IAGb,8BAEC7U,OAAOC,KAAKE,EAAQ4M,MAAM8H,IAAmB3U,KAAI,SAAC4U,EAAWC,GAAZ,OAC9C,yBAAKxa,UAAU,MAAM8F,IAAK,QAAQ0U,GAC9B,yBAAKxa,UAAU,oBACVua,GAEL,yBAAKva,UAAU,oBACV4F,EAAQ4M,MAAM8H,GAAkBC,YAMrD,yBAAKva,UAAU,YACX,yBAAKA,UAAU,4BACX,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,IAjHvF,SAAC+D,GAAUyB,uBAAa,CAC7CC,SAAU,YAAkB,IAAf5E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIoE,KAAMA,EACNiB,SAAUA,EACVgT,cAAe7V,EACfE,QAASA,EACTkD,QAASA,QAyG+B6U,CAAmB7U,KADvB,mBAMJ,yBAAK5F,UAAU,4BACX,4BAAQ6D,KAAK,SAAS7D,UAAU,yBAAyB4B,QAAS,SAAAC,GAC9DkR,EAAgBlN,KADpB,0BApFnC,IAAAuQ,KAiGO,sCAAY5T,QChL5C,SAASkY,GAASxZ,GAAQ,IACd0M,EAAqC1M,EAArC0M,SAAU5F,EAA2B9G,EAA3B8G,MAAOjD,EAAoB7D,EAApB6D,MAAU4V,EADd,aACwBzZ,EADxB,8BAGrB,OACE,kBAACmO,GAAA,EAAD,eACEuL,UAAU,MACV9P,KAAK,WACL+P,OAAQ7S,IAAUjD,EAClB3B,GAAE,0BAAqB2B,GACvB+V,kBAAA,qBAA+B/V,IAC3B4V,GAEH3S,IAAUjD,GAAS,kBAACgW,GAAA,EAAD,CAAKC,EAAG,GAAIpN,IAIjC,ICCHqN,GACAtS,GDFSuS,GAAc,SAAC,GAAsC,IAArCrF,EAAoC,EAApCA,cAAcgB,EAAsB,EAAtBA,aAAazS,EAAS,EAATA,KAAS,EACnC0J,mBAAS,GAD0B,oBACtD9F,EADsD,KAC/CmT,EAD+C,KAE7D,OACI,kBAAClb,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,GAAGC,OAAO,IACrB,kBAACsH,EAAA,EAAD,CAAO6N,QAAM,EAAC5N,UAAW,GACrB,kBAACD,EAAA,EAAD,KACI,kBAAC0T,GAAA,EAAD,CACIpT,MAAOA,EACPqT,eAAe,UACfC,UAAU,UACVtK,SAAU,SAACnP,EAAEmG,GACTmT,EAASnT,IAEbkH,aAAW,yBAEX,kBAACqM,GAAA,EAAD,CAAKtK,MAAM,kBACX,kBAACsK,GAAA,EAAD,CAAKtK,MAAM,mBAGnB,kBAACyJ,GAAD,CAAU1S,MAAOA,EAAOjD,MAAO,GAC3B,kBAAC,GAAD,CAAeX,KAAMA,EAAM5B,MAAM,gBAAgB6C,SAAUwQ,KAE/D,kBAAC6E,GAAD,CAAU1S,MAAOA,EAAOjD,MAAO,GAC3B,kBAAC,GAAD,CAAeX,KAAMA,EAAM5B,MAAM,eAAe6C,SAAUwR,QEtCxE2E,G,iLAEE,OACI,kBAAC,GAAD,CAAQrV,QAASlF,KAAKC,MAAMiF,QAASwH,KAAK,YACtC,yBAAK3N,UAAU,qFACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAaoE,KAAMnD,KAAKC,MAAMkD,KAAMyR,cAAe5U,KAAKC,MAAM2U,cAAegB,aAAc5V,KAAKC,MAAM2V,sB,GANrGnV,aAqBVgH,iBAPQ,SAACvB,GACpB,MAAM,CACF/C,KAAK+C,EAAM/C,KACXyR,cAAc1O,EAAMwB,KAAKkN,cACzBgB,aAAa1P,EAAMwB,KAAKkO,gBAGO,KAAxBnO,CAA8B8S,I,wECQ9BC,I,wLA5BP,OACI,yBAAKzb,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,0CAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACX,4BACI,kBAAC,IAAD,CAAiB+B,KAAM2Z,IAAY1b,UAAU,eAAeoD,GAAG,oBAGvE,yBAAKpD,UAAU,YACX,4BACI,kBAAC,IAAD,CAAiB+B,KAAM2Z,IAAY1b,UAAU,eAAeoD,GAAG,oBAGvE,yBAAKpD,UAAU,YACX,4BACI,kBAAC,IAAD,CAAiB+B,KAAM2Z,IAAY1b,UAAU,eAAeoD,GAAG,0B,GAtB7D1B,cCexBwL,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ2G,OAAQ,QACR2H,SAAS,QAEXC,MAAO,CACLC,gBACyB,SAAvBzO,EAAMqM,QAAQ5V,KAAkBuJ,EAAMqM,QAAQqC,KAAK,KAAO1O,EAAMqM,QAAQqC,KAAK,KAEjF7U,IAAI,CACF8U,UAAU,QACV/R,MAAM,OACNgK,OAAO,QAETgI,MAAO,CACL/L,OAAQ7C,EAAMK,QAAQ,EAAG,GACzB0F,QAAS,OACTc,cAAe,SACf5D,WAAY,UAEd4L,OAAQ,CACNhM,OAAQ7C,EAAMK,QAAQ,GACtBoO,gBAAiBzO,EAAMqM,QAAQE,UAAUuC,MAE3CC,KAAM,CACJnS,MAAO,OACPoG,UAAWhD,EAAMK,QAAQ,IAE3B2O,OAAQ,CACNnM,OAAQ7C,EAAMK,QAAQ,EAAG,EAAG,QAKnB4O,GAAW,SAAC,GAAa,EAAZlW,QAAa,IAC7B0H,EAAUX,KADkB,EAELY,wBAAS1G,GAFJ,oBAE7BkV,EAF6B,KAEnBC,EAFmB,OAGTzO,oBAAS,GAHA,oBAG7B0O,EAH6B,KAGrBC,EAHqB,OAIG3O,wBAAS1G,GAJZ,oBAI7BsV,EAJ6B,KAIfC,EAJe,OAKL7O,wBAAS1G,GALJ,oBAK7BwV,EAL6B,KAKnBC,EALmB,OAMG/O,wBAAS1G,GANZ,oBAM7B0V,EAN6B,KAMfC,EANe,KAS5BC,EAAK,uCAAC,sBAAA/Z,EAAA,6DACRwZ,GAAW,GACXI,OAAazV,GACb2V,OAAiB3V,GAHT,SAIF2F,iBAAOkQ,2BAA2BX,EAAUI,GACjDQ,OAAM,SAAAC,GACW,wBAAbA,EAAMC,KACPP,EAAaM,GAGbJ,EAAiBI,MAVb,OAaRV,GAAW,GAbH,2CAAD,qDAgBX,OACI,kBAAChJ,GAAA,EAAD,CAAMC,WAAS,EAACkH,UAAU,OAAO5a,UAAW6N,EAAQR,MAChD,kBAACgQ,GAAA,EAAD,MACA,kBAAC5J,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,IAAI,EAAOG,GAAI,EAAGC,GAAI,EAAGN,UAAW6N,EAAQ+N,OACrD,yBAAKpb,IAAK8c,KAAM5c,IAAI,GAAGV,UAAW6N,EAAQ5G,OAE5C,kBAACwM,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,GAAI,GAAIG,GAAI,EAAGC,GAAI,EAAGsa,UAAWlT,IAAOC,UAAW,EAAG4N,QAAM,GACpEiH,EACC,yBAAKxc,UAAW6N,EAAQmO,OACpB,kBAAC3M,GAAA,EAAD,CAAYuL,UAAU,KAAK5Z,QAAQ,MACjC,kBAAC,GAAD,QAIN,yBAAKhB,UAAW6N,EAAQmO,OACtB,kBAACuB,GAAA,EAAD,CAAQvd,UAAW6N,EAAQoO,QACvB,kBAAC,KAAD,OAEJ,kBAAC5M,GAAA,EAAD,CAAYuL,UAAU,KAAK5Z,QAAQ,MAAnC,iBAGA,0BAAMhB,UAAW6N,EAAQsO,KAAMqB,YAAU,GACvC,kBAACpL,GAAA,EAAD,CACApR,QAAQ,WACRiP,OAAO,SACPwN,UAAQ,EACRC,WAAS,EACTta,GAAG,QACH6N,MAAM,QACNkM,MAAOP,EACPe,WAAYf,EAAU,wBAAwB,KAC9CzR,KAAK,QACLnD,MAAOsU,EACPtL,SAAU,SAAAnP,GAAI0a,EAAa1a,EAAE0P,OAAOvJ,QACpC2D,WAAS,IAET,kBAACyG,GAAA,EAAD,CACApR,QAAQ,WACRiP,OAAO,SACPwN,UAAQ,EACRC,WAAS,EACTvS,KAAK,WACLnD,MAAO0U,EACPiB,WAAYb,EAAc,2BAAwB,KAClDK,MAAOL,EACP9L,SAAU,SAAAnP,GAAI8a,EAAiB9a,EAAE0P,OAAOvJ,QACxCiJ,MAAM,gBACNpN,KAAK,WACLT,GAAG,aAEH,kBAACwN,GAAA,EAAD,CACAC,QAAS,kBAACC,GAAA,EAAD,CAAU9I,MAAM,WAAWQ,MAAM,YAC1CyI,MAAM,eAEN,kBAAC1I,GAAA,EAAD,CACAmV,WAAS,EACT1c,QAAQ,WACRwH,MAAM,UACNxI,UAAW6N,EAAQuO,OACnBxa,QAAS,SAAAC,GAAImb,MALb,aASA,kBAACvJ,GAAA,EAAD,CAAMC,WAAS,GACf,kBAACD,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,IAAE,GACT,kBAAC0d,GAAA,EAAD,CAAMC,KAAK,IAAI7c,QAAQ,SAAvB,gCAIJ,kBAACyS,GAAA,EAAD,CAAM7Q,MAAI,GACN,kBAACgb,GAAA,EAAD,CAAM5c,QAAQ,SACZ,kBAAC,IAAD,CAAY4G,GAAG,UACZ,wCAKT,kBAACmT,GAAA,EAAD,CAAK+C,GAAI,SCxIvB5Q,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ2G,OAAQ,QACR2H,SAAS,QAEXC,MAAO,CACLC,gBACyB,SAAvBzO,EAAMqM,QAAQ5V,KAAkBuJ,EAAMqM,QAAQqC,KAAK,KAAO1O,EAAMqM,QAAQqC,KAAK,KAEjF7U,IAAI,CACF8U,UAAU,QACV/R,MAAM,OACNgK,OAAO,QAETgI,MAAO,CACL/L,OAAQ7C,EAAMK,QAAQ,EAAG,GACzB0F,QAAS,OACTc,cAAe,SACf5D,WAAY,UAEd4L,OAAQ,CACNhM,OAAQ7C,EAAMK,QAAQ,GACtBoO,gBAAiBzO,EAAMqM,QAAQE,UAAUuC,MAE3CC,KAAM,CACJnS,MAAO,OACPoG,UAAWhD,EAAMK,QAAQ,IAE3B2O,OAAQ,CACNnM,OAAQ7C,EAAMK,QAAQ,EAAG,EAAG,QAKnBsQ,GAAU,SAAC,GAAc,IAAb5X,EAAY,EAAZA,QACf0H,EAAUX,KADiB,EAEJY,wBAAS1G,GAFL,oBAE5BkV,EAF4B,KAElBC,EAFkB,OAGRzO,oBAAS,GAHD,oBAG5B0O,EAH4B,KAGpBC,EAHoB,OAII3O,wBAAS1G,GAJb,oBAI5BsV,EAJ4B,KAIdC,EAJc,OAKJ7O,wBAAS1G,GALL,oBAKlByV,GALkB,aAMI/O,wBAAS1G,GANb,oBAMd2V,GANc,WAS3BiB,EAAM,uCAAC,sBAAA/a,EAAA,6DACTwZ,GAAW,GADF,SAEH1P,iBAAOkR,+BAA+B3B,EAAUI,GACrDhZ,KADK,+BAAAT,EAAA,MACA,WAAMpB,GAAN,SAAAoB,EAAA,sEACIuE,qBAAWrE,MAAMgB,MAAMtC,EAAEuC,KAAK8Z,KAAKxO,OAAO,CAC5CpG,aAAa,EACbC,YAAY,EACZsB,QAAQ,eAJV,OAMF1E,EAAQC,KAAK,KANX,2CADA,uDASL8W,OAAM,SAAAC,GACW,wBAAbA,EAAMC,KACPP,EAAaM,GAGbJ,EAAiBI,MAhBZ,OAmBTV,GAAW,GAnBF,2CAAD,qDAsBZ,OACI,kBAAChJ,GAAA,EAAD,CAAMC,WAAS,EAACkH,UAAU,OAAO5a,UAAW6N,EAAQR,MAChD,kBAACgQ,GAAA,EAAD,MACA,kBAAC5J,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,IAAI,EAAOG,GAAI,EAAGC,GAAI,EAAGN,UAAW6N,EAAQ+N,OACrD,yBAAKpb,IAAK8c,KAAM5c,IAAI,GAAGV,UAAW6N,EAAQ5G,OAE5C,kBAACwM,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,GAAI,GAAIG,GAAI,EAAGC,GAAI,EAAGsa,UAAWlT,IAAOC,UAAW,EAAG4N,QAAM,GACpEiH,EACC,yBAAKxc,UAAW6N,EAAQmO,OACpB,kBAAC3M,GAAA,EAAD,KACE,kBAAC,GAAD,QAIN,yBAAKrP,UAAW6N,EAAQmO,OACtB,kBAACuB,GAAA,EAAD,CAAQvd,UAAW6N,EAAQoO,QACvB,kBAAC,KAAD,OAEJ,kBAAC5M,GAAA,EAAD,CAAYuL,UAAU,KAAK5Z,QAAQ,MAAnC,cAGA,0BAAMhB,UAAW6N,EAAQsO,KAAMqB,YAAU,GACvC,kBAACpL,GAAA,EAAD,CACApR,QAAQ,WACRiP,OAAO,SACPwN,UAAQ,EACRC,WAAS,EACTta,GAAG,QACH6N,MAAM,QACN9F,KAAK,QACLnD,MAAOsU,EACPtL,SAAU,SAAAnP,GAAI0a,EAAa1a,EAAE0P,OAAOvJ,QACpC2D,WAAS,IAET,kBAACyG,GAAA,EAAD,CACApR,QAAQ,WACRiP,OAAO,SACPwN,UAAQ,EACRC,WAAS,EACTvS,KAAK,WACLnD,MAAO0U,EACP1L,SAAU,SAAAnP,GAAI8a,EAAiB9a,EAAE0P,OAAOvJ,QACxCiJ,MAAM,gBACNpN,KAAK,WACLT,GAAG,aAEH,kBAACmF,GAAA,EAAD,CACAmV,WAAS,EACT1c,QAAQ,WACRwH,MAAM,UACNxI,UAAW6N,EAAQuO,OACnBxa,QAAS,SAAAC,GAAImc,MALb,eASA,kBAACvK,GAAA,EAAD,CAAMC,WAAS,GACf,kBAACD,GAAA,EAAD,CAAM7Q,MAAI,EAAC1C,IAAE,GACT,kBAAC0d,GAAA,EAAD,CAAM5c,QAAQ,SACV,kBAAC,IAAD,CAAY4G,GAAG,KAAf,qCAMR,kBAACmT,GAAA,EAAD,CAAK+C,GAAI,SC1HdK,G,iLAtBF,IAAD,OACJ,OACI,kBAACpe,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,yBAAKJ,UAAU,mCACX,yBAAKA,UAAU,SACX,kBAACoS,GAAA,EAAD,CAAWhP,GAAG,iBACd4E,MAAO/G,KAAKC,MAAMgE,WAClB+L,MAAM,eACNjQ,QAAQ,WACJgQ,SAAU,SAAAnP,GACN,EAAKX,MAAMkd,aAAavc,EAAE0P,OAAOvJ,kB,GAZtCtG,aCczB2c,G,2MACFlX,M,aACImB,aAAQlB,EACRlC,gBAAWkC,G,UACH,I,EAEZmJ,kBAAkB,SAACxL,GACf,IAAI2Q,EAAkB,EAAKvO,MAAMmB,QACjCoN,EAAkB3Q,GAAOgM,UAAU2E,EAAkB3Q,GAAOgM,SAC5D,EAAKtJ,SAAS,CACVa,QAAQoN,K,EAoBhB9D,gBAAgB,WACZ,EAAK0M,QACL,EAAKpd,MAAMiF,QAAQC,KAAK,M,EAE5BkY,MAAM,WACF,EAAKnX,MAAMmB,QAAQ3C,KAAI,SAAAgL,GAKnB,OAJGA,EAAOI,WACNpN,QAAQC,IAAI+M,GACZ,EAAK4N,cAAc5N,EAAOvN,KAEvB,S,EAGfmb,c,uCAAe,WAAOla,GAAP,SAAApB,EAAA,sEACLuE,qBAAWrE,MAAMgB,MAAM,EAAKjD,MAAMkD,MAAMD,MAAM,WAAWA,MAAME,GAAUF,MAAM,SAASiC,KAAK,CAC/FnB,MAAM3D,MAAS8G,OAAO,OACtBlD,WAAW,EAAKiC,MAAMjC,aAHf,2C,wDAMfsZ,kBAAkB,SAACC,GACf,EAAKhX,SAAS,CACVvC,WAAWuZ,K,mFAtCC,IAAD,OACXnW,EAAQ,GACTrH,KAAKC,MAAMoH,SACV7C,OAAOC,KAAKzE,KAAKC,MAAMoH,SAAS3C,KAAI,SAAAG,GAAG,OACnCwC,EAAQlC,KACJ,CACA2K,UAAS,EACTjO,OAAO,EAAK5B,MAAMoH,QAAQxC,GAAKhD,OAC/BM,GAAG0C,OAKf7E,KAAKwG,SAAS,CACVa,QAAQA,M,+BA2BP,IAAD,OACAmM,EAAe,GASnB,OARGxT,KAAKkG,MAAMmB,SACVrH,KAAKkG,MAAMmB,QAAQ3C,KAAI,SAAAgL,GAAM,OACzBA,EAAOI,SACH0D,EAAerO,KAAKuK,EAAO7N,QAE3B,QAIR,kBAAC,GAAD,CAAQqD,QAASlF,KAAKC,MAAMiF,QAASwH,KAAK,QACtC,yBAAK3N,UAAU,0BACX,yBAAKA,UAAU,OAEX,kBAAC,GAAD,CACIqS,eAAgBpR,KAAKkG,MAAMkL,eAC3BnN,WAAYjE,KAAKkG,MAAMjC,WACvB0M,gBAAiB3Q,KAAK2Q,gBACtB6C,eAAgBA,EAChBD,cAAe,kBAAC,GAAD,CAAelM,QAASrH,KAAKkG,MAAMmB,QAASpD,WAAYjE,KAAKkG,MAAMjC,aAClFZ,aAAa,OACbiQ,MAAO,CACP,CACI/R,MAAM,UACN8S,QACI,kBAAC,GAAD,CACI/E,kBAAmBtP,KAAKsP,kBACxBjI,QAASrH,KAAKkG,MAAMmB,WAGhC,CACI9F,MAAM,eACN8S,QACI,kBAAC,GAAD,CACI8I,aAAe,SAAAK,GACX,EAAKD,kBAAkBC,IAE3BvZ,WAAYjE,KAAKkG,MAAMjC,wB,GA5F5CxD,aA6GJgH,iBANS,SAAAvB,GACpB,MAAM,CACF/C,KAAK+C,EAAM/C,KACXkE,QAAQnB,EAAMwB,KAAKL,WAGY,KAAxBI,CAA8B2V,IC3H9BK,GAHC,SAACvX,EAAMwX,GACnB,OAAOxX,G,UCCEyX,GAAe,SAAC,GAAa,IAAZzY,EAAW,EAAXA,QAC1B,OACI,kBAAC,GAAD,CAAQA,QAASA,EAASwH,KAAK,iBAC3B,yBAAK3N,UAAU,0BACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OAAf,qBCFP6e,GAAQ,SAAC3d,GAClB,OACIA,EAAM4d,SAAS5d,MACX,kBAAC,GAAD,CAAQiF,QAASjF,EAAMiF,QAASwH,KAAMzM,EAAM4d,SAAS5d,MAAM4B,QACvD,yBAAK9C,UAAU,0BACX,kBAAC,EAAD,CACImB,SAAUD,EAAM4d,SAAS5d,MAAMC,SAC/BC,KAAMF,EAAM4d,SAAS5d,MAAME,KAC3BC,WAAYH,EAAM4d,SAAS5d,MAAMG,WACjCG,iBAAkBN,EAAM4d,SAAS5d,MAAMM,iBACvCC,gBAAiBP,EAAM4d,SAAS5d,MAAMO,kBAE1C,kBAAC,EAAD,CACIK,YAAaZ,EAAM4d,SAAS5d,MAAMY,YAClCG,WAAYf,EAAM4d,SAAS5d,MAAMe,WACjCE,kBAAmBjB,EAAM4d,SAAS5d,MAAMiB,oBAE5C,yBAAKnC,UAAU,mCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,4BAAQ6D,KAAK,SAAS7D,UAAU,sBAAqB4B,QAASV,EAAM4d,SAAS5d,MAAM4C,qBAAnF,mBACA,4BAAQD,KAAK,SAAS7D,UAAU,wBAAuB4B,QAASV,EAAM4d,SAAS5d,MAAM6C,mBAArF,sBAOpB,kBAAC,IAAD,CAAU6D,GAAG,OTDzB1D,gBATe,CACb6a,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,cACnBC,MAAO,uC,IAoEMC,G,2MAhEbnY,MAAM,CACJqV,SAAQ,G,8EAEKtQ,GACbjL,KAAKwG,SAAS,CACZoD,QAAQqB,M,+JAIVhI,SAAgBqb,mBAAhB,uCAAmC,WAAMnb,GAAN,SAAAnB,EAAA,0DAC9BmB,EAD8B,gCAELF,aAAoBf,MAAMgB,MAAMC,EAAK8Z,KAFhC,cAGnBsB,GAAG,SAAS,SAAAC,GACtB9W,GAAM8W,EAASC,MACfzE,GAAM0E,aAAYjB,GAAS,CAACta,KAAKA,EAAK8Z,IAAIvV,KAAKA,KAC/C,EAAKlB,SAAS,CAACwT,SAAM7W,KAAKA,EAAKoY,SAAQ,OANV,sBAU/B,EAAK/U,SAAS,CAACrD,KAAK,KAAKoY,SAAQ,IAVF,2CAAnC,uD,gIAeA,OAAGvb,KAAKkG,MAAMqV,QAEV,yBAAKxc,UAAU,8BACb,kBAAC,GAAD,OAKDiB,KAAKkG,MAAM/C,KAEV,kBAAC,KAAD,CAAU6W,MAAOha,KAAKkG,MAAM8T,OACxB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2E,OAAK,EAACC,KAAK,IAAIjF,UAAWrL,KACjC,kBAAC,IAAD,CAAOqQ,OAAK,EAACC,KAAK,SAASjF,UAAWpF,KACtC,kBAAC,IAAD,CAAOoK,OAAK,EAACC,KAAK,QAAQjF,UAAWyD,KACrC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,eAAejF,UAAWlE,KAC5C,kBAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,cAAcjF,UAAWY,KAC3C,kBAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,iBAAiBjF,UAAWgE,KAC9C,kBAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,UAAUjF,UAAWiE,KACvC,kBAAC,IAAD,CAAOe,OAAK,EAACC,KAAK,0BAA0BjF,UAAWY,QAQ/D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoE,OAAK,EAACC,KAAK,IAAIjF,UAAWyB,KACjC,kBAAC,IAAD,CAAOuD,OAAK,EAACC,KAAK,SAASjF,UAAWmD,W,GAxDlCrc,aUrBZoe,GAAcC,QACW,cAA7BC,OAAOlB,SAASmB,UAEe,UAA7BD,OAAOlB,SAASmB,UAEhBD,OAAOlB,SAASmB,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACT1c,MAAK,SAAA+c,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxZ,QACfmZ,UAAUC,cAAcO,YAI1Bnd,QAAQC,IACN,iHAKEyc,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB9c,QAAQC,IAAI,sCAGRyc,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BvD,OAAM,SAAAC,GACLxZ,QAAQwZ,MAAM,4CAA6CA,MCtFjE8D,IAASC,OACL,kBAAC,GAAD,MACF5d,SAASC,eAAe,SDUnB,SAAkB8c,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIa,IAAIC,wBAAwBpB,OAAOlB,SAASjB,MACpDwD,SAAWrB,OAAOlB,SAASuC,OAIvC,OAGFrB,OAAOsB,iBAAiB,QAAQ,WAC9B,IAAMlB,EAAK,UAAMgB,wBAAN,sBAEPtB,KAgEV,SAAiCM,EAAOC,GAEtCkB,MAAMnB,GACH1c,MAAK,SAAA8d,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAY/W,QAAQ,cAG5C4V,UAAUC,cAAcsB,MAAMne,MAAK,SAAA+c,GACjCA,EAAaqB,aAAape,MAAK,WAC7Bsc,OAAOlB,SAASiD,eAKpB5B,GAAgBC,EAAOC,MAG1BnD,OAAM,WACLvZ,QAAQC,IACN,oEArFAoe,CAAwB5B,EAAOC,GAI/BC,UAAUC,cAAcsB,MAAMne,MAAK,WACjCC,QAAQC,IACN,iHAMJuc,GAAgBC,EAAOC,OCjC/BE,I,wCCjBA3gB,EAAOC,QAAU,IAA0B,4C","file":"static/js/main.84db1674.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nclass DetallePlanta extends Component{\n    render(){\n        return(\n            <Row className=\"mt-4 mb-4 align-items-center\">\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\n                </Col>\n                <Col md={8} className=\"align-self-center\">\n                    <Container className=\"container\">\n                        <Table striped hover variant='dark' >\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Genetica</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Edad</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Fecha de Germinacion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Vegetativo</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioVegetativo?\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\n                                                :\n                                                '--/--/----'\n                                            }</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Floracion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioFloracion?\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Container>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetallePlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nclass DetalleAcciones extends Component{\n    render(){\n        return(\n            <Row className=\"pt-2 pb-2 botonera justify-content-center \">\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertRiegos()\n                    }}>\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Riegos</small>\n                    </div>\n                </Col>\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertPodas()\n                    }}>\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Podas</small>\n                    </div>\n                </Col>\n                <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertFumigaciones()\n                    }}>\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetalleAcciones","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {storage} from 'firebase'\nclass AlertPlanta extends Component{\n    subirArchivo= async ()=>{\n        const ref = await storage().ref(this.props.id)\n        const file = document.getElementById('input').files[0]\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\n        ref.put(file).then(e=>{\n            console.log('Archivo subido Correctamente')\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\n                />\n                <DetallePlanta \n                    genetica={this.props.genetica}\n                    edad={this.props.edad}\n                    nacimiento={this.props.nacimiento}\n                    inicioVegetativo={this.props.inicioVegetativo}\n                    inicioFloracion={this.props.inicioFloracion}\n                />\n                <DetalleAcciones\n                    alertRiegos={this.props.alertRiegos}\n                    alertPodas={this.props.alertPodas}\n                    alertFumigaciones={this.props.alertFumigaciones}\n                />\n                <div className=\"row mt-4 justify-content-center\">\n                    <div className=\"col-auto\">\n                        <div className=\"btn-group\">\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child(this.props.user).child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n        this.props.alert()\n    }\n    render(){\n        return(\n            <Card>\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {this.props.tipoDeAccion==='podas'?\n                            <div className='container-fluid'>\n                                <div className=\"row\">\n                                    <div className=\"col-auto\">\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                    </div>\n                                    <div className=\"col-auto ml-auto\">\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {this.props.tipoDePoda?\n                                        <div className='col'>\n                                            <hr/>\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                                :\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                        </div>\n                                        <div className=\"col-auto ml-auto\">\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <h5>\n                                                <div className=\"badge badge-pill badge-light\">\n                                                    {this.props.accion.tipoDeRiego}\n                                                </div>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                    {this.props.accion.aditivos?\n                                        <div className=\"row\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <FontAwesomeIcon icon={faSortDown}/>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                    {this.props.accion.aditivos?\n                        <Accordion.Collapse eventKey={this.props.index}>\n                            <Card.Body>\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                                                <div className=\"col-auto\" key={aditivo+i}>\n                                                    <span className='badge badge-pill badge-dark'>\n                                                        <div className=\"col-auto\">\n                                                            {aditivo}\n                                                        </div>\n                                                        <div className=\"col-auto\">\n                                                            {this.props.accion.aditivos[aditivo]} ml\n                                                        </div>\n                                                    </span>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                        :\n                        null\n                    }\n                </Card>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport { Accordion } from 'react-bootstrap'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.podas?\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.riegos?\n                            Object.keys(this.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Riego')\n                                        }}>Riegala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport { Accordion } from 'react-bootstrap'\nclass alertFumigaciones extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.fumigaciones?\n                            Object.keys(this.props.fumigaciones).reverse().map((id,i)=>(\n                                <AccionDetallada user={this.props.user}index={i} alert={this.props.alert} accion={this.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Insecticida')\n                                        }}>Fumigala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default alertFumigaciones","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/alertPlanta.css'\nimport AlertPlanta from '../alerts/AlertPlanta'\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        user={this.props.user}\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        user={this.props.user}\n                        alertPlanta={this.alertPlanta}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    alertPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertPlanta\n                        {...this.props}\n                        onClose={onClose}\n                        alertEliminarPlanta={this.alertEliminarPlanta}\n                        alertCambiarCiclo={this.alertCambiarCiclo}\n                        alertRiegos={this.alertRiegos}\n                        alertPodas={this.alertPodas}\n                        alertFumigaciones={this.alertFumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    alertRiegos=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertRiego\n                        user={this.props.user}\n                        idPlanta={this.props.id}\n                        alert={this.alertRiegos}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        riegos={this.props.riegos}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    alertPodas=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertPodas\n                        user={this.props.user}\n                        idPlanta={this.props.id}\n                        alert={this.alertPodas}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        podas={this.props.podas}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    alertFumigaciones=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertFumigaciones\n                        user={this.props.user}\n                        idPlanta={this.props.id}\n                        alert={this.alertFumigaciones}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        fumigaciones={this.props.fumigaciones}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await database().ref().child(this.props.user).child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-auto\">\n                <Paper elevation={6}>\n                    <Link to={{\n                        pathname:'/Planta',\n                        props:{\n                            ...this.props,\n                            alertFumigaciones:this.alertFumigaciones,\n                            alertRiegos:this.alertRiegos,\n                            alertPodas:this.alertPodas,\n                            alertCambiarCiclo:this.alertCambiarCiclo,\n                            alertEliminarPlanta:this.alertEliminarPlanta\n                        }\n                    }}>\n                        <Card className=\"card bg-light\" >\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h4 className=\"card-title\">{this.props.nombre}</h4>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Overlay>\n                        </Card>\n                    </Link>\n                </Paper>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nimport {Button} from '@material-ui/core'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child(this.props.user).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta\n                                user={this.props.user}\n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <div className=\"col-12 text-center\">\n                            <h2 className='text-white'>Aun No hay plantas</h2>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.alertNuevaPlanta}>\n                                Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\n                            </Button>\n                        </div>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            \n            <h1>{this.state.fecha}</h1>\n        )\n    }\n}\nexport default FechaYHora","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\n\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined,\n        descanso:false\n    }\n    actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\n            console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = this.actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            this.setState({\n                descanso:true\n            })\n        }\n        else{\n            this.setState({\n                descanso:false\n            })\n        }\n        this.setState({\n            cicloLuminico: cicloLuminico,\n            transcurrido: transcurrido,\n            faltante:this.calcularFaltante()\n        })\n        return [transcurrido,cicloLuminico]\n    }\n    actualizarBarraDeProgreso=()=>{\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        console.log()\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    componentDidMount(){\n        this.actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            this.actualizarBarraDeProgreso()\n        }, 1000);\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=(lamparaEncendida)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <FechaYHora/>\n                    </div>\n                </div>\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.descanso?\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-dark'>\n                                Descansando...\n                            </span>\n                        </div>\n                        :\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-success'>\n                                Creciendo...\n                            </span>\n                        </div>\n                    }\n                </div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-10 offset-1\">\n                        <div className=\"progress\">\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.horaDeInicio,\n        horaDeFinal:state.data.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    cursor:pointer;\n    font-size:2.5rem\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport {auth} from 'firebase'\nimport {Redirect} from 'react-router-dom'\nclass Navbar extends Component{\n    signOut=async ()=>{\n        await auth().signOut()\n        return <Redirect to='/'/>\n    }\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\n                                Cerrar Sesion\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {useState} from 'react'\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\nimport {auth} from 'firebase'\nimport {AppBar,Toolbar,IconButton,Typography,Menu} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\nexport const Layout=({page,children,history})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n        return(\n            <div className=\"App d-flex flex-column justify-content-between\">\n                <div className=\"container-fluid px-0\">\n                    <Drawer anchor=\"right\" open={menuOpened} onClose={e=>{setMenuOpened(false)}}>\n                        <div className=\"container d-flex flex-column h-100 justify-content-between\">\n                            <div>\n                                <List>\n                                    <Link to='/' className='outline-none text-dark'>\n                                        <ListItem button key={'Armario'} >\n                                            <ListItemIcon><HomeOutlined/></ListItemIcon>\n                                            <ListItemText primary={'Armario'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <Link to='Riego' className='outline-none text-dark'>\n                                        <ListItem button key={'Regar'} >\n                                            <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                                            <ListItemText primary={'Regar'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <Link to='Poda' className='outline-none text-dark'>\n                                        <ListItem button key={'Podar'}>\n                                            <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                                            <ListItemText primary={'Podar'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <Link to='Insecticida' className='outline-none text-dark'>\n                                        <ListItem button key={'Fumigar'}>\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                            <ListItemText primary={'Fumigar'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                            </div>\n                            <div>\n                                <Divider />\n                                <List>\n                                    <Link to='/Aplicables' className='outline-none text-dark'>\n                                        <ListItem button key={'Aditivos'}>\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                            <ListItemText primary={'Aditivos'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <Link to='/Aditivos' className='outline-none text-dark'>\n                                        <ListItem button key={'Carencias y Excesos'}>\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                            <ListItemText primary={'Carencias y Excesos'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <Link to='/Configuracion' className='outline-none text-dark'>\n                                        <ListItem button key={'Configuracion'}>\n                                            <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                                            <ListItemText primary={'Configuracion'} />\n                                        </ListItem>\n                                    </Link>\n                                </List>\n                                <Divider />\n                                <List>\n                                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                                            await auth().signOut()\n                                        }}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                                        <ListItemText primary={'Cerrar Sesion'} />\n                                    </ListItem>\n                                </List>\n                            </div>\n                        </div>\n                    </Drawer>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                        <AppBar position=\"static\">\n                            <Toolbar>\n                            {page!=='Armario'?\n                                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                                    history.goBack()\n                                }} color=\"inherit\" aria-label=\"menu\">\n                                    <ArrowBackRounded />\n                                </IconButton>\n                                :\n                                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                                    \n                                }} color=\"inherit\" aria-label=\"menu\">\n                                    <AccountCircle />\n                                </IconButton>\n                            }\n                            <Typography variant=\"h6\" className={classes.title} >\n                                {page}\n                            </Typography>\n                            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                                setMenuOpened(true)\n                            }} color=\"inherit\" aria-label=\"menu\">\n                                <MenuIcon />\n                            </IconButton>\n                            </Toolbar>\n                        </AppBar>\n                        </div>\n                    </div>\n                </div>\n                {children}\n            </div>\n        )\n    }\n/*\n                            <BottomNavigation value={this.state.selectedTab} onChange={(e,value)=>{\n                                this.setState({selectedTab:value})\n                                if(value==='recents'){\n                                    this.props.history.push('/')\n                                }\n                                else if(value==='favorites'){\n                                    this.props.history.push('/Riego')\n                                }\n                                else if(value==='nearby'){\n                                    this.props.history.push('/Aplicables')\n                                }\n                            }}>\n                                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n                                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n                                <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n                                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n                            </BottomNavigation>\n\n*/","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Layout} from './Layout'\n\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false,\n        selectedTab:'recents'\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().child(this.props.user).update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    render(){\n        return(\n            <Layout history={this.props.history} page=\"Armario\">\n                <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\n                    <div className='row'>\n                        <div className='col'>\n                            <BarraDeLuz/>            \n                        </div>\n                    </div>\n                    <div className='row'>\n                        <CarouselPlantas history={this.props.history}/>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.hora,\n        horaDeFinal:state.data.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                control={\n                                    <Checkbox color='default' checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                    />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    return(\n        <Row>\n            <div className=\"cola-auto ml-auto mr-auto\">\n                <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                    <FormControlLabel\n                        value=\"top\"\n                        control={<Radio\n                            value=\"Tierra\" \n                            name=\"Tierra\"\n                            color='default'\n                        />}\n                        label='Tierra'\n                        labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                        value=\"top\"\n                        control={<Radio\n                            value=\"Foliar\"\n                            name=\"Foliar\"\n                            color='default'\n                        />}\n                        label=\"Foliar\"\n                        labelPlacement=\"top\"\n                    />\n                </RadioGroup>\n            </div>\n        </Row>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button} from '@material-ui/core'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <Button\n                        onClick={this.props.handleBack}\n                        className='mr-2'\n                    >\n                        Atras\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }\n                    >\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                        Guardar {this.props.accion}\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    }\n  }));\n  /*\n  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >    \n                    <Typography>\n                        Cantidad de Agua y Aditivos\n                    </Typography>\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            {props.cantidadDeAgua?\n                                <Typography>\n                                    {props.cantidadDeAgua} L\n                                </Typography>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className=\"col-auto\">\n                            {props.aditivosUsados?\n                                <Typography className=\"col-auto\">\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\n                                        const cantidad = props.aditivosUsados[aditivo]\n                                        return(\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\n                                            </span>\n                                        )\n                                    })}\n                                </Typography>\n                                :\n                                null}\n                        </div>\n                    </div>\n                </ExpansionPanelSummary>*/\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <p className='text-dark'>Aditivos (ml)</p>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  return (\n    <Grid item xs={12}>\n        <Grid container justify=\"space-around\" className='mb-2' >\n            <Grid item>     \n                <Paper elevation={3}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Plantas Seleccionadas\n                            </Typography>\n                            {plantas.map(planta => (\n                                planta.selected?\n                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                        <strong>{planta.nombre}</strong>\n                                    </Typography>\n                                    :\n                                    null\n                            ))}\n                        </CardContent>\n                    </Card>\n                </Paper>\n            </Grid>\n            {tipoDeRiego?\n                <>  \n                    <Grid item>      \n                        <Paper elevation={3}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                        Tipo De Riego\n                                    </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong>{tipoDeRiego}</strong>\n                                        </Typography>\n                                </CardContent>\n                            </Card>\n                        </Paper>\n                    </Grid>\n                    <Grid item>      \n                        <Paper elevation={3}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                        <strong>{cantidadDeAgua} L de agua</strong>\n                                    </Typography>\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                        Aditivos usados\n                                    </Typography>\n                                    {aditivos?\n                                        Object.keys(aditivos).map(aditivo=>{\n                                            const dosis= aditivos[aditivo]\n                                            return(\n                                                <Typography className={classes.pos} color=\"textSecondary\">\n                                                    <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\n                                                </Typography>\n                                            )\n                                        })\n                                        :\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong>-</strong>\n                                        </Typography>\n                                    }\n                                </CardContent>\n                            </Card>\n                        </Paper>\n                    </Grid>\n                </>\n                :\n                <Grid item>      \n                    <Paper elevation={3}>\n                        <Card className={classes.card} variant=\"outlined\">\n                            <CardContent>\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                    Tipo De Poda\n                                </Typography>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    <strong>{tipoDePoda}</strong>\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n    </Grid>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===0){\n      return selectedPlants.length?false:true\n    }\n    else if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    else if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} elevation={3} orientation=\"vertical\">\n        {steps.map((step, index) => (\n            step?\n                <Step key={step.title}>\n                    <StepLabel>{step.title}</StepLabel>\n                <StepContent>\n                    <Typography>{step.content}</Typography>\n                    <div className={classes.actionsContainer}>\n                        <div>\n                        <Button\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            className={classes.button}\n                        >\n                            Atras\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            className={classes.button}\n                            disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                        >\n                            {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                        </Button>\n                        </div>\n                    </div>\n                    </StepContent>\n                </Step>\n                :\n                null\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={6} className={classes.resetContainer}>\n            {resumenAccion}\n            <BotoneraConfirmacionAccion\n                accion={tipoDeAccion}\n                handleBack={handleBack}\n                confirmarAccion={confirmarAccion}\n            />\n        </Paper>\n      )}\n    </div>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Riego'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                    <StepperAccion \n                        step1='Plantas'\n                        step2='Tipo De Riego'\n                        step3='Cantidad de agua y aditivos'\n                        selectedPlants={selectedPlants}\n                        cantidadDeAgua={this.state.cantidadDeAgua}\n                        tipoDeRiego={this.state.tipoDeRiego}\n                        confirmarAccion={this.confirmarAccion}\n                        resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                        tipoDeAccion='Riego'\n                        steps={[\n                                {\n                                title:'Plantas',\n                                content:(\n                                    <ElegirPlantaAccion\n                                        seleccionarPlanta={this.seleccionarPlanta}\n                                        plantas={this.state.plantas}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Tipo De Riego',\n                                content:(\n                                    <ElegirTipoDeRiego\n                                        tipoDeRiego={this.state.tipoDeRiego}    \n                                        cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Cantidad De Agua y Aditivos',\n                                content:(\n                                    <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            adivito='Fertlizante'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                )},\n                        ]}\n                    />\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                        <StepperAccion \n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            tipoDeRiego={this.state.tipoDeRiego}\n                            confirmarAccion={this.confirmarAccion}\n                            selectedPlants={selectedPlants}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                            tipoDeAccion='Fumigacion'\n                            steps={[\n                                {\n                                title:'Plantas',\n                                content:(\n                                    <ElegirPlantaAccion\n                                        seleccionarPlanta={this.seleccionarPlanta}\n                                        plantas={this.state.plantas}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Tipo De Riego',\n                                content:(\n                                    <ElegirTipoDeRiego\n                                        tipoDeRiego={this.state.tipoDeRiego}\n                                        cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Cantidad De Agua y Aditivos',\n                                content:(\n                                    <FormularioAccion\n                                        eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                        tipoDeRiego={this.state.tipoDeRiego}\n                                        cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                        cantidadDeAgua={this.state.cantidadDeAgua}\n                                        cambiarAditivo={this.cambiarAditivo}\n                                        aditivo='Insecticida'\n                                        aditivos={this.props.aditivos}\n                                        aditivosUsados={this.state.aditivos}\n                                        eliminarAditivo={this.eliminarAditivo}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                            ]}\n                        />\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            setCantidadDeDosis(cantidadDeDosis+=1)\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            {console.log(cantidadDeDosis)}\n            <Container fluid>\n                <Row>\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\n                        <Accordion defaultActiveKey='0'>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Caracteristicas</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\n                                    <div className=\"container\">\n                                        <div className=\"row mt-2\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Nombre\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                                        updateState(e.target.value,'nombre')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Marca\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                                        updateState(e.target.value,'marca')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Descripcion\n                                                    </Form.Label>\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                                        updateState(e.target.value,'descripcion')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Dosificacion</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\n                                        <Form>\n                                            <Container>\n                                                <Row className='flex-nowrap overflow-auto'>\n                                                {dosisList.length?\n                                                    dosisList.map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                    :\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                }\n                                                    <div className=\"col-auto align-self-center\">\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\n                                                        }}/>\n                                                    </div>\n                                                </Row>\n                                            </Container>\n                                        </Form>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant='outline-dark my-2' onClick={e=>{\n                                    alertNuevoAditivo()\n                                }}>\n                                Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\n                            </Button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                            {aditivos?\n                                aditivos.map((aditivo,i)=>(\n                                    <Paper elevation={4}>\n                                        <ExpansionPanel expanded={expanded === 'panel'+i} onChange={handleChange('panel'+i)}>\n                                            <ExpansionPanelSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1bh-content\"\n                                            id=\"panel1bh-header\"\n                                            >\n                                                <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                            </ExpansionPanelSummary>\n                                            <ExpansionPanelDetails>\n                                                <div className=\"container\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Descripcion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col text-left\">\n                                                            <small>\n                                                                {aditivo.descripcion}\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Dosificacion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\n                                                            <div className=\"row mb-2 mt-2\">\n                                                                <div className=\"col-auto mr-auto\">\n                                                                    <span className='badge badge-pill badge-dark'>\n                                                                        {tipoDeAplicacion}\n                                                                    </span>\n                                                                </div>\n                                                            <hr/>\n                                                            </div>\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                                <div className=\"row\" key={'dosis'+k}>\n                                                                    <div className=\"col-auto mr-auto\">\n                                                                        {aplicacion}\n                                                                    </div>\n                                                                    <div className=\"col-auto ml-auto\">\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </Fragment>\n                                                    ))}\n                                                    <div className=\"row mt-4\">\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\n                                                                alertEditarAditivo(aditivo)\n                                                            }}>\n                                                                Editar aditivo\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-outline-danger' onClick={e=>{\n                                                                eliminarAditivo(i)\n                                                            }}>\n                                                                Eliminar aditivo\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </Paper>\n                                ))\n                                :\n                                <h1>Agrega {title}</h1>\n                            }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    return(\n        <Col xs={{span:12,offset:0}}>\n            <Paper square elevation={2}>\n                <Paper>\n                    <Tabs\n                        value={value}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        onChange={(e,value)=>{\n                            setValue(value)\n                        }}\n                        aria-label=\"disabled tabs example\"\n                    >\n                        <Tab label=\"Fertilizantes\" />\n                        <Tab label=\"Insecticidas\" />\n                    </Tabs>\n                </Paper>\n                <TabPanel value={value} index={0}>\n                    <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n                </TabPanel>\n                <TabPanel value={value} index={1}>\n                    <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n                </TabPanel>\n            </Paper>\n        </Col>\n    )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\nimport { Configuracion } from './Pages/Configuracion';\nimport {Planta} from './Pages/Planta'\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user.uid,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <PantallaDeCarga/>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <Provider store={this.state.store}>\n              <HashRouter>\n                <Switch>\n                  <Route exact path='/' component={Armario}/>\n                  <Route exact path='/Riego' component={Riego}/>\n                  <Route exact path='/Poda' component={Poda}/>\n                  <Route exact path='/Insecticida' component={Insecticida}/>\n                  <Route exact path='/Aplicables' component={Aplicables}/>\n                  <Route exact path='/Configuracion' component={Configuracion}/>\n                  <Route exact path='/Planta' component={Planta}/>\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                </Switch>\n              </HashRouter>\n        </Provider>\n        )\n      }\n      else{\n        return (\n          <HashRouter>\n            <Switch>\n              <Route exact path='/' component={SignInPage}/>\n              <Route exact path='/Login' component={LogInPage}/>\n            </Switch>\n          </HashRouter>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nclass Aplicables extends Component{\n    render(){\n        return(\n            <Layout history={this.props.history} page='Aditivos'>\n                <div className=\"container-fluid overflow-auto d-flex flex-column justify-content-start h-100 px-0\">\n                    <div className=\"row\">\n                        <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-12 text-center'>\n                        <h1>Cargando</h1>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport PantallaDeCarga from './PantallaDeCarga'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const login=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Inicia Sesion\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    error={userError}\n                    helperText={userError?'Usuario No Encontrado':null}\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    helperText={passwordError?'Contraseña incorrecta':null}\n                    error={passwordError}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                    />\n                    <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Recuerdame\"\n                    />\n                    <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e=>{login()}}\n                    >\n                    Ingresar!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                        Olvidaste tu contraseña?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link variant=\"body2\">\n                          <LinkRouter to='/Login'>\n                            {\"No tienes una cuenta? Registrate!\"}\n                          </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport PantallaDeCarga from './PantallaDeCarga'\nimport {Link as LinkRouter} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const signin=async()=>{\n        setloading(true)\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n        .then(async e=>{\n            await database().ref().child(e.user.uid).update({\n                horaDeInicio:0,\n                horaDeFinal:0,\n                periodo:'Vegetativo'\n            })\n            history.push('/')\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography>\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Registrate\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                    />\n                    <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e=>{signin()}}\n                    >\n                    Registrate!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link variant=\"body2\">\n                            <LinkRouter to='/'>\n                                Ya tienes una cuenta? Ingresa!\n                            </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {TextField} from '@material-ui/core'\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={this.props.tipoDePoda} \n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    this.props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n\n                        <StepperAccion \n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            tipoDePoda={this.state.tipoDePoda}\n                            confirmarAccion={this.confirmarAccion}\n                            selectedPlants={selectedPlants}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                            tipoDeAccion='Poda'\n                            steps={[\n                            {\n                                title:'Plantas',\n                                content:(\n                                    <ElegirPlantaAccion\n                                        seleccionarPlanta={this.seleccionarPlanta}\n                                        plantas={this.state.plantas}\n                                    />\n                                )},\n                            {\n                                title:'Tipo De Poda',\n                                content:(\n                                    <ElegirTipoDePoda\n                                        handleChange={(nuevoTipoDePoda=>{\n                                            this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                        })}\n                                        tipoDePoda={this.state.tipoDePoda}\n                                    />\n                            )}]\n                            }\n                        />\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React from 'react'\nimport {Layout} from './Layout'\nexport const Configuracion =({history})=>{\n    return(\n        <Layout history={history} page='Configuracion'>\n            <div className=\"container-fluid accion\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        Configuracion\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}","import React from 'react'\nimport {Layout} from './Layout'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nexport const Planta =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre}>\n                <div className=\"container-fluid accion\">\n                    <DetallePlanta \n                        genetica={props.location.props.genetica}\n                        edad={props.location.props.edad}\n                        nacimiento={props.location.props.nacimiento}\n                        inicioVegetativo={props.location.props.inicioVegetativo}\n                        inicioFloracion={props.location.props.inicioFloracion}\n                    />\n                    <DetalleAcciones\n                        alertRiegos={props.location.props.alertRiegos}\n                        alertPodas={props.location.props.alertPodas}\n                        alertFumigaciones={props.location.props.alertFumigaciones}\n                    />\n                    <div className=\"row mt-4 justify-content-center\">\n                        <div className=\"col-auto\">\n                            <div className=\"btn-group\">\n                                <button type='button' className='btn btn-danger mr-4'onClick={props.location.props.alertEliminarPlanta} >Eliminar Planta</button>\n                                <button type='button' className='btn btn-outline-light'onClick={props.location.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}