{"version":3,"sources":["images/sea of green.jpg","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","Pages/Planta.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Component","BreadcrumbPlanta","item","return","nombre","AccionDetallada","eliminarAccion","a","firebase","ref","child","user","idPlanta","tipoDeAccion","id","remove","state","show","componentDidMount","setTimeout","setState","Grow","in","timeout","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertEliminarPlanta","tpe","eliminarPlanta","type","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","edad","undefined","alertEliminarPlanta","confirmAlert","customUI","alertCambiarCiclo","database","moment","diff","nacimiento","Paper","elevation","to","pathname","src","fotoPlanta","alt","AlertNuevaPlanta","faCheckCircle","document","getElementById","value","genetica","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","push","format","alertNuevaPlanta","Typography","plantas","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","history","Button","variant","color","faPlusCircle","connect","data","FechaYHora","setInterval","useStyles","makeStyles","theme","paper","marginTop","spacing","padding","backgroundColor","palette","primary","main","BarraDeLuz","useState","faltante","transcurrido","descanso","cicloLuminico","classes","periodo","horaDeInicio","horaDeFinal","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","signOut","auth","faCogs","closeNavbar","root","flexGrow","menuButton","marginRight","drawer","height","light","appBar","dark","contrastText","Layout","page","children","planta","menuOpened","setMenuOpened","redirect","setRedirect","AppBar","position","Toolbar","IconButton","edge","location","replace","goBack","aria-label","ArrowBackRounded","AccountCircle","Menu","Drawer","anchor","open","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","Divider","faTint","faCut","faBug","Armario","selectedTab","AlertCambiarInicio","update","horas","parseInt","hora","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","width","selectEmpty","alert","alignItems","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","FormControlLabel","control","Checkbox","selected","onChange","label","Alert","severity","ElegirTipoDeRiego","cambiarTipoDeRiego","RadioGroup","target","Radio","labelPlacement","BotoneraConfirmacionAccion","handleBack","confirmarAccion","faCheck","size","td","th","FormularioAccion","Container","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","marginBottom","ResumenAccion","Grid","xs","container","justify","CardContent","gutterBottom","parseFloat","slice","indexOf","toFixed","flexDirection","justifyContent","actionsContainer","resetContainer","paperSecondary","paddingBottom","paddingTop","StepperAccion","steps","resumenAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","console","log","md","lg","defaultActiveKey","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","heading","typography","pxToRem","secondaryHeading","text","secondary","paperMain","paperDark","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","tab","TabPanel","other","component","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","overflow","image","grey","objectFit","avatar","form","submit","background","link","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","foto","Avatar","noValidate","required","fullWidth","helperText","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","then","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","DetallePlanta","tileData","flexWrap","gridList","titleBar","listRoot","maxWidth","GridList","cols","tile","GridListTile","store","DetalleAcciones","startIcon","Planta","DeleteOutline","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createMuiTheme","white","App","onAuthStateChanged","on","snapshot","val","createStore","ThemeProvider","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6a003e8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNavBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row align-items-center mb-2\">\r\n                <div className=\"col-auto mr-auto\">\r\n                    {this.props.alertPlanta?\r\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\r\n                            this.props.alertPlanta()\r\n                        }} className='alert-icon'/>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"col-auto text-center text-light\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"col-auto ml-auto\">\r\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\r\n                        this.props.onClose()\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNavBar","import React , {Component} from 'react'\r\n\r\nclass BreadcrumbPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='breadcrumb bg-light text-dark mb-0'>\r\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\r\n                    this.props.return()\r\n                }}>\r\n                    {this.props.nombre}\r\n                </div>\r\n                {this.props.item?\r\n                    <div className=\"breadcrumb-item active\">\r\n                        {this.props.item}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nimport {Grow} from '@material-ui/core'\r\nclass AccionDetallada extends Component{\r\n    eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(this.props.user).child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\r\n    }\r\n    state={\r\n        show:false\r\n    }\r\n    componentDidMount=()=>{\r\n        setTimeout(() => {\r\n            this.setState({show:true})\r\n        }, 100);\r\n    }\r\n    render(){\r\n        return(\r\n            <Grow in={this.state.show} \r\n            {...(this.state.show ? { timeout: 1500 } : {})}>\r\n                <Card>\r\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            {this.props.tipoDeAccion==='podas'?\r\n                            <div className='container-fluid'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-auto ml-auto\">\r\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {this.props.tipoDePoda?\r\n                                        <div className='col'>\r\n                                            <hr/>\r\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                                :\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\r\n                                        </div>\r\n                                        <div className=\"col-auto ml-auto\">\r\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\r\n                                        </div>\r\n                                        <div className=\"col-auto\">\r\n                                            <h5>\r\n                                                <div className=\"badge badge-pill badge-light\">\r\n                                                    {this.props.accion.tipoDeRiego}\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.props.accion.aditivos?\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <FontAwesomeIcon icon={faSortDown}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Accordion.Toggle>\r\n                    {this.props.accion.aditivos?\r\n                        <Accordion.Collapse eventKey={this.props.index}>\r\n                            <Card.Body>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\r\n                                                <div className=\"col-auto\" key={aditivo+i}>\r\n                                                    <span className='badge badge-pill badge-dark'>\r\n                                                        <div className=\"col-auto\">\r\n                                                            {aditivo}\r\n                                                        </div>\r\n                                                        <div className=\"col-auto\">\r\n                                                            {this.props.accion.aditivos[aditivo]} ml\r\n                                                        </div>\r\n                                                    </span>\r\n                                                </div>\r\n                                            ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                        :\r\n                        null\r\n                    }\r\n                </Card>\r\n            </Grow>\r\n        )\r\n    }\r\n}\r\nexport default AccionDetallada","import React , {Component} from 'react'\r\n\r\nclass AlertEliminarPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                            this.props.eliminarPlanta()\r\n                            this.props.onClose()\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport { Accordion } from 'react-bootstrap'\r\nclass AlertPodas extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertPlanta}\r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\r\n                />\r\n                <div className=\"container-fluid submodalIn\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {this.props.podas?\r\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            this.props.onClose()\r\n                                            this.props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertPodas","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nclass AlertRiego extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid submodalIn\">\r\n                <Accordion defaultActiveKey='0'>\r\n                    {this.props.riegos?\r\n                        Object.keys(this.props.riegos).reverse().map((id,i)=>(\r\n                            <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                        ))\r\n                        :\r\n                        <>\r\n                            <div className=\"row justify-content-center mt-4\">\r\n                                <div className=\"col-auto\">\r\n                                    <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-4\">\r\n                                <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                        this.props.onClose()\r\n                                        this.props.history.push('/Riego')\r\n                                    }}>Riegala Ahora!</button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertRiego","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\n\r\nclass AlertCambiarCiclo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar \r\n                    alertPlanta={this.props.alertPlanta} \r\n                    onClose={this.props.onclose} \r\n                />\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarCiclo","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport AlertPodas from '../alerts/AlertPodas'\r\nimport AlertRiego from '../alerts/AlertRiego'\r\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\r\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nimport {Link} from 'react-router-dom'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Grow} from '@material-ui/core' \r\nclass TarjetaPlanta extends Component{\r\n    state={\r\n        edad:undefined\r\n    }\r\n    alertEliminarPlanta=()=>confirmAlert({\r\n        customUI : ({onClose}) =>{\r\n            return(\r\n                <div className=\"custom-ui\">\r\n                    <AlertEliminarPlanta\r\n                        user={this.props.user}\r\n                        nombre={this.props.nombre}\r\n                        eliminarPlanta={this.eliminarPlanta}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    alertCambiarCiclo=()=>confirmAlert({\r\n        customUI : ({onClose}) =>{\r\n            return(\r\n                <div className=\"custom-ui\">\r\n                    <AlertCambiarCiclo\r\n                        user={this.props.user}\r\n                        onClose={onClose}\r\n                        nombre={this.props.nombre}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    componentDidMount(){\r\n        this.setState({\r\n            edad:moment().diff(moment(this.props.nacimiento),'days')\r\n        })\r\n    }\r\n    eliminarPlanta=async ()=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(this.props.id).remove()\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col-auto\">\r\n                <Grow in={true}\r\n                    {...(true ? { timeout: 1500 } : {})}>\r\n                    <Paper elevation={6}>\r\n                        <Link className='text-white' to={{\r\n                            pathname:'/Planta',\r\n                            props:{\r\n                                ...this.props,\r\n                            }\r\n                        }}>\r\n                            <Card className=\"card bg-light\" >\r\n                                <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                                <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-left\">\r\n                                                <h4 className=\"card-title\">{this.props.nombre}</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-left\">\r\n                                                <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Overlay>\r\n                            </Card>\r\n                        </Link>\r\n                    </Paper>\r\n                </Grow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TarjetaPlanta","import React , {Component} from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNuevaPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto form-group\">\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                Nombre\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" className='form-control' id='inputNombre' />\r\n                    </div>\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                Genetica\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon \r\n                        icon={faCheckCircle} \r\n                        className=\"continueIcon alert-icon\" \r\n                        onClick={e=>{\r\n                            const nombre = document.getElementById('inputNombre').value\r\n                            const genetica = document.getElementById('inputGenetica').value\r\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\r\n                            this.props.onClose()\r\n                        }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon \r\n                        icon={faTimesCircle} \r\n                        onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}\r\n                        className='cancelIcon alert-icon'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\r\nimport Planta from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\r\nimport {Button,Typography,Grow} from '@material-ui/core'\r\nclass CarouselPlantas extends Component{\r\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\r\n        await database().ref().child(this.props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica,\r\n            nacimiento:moment().format('L')\r\n        })\r\n    }\r\n    alertNuevaPlanta=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui submodalOut'>\r\n                    <AlertNuevaPlanta\r\n                        onClose={onClose}\r\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    render(){\r\n        return(\r\n            <div className=\"container h-100 justify-content-center d-flex flex-column \">\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <Grow in={true}\r\n                            {...(true ? { timeout: 1500 } : {})}>\r\n                            <Typography>\r\n                                Plantas Dentro Del Armario\r\n                            </Typography>\r\n                        </Grow>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\r\n                    {this.props.plantas?\r\n                        Object.keys(this.props.plantas).map(key=>(\r\n                            <Planta\r\n                                user={this.props.user}\r\n                                nacimiento={this.props.plantas[key].nacimiento} \r\n                                genetica={this.props.plantas[key].genetica}\r\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \r\n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \r\n                                podas={this.props.plantas[key].podas} \r\n                                riegos={this.props.plantas[key].riegos}\r\n                                fumigaciones={this.props.plantas[key].fumigaciones}\r\n                                nombre={this.props.plantas[key].nombre}\r\n                                id={key}\r\n                                key={key}\r\n                                history={this.props.history}\r\n                            />\r\n                        ))\r\n                        :\r\n                        <div className=\"col-12 text-center\">\r\n                            <h2 className='text-white'>Aun No hay plantas</h2>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.alertNuevaPlanta}>\r\n                                Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col-3\">\r\n                        <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                            <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\r\n                        </Grow>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport {Typography} from '@material-ui/core'\r\n\r\nclass FechaYHora extends Component{\r\n    state={\r\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\r\n    }\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            this.setState({\r\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\r\n            })\r\n        }, 1000);\r\n    }\r\n    render(){\r\n        return(\r\n            <h3>{this.state.fecha}</h3>\r\n        )\r\n    }\r\n}\r\nexport default FechaYHora","import React, {useEffect,useState} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport FechaYHora from '../components/FechaYHora'\r\nimport './styles/table.css'\r\nimport {Paper,Typography} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grow}from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop:theme.spacing(3),\r\n        padding:theme.spacing(2),\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport const BarraDeLuz=(props)=>{\r\n    let [activo,setActivo]=useState(0)\r\n    let [faltante,setFaltante]=useState(undefined)\r\n    let [transcurrido,setTranscurrido]=useState(undefined)\r\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\r\n    let [descanso,setDesanso]=useState(undefined)\r\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\r\n    let [intervalo,setIntervalo]=useState(undefined)\r\n    \r\n    const actualizarEstado =(lamparaEncendida)=>{\r\n        let transcurrido = calcularTranscurrido(lamparaEncendida)\r\n        if(props.horaDeInicio>=props.horaDeFinal){\r\n            //console.log(moment(props.horaDeInicio,'h').diff(moment(),'h'))\r\n        }\r\n        else{\r\n            //console.log(-moment(props.horaDeInicio,'h').diff(moment(),'h'))\r\n        }\r\n        const cicloLuminico = actualizarCicloLuminico()\r\n        if(transcurrido.slice(0,2)>cicloLuminico){\r\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\r\n            setDesanso(true)\r\n        }\r\n        else{\r\n            setDesanso(false)\r\n        }\r\n        setTranscurrido(transcurrido)\r\n        setFaltante(calcularFaltante())\r\n        setCicloLuminico(cicloLuminico)\r\n        return [transcurrido,cicloLuminico]\r\n    }\r\n    const actualizarBarraDeProgreso=()=>{\r\n        const elements=actualizarEstado(calcularEstadoDeLampara())\r\n        const barra = document.getElementById('barraLuz')\r\n        barra.style.width=`${calcularEstadoDeBarra(elements[0],elements[1])}%`\r\n    }\r\n    const calcularEstadoDeLampara=()=>{\r\n        const hour = moment().format('LT').slice(0,2)\r\n        if(hour>=props.horaDeInicio && hour < props.horaDeFinal){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n   /* useEffect(()=>{\r\n        actualizarBarraDeProgreso()\r\n        const interval = setInterval(() => {\r\n            actualizarBarraDeProgreso()\r\n        }, 1000);\r\n        setIntervalo(interval)\r\n    })\r\n    useEffect(()=>{\r\n        clearInterval(intervalo)\r\n    })*/\r\n    const actualizarCicloLuminico=()=>{\r\n        if(props.horaDeFinal<=props.horaDeInicio){\r\n            return moment(props.horaDeFinal,'h').add(1,'days').diff(moment(props.horaDeInicio,'h'),'h')\r\n            \r\n        }\r\n        else{\r\n            return moment(props.horaDeFinal,'h').diff(moment(props.horaDeInicio,'h'),'h')\r\n        }\r\n    } \r\n    const calcularFaltante=()=>{\r\n        if(props.horaDeFinal<=props.horaDeInicio){\r\n            //const dif = props.horaDeInicio-props.horaDeFinal\r\n            let time = undefined\r\n            descanso?\r\n                time = moment().diff(moment(props.horaDeInicio,'h'),'m')\r\n                :\r\n                time = moment().diff(moment(props.horaDeFinal,'h').add(1,'days'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\r\n        }\r\n        else{\r\n            //const dif = props.horaDeInicio-props.horaDeFinal\r\n            let time = undefined\r\n            descanso?\r\n                time = -moment().diff(moment(props.horaDeInicio,'h'),'m')\r\n                :\r\n                time = moment().diff(moment(props.horaDeFinal,'h'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\r\n        }\r\n    }\r\n    const calcularTranscurrido=(lamparaEncendida)=>{\r\n        if(props.horaDeFinal<=props.horaDeInicio){\r\n            let time = undefined\r\n            descanso?\r\n                time = moment().diff(moment(props.hora,'h'),'m')\r\n                :\r\n                time = -moment().diff(moment(props.horaDeFinal,'h'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\r\n        }\r\n        else{\r\n            let time = undefined\r\n            descanso?\r\n                time = moment().diff(moment(props.horaDeInicio,'h').add(1,'days'),'m')\r\n                :\r\n                time = moment().diff(moment(props.horaDeFinal,'h').add(1,'days'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\r\n    }\r\n}\r\n    const cambiarEstadoDeLampara=()=>{\r\n        setLampraEncendida(!lamparaEncendida)\r\n    }\r\n    const calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\r\n        if(props.horaDeFinal<=props.horaDeInicio){\r\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\r\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\r\n            return minutos/(cicloLuminico*60)*100\r\n            \r\n        }\r\n        else{\r\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\r\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\r\n            return minutos/(cicloLuminico*60)*100\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-8 offset-md-2\">\r\n                    <Grow in={true}\r\n                    {...(true ? { timeout: 1500 } : {})}>\r\n                        <Paper elevation={3} className={classes.paper}>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-auto ml-auto mr-auto\">\r\n                                        <FechaYHora/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-4 mb-4\">\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography>Periodo {props.periodo}</Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography>Ciclo Luminico {cicloLuminico} Hs ({props.horaDeInicio}:00 - {props.horaDeFinal}:00)</Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography>\r\n                                            Transcurrido (Hs) {transcurrido}\r\n                                        </Typography>\r\n                                    </div>\r\n                                    <div className=\"col text-center\">\r\n                                        <Typography>\r\n                                            Faltante (Hs) {faltante}\r\n                                        </Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {descanso?\r\n                                        <div className=\"col text-center\">\r\n                                            <span className='badge badge-pill p-3 badge-dark'>\r\n                                                <Typography>\r\n                                                    Descansando...\r\n                                                </Typography>\r\n                                            </span>\r\n                                        </div>\r\n                                        :\r\n                                        <div className=\"col text-center\">\r\n                                            <span className='badge badge-pill p-3 badge-success'>\r\n                                                <Typography>\r\n                                                    Creciendo...\r\n                                                </Typography>\r\n                                            </span>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"row mt-4\">\r\n                                    <div className=\"col-10 offset-1\">\r\n                                        <div className=\"progress\">\r\n                                            <div className={descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grow>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nclass AlertConfiguracionArmario extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    onClose={this.props.onClose}\r\n                    title={'Configuracion Del Armario'}\r\n                />\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 offset-3\">\r\n                    <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='text-white'>Periodo</td>\r\n                                    <td className='text-right text-white'>\r\n                                        <select name=\"\" id=\"\">\r\n                                            <option value=\"\">\r\n                                                {this.props.periodo}\r\n                                            </option>\r\n                                            <option value=\"\">\r\n                                                Germinacion\r\n                                            </option>\r\n                                            <option value=\"\">\r\n                                                Floracion\r\n                                            </option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\r\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\r\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarPeriodo()\r\n                        }}>Cambiar Periodo</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarInicio()\r\n                        }}>Cambiar Hora de Inicio</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarFinal()\r\n                        }}>Cambiar Hora de Final</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertBotoneraConfirmacion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                        this.props.cambiarHora()\r\n                        this.props.alertConfiguracion()\r\n                    }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                        this.props.alertConfiguracion()\r\n                    }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertBotoneraConfirmacion","import React from 'react'\r\n\r\nconst InputCambiarHorario = ()=>{\r\n    return(\r\n        <div className=\"row justify-content-center mt-4\">\r\n            <div className=\"col-2\">\r\n                <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                            Hora\r\n                        </span>\r\n                    </div>\r\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-2 \">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                            Minutos\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default InputCambiarHorario","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\r\nclass AlertCambiarFinal extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Hora de Final Del Ciclo'\r\n                />\r\n                <InputCambiarHorario/>\r\n                <AlertBotoneraConfirmacion\r\n                    cambiarHora={this.props.cambiarHoraDeFinal}\r\n                    alertConfiguracion={this.props.alertConfiguracion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarFinal","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\r\nclass AlertCambiarFinal extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Hora de Final Del Ciclo'\r\n                />\r\n                <InputCambiarHorario/>\r\n                <AlertBotoneraConfirmacion\r\n                    cambiarHora={this.props.cambiarHoraDeInicio}\r\n                    alertConfiguracion={this.props.alertConfiguracion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarFinal","import React, {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertCambiarPeriodo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Periodo del Armario'\r\n                />\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Germinacion')\r\n                        }}>Germinacion</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Vegetativo')\r\n                        }}>Vegetativo</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Floracion')\r\n                        }}>Floracion</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-auto\">\r\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                            this.props.cambioDePeriodo()\r\n                            this.props.alertConfiguracion()\r\n                        }}/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                            this.props.alertConfiguracion()\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\r\n\r\nexport const MenuButton = styled.div`\r\n    cursor:pointer;\r\n    font-size:2.5rem\r\n`","import styled, {keyframes,css} from 'styled-components'\r\n\r\n\r\nconst slideLeftKeyframes = keyframes`\r\n    from{\r\n        right:-25%;\r\n        background-color:rgb(34,153,84,0);\r\n    }\r\n    to{\r\n        right:0%;\r\n        background-color:rgb(34,153,84,0.98);\r\n    }\r\n`\r\nconst slideLeft = css`\r\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\r\n    z-index:1\r\n`\r\n\r\nexport const Navbar=styled.nav`\r\n    ${slideLeft};\r\n    position:absolute;\r\n    top:0;\r\n    right:-25%;\r\n    height:100%;\r\n    width:25%;\r\n`\r\nexport const Hr = styled.hr`\r\n    border-top:1px solid white\r\n`","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AccionesRapidas=()=>{\r\n        return(\r\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\r\n                <div className=\"col-auto text-center\">\r\n                    <small>Acciones</small>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Riego'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Poda'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Insecticida'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\nexport default AccionesRapidas","import React, {Component} from 'react'\r\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport AccionesRapidas from '../components/AccionesRapidas'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport {auth} from 'firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Navbar extends Component{\r\n    signOut=async ()=>{\r\n        await auth().signOut()\r\n        return <Redirect to='/'/>\r\n    }\r\n    render(){\r\n        return(\r\n            <Nav>\r\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\r\n                                this.props.alertConfiguracion()\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\r\n                        </div>\r\n                    </div>\r\n                    <Hr/>\r\n                    {this.props.plantas?\r\n                        <AccionesRapidas/>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Hr/>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <Link to='/Aplicables'>\r\n                                <button type='button' className='btn btn-light'>Aditivos</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <Link to='/Deficiencias-Carencias'>\r\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto ml-auto mr-auto\">\r\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\r\n                                Cerrar Sesion\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        plantas:state.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Navbar)","import React , {useState} from 'react'\r\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\nimport {auth} from 'firebase'\r\nimport {AppBar,Toolbar,IconButton,Typography,Menu} from '@material-ui/core'\r\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined} from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer:{\r\n        height:'100%',\r\n        backgroundColor: theme.palette.primary.light\r\n    },\r\n    appBar:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n  }));\r\nexport const Layout=({page,children,history,planta})=>{\r\n    const classes = useStyles();\r\n    let [menuOpened,setMenuOpened]=useState(false)\r\n    let [selectedTabs,setSelectedTabs]=useState('recents')\r\n    let [redirect,setRedirect]=useState(false)\r\n    if(redirect){\r\n        return(\r\n            <Redirect to={{\r\n                pathname:'/Planta',\r\n                props:{...planta}\r\n            }}/>\r\n        )\r\n    }\r\n    return(\r\n        <div className=\"App d-flex flex-column justify-content-start\">\r\n                <AppBar className={classes.appBar} position=\"static\" >\r\n                    <Toolbar>\r\n                    {page!=='Armario'?\r\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                            if(!planta){\r\n                                if(history.location.pathname==='/Planta'){\r\n                                    history.replace('/')\r\n                                }\r\n                                else{\r\n                                    history.goBack()\r\n                                }\r\n                            }\r\n                            else{\r\n                                setRedirect(true)\r\n                            }\r\n                        }} color=\"inherit\" aria-label=\"menu\">\r\n                            <ArrowBackRounded />\r\n                        </IconButton>\r\n                        :\r\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                            \r\n                        }} color=\"inherit\" aria-label=\"menu\">\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    }\r\n                    <Typography variant=\"h6\" className={classes.title} >\r\n                        {page}\r\n                    </Typography>\r\n                    <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                        setMenuOpened(true)\r\n                    }} color=\"inherit\" aria-label=\"menu\">\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\r\n                    <div className={classes.drawer}>\r\n                        <div className=\"container d-flex flex-column h-100 justify-content-between\">\r\n                            <div>\r\n                                <List>\r\n                                    <Link to='/' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Armario'} >\r\n                                            <ListItemIcon><HomeOutlined/></ListItemIcon>\r\n                                            <ListItemText primary={'Armario'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Riego' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Regar'} >\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                                            <ListItemText primary={'Regar'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Poda' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Podar'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                                            <ListItemText primary={'Podar'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Insecticida' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Fumigar'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                            <ListItemText primary={'Fumigar'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                            </div>\r\n                            <div>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Aplicables' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Aditivos'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                            <ListItemText primary={'Aditivos'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Aditivos' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Carencias y Excesos'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                            <ListItemText primary={'Carencias y Excesos'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Configuracion' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Configuracion'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                                            <ListItemText primary={'Configuracion'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                                            await auth().signOut()\r\n                                        }}>\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                                        <ListItemText primary={'Cerrar Sesion'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Drawer>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n/*\r\n                            <BottomNavigation value={this.state.selectedTab} onChange={(e,value)=>{\r\n                                this.setState({selectedTab:value})\r\n                                if(value==='recents'){\r\n                                    this.props.history.push('/')\r\n                                }\r\n                                else if(value==='favorites'){\r\n                                    this.props.history.push('/Riego')\r\n                                }\r\n                                else if(value==='nearby'){\r\n                                    this.props.history.push('/Aplicables')\r\n                                }\r\n                            }}>\r\n                                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n                                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n                                <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n                                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\r\n                            </BottomNavigation>\r\n\r\n*/","import React , {Component} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport {BarraDeLuz} from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database} from 'firebase'\r\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\r\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\r\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\r\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\r\nimport {MenuButton} from './styles/ArmarioStyle'\r\nimport Navbar from '../components/Navbar'\r\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Layout} from './Layout'\r\n\r\nclass Armario extends Component{\r\n    state={\r\n        nuevoPeriodo:undefined,\r\n        menuOpened:false,\r\n        selectedTab:'recents'\r\n    }\r\n    alertCambiarPeriodo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarPeriodo\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        nuevoPeriodo={this.state.nuevoPeriodo}\r\n                        cambiarStatePeriodo={nuevoPeriodo=>{\r\n                            this.setState({\r\n                                nuevoPeriodo:nuevoPeriodo\r\n                            })\r\n                        }}\r\n                        cambioDePeriodo={this.cambioDePeriodo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertCambiarInicio=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarInicio\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertCambiarFinal=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarFinal\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertConfiguracion=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertConfiguracionArmario\r\n                        periodo={this.props.periodo}\r\n                        horaDeFinal={this.props.horaDeFinal}\r\n                        horaDeInicio={this.props.horaDeInicio}\r\n                        onClose={onClose}\r\n                        alertCambiarFinal={this.alertCambiarFinal}\r\n                        alertCambiarInicio={this.alertCambiarInicio}\r\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    cambioDePeriodo=async()=>{\r\n        await database().ref().child(this.props.user).update({\r\n            periodo:this.state.nuevoPeriodo\r\n        })\r\n    }\r\n    cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page=\"Armario\">\r\n                <div className=\"container-fluid overflow-auto\">\r\n                    <div className=\"row\">\r\n                        <BarraDeLuz periodo={this.props.periodo} horaDeInicio={this.props.horaDeInicio} horaDeFinal={this.props.horaDeFinal}/>      \r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <CarouselPlantas history={this.props.history}/>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.hora,\r\n        horaDeFinal:state.data.horaDeFinal,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\r\nclass AlertConfirmarAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.accionfn()\r\n                            this.props.onClose()\r\n                            this.props.history.goBack()\r\n                        }}>Confirmar</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}>Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass NavBarAccion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-2 text-left offset-1\">\r\n                    <Link to=\"/\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-6 text-center\">\r\n                    <h1 className='text-white'>{this.props.title}</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NavBarAccion\r\n","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab/'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    }\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas.length?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='primary' checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                    />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        <div className=\"col-12\">\r\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    return(\r\n        <Row>\r\n            <div className=\"cola-auto ml-auto mr-auto\">\r\n                <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                    <FormControlLabel\r\n                        value=\"top\"\r\n                        control={<Radio\r\n                            value=\"Tierra\" \r\n                            name=\"Tierra\"\r\n                            color='primary'\r\n                        />}\r\n                        label='Tierra'\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"top\"\r\n                        control={<Radio\r\n                            value=\"Foliar\"\r\n                            name=\"Foliar\"\r\n                            color='primary'\r\n                        />}\r\n                        label=\"Foliar\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </RadioGroup>\r\n            </div>\r\n        </Row>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button} from '@material-ui/core'\r\nclass BotoneraConfirmacionAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <Button\r\n                        onClick={this.props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Atras\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            e=>{\r\n                                this.props.confirmarAccion(this.props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                        Guardar {this.props.accion}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n  }));\r\n  /*\r\n  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >    \r\n                    <Typography>\r\n                        Cantidad de Agua y Aditivos\r\n                    </Typography>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            {props.cantidadDeAgua?\r\n                                <Typography>\r\n                                    {props.cantidadDeAgua} L\r\n                                </Typography>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            {props.aditivosUsados?\r\n                                <Typography className=\"col-auto\">\r\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\r\n                                        const cantidad = props.aditivosUsados[aditivo]\r\n                                        return(\r\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\r\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\r\n                                            </span>\r\n                                        )\r\n                                    })}\r\n                                </Typography>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                    </div>\r\n                </ExpansionPanelSummary>*/\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <p className='text-dark'>Aditivos (ml)</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos?\r\n                                        props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        :\r\n                                        <div className=\"col-12\">\r\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Grid item xs={12}>\r\n        <Grid container justify=\"space-around\" className='mb-2' >\r\n            <Grid item>     \r\n                <Paper elevation={3}>\r\n                    <Card className={classes.card} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                Plantas Seleccionadas\r\n                            </Typography>\r\n                            {plantas.map(planta => (\r\n                                planta.selected?\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        <strong>{planta.nombre}</strong>\r\n                                    </Typography>\r\n                                    :\r\n                                    null\r\n                            ))}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Paper>\r\n            </Grid>\r\n            {tipoDeRiego?\r\n                <>  \r\n                    <Grid item>      \r\n                        <Paper elevation={3}>\r\n                            <Card className={classes.card} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Tipo De Riego\r\n                                    </Typography>\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            <strong>{tipoDeRiego}</strong>\r\n                                        </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>      \r\n                        <Paper elevation={3}>\r\n                            <Card className={classes.card} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        <strong>{cantidadDeAgua} L de agua</strong>\r\n                                    </Typography>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Aditivos usados\r\n                                    </Typography>\r\n                                    {aditivos?\r\n                                        Object.keys(aditivos).map(aditivo=>{\r\n                                            const dosis= aditivos[aditivo]\r\n                                            return(\r\n                                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                                    <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\r\n                                                </Typography>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            <strong>-</strong>\r\n                                        </Typography>\r\n                                    }\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Paper>\r\n                    </Grid>\r\n                </>\r\n                :\r\n                <Grid item>      \r\n                    <Paper elevation={3}>\r\n                        <Card className={classes.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                    Tipo De Poda\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <strong>{tipoDePoda}</strong>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Paper>\r\n                </Grid>\r\n            }\r\n        </Grid>\r\n    </Grid>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperSecondary:{\r\n    paddingBottom:theme.spacing(2),\r\n    paddingTop:theme.spacing(2),\r\n    backgroundColor:theme.palette.primary.dark,\r\n  },\r\n  padding:{\r\n    paddingBottom:theme.spacing(1)\r\n  }\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(activeStep===0){\r\n      return selectedPlants.length?false:true\r\n    }\r\n    else if(activeStep===1){\r\n      if(tipoDeAccion==='Poda'){\r\n        return tipoDePoda?false:true\r\n      }\r\n      else{\r\n        return tipoDeRiego?false:true\r\n      }\r\n    }\r\n    else if(activeStep===2){\r\n        return cantidadDeAgua?false:true\r\n    }\r\n  }\r\n  return (\r\n    <Grow in={true}\r\n      {...(true ? { timeout: 1500 } : {})}>\r\n      <div className={classes.root}>\r\n          <Stepper activeStep={activeStep} elevation={3} orientation=\"vertical\">\r\n            {steps.map((step, index) => (\r\n              step?\r\n                    <Step key={step.title}>\r\n                      <Paper elevation={3} className={classes.paperSecondary}>\r\n                        <StepLabel>{step.title}</StepLabel>\r\n                      </Paper>\r\n                    <StepContent>\r\n                      <Paper elevation={6} className={classes.padding}>\r\n                          <Typography>{step.content}</Typography>\r\n                          <div className={classes.actionsContainer}>\r\n                              <div>\r\n                              <Button\r\n                                  disabled={activeStep === 0}\r\n                                  onClick={handleBack}\r\n                                  className={classes.button}\r\n                              >\r\n                                  Atras\r\n                              </Button>\r\n                              <Button\r\n                                  variant=\"contained\"\r\n                                  color=\"primary\"\r\n                                  onClick={handleNext}\r\n                                  className={classes.button}\r\n                                  disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                              >\r\n                                  {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                              </Button>\r\n                              </div>\r\n                          </div>\r\n                      </Paper>\r\n                        </StepContent>\r\n                    </Step>\r\n                    :\r\n                    null\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length && (\r\n            <Paper square elevation={6} className={classes.resetContainer}>\r\n                {resumenAccion}\r\n                <BotoneraConfirmacionAccion\r\n                    accion={tipoDeAccion}\r\n                    handleBack={handleBack}\r\n                    confirmarAccion={confirmarAccion}\r\n                />\r\n            </Paper>\r\n          )}\r\n      </div>\r\n    </Grow>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {Layout} from './Layout'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Riego'>\r\n                <div className=\"container-fluid accion h-100\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 offset-md-3\">\r\n                            <StepperAccion \r\n                                step1='Plantas'\r\n                                step2='Tipo De Riego'\r\n                                step3='Cantidad de agua y aditivos'\r\n                                selectedPlants={selectedPlants}\r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Riego'\r\n                                steps={[\r\n                                        {\r\n                                        title:'Plantas',\r\n                                        content:(\r\n                                            <ElegirPlantaAccion\r\n                                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                                plantas={this.state.plantas}\r\n                                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                                expanded={this.state.expanded}\r\n                                            />\r\n                                        )},\r\n                                        {title:'Tipo De Riego',\r\n                                        content:(\r\n                                            <ElegirTipoDeRiego\r\n                                                tipoDeRiego={this.state.tipoDeRiego}    \r\n                                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                                expanded={this.state.expanded}\r\n                                            />\r\n                                        )},\r\n                                        {title:'Cantidad De Agua y Aditivos',\r\n                                        content:(\r\n                                            <FormularioAccion\r\n                                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                                    tipoDeRiego={this.state.tipoDeRiego}\r\n                                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                                    cambiarAditivo={this.cambiarAditivo}\r\n                                                    adivito='Fertlizante'\r\n                                                    aditivos={this.props.aditivos}\r\n                                                    aditivosUsados={this.state.aditivos}\r\n                                                    eliminarAditivo={this.eliminarAditivo}\r\n                                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                                    expanded={this.state.expanded}\r\n                                                />\r\n                                        )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\r\nimport NavBarAccion from '../components/NavBarAccion';\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Fumigacion'>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 offset-md-3\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Fumigacion'\r\n                                steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Tipo De Riego',\r\n                                    content:(\r\n                                        <ElegirTipoDeRiego\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Cantidad De Agua y Aditivos',\r\n                                    content:(\r\n                                        <FormularioAccion\r\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                            cambiarAditivo={this.cambiarAditivo}\r\n                                            aditivo='Insecticida'\r\n                                            aditivos={this.props.aditivos}\r\n                                            aditivosUsados={this.state.aditivos}\r\n                                            eliminarAditivo={this.eliminarAditivo}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    let dosisList = []\r\n    if(aditivo){\r\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\r\n            setCantidadDeDosis(cantidadDeDosis+=1)\r\n            if(tipoDeRiego==='Foliar'){\r\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\r\n                    dosisList.push({\r\n                        nombre:dosificacion,\r\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\r\n                    })\r\n                    return null\r\n                })\r\n            }\r\n            else{\r\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\r\n                    dosisList.push({\r\n                        nombre:dosificacion,\r\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\r\n                    })\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    return(\r\n        <Form className='d-flex align-items-center mb-3'>\r\n            {console.log(cantidadDeDosis)}\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\r\n                        <Accordion defaultActiveKey='0'>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h4 className='text-white'>Caracteristicas</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row mt-2\">\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Nombre\r\n                                                    </Form.Label>\r\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\r\n                                                        updateState(e.target.value,'nombre')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Marca\r\n                                                    </Form.Label>\r\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\r\n                                                        updateState(e.target.value,'marca')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Descripcion\r\n                                                    </Form.Label>\r\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\r\n                                                        updateState(e.target.value,'descripcion')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h4 className='text-white'>Dosificacion</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\r\n                                        <Form>\r\n                                            <Container>\r\n                                                <Row className='flex-nowrap overflow-auto'>\r\n                                                {dosisList.length?\r\n                                                    dosisList.map((vacio,i)=>(\r\n                                                        <div className=\"col-auto\">\r\n                                                            <Form.Group >\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Etapa\r\n                                                                </Form.Label>\r\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\r\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\r\n                                                                }}/>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Cantidad\r\n                                                                </Form.Label>\r\n                                                                <InputGroup>\r\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\r\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                                                                    }}/>\r\n                                                                    <InputGroup.Prepend>\r\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\r\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                                                        }}>\r\n                                                                            <option value='1' selected>ml/L</option>\r\n                                                                            <option value=\"2\">gr/L</option>\r\n                                                                        </Form.Control>\r\n                                                                    </InputGroup.Prepend>\r\n                                                                </InputGroup>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Tipo de riego\r\n                                                                </Form.Label>\r\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\r\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                                                }}>\r\n                                                                    <option>-</option>\r\n                                                                    <option value='Foliar'>Foliar</option>\r\n                                                                    <option value=\"Tierra\">Tierra</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    ))\r\n                                                    :\r\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                                                        <div className=\"col-auto\">\r\n                                                            <Form.Group >\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Etapa\r\n                                                                </Form.Label>\r\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\r\n                                                                }}/>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Cantidad\r\n                                                                </Form.Label>\r\n                                                                <InputGroup>\r\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\r\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                                                                    }}/>\r\n                                                                    <InputGroup.Prepend>\r\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\r\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                                                        }}>\r\n                                                                            <option value='1' selected>ml/L</option>\r\n                                                                            <option value=\"2\">gr/L</option>\r\n                                                                        </Form.Control>\r\n                                                                    </InputGroup.Prepend>\r\n                                                                </InputGroup>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Tipo de riego\r\n                                                                </Form.Label>\r\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\r\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                                                }}>\r\n                                                                    <option>-</option>\r\n                                                                    <option value='Foliar'>Foliar</option>\r\n                                                                    <option value=\"Tierra\">Tierra</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                                    <div className=\"col-auto align-self-center\">\r\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\r\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\r\n                                                        }}/>\r\n                                                    </div>\r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}","import React ,{useState}from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport {database} from 'firebase'\r\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos=aditivos\r\n        newAditivos.push(newAditivo)\r\n        switch (tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        console.log(valor)\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\r\n            <AlertNavBar\r\n                onClose={onClose}\r\n                title={tipoDeAditivo}\r\n            />\r\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\r\n                updateState(valor,nombre,dosis)\r\n            }}/>\r\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\r\n        </div>\r\n    )\r\n}","import React,{Fragment} from 'react'\r\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color:theme.palette.secondary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n        color:theme.palette.secondary.contrastText\r\n    },\r\n  }));\r\n\r\n\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const alertNuevoAditivo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                        aditivo={aditivo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleChange = panel => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <div className=\"container mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                            <Button variant='outline-dark my-2' onClick={e=>{\r\n                                    alertNuevoAditivo()\r\n                                }}>\r\n                                Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\r\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\r\n                            </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                            {aditivos?\r\n                                aditivos.map((aditivo,i)=>(\r\n                                    <ExpansionPanel expanded={expanded === 'panel'+i} onChange={handleChange('panel'+i)}>\r\n                                        <Paper elevation={4} className={classes.paperDark}>\r\n                                            <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1bh-content\"\r\n                                            id=\"panel1bh-header\"\r\n                                            >\r\n                                                <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                        </Paper>\r\n                                        <Paper elevation={4} className={classes.paperMain}>\r\n                                            <ExpansionPanelDetails>\r\n                                                <div className=\"container\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 text-center\">\r\n                                                            <strong>\r\n                                                                Descripcion\r\n                                                            </strong>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col text-left\">\r\n                                                            <small>\r\n                                                                {aditivo.descripcion}\r\n                                                            </small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 text-center\">\r\n                                                            <strong>\r\n                                                                Dosificacion\r\n                                                            </strong>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                            <div className=\"row mb-2 mt-2\">\r\n                                                                <div className=\"col-auto mr-auto\">\r\n                                                                    <span className='badge badge-pill badge-dark'>\r\n                                                                        {tipoDeAplicacion}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            <hr/>\r\n                                                            </div>\r\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                                <div className=\"row\" key={'dosis'+k}>\r\n                                                                    <div className=\"col-auto mr-auto\">\r\n                                                                        {aplicacion}\r\n                                                                    </div>\r\n                                                                    <div className=\"col-auto ml-auto\">\r\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </Fragment>\r\n                                                    ))}\r\n                                                    <div className=\"row mt-4\">\r\n                                                        <div className=\"col-auto ml-auto mr-auto\">\r\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                                                alertEditarAditivo(aditivo)\r\n                                                            }}>\r\n                                                                Editar aditivo\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"col-auto ml-auto mr-auto\">\r\n                                                            <button type='button' className='btn btn-danger' onClick={e=>{\r\n                                                                eliminarAditivo(i)\r\n                                                            }}>\r\n                                                                Eliminar aditivo\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ExpansionPanelDetails>\r\n                                            </Paper>\r\n                                        </ExpansionPanel>\r\n                                ))\r\n                                :\r\n                                <h1>Agrega {title}</h1>\r\n                            }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\r\nimport {TableAditivos} from './TableAditivos'\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paperMain: {\r\n      backgroundColor: theme.palette.primary.light,\r\n    },\r\n    paperDark: {\r\n    backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    tab:{\r\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\r\n            color: '#fff'\r\n        },\r\n    },\r\n    \".MuiTabs-flexContainer.PrivateTabIndicator-colorPrimary-135\":{\r\n        color: '#fff'\r\n    },\r\n  }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [value, setValue] = useState(0);\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 offset-md-3\">\r\n                    <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                        <Paper square elevation={2} className={classes.paperMain}>\r\n                            <Paper className={classes.paperDark}>\r\n                                <Tabs\r\n                                    value={value}\r\n                                    indicatorColor=\"primary\"\r\n                                    textColor=\"primary\"\r\n                                    onChange={(e,value)=>{\r\n                                        setValue(value)\r\n                                    }}\r\n                                    aria-label=\"disabled tabs example\"\r\n                                >\r\n                                    <Tab label=\"Fertilizantes\" className={classes.tab}/>\r\n                                    <Tab label=\"Insecticidas\" className={classes.tab}/>\r\n                                </Tabs>\r\n                            </Paper>\r\n                            <TabPanel value={value} index={0}>\r\n                                <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n                            </TabPanel>\r\n                            <TabPanel value={value} index={1}>\r\n                                <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n                            </TabPanel>\r\n                        </Paper>\r\n                    </Grow>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './Layout'\r\nclass Aplicables extends Component{\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page='Aditivos'>\r\n                <div className=\"container-fluid overflow-auto\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport './styles/loading.css'\r\nclass PantallaDeCarga extends Component{\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-center'>\r\n                        <h1>Cargando</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PantallaDeCarga","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport PantallaDeCarga from './PantallaDeCarga'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.dark\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  '.MuiFormLabel-root.Mui-focused':{\r\n    color:'#ffffff'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  background:{\r\n    background:'#00897b !important',\r\n    color:'black'\r\n  },\r\n  link:{\r\n    color:'#ffffff'\r\n  }\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const login=async()=>{\r\n        setloading(true)\r\n        setUserError(undefined)\r\n        setPasswordError(undefined)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Inicia Sesion\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    error={userError}\r\n                    helperText={userError?'Usuario No Encontrado':null}\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                    autoFocus\r\n                    />\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    helperText={passwordError?'Contraseña incorrecta':null}\r\n                    error={passwordError}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                    label=\"Recuerdame\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{login()}}\r\n                    >\r\n                    Ingresar!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                        Olvidaste tu contraseña?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link variant=\"body2\">\r\n                          <LinkRouter to='/Login' className={classes.link}>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                          </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth, database} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport PantallaDeCarga from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.dark\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  '&.MuiFormLabel-root.Mui-focused':{\r\n    color:theme.palette.secondary.contrastText\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  background:{\r\n    background:'#00897b !important',\r\n    color:'black'\r\n  },\r\n  link:{\r\n    color:'#ffffff'\r\n  }\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const signin=async()=>{\r\n        setloading(true)\r\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(async e=>{\r\n            await database().ref().child(e.user.uid).update({\r\n                horaDeInicio:0,\r\n                horaDeFinal:0,\r\n                periodo:'Vegetativo'\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography>\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Registrate\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      id=\"email\"\r\n                      label=\"Email\"\r\n                      name=\"email\"\r\n                      value={inputUser}\r\n                      onChange={e=>{setInputUser(e.target.value)}}\r\n                      autoFocus\r\n                    />\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"normal\"\r\n                      required\r\n                      fullWidth\r\n                      name=\"password\"\r\n                      value={inputPassword}\r\n                      onChange={e=>{setInputPassword(e.target.value)}}\r\n                      label=\"contraseña\"\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{signin()}}\r\n                    >\r\n                    Registrate!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link>\r\n                            <LinkRouter to='/' className={classes.link}>\r\n                                Ya tienes una cuenta? Ingresa!\r\n                            </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {TextField} from '@material-ui/core'\r\nclass ElegirTipoDePoda extends Component{\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={this.props.tipoDePoda} \r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    this.props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ElegirTipoDePoda","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:moment().format('LLL'),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Poda'>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6 offset-md-3\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDePoda={this.state.tipoDePoda}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                                tipoDeAccion='Poda'\r\n                                steps={[\r\n                                {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                        />\r\n                                    )},\r\n                                {\r\n                                    title:'Tipo De Poda',\r\n                                    content:(\r\n                                        <ElegirTipoDePoda\r\n                                            handleChange={(nuevoTipoDePoda=>{\r\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                            })}\r\n                                            tipoDePoda={this.state.tipoDePoda}\r\n                                        />\r\n                                )}]\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React from 'react'\r\nimport {Layout} from './Layout'\r\nexport const Configuracion =({history})=>{\r\n    return(\r\n        <Layout history={history} page='Configuracion'>\r\n            <div className=\"container-fluid accion\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Configuracion\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {List, ListItem,ListItemText,Paper, Divider} from '@material-ui/core'\r\nexport const DetallePlanta=(props)=>{\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    const useStyles = makeStyles(theme => ({\r\n        root: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            justifyContent: 'space-around',\r\n            overflow: 'hidden',\r\n            backgroundColor: theme.palette.background.paper,\r\n        },\r\n        gridList: {\r\n            flexWrap: 'nowrap',\r\n          // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n            transform: 'translateZ(0)',\r\n        },\r\n        title: {\r\n            color: theme.palette.primary.light,\r\n        },\r\n        titleBar: {\r\n            background:\r\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n        },\r\n        listRoot: {\r\n            width: '100%',\r\n            maxWidth: 360,\r\n        },\r\n        paper:{\r\n            backgroundColor:theme.palette.primary.main\r\n        }\r\n    }));\r\n    const classes = useStyles()\r\n    return(\r\n        <>\r\n            <Col xs={12}>\r\n                <GridList className={classes.gridList} cols={2.5}>\r\n                    {tileData.map(tile => (\r\n                    <GridListTile key={tile.img}>\r\n                        <img src={tile.img}  />\r\n                    </GridListTile>\r\n                    ))}\r\n                </GridList>\r\n            </Col>\r\n            <div className='col-3 mt-2'>\r\n                <div className={classes.listRoot}>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <List component='nav'>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Genetica\" secondary={props.genetica}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Edad\" secondary={props.edad}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Fecha De Germinacion\" secondary={`${props.nacimiento} (${moment().diff(moment(props.nacimiento),'days')} Dias)`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Fecha De Vegetativo\" secondary={`${props.inicioVegetativo} (${moment().diff(moment(props.inicioVegetativo),'days')} Dias)`}/>\r\n                            </ListItem>\r\n                            <Divider/>\r\n                            <ListItem>\r\n                                <ListItemText primary=\"Fecha De Floracion\" secondary={`${props.inicioFloracion} (${moment().diff(moment(props.inicioFloracion),'days')} Dias)`}/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from '@material-ui/core'\r\nexport const DetalleAcciones =(props)=>{\r\n    return(\r\n        <div className=\"col\">\r\n            <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                <Link to={{ \r\n                    pathname:'/Planta/Riegos',\r\n                    props:{\r\n                        ...props\r\n                }}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<FontAwesomeIcon icon={faTint}/>}\r\n                        >Riegos\r\n                        </Button>\r\n                </Link>\r\n            </Col>\r\n            <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\r\n            <Link to={{ \r\n                pathname:'/Planta/Podas',\r\n                props:{\r\n                    ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        startIcon={<FontAwesomeIcon icon={faCut}/>}\r\n                    >Podas\r\n                    </Button>\r\n                </Link>\r\n            </Col>\r\n            <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                <Link to={{ \r\n                    pathname:'/Planta/Fumigaciones',\r\n                    props:{\r\n                        ...props\r\n                    }}}>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            startIcon={<FontAwesomeIcon icon={faBug}/>}\r\n                        >Fumigaciones\r\n                        </Button>\r\n                </Link>\r\n            </Col>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport Layout from './Pages/Layout'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\r\nimport { Configuracion } from './Pages/Configuracion';\r\nimport {Planta} from './Pages/Planta'\r\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\r\nimport {PlantaPodas} from './Pages/PlantaPodas'\r\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    white:'#fff',\r\n    primary: {\r\n      light: '#4ebaaa',\r\n      main: '#00897b',\r\n      dark: '#005b4f',\r\n      contrastText: '#000',\r\n    },\r\n    secondary: {\r\n      light: '#4f83cc',\r\n      main: '#01579b',\r\n      dark: '#002f6c',\r\n      contrastText: '#fff',\r\n    },\r\n  },\r\n});\r\nclass App extends Component {\r\n  state={\r\n    loading:true\r\n  }\r\n  cambiarPeriodo(nuevoPeriodo){\r\n    this.setState({\r\n      periodo:nuevoPeriodo\r\n    })\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user.uid,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <PantallaDeCarga/>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <ThemeProvider theme={theme}>\r\n            <Provider store={this.state.store}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route exact path='/' component={Armario}/>\r\n                  <Route exact path='/Riego' component={Riego}/>\r\n                  <Route exact path='/Poda' component={Poda}/>\r\n                  <Route exact path='/Insecticida' component={Insecticida}/>\r\n                  <Route exact path='/Aplicables' component={Aplicables}/>\r\n                  <Route exact path='/Configuracion' component={Configuracion}/>\r\n                  <Route exact path='/Planta' component={Planta}/>\r\n                  <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\r\n                  <Route exact path='/Planta/Podas' component={PlantaPodas}/>\r\n                  <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n                </Switch>\r\n              </HashRouter>\r\n            </Provider>\r\n          </ThemeProvider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <ThemeProvider theme={theme}>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={SignInPage}/>\r\n                <Route exact path='/Login' component={LogInPage}/>\r\n              </Switch>\r\n            </HashRouter>\r\n          </ThemeProvider>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\r\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {DeleteOutline} from '@material-ui/icons'\r\nimport {Button} from '@material-ui/core'\r\nexport const Planta =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre}>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                        <DetallePlanta \r\n                            genetica={props.location.props.genetica}\r\n                            edad={props.location.props.edad}\r\n                            nacimiento={props.location.props.nacimiento}\r\n                            inicioVegetativo={props.location.props.inicioVegetativo}\r\n                            inicioFloracion={props.location.props.inicioFloracion}\r\n                        />\r\n                        <DetalleAcciones\r\n                            {...props.location.props}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <div className=\"btn-group\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"secondary\"\r\n                                    startIcon={<DeleteOutline/>}\r\n                                    onClick={props.location.props.alertEliminarPlanta}\r\n                                >Eliminar Planta\r\n                                </Button>\r\n                                <button type='button' className='btn btn-outline-light'onClick={props.location.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaRiegos =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {props.location.props.riegos?\r\n                            Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Riego')\r\n                                        }}>Riegala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaPodas =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {props.location.props.podas?\r\n                            Object.keys(props.location.props.podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>        \r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaFumigaciones =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {props.location.props.fumigaciones?\r\n                            Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Insecticida')\r\n                                        }}>Fumigala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}