{"version":3,"sources":["images/sea of green.jpg","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Armario.jsx","Pages/Layout.jsx","components/NavBarAccion.jsx","alerts/AlertConfirmarAccion.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","App.js","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","onClick","e","alertRiegos","icon","faTint","alertPodas","faCut","alertFumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","user","idPlanta","tipoDeAccion","remove","alert","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertPodas","defaultActiveKey","podas","reverse","history","push","AlertRiego","riegos","fumigaciones","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","database","setState","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","format","alertNuevaPlanta","plantas","faPlusCircle","connect","data","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","MenuButton","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","to","signOut","auth","faCogs","closeNavbar","Button","Armario","menuOpened","AlertCambiarInicio","update","horas","changeStateOfNavbar","faAlignRight","Drawer","anchor","open","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Layout","children","NavBarAccion","CheckboxPlanta","checked","handleClick","llave","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","ElegirPlantaAccion","seleccionarPlanta","FormGroup","row","planta","FormControlLabel","control","Checkbox","color","selected","onChange","label","ElegirTipoDeRiego","cambiarTipoDeRiego","RadioGroup","aria-label","target","Radio","labelPlacement","BotoneraConfirmacionAccion","handleBack","confirmarAccion","faCheck","size","td","th","FormularioAccion","classes","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","marginBottom","ResumenAccion","Grid","container","justify","CardContent","Typography","gutterBottom","parseFloat","toFixed","root","height","flexDirection","justifyContent","marginRight","actionsContainer","resetContainer","padding","StepperAccion","steps","resumenAccion","selectedPlants","React","useState","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","elevation","orientation","step","Step","StepLabel","StepContent","content","length","Paper","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","platnas","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","lg","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","store","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","TableAditivos","splice","bordered","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","TabAditivos","setKey","Tabs","activeKey","onSelect","Tab","Aplicables","PantallaDeCarga","faCannabis","image","backgroundColor","palette","grey","paper","alignItems","avatar","secondary","main","form","submit","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","component","CssBaseline","foto","Avatar","noValidate","required","fullWidth","helperText","Link","href","Box","mt","LogInPage","signin","createUserWithEmailAndPassword","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","uid","on","snapshot","val","createStore","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.41236bac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nclass DetallePlanta extends Component{\r\n    render(){\r\n        return(\r\n            <Row className=\"mt-4 mb-4 align-items-center\">\r\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\r\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\r\n                </Col>\r\n                <Col md={8} className=\"align-self-center\">\r\n                    <Container className=\"container\">\r\n                        <Table striped hover variant='dark' >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Genetica</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Edad</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Fecha de Germinacion</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Inicio de Vegetativo</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{\r\n                                            this.props.inicioVegetativo?\r\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\r\n                                                :\r\n                                                '--/--/----'\r\n                                            }</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Inicio de Floracion</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{\r\n                                            this.props.inicioFloracion?\r\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\r\n                                            :\r\n                                            '--/--/----'\r\n                                        }</h6>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default DetallePlanta","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nclass DetalleAcciones extends Component{\r\n    render(){\r\n        return(\r\n            <Row className=\"pt-2 pb-2 botonera justify-content-center \">\r\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                    <div className=\"alertButton\" onClick={e=>{\r\n                        this.props.alertRiegos()\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\r\n                        <small className='alert-icon-text text-white'>Riegos</small>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                    <div className=\"alertButton\" onClick={e=>{\r\n                        this.props.alertPodas()\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\r\n                        <small className='alert-icon-text text-white'>Podas</small>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                    <div className=\"alertButton\" onClick={e=>{\r\n                        this.props.alertFumigaciones()\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\r\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default DetalleAcciones","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNavBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row align-items-center mb-2\">\r\n                <div className=\"col-auto mr-auto\">\r\n                    {this.props.alertPlanta?\r\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\r\n                            this.props.alertPlanta()\r\n                        }} className='alert-icon'/>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"col-auto text-center text-light\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"col-auto ml-auto\">\r\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\r\n                        this.props.onClose()\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNavBar","import React , {Component} from 'react'\r\n\r\nclass BreadcrumbPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='breadcrumb bg-light text-dark mb-0'>\r\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\r\n                    this.props.return()\r\n                }}>\r\n                    {this.props.nombre}\r\n                </div>\r\n                {this.props.item?\r\n                    <div className=\"breadcrumb-item active\">\r\n                        {this.props.item}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\r\nimport DetallePlanta from '../alert-components/DetallePlanta'\r\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {storage} from 'firebase'\r\nclass AlertPlanta extends Component{\r\n    subirArchivo= async ()=>{\r\n        const ref = await storage().ref(this.props.id)\r\n        const file = document.getElementById('input').files[0]\r\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\r\n        ref.put(file).then(e=>{\r\n            console.log('Archivo subido Correctamente')\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\r\n                <AlertNavBar \r\n                    alertPlanta={this.props.alertPlanta} \r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\r\n                />\r\n                <DetallePlanta \r\n                    genetica={this.props.genetica}\r\n                    edad={this.props.edad}\r\n                    nacimiento={this.props.nacimiento}\r\n                    inicioVegetativo={this.props.inicioVegetativo}\r\n                    inicioFloracion={this.props.inicioFloracion}\r\n                />\r\n                <DetalleAcciones\r\n                    alertRiegos={this.props.alertRiegos}\r\n                    alertPodas={this.props.alertPodas}\r\n                    alertFumigaciones={this.props.alertFumigaciones}\r\n                />\r\n                <div className=\"row mt-4 justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <div className=\"btn-group\">\r\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\r\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertPlanta","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nclass AccionDetallada extends Component{\r\n    eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(this.props.user).child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\r\n        this.props.alert()\r\n    }\r\n    render(){\r\n        return(\r\n            <Card>\r\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            {this.props.tipoDeAccion==='podas'?\r\n                            <div className='container-fluid'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-auto ml-auto\">\r\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {this.props.tipoDePoda?\r\n                                        <div className='col'>\r\n                                            <hr/>\r\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                                :\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\r\n                                        </div>\r\n                                        <div className=\"col-auto ml-auto\">\r\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\r\n                                        </div>\r\n                                        <div className=\"col-auto\">\r\n                                            <h5>\r\n                                                <div className=\"badge badge-pill badge-light\">\r\n                                                    {this.props.accion.tipoDeRiego}\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.props.accion.aditivos?\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <FontAwesomeIcon icon={faSortDown}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Accordion.Toggle>\r\n                    {this.props.accion.aditivos?\r\n                        <Accordion.Collapse eventKey={this.props.index}>\r\n                            <Card.Body>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\r\n                                                <div className=\"col-auto\" key={aditivo+i}>\r\n                                                    <span className='badge badge-pill badge-dark'>\r\n                                                        <div className=\"col-auto\">\r\n                                                            {aditivo}\r\n                                                        </div>\r\n                                                        <div className=\"col-auto\">\r\n                                                            {this.props.accion.aditivos[aditivo]} ml\r\n                                                        </div>\r\n                                                    </span>\r\n                                                </div>\r\n                                            ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                        :\r\n                        null\r\n                    }\r\n                </Card>\r\n        )\r\n    }\r\n}\r\nexport default AccionDetallada","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport { Accordion } from 'react-bootstrap'\r\nclass AlertPodas extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertPlanta}\r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\r\n                />\r\n                <div className=\"container-fluid submodalIn\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {this.props.podas?\r\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            this.props.onClose()\r\n                                            this.props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertPodas","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nclass AlertRiego extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertPlanta}\r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\r\n                />\r\n                <div className=\"container-fluid submodalIn\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {this.props.riegos?\r\n                            Object.keys(this.props.riegos).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            this.props.onClose()\r\n                                            this.props.history.push('/Riego')\r\n                                        }}>Riegala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertRiego","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport { Accordion } from 'react-bootstrap'\r\nclass alertFumigaciones extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertPlanta}\r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\r\n                />\r\n                <div className=\"container-fluid submodalIn\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {this.props.fumigaciones?\r\n                            Object.keys(this.props.fumigaciones).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={this.props.user}index={i} alert={this.props.alert} accion={this.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            this.props.onClose()\r\n                                            this.props.history.push('/Insecticida')\r\n                                        }}>Fumigala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default alertFumigaciones","import React , {Component} from 'react'\r\n\r\nclass AlertEliminarPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                            this.props.eliminarPlanta()\r\n                            this.props.onClose()\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\n\r\nclass AlertCambiarCiclo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar \r\n                    alertPlanta={this.props.alertPlanta} \r\n                    onClose={this.props.onclose} \r\n                />\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarCiclo","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/alertPlanta.css'\r\nimport AlertPlanta from '../alerts/AlertPlanta'\r\nimport AlertPodas from '../alerts/AlertPodas'\r\nimport AlertRiego from '../alerts/AlertRiego'\r\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\r\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\r\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nclass TarjetaPlanta extends Component{\r\n    state={\r\n        edad:undefined\r\n    }\r\n    alertEliminarPlanta=()=>confirmAlert({\r\n        customUI : ({onClose}) =>{\r\n            return(\r\n                <div className=\"custom-ui\">\r\n                    <AlertEliminarPlanta\r\n                        user={this.props.user}\r\n                        nombre={this.props.nombre}\r\n                        eliminarPlanta={this.eliminarPlanta}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    alertCambiarCiclo=()=>confirmAlert({\r\n        customUI : ({onClose}) =>{\r\n            return(\r\n                <div className=\"custom-ui\">\r\n                    <AlertCambiarCiclo\r\n                        user={this.props.user}\r\n                        alertPlanta={this.alertPlanta}\r\n                        onClose={onClose}\r\n                        nombre={this.props.nombre}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    alertPlanta=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui submodalOut'>\r\n                    <AlertPlanta\r\n                        {...this.props}\r\n                        onClose={onClose}\r\n                        alertEliminarPlanta={this.alertEliminarPlanta}\r\n                        alertCambiarCiclo={this.alertCambiarCiclo}\r\n                        alertRiegos={this.alertRiegos}\r\n                        alertPodas={this.alertPodas}\r\n                        alertFumigaciones={this.alertFumigaciones}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertRiegos=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui scroll'>\r\n                    <AlertRiego\r\n                        user={this.props.user}\r\n                        idPlanta={this.props.id}\r\n                        alert={this.alertRiegos}\r\n                        onClose={onClose}\r\n                        alertPlanta={this.alertPlanta}\r\n                        nombre={this.props.nombre}\r\n                        riegos={this.props.riegos}\r\n                        history={this.props.history}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertPodas=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui scroll'>\r\n                    <AlertPodas\r\n                        user={this.props.user}\r\n                        idPlanta={this.props.id}\r\n                        alert={this.alertPodas}\r\n                        onClose={onClose}\r\n                        alertPlanta={this.alertPlanta}\r\n                        nombre={this.props.nombre}\r\n                        podas={this.props.podas}\r\n                        history={this.props.history}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertFumigaciones=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui scroll'>\r\n                    <AlertFumigaciones\r\n                        user={this.props.user}\r\n                        idPlanta={this.props.id}\r\n                        alert={this.alertFumigaciones}\r\n                        onClose={onClose}\r\n                        alertPlanta={this.alertPlanta}\r\n                        nombre={this.props.nombre}\r\n                        fumigaciones={this.props.fumigaciones}\r\n                        history={this.props.history}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    componentDidMount(){\r\n        this.setState({\r\n            edad:moment().diff(moment(this.props.nacimiento),'days')\r\n        })\r\n    }\r\n    eliminarPlanta=async ()=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(this.props.id).remove()\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col-auto\">\r\n                <Card className=\"card bg-light\" onClick={this.alertPlanta} >\r\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-left\">\r\n                                    <h4 className=\"card-title\">{this.props.nombre}</h4>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"col text-left\">\r\n                                    <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Overlay>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TarjetaPlanta","import React , {Component} from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNuevaPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto form-group\">\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                Nombre\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" className='form-control' id='inputNombre' />\r\n                    </div>\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                Genetica\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon \r\n                        icon={faCheckCircle} \r\n                        className=\"continueIcon alert-icon\" \r\n                        onClick={e=>{\r\n                            const nombre = document.getElementById('inputNombre').value\r\n                            const genetica = document.getElementById('inputGenetica').value\r\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\r\n                            this.props.onClose()\r\n                        }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon \r\n                        icon={faTimesCircle} \r\n                        onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}\r\n                        className='cancelIcon alert-icon'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\r\nimport Planta from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\r\nclass CarouselPlantas extends Component{\r\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\r\n        await database().ref().child(this.props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica,\r\n            nacimiento:moment().format('L')\r\n        })\r\n    }\r\n    alertNuevaPlanta=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui submodalOut'>\r\n                    <AlertNuevaPlanta\r\n                        onClose={onClose}\r\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\r\n                    {this.props.plantas?\r\n                        Object.keys(this.props.plantas).map(key=>(\r\n                            <Planta\r\n                                user={this.props.user}\r\n                                nacimiento={this.props.plantas[key].nacimiento} \r\n                                genetica={this.props.plantas[key].genetica}\r\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \r\n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \r\n                                podas={this.props.plantas[key].podas} \r\n                                riegos={this.props.plantas[key].riegos}\r\n                                fumigaciones={this.props.plantas[key].fumigaciones}\r\n                                nombre={this.props.plantas[key].nombre}\r\n                                id={key}\r\n                                key={key}\r\n                                history={this.props.history}\r\n                            />\r\n                        ))\r\n                        :\r\n                        <>\r\n                            <div className=\"col-12 text-center\">\r\n                                <h2 className='text-white'>Aun No hay plantas</h2>\r\n                                <small>Agrega una!</small>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    <div className=\"col-3\">\r\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\n\r\nclass FechaYHora extends Component{\r\n    state={\r\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\r\n    }\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            this.setState({\r\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\r\n            })\r\n        }, 1000);\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <h1>{this.state.fecha}</h1>\r\n        )\r\n    }\r\n}\r\nexport default FechaYHora","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport FechaYHora from '../components/FechaYHora'\r\n\r\n\r\n\r\nclass BarraDeLuz extends Component{\r\n    \r\n    state={\r\n        activo:0,\r\n        faltante:undefined,\r\n        transcurrido:undefined,\r\n        lamparaEncendida:undefined,\r\n        descanso:false\r\n    }\r\n    actualizarEstado =(lamparaEncendida)=>{\r\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\r\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\r\n            console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\r\n        }\r\n        else{\r\n            console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\r\n        }\r\n        const cicloLuminico = this.actualizarCicloLuminico()\r\n        if(transcurrido.slice(0,2)>cicloLuminico){\r\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\r\n            this.setState({\r\n                descanso:true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                descanso:false\r\n            })\r\n        }\r\n        this.setState({\r\n            cicloLuminico: cicloLuminico,\r\n            transcurrido: transcurrido,\r\n            faltante:this.calcularFaltante()\r\n        })\r\n        return [transcurrido,cicloLuminico]\r\n    }\r\n    actualizarBarraDeProgreso=()=>{\r\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\r\n        const barra = document.getElementById('barraLuz')\r\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\r\n    }\r\n    calcularEstadoDeLampara=()=>{\r\n        const hour = moment().format('LT').slice(0,2)\r\n        console.log()\r\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.actualizarBarraDeProgreso()\r\n        const interval = setInterval(() => {\r\n            this.actualizarBarraDeProgreso()\r\n        }, 1000);\r\n        this.setState({\r\n            interval: interval\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.state.interval)\r\n    }\r\n    actualizarCicloLuminico(){\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\r\n            \r\n        }\r\n        else{\r\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\r\n        }\r\n    } \r\n    calcularFaltante=()=>{\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\r\n                :\r\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\r\n        }\r\n        else{\r\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\r\n                :\r\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\r\n        }\r\n    }\r\n    calcularTranscurrido=(lamparaEncendida)=>{\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = moment().diff(moment(this.props.hora,'h'),'m')\r\n                :\r\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\r\n        }\r\n        else{\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\r\n                :\r\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\r\n    }\r\n}\r\n    cambiarEstadoDeLampara=()=>{\r\n        this.setState({\r\n            lamparaEncendida:!this.state.lamparaEncendida\r\n        })\r\n    }\r\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\r\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\r\n            return minutos/(cicloLuminico*60)*100\r\n            \r\n        }\r\n        else{\r\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\r\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\r\n            return minutos/(cicloLuminico*60)*100\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <FechaYHora/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-4 mb-4\">\r\n                    <div className=\"col text-center\">\r\n                        <h3>Periodo {this.props.periodo}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        Transcurrido (Hs) {this.state.transcurrido}\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        Faltante (Hs) {this.state.faltante}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.descanso?\r\n                        <div className=\"col text-center\">\r\n                            <span className='badge badge-pill p-3 badge-dark'>\r\n                                Descansando...\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div className=\"col text-center\">\r\n                            <span className='badge badge-pill p-3 badge-success'>\r\n                                Creciendo...\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-10 offset-1\">\r\n                        <div className=\"progress\">\r\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        horaDeFinal:state.data.horaDeFinal,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nclass AlertConfiguracionArmario extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    onClose={this.props.onClose}\r\n                    title={'Configuracion Del Armario'}\r\n                />\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 offset-3\">\r\n                    <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='text-white'>Periodo</td>\r\n                                    <td className='text-right text-white'>\r\n                                        <select name=\"\" id=\"\">\r\n                                            <option value=\"\">\r\n                                                {this.props.periodo}\r\n                                            </option>\r\n                                            <option value=\"\">\r\n                                                Germinacion\r\n                                            </option>\r\n                                            <option value=\"\">\r\n                                                Floracion\r\n                                            </option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\r\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\r\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarPeriodo()\r\n                        }}>Cambiar Periodo</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarInicio()\r\n                        }}>Cambiar Hora de Inicio</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarFinal()\r\n                        }}>Cambiar Hora de Final</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertBotoneraConfirmacion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                        this.props.cambiarHora()\r\n                        this.props.alertConfiguracion()\r\n                    }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                        this.props.alertConfiguracion()\r\n                    }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertBotoneraConfirmacion","import React from 'react'\r\n\r\nconst InputCambiarHorario = ()=>{\r\n    return(\r\n        <div className=\"row justify-content-center mt-4\">\r\n            <div className=\"col-2\">\r\n                <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                            Hora\r\n                        </span>\r\n                    </div>\r\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-2 \">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                            Minutos\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default InputCambiarHorario","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\r\nclass AlertCambiarFinal extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Hora de Final Del Ciclo'\r\n                />\r\n                <InputCambiarHorario/>\r\n                <AlertBotoneraConfirmacion\r\n                    cambiarHora={this.props.cambiarHoraDeFinal}\r\n                    alertConfiguracion={this.props.alertConfiguracion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarFinal","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\r\nclass AlertCambiarFinal extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Hora de Final Del Ciclo'\r\n                />\r\n                <InputCambiarHorario/>\r\n                <AlertBotoneraConfirmacion\r\n                    cambiarHora={this.props.cambiarHoraDeInicio}\r\n                    alertConfiguracion={this.props.alertConfiguracion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarFinal","import React, {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertCambiarPeriodo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Periodo del Armario'\r\n                />\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Germinacion')\r\n                        }}>Germinacion</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Vegetativo')\r\n                        }}>Vegetativo</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Floracion')\r\n                        }}>Floracion</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-auto\">\r\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                            this.props.cambioDePeriodo()\r\n                            this.props.alertConfiguracion()\r\n                        }}/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                            this.props.alertConfiguracion()\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\r\n\r\nexport const MenuButton = styled.div`\r\n    cursor:pointer;\r\n    font-size:2.5rem\r\n`","import styled, {keyframes,css} from 'styled-components'\r\n\r\n\r\nconst slideLeftKeyframes = keyframes`\r\n    from{\r\n        right:-25%;\r\n        background-color:rgb(34,153,84,0);\r\n    }\r\n    to{\r\n        right:0%;\r\n        background-color:rgb(34,153,84,0.98);\r\n    }\r\n`\r\nconst slideLeft = css`\r\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\r\n    z-index:1\r\n`\r\n\r\nexport const Navbar=styled.nav`\r\n    ${slideLeft};\r\n    position:absolute;\r\n    top:0;\r\n    right:-25%;\r\n    height:100%;\r\n    width:25%;\r\n`\r\nexport const Hr = styled.hr`\r\n    border-top:1px solid white\r\n`","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AccionesRapidas=()=>{\r\n        return(\r\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\r\n                <div className=\"col-auto text-center\">\r\n                    <small>Acciones</small>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Riego'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Poda'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Insecticida'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\nexport default AccionesRapidas","import React, {Component} from 'react'\r\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport AccionesRapidas from '../components/AccionesRapidas'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport {auth} from 'firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Navbar extends Component{\r\n    signOut=async ()=>{\r\n        await auth().signOut()\r\n        return <Redirect to='/'/>\r\n    }\r\n    render(){\r\n        return(\r\n            <Nav>\r\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\r\n                                this.props.alertConfiguracion()\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\r\n                        </div>\r\n                    </div>\r\n                    <Hr/>\r\n                    {this.props.plantas?\r\n                        <AccionesRapidas/>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Hr/>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <Link to='/Aplicables'>\r\n                                <button type='button' className='btn btn-light'>Aditivos</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <Link to='/Deficiencias-Carencias'>\r\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto ml-auto mr-auto\">\r\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\r\n                                Cerrar Sesion\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        plantas:state.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Navbar)","import React , {Component} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport BarraDeLuz from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database} from 'firebase'\r\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\r\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\r\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\r\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\r\nimport {MenuButton} from './styles/ArmarioStyle'\r\nimport Navbar from '../components/Navbar'\r\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\nimport {auth} from 'firebase'\r\nclass Armario extends Component{\r\n    state={\r\n        nuevoPeriodo:undefined,\r\n        menuOpened:false\r\n    }\r\n    alertCambiarPeriodo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarPeriodo\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        nuevoPeriodo={this.state.nuevoPeriodo}\r\n                        cambiarStatePeriodo={nuevoPeriodo=>{\r\n                            this.setState({\r\n                                nuevoPeriodo:nuevoPeriodo\r\n                            })\r\n                        }}\r\n                        cambioDePeriodo={this.cambioDePeriodo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertCambiarInicio=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarInicio\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertCambiarFinal=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarFinal\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertConfiguracion=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertConfiguracionArmario\r\n                        periodo={this.props.periodo}\r\n                        horaDeFinal={this.props.horaDeFinal}\r\n                        horaDeInicio={this.props.horaDeInicio}\r\n                        onClose={onClose}\r\n                        alertCambiarFinal={this.alertCambiarFinal}\r\n                        alertCambiarInicio={this.alertCambiarInicio}\r\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    cambioDePeriodo=async()=>{\r\n        await database().ref().child(this.props.user).update({\r\n            periodo:this.state.nuevoPeriodo\r\n        })\r\n    }\r\n    cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    changeStateOfNavbar =() =>{\r\n        this.setState({menuOpened:!this.state.menuOpened})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-11 text-right\">\r\n                        <MenuButton onClick={e=>{\r\n                            this.setState({menuOpened:true})\r\n                        }}>\r\n                            <FontAwesomeIcon icon={faAlignRight}/>\r\n                        </MenuButton>\r\n                    </div>\r\n                </div>\r\n                <Drawer anchor=\"right\" open={this.state.menuOpened} onClose={e=>{this.setState({menuOpened:false})}}>\r\n                    <div className=\"container d-flex flex-column h-100 justify-content-between\">\r\n                        <div>\r\n                            <List>\r\n                                <Link to='Riego' className='outline-none text-dark'>\r\n                                    <ListItem button key={'Regar'} >\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                                        <ListItemText primary={'Regar'} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                <Link to='Poda' className='outline-none text-dark'>\r\n                                    <ListItem button key={'Podar'}>\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                                        <ListItemText primary={'Podar'} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                <Link to='Insecticida' className='outline-none text-dark'>\r\n                                    <ListItem button key={'Fumigar'}>\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                        <ListItemText primary={'Fumigar'} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            </List>\r\n                            <Divider />\r\n                        </div>\r\n                        <div>\r\n                            <Divider />\r\n                            <List>\r\n                                <Link to='/Aplicables' className='outline-none text-dark'>\r\n                                    <ListItem button key={'Aditivos'}>\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                        <ListItemText primary={'Aditivos'} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                <Link to='/Aditivos' className='outline-none text-dark'>\r\n                                    <ListItem button key={'Carencias y Excesos'}>\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                        <ListItemText primary={'Carencias y Excesos'} />\r\n                                    </ListItem>\r\n                                </Link>\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                <ListItem button key={'Configuracion'} onClick={e=>{\r\n                                    this.alertConfiguracion()\r\n                                    this.setState({menuOpened:false})\r\n                                    }}>\r\n                                    <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                                    <ListItemText primary={'Configuracion'} />\r\n                                </ListItem>\r\n                            </List>\r\n                            <Divider />\r\n                            <List>\r\n                                <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                                        await auth().signOut()\r\n                                    }}>\r\n                                    <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                                    <ListItemText primary={'Cerrar Sesion'} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </div>\r\n                    </div>\r\n                </Drawer>\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        <BarraDeLuz/>            \r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <CarouselPlantas history={this.props.history}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        horaDeFinal:state.data.horaDeFinal,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nclass Layout extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"App\">\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Layout","import React , {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass NavBarAccion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-2 text-left offset-1\">\r\n                    <Link to=\"/\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-6 text-center\">\r\n                    <h1 className='text-white'>{this.props.title}</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NavBarAccion\r\n","import React , {Component} from 'react'\r\nclass AlertConfirmarAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.accionfn()\r\n                            this.props.onClose()\r\n                            this.props.history.goBack()\r\n                        }}>Confirmar</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}>Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='default' checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                    />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    return(\r\n        <Row>\r\n            <div className=\"cola-auto ml-auto mr-auto\">\r\n                <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                    <FormControlLabel\r\n                        value=\"top\"\r\n                        control={<Radio\r\n                            value=\"Tierra\" \r\n                            name=\"Tierra\"\r\n                            color='default'\r\n                        />}\r\n                        label='Tierra'\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"top\"\r\n                        control={<Radio\r\n                            value=\"Foliar\"\r\n                            name=\"Foliar\"\r\n                            color='default'\r\n                        />}\r\n                        label=\"Foliar\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </RadioGroup>\r\n            </div>\r\n        </Row>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button} from '@material-ui/core'\r\nclass BotoneraConfirmacionAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <Button\r\n                        onClick={this.props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Atras\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            e=>{\r\n                                this.props.confirmarAccion(this.props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                        Guardar {this.props.accion}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  }));\r\n  /*\r\n  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >    \r\n                    <Typography>\r\n                        Cantidad de Agua y Aditivos\r\n                    </Typography>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            {props.cantidadDeAgua?\r\n                                <Typography>\r\n                                    {props.cantidadDeAgua} L\r\n                                </Typography>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            {props.aditivosUsados?\r\n                                <Typography className=\"col-auto\">\r\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\r\n                                        const cantidad = props.aditivosUsados[aditivo]\r\n                                        return(\r\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\r\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\r\n                                            </span>\r\n                                        )\r\n                                    })}\r\n                                </Typography>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                    </div>\r\n                </ExpansionPanelSummary>*/\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <p className='text-dark'>Aditivos (ml)</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))}\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Grid item xs={12}>\r\n        <Grid container justify=\"space-around\" >\r\n            <Grid item>      \r\n                <Card className={classes.card} variant=\"outlined\">\r\n                    <CardContent>\r\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                            Plantas Seleccionadas\r\n                        </Typography>\r\n                        {plantas.map(planta => (\r\n                            <>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <strong>{planta.nombre}</strong>\r\n                                </Typography>\r\n                            </>\r\n                        ))}\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            {tipoDeRiego?\r\n                <>\r\n                    <Grid item>      \r\n                        <Card className={classes.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                    Tipo De Riego\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <strong>{tipoDeRiego}</strong>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item>      \r\n                        <Card className={classes.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                    Aditivos usados\r\n                                </Typography>\r\n                                {Object.keys(aditivos).map(aditivo=>{\r\n                                    const dosis= aditivos[aditivo]\r\n                                    return(\r\n                                        <>\r\n                                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                                <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '))}</strong>\r\n                                            </Typography>\r\n                                        </>\r\n                                    )\r\n                                })}\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </>\r\n                :\r\n                <Grid item>      \r\n                    <Card className={classes.card} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                Tipo De Poda\r\n                            </Typography>\r\n                            <Typography className={classes.pos} color=\"textSecondary\">\r\n                                <strong>{tipoDePoda}</strong>\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            }\r\n        </Grid>\r\n    </Grid>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(activeStep===0){\r\n    }\r\n    else if(activeStep===1){\r\n      if(tipoDeAccion==='Poda'){\r\n        return tipoDePoda?false:true\r\n      }\r\n      else{\r\n        return tipoDeRiego?false:true\r\n      }\r\n    }\r\n    else if(activeStep===2){\r\n        return cantidadDeAgua?false:true\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} elevation={3} orientation=\"vertical\">\r\n        {steps.map((step, index) => (\r\n            step?\r\n                <Step key={step.title}>\r\n                    <StepLabel>{step.title}</StepLabel>\r\n                <StepContent>\r\n                    <Typography>{step.content}</Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                        <div>\r\n                        <Button\r\n                            disabled={activeStep === 0}\r\n                            onClick={handleBack}\r\n                            className={classes.button}\r\n                        >\r\n                            Atras\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleNext}\r\n                            className={classes.button}\r\n                            disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                        >\r\n                            {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                        </Button>\r\n                        </div>\r\n                    </div>\r\n                    </StepContent>\r\n                </Step>\r\n                :\r\n                null\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={6} className={classes.resetContainer}>\r\n            {resumenAccion}\r\n            <BotoneraConfirmacionAccion\r\n                accion={tipoDeAccion}\r\n                handleBack={handleBack}\r\n                confirmarAccion={confirmarAccion}\r\n            />\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        Object.keys(this.props.plantas).map(key=>(\r\n            plantas.push(\r\n                {\r\n                selected:false,\r\n                nombre:this.props.plantas[key].nombre,\r\n                id:key\r\n                }\r\n            )\r\n        ))\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid accion\">\r\n                <NavBarAccion\r\n                    title='Riego'\r\n                />\r\n                <StepperAccion \r\n                    step1='Plantas'\r\n                    step2='Tipo De Riego'\r\n                    step3='Cantidad de agua y aditivos'\r\n                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                    tipoDeRiego={this.state.tipoDeRiego}\r\n                    confirmarAccion={this.confirmarAccion}\r\n                    resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                    tipoDeAccion='Riego'\r\n                    steps={[\r\n                            {\r\n                            title:'Plantas',\r\n                            content:(\r\n                                <ElegirPlantaAccion\r\n                                    seleccionarPlanta={this.seleccionarPlanta}\r\n                                    plantas={this.state.plantas}\r\n                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                    expanded={this.state.expanded}\r\n                                />\r\n                            )},\r\n                            {title:'Tipo De Riego',\r\n                            content:(\r\n                                <ElegirTipoDeRiego\r\n                                    tipoDeRiego={this.state.tipoDeRiego}    \r\n                                    cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                    expanded={this.state.expanded}\r\n                                />\r\n                            )},\r\n                            {title:'Cantidad De Agua y Aditivos',\r\n                            content:(\r\n                                <FormularioAccion\r\n                                        eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                        tipoDeRiego={this.state.tipoDeRiego}\r\n                                        cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                        cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                        cambiarAditivo={this.cambiarAditivo}\r\n                                        adivito='Fertlizante'\r\n                                        aditivos={this.props.aditivos}\r\n                                        aditivosUsados={this.state.aditivos}\r\n                                        eliminarAditivo={this.eliminarAditivo}\r\n                                        setExpansionExpanded={this.setExpansionExpanded}\r\n                                        expanded={this.state.expanded}\r\n                                    />\r\n                            )},\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\r\nimport NavBarAccion from '../components/NavBarAccion';\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        platnas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        Object.keys(this.props.plantas).map(key=>(\r\n            plantas.push(\r\n                {\r\n                selected:false,\r\n                nombre:this.props.plantas[key].nombre,\r\n                id:key\r\n                }\r\n            )\r\n        ))\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid accion\">\r\n                <NavBarAccion\r\n                    title='Insecticida'\r\n                />\r\n                <StepperAccion \r\n                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                    tipoDeRiego={this.state.tipoDeRiego}\r\n                    confirmarAccion={this.confirmarAccion}\r\n                    resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                    tipoDeAccion='Fumigacion'\r\n                    steps={[\r\n                        {\r\n                        title:'Plantas',\r\n                        content:(\r\n                            <ElegirPlantaAccion\r\n                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                plantas={this.state.plantas}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Tipo De Riego',\r\n                        content:(\r\n                            <ElegirTipoDeRiego\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Cantidad De Agua y Aditivos',\r\n                        content:(\r\n                            <FormularioAccion\r\n                                eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                cambiarAditivo={this.cambiarAditivo}\r\n                                aditivo='Insecticida'\r\n                                aditivos={this.props.aditivos}\r\n                                aditivosUsados={this.state.aditivos}\r\n                                eliminarAditivo={this.eliminarAditivo}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                    ]}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    let dosisList = []\r\n    if(aditivo){\r\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\r\n            setCantidadDeDosis(cantidadDeDosis+=1)\r\n            if(tipoDeRiego==='Foliar'){\r\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\r\n                    dosisList.push({\r\n                        nombre:dosificacion,\r\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\r\n                    })\r\n                    return null\r\n                })\r\n            }\r\n            else{\r\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\r\n                    dosisList.push({\r\n                        nombre:dosificacion,\r\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\r\n                    })\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    return(\r\n        <Form className='d-flex align-items-center mb-3'>\r\n            {console.log(cantidadDeDosis)}\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\r\n                        <Accordion defaultActiveKey='0'>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h4 className='text-white'>Caracteristicas</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row mt-2\">\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Nombre\r\n                                                    </Form.Label>\r\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\r\n                                                        updateState(e.target.value,'nombre')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Marca\r\n                                                    </Form.Label>\r\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\r\n                                                        updateState(e.target.value,'marca')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Descripcion\r\n                                                    </Form.Label>\r\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\r\n                                                        updateState(e.target.value,'descripcion')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h4 className='text-white'>Dosificacion</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\r\n                                        <Form>\r\n                                            <Container>\r\n                                                <Row className='flex-nowrap overflow-auto'>\r\n                                                {dosisList.length?\r\n                                                    dosisList.map((vacio,i)=>(\r\n                                                        <div className=\"col-auto\">\r\n                                                            <Form.Group >\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Etapa\r\n                                                                </Form.Label>\r\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\r\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\r\n                                                                }}/>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Cantidad\r\n                                                                </Form.Label>\r\n                                                                <InputGroup>\r\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\r\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                                                                    }}/>\r\n                                                                    <InputGroup.Prepend>\r\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\r\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                                                        }}>\r\n                                                                            <option value='1' selected>ml/L</option>\r\n                                                                            <option value=\"2\">gr/L</option>\r\n                                                                        </Form.Control>\r\n                                                                    </InputGroup.Prepend>\r\n                                                                </InputGroup>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Tipo de riego\r\n                                                                </Form.Label>\r\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\r\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                                                }}>\r\n                                                                    <option>-</option>\r\n                                                                    <option value='Foliar'>Foliar</option>\r\n                                                                    <option value=\"Tierra\">Tierra</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    ))\r\n                                                    :\r\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                                                        <div className=\"col-auto\">\r\n                                                            <Form.Group >\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Etapa\r\n                                                                </Form.Label>\r\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\r\n                                                                }}/>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Cantidad\r\n                                                                </Form.Label>\r\n                                                                <InputGroup>\r\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\r\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                                                                    }}/>\r\n                                                                    <InputGroup.Prepend>\r\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\r\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                                                        }}>\r\n                                                                            <option value='1' selected>ml/L</option>\r\n                                                                            <option value=\"2\">gr/L</option>\r\n                                                                        </Form.Control>\r\n                                                                    </InputGroup.Prepend>\r\n                                                                </InputGroup>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Tipo de riego\r\n                                                                </Form.Label>\r\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\r\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                                                }}>\r\n                                                                    <option>-</option>\r\n                                                                    <option value='Foliar'>Foliar</option>\r\n                                                                    <option value=\"Tierra\">Tierra</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                                    <div className=\"col-auto align-self-center\">\r\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\r\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\r\n                                                        }}/>\r\n                                                    </div>\r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}","import React ,{useState}from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport {database} from 'firebase'\r\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos=aditivos\r\n        newAditivos.push(newAditivo)\r\n        switch (tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        console.log(valor)\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\r\n            <AlertNavBar\r\n                onClose={onClose}\r\n                title={tipoDeAditivo}\r\n            />\r\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\r\n                updateState(valor,nombre,dosis)\r\n            }}/>\r\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport Layout from './Pages/Layout'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true\r\n  }\r\n  cambiarPeriodo(nuevoPeriodo){\r\n    this.setState({\r\n      periodo:nuevoPeriodo\r\n    })\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user.uid,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <PantallaDeCarga/>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <Provider store={this.state.store}>\r\n            <Layout>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route exact path='/' component={Armario}/>\r\n                  <Route exact path='/Riego' component={Riego}/>\r\n                  <Route exact path='/Poda' component={Poda}/>\r\n                  <Route exact path='/Insecticida' component={Insecticida}/>\r\n                  <Route exact path='/Aplicables' component={Aplicables}/>\r\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n                </Switch>\r\n              </HashRouter>\r\n          </Layout>\r\n        </Provider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <Layout>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={SignInPage}/>\r\n                <Route exact path='/Login' component={LogInPage}/>\r\n              </Switch>\r\n            </HashRouter>\r\n        </Layout>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React,{Fragment} from 'react'\r\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const alertNuevoAditivo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                        aditivo={aditivo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <Table striped bordered hover variant='dark'>\r\n                <tbody>\r\n                    <tr>\r\n                        <th className=' justify-content-center align-items-center'>\r\n                            <Button variant='outline-light' onClick={e=>{\r\n                                    alertNuevoAditivo()\r\n                                }}>\r\n                                Nuevo Aditivo\r\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\r\n                            </Button>\r\n                        </th>\r\n                    </tr>\r\n                    <tr>\r\n                        <Accordion defaultActiveKey='0'>\r\n                            {aditivos?\r\n                                aditivos.map((aditivo,i)=>(\r\n                                    <Card key={'aditivo'+i}>\r\n                                        <Accordion.Toggle as={Card.Header} className='d-flex bg-dark justify-content-between px-4 hover' eventKey={i} >\r\n                                            <div>\r\n                                                {aditivo.nombre} <span className='badge badge-pill badge-light'>{aditivo.marca}</span>\r\n                                            </div>\r\n                                            <FontAwesomeIcon icon={faSortDown}/>\r\n                                        </Accordion.Toggle>\r\n                                        <Accordion.Collapse eventKey={i}>\r\n                                            <Card.Body className='text-dark'>\r\n                                                <div className=\"container\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 text-center\">\r\n                                                            <strong>\r\n                                                                Descripcion\r\n                                                            </strong>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col text-left\">\r\n                                                            <small>\r\n                                                                {aditivo.descripcion}\r\n                                                            </small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 text-center\">\r\n                                                            <strong>\r\n                                                                Dosificacion\r\n                                                            </strong>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                            <div className=\"row mb-2 mt-2\">\r\n                                                                <div className=\"col-auto mr-auto\">\r\n                                                                    <span className='badge badge-pill badge-dark'>\r\n                                                                        {tipoDeAplicacion}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            <hr/>\r\n                                                            </div>\r\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                                <div className=\"row\" key={'dosis'+k}>\r\n                                                                    <div className=\"col-auto mr-auto\">\r\n                                                                        {aplicacion}\r\n                                                                    </div>\r\n                                                                    <div className=\"col-auto ml-auto\">\r\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </Fragment>\r\n                                                    ))}\r\n                                                    <div className=\"row mt-4\">\r\n                                                        <div className=\"col-auto ml-auto mr-auto\">\r\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                                                alertEditarAditivo(aditivo)\r\n                                                            }}>\r\n                                                                Editar aditivo\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"col-auto ml-auto mr-auto\">\r\n                                                            <button type='button' className='btn btn-outline-danger' onClick={e=>{\r\n                                                                eliminarAditivo(i)\r\n                                                            }}>\r\n                                                                Eliminar aditivo\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Card.Body>\r\n                                        </Accordion.Collapse>\r\n                                    </Card>\r\n                                ))\r\n                                :\r\n                                <h1>Agrega {title}</h1>\r\n                            }\r\n                        </Accordion>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Tabs,Tab,Row,Col} from 'react-bootstrap'\r\nimport {TableAditivos} from './TableAditivos'\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [key, setKey] = useState('Fertilizantes');\r\n    return(\r\n        <Row>\r\n            <Col xs={{span:12,offset:0}} sm={{span:10,offset:1}} md={{span:8,offset:2}} lg={{span:6,offset:3}}>\r\n                <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\r\n                    <Tab eventKey=\"Fertilizantes\" title=\"Fertilizantes\">\r\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n                    </Tab>\r\n                    <Tab eventKey=\"Insecticidas\" title=\"Insecticidas\">\r\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n                    </Tab>\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Aplicables extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid overflow-auto\">\r\n                <NavBarAccion\r\n                    title='Aditivos'\r\n                />\r\n                <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport './styles/loading.css'\r\nclass PantallaDeCarga extends Component{\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-center'>\r\n                        <h1>Cargando</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PantallaDeCarga","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport PantallaDeCarga from './PantallaDeCarga'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const login=async()=>{\r\n        setloading(true)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword).catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography>\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Inicia Sesion\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    error={userError}\r\n                    helperText={userError?'Usuario No Encontrado':null}\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                    autoFocus\r\n                    />\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    helperText={passwordError?'Contraseña incorrecta':null}\r\n                    error={passwordError}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                    label=\"Recuerdame\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{login()}}\r\n                    >\r\n                    Ingresar!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link href=\"#\" variant=\"body2\">\r\n                        Olvidaste tu contraseña?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link variant=\"body2\">\r\n                          <LinkRouter to='/Login'>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                          </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport PantallaDeCarga from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const signin=async()=>{\r\n        setloading(true)\r\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(async e=>{\r\n            this.props.history.push('/')\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography>\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Inicia Sesion\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                    autoFocus\r\n                    />\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{signin()}}\r\n                    >\r\n                    Registrate!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link variant=\"body2\">\r\n                            <LinkRouter to='/'>\r\n                                Ya tienes una cuenta? Ingresa!\r\n                            </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {TextField} from '@material-ui/core'\r\nclass ElegirTipoDePoda extends Component{\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={this.props.tipoDePoda} \r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    this.props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ElegirTipoDePoda","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        Object.keys(this.props.plantas).map(key=>(\r\n            plantas.push(\r\n                {\r\n                selected:false,\r\n                nombre:this.props.plantas[key].nombre,\r\n                id:key\r\n                }\r\n            )\r\n        ))\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:moment().format('LLL'),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid accion\">\r\n                <NavBarAccion\r\n                    title='Poda'\r\n                />\r\n                <StepperAccion \r\n                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                    tipoDePoda={this.state.tipoDePoda}\r\n                    confirmarAccion={this.confirmarAccion}\r\n                    selectedPlants={this.state.plantas}\r\n                    resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                    tipoDeAccion='Poda'\r\n                    steps={[\r\n                    {\r\n                        title:'Plantas',\r\n                        content:(\r\n                            <ElegirPlantaAccion\r\n                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                plantas={this.state.plantas}\r\n                            />\r\n                        )},\r\n                    {\r\n                        title:'Tipo De Poda',\r\n                        content:(\r\n                            <ElegirTipoDePoda\r\n                                handleChange={(nuevoTipoDePoda=>{\r\n                                    this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                })}\r\n                                tipoDePoda={this.state.tipoDePoda}\r\n                            />\r\n                    )}]\r\n                    }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}