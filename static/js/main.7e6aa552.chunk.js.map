{"version":3,"sources":["alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Armario.jsx","Pages/Layout.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/FormularioAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","components/ElegirTipoDePoda.jsx","App.js","Pages/Poda.jsx","reducers/index.js","Pages/PantallaDeCarga.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","onClick","e","alertRiegos","icon","faTint","alertPodas","faCut","alertFumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","idPlanta","tipoDeAccion","remove","alert","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertPodas","defaultActiveKey","podas","reverse","AlertRiego","riegos","fumigaciones","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","database","setState","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","push","format","alertNuevaPlanta","plantas","faPlusCircle","connect","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","MenuButton","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","to","faCogs","closeNavbar","Armario","menuOpened","AlertCambiarInicio","update","horas","changeStateOfNavbar","faAlignRight","Layout","children","AlertConfirmarAccion","accionfn","history","goBack","NavBarAccion","CheckboxPlanta","checked","handleClick","llave","ElegirPlantaAccion","selectedPlants","selected","length","seleccionarPlanta","ElegirTipoDeRiego","cambiarTipoDeRiego","BotoneraConfirmacionAccion","faCheck","confirmarAccion","FormularioAccion","cantidadDeAgua","aditivosUsados","Form","Group","Label","htmlFor","Control","onChange","cambiarLitrosDeAgua","target","OverlayTrigger","trigger","placement","overlay","Popover","Title","Content","dosis","tipoDeDosis","cambiarAditivo","eliminarAditivo","Riego","regar","planta","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","adivito","Insecticida","platnas","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","dosisList","dosificacion","j","check","fluid","lg","rows","AlertNuevoAditivo","tipoDeAditivo","useState","inputs","setInputs","ClasificarDosis","dosisArr","dosis1","dosis2","dosis3","dosis4","Foliar","etapa","agregarAditivo","newAditivo","marca","descripcion","valor","TableAditivos","splice","bordered","tipoDeAplicacion","aplicacion","alertEditarAditivo","TabAditivos","setKey","Tabs","activeKey","onSelect","k","Tab","Aplicables","ElegirTipoDePoda","placeholder","handleChange","store","data","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","PantallaDeCarga","faCannabis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","loading","on","snapshot","val","createStore","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7e6aa552.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nclass DetallePlanta extends Component{\n    render(){\n        return(\n            <Row className=\"mt-4 mb-4 align-items-center\">\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\n                </Col>\n                <Col md={8} className=\"align-self-center\">\n                    <Container className=\"container\">\n                        <Table striped hover variant='dark' >\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Genetica</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Edad</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Fecha de Germinacion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Vegetativo</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioVegetativo?\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\n                                                :\n                                                '--/--/----'\n                                            }</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Floracion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioFloracion?\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Container>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetallePlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nclass DetalleAcciones extends Component{\n    render(){\n        return(\n            <Row className=\"pt-2 pb-2 botonera justify-content-center \">\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertRiegos()\n                    }}>\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Riegos</small>\n                    </div>\n                </Col>\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertPodas()\n                    }}>\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Podas</small>\n                    </div>\n                </Col>\n                <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertFumigaciones()\n                    }}>\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetalleAcciones","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col text-left\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col text-right\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {storage} from 'firebase'\nclass AlertPlanta extends Component{\n    subirArchivo= async ()=>{\n        const ref = await storage().ref(this.props.id)\n        const file = document.getElementById('input').files[0]\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\n        ref.put(file).then(e=>{\n            console.log('Archivo subido Correctamente')\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\n                />\n                <DetallePlanta \n                    genetica={this.props.genetica}\n                    edad={this.props.edad}\n                    nacimiento={this.props.nacimiento}\n                    inicioVegetativo={this.props.inicioVegetativo}\n                    inicioFloracion={this.props.inicioFloracion}\n                />\n                <DetalleAcciones\n                    alertRiegos={this.props.alertRiegos}\n                    alertPodas={this.props.alertPodas}\n                    alertFumigaciones={this.props.alertFumigaciones}\n                />\n                <div className=\"row mt-4 justify-content-center\">\n                    <div className=\"col-auto\">\n                        <div className=\"btn-group\">\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n        this.props.alert()\n    }\n    render(){\n        return(\n            <Card>\n                <Accordion.Toggle as={Card.Header} eventKey={this.props.index}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {this.props.tipoDeAccion==='podas'?\n                                <div className=\"col-auto\">\n                                    <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                                        {this.props.tipoDePoda?\n                                        <>\n                                            <hr/>\n                                            <h5 className='text-dark'>{this.props.tipoDePoda}</h5>\n                                        </>\n                                        :\n                                        null\n                                    }\n                                </div>\n                                :\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                                        </div>\n                                        <div className=\"col-auto ml-auto\">\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-dark'>{this.props.accion.agua} L de agua</h5>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <h5>\n                                                <div className=\"badge badge-pill badge-dark\">\n                                                    {this.props.accion.tipoDeRiego}\n                                                </div>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                    {this.props.accion.aditivos?\n                                        <div className=\"row\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <FontAwesomeIcon icon={faSortDown}/>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                    {this.props.accion.aditivos?\n                        <Accordion.Collapse eventKey={this.props.index}>\n                            <Card.Body>\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                                                <div className=\"col-auto\" key={aditivo+i}>\n                                                    <span className='badge badge-pill badge-dark'>\n                                                        <div className=\"col-auto\">\n                                                            {aditivo}\n                                                        </div>\n                                                        <div className=\"col-auto\">\n                                                            {this.props.accion.aditivos[aditivo]} ml\n                                                        </div>\n                                                    </span>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                        :\n                        null\n                    }\n                </Card>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport { Accordion } from 'react-bootstrap'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.podas?\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.riegos?\n                            Object.keys(this.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-outline-light\" onClick={e=>{\n                                            \n                                        }}>Riego</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport { Accordion } from 'react-bootstrap'\nclass alertFumigaciones extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.fumigaciones?\n                            Object.keys(this.props.fumigaciones).reverse().map(id=>(\n                                <AccionDetallada alert={this.props.alert} accion={this.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default alertFumigaciones","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/alertPlanta.css'\nimport AlertPlanta from '../alerts/AlertPlanta'\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        alertPlanta={this.alertPlanta}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    alertPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertPlanta\n                        {...this.props}\n                        onClose={onClose}\n                        alertEliminarPlanta={this.alertEliminarPlanta}\n                        alertCambiarCiclo={this.alertCambiarCiclo}\n                        alertRiegos={this.alertRiegos}\n                        alertPodas={this.alertPodas}\n                        alertFumigaciones={this.alertFumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    alertRiegos=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertRiego\n                        idPlanta={this.props.id}\n                        alert={this.alertRiegos}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        riegos={this.props.riegos}\n                    />\n                </div>\n            );\n        }\n    })\n    alertPodas=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertPodas\n                        idPlanta={this.props.id}\n                        alert={this.alertPodas}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        podas={this.props.podas}\n                    />\n                </div>\n            );\n        }\n    })\n    alertFumigaciones=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertFumigaciones\n                        idPlanta={this.props.id}\n                        alert={this.alertFumigaciones}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        fumigaciones={this.props.fumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await database().ref().child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-auto\">\n                <Card className=\"card bg-light\" onClick={this.alertPlanta} >\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h4 className=\"card-title\">{this.props.nombre}</h4>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </Overlay>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta \n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                            />\n                        ))\n                        :\n                        <>\n                            <div className=\"col-12 text-center\">\n                                <h2 className='text-white'>Aun No hay plantas</h2>\n                                <small>Agrega una!</small>\n                            </div>\n                        </>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            \n            <h1>{this.state.fecha}</h1>\n        )\n    }\n}\nexport default FechaYHora","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\n\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined,\n        descanso:false\n    }\n    actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\n            console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = this.actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            this.setState({\n                descanso:true\n            })\n        }\n        else{\n            this.setState({\n                descanso:false\n            })\n        }\n        this.setState({\n            cicloLuminico: cicloLuminico,\n            transcurrido: transcurrido,\n            faltante:this.calcularFaltante()\n        })\n        return [transcurrido,cicloLuminico]\n    }\n    actualizarBarraDeProgreso=()=>{\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        console.log()\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    componentDidMount(){\n        this.actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            this.actualizarBarraDeProgreso()\n        }, 1000);\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=(lamparaEncendida)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <FechaYHora/>\n                    </div>\n                </div>\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.descanso?\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-dark'>\n                                Descansando...\n                            </span>\n                        </div>\n                        :\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-success'>\n                                Creciendo...\n                            </span>\n                        </div>\n                    }\n                </div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-10 offset-1\">\n                        <div className=\"progress\">\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    position:absolute;\n    z-index:1;\n    top:2%;\n    right:2%;\n    font-size:2rem;\n    cursor:pointer\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nclass Navbar extends Component{\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faAlignRight} from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    changeStateOfNavbar =() =>{\n        this.setState({menuOpened:!this.state.menuOpened})\n    }\n    render(){\n        return(\n            <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\n                {this.state.menuOpened?\n                    <Navbar alertConfiguracion={this.alertConfiguracion}closeNavbar={this.changeStateOfNavbar}/>\n                    :\n                    <MenuButton onClick={e=>{\n                        this.changeStateOfNavbar()\n                    }}>\n                        <FontAwesomeIcon icon={faAlignRight}/>\n                    </MenuButton>\n                }\n                <div className='row'>\n                    <div className='col'>\n                        <BarraDeLuz/>            \n                    </div>\n                </div>\n                <div className='row'>\n                    <CarouselPlantas/>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nclass Layout extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                    {this.props.children}\n            </div>\n        )\n    }\n}\nexport default Layout","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\n\nclass ElegirPlantaAccion extends Component{\n    render(){\n        let selectedPlants= {}\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>{\n                if(this.props.plantas[key].selected){\n                    selectedPlants[this.props.plantas[key].nombre]=true\n                }\n                return null\n            })\n        }\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={Object.keys(selectedPlants).length?'text-light bg-success':'text-dark'} eventKey=\"0\" role='button'>\n                                Elige Las Plantas\n                                <div className=\"row\">\n                                    {selectedPlants?\n                                    Object.keys(selectedPlants).map(nombre=>(\n                                        <div className=\"col-auto\">\n                                            <span className='badge badge-pill badge-light p-2'>\n                                                {nombre}\n                                            </span>\n                                        </div>\n                                    ))\n                                    :\n                                    null\n                                    }\n                                </div>\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <div className=\"row my-2 justify-content-center\">\n                                {this.props.plantas?\n                                    Object.keys(this.props.plantas).map(key=>(\n                                        <CheckboxPlanta checked={this.props.plantas[key].selected} llave={key} key={key} handleClick={e=>{\n                                            this.props.seleccionarPlanta(key)\n                                        }}/>\n                                    ))\n                                :\n                                null\n                                }\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirPlantaAccion","import React, {Component} from 'react'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport './styles/accion-card.css'\n\nclass ElegirTipoDeRiego extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.tipoDeRiego?'text-white bg-success ':'text-dark'} eventKey=\"1\">\n                                Elige El tipo de Riego {this.props.tipoDeRiego?<strong>({this.props.tipoDeRiego})</strong>:null}\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <div className=\"row my-2\">\n                                <div className=\"col text-center\">\n                                    <button type='button' className={this.props.tipoDeRiego==='Tierra'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Tierra')}}>\n                                        Tierra\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button type='button' className={this.props.tipoDeRiego==='Foliar'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Foliar')}}>\n                                        Foliar\n                                    </button>\n                                </div>\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirTipoDeRiego","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Link} from 'react-router-dom'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                    <div className=\"col text-center\">\n                        <FontAwesomeIcon icon={faCheck} className='icon continueIcon' onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }/>\n                    </div>\n                <div className=\"col text-center\">\n                    <Link to='/'>\n                        <FontAwesomeIcon icon={faTimes} className='icon cancelIcon'/>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import React , {Component} from 'react'\nimport {Row,Col,Form,Accordion,Card,Popover,OverlayTrigger} from 'react-bootstrap'\nclass FormularioAccion extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.cantidadDeAgua || this.props.aditivosUsados?'text-light overflow-auto flex-nowrap bg-success':'text-dark overflow-auto flex-nowrap'} eventKey=\"2\">\n                                Cantidad de Agua y Aditivos\n                                <div className=\"row\">\n                                    <div className=\"col-auto mr-auto ml-auto\">\n                                        {this.props.cantidadDeAgua?\n                                            this.props.cantidadDeAgua + ' L.'\n                                            :\n                                            null\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"row mt-2\">\n                                    {this.props.aditivosUsados?\n                                        <div className=\"col-auto\">\n                                            {Object.keys(this.props.aditivosUsados).map(aditivo=>(\n                                                <span className='badge badge-pill badge-light mr-2 p-2'>\n                                                    {aditivo} {this.props.aditivosUsados[aditivo]}ml\n                                                </span>\n                                            ))}\n                                        </div>\n                                        :\n                                        null}\n                                </div>\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"2\">\n                                <Form>  \n                                    <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                                        <Form.Group>\n                                            <Form.Label htmlFor=\"inputLitos\" className='text-dark'>Litros de Agua</Form.Label>\n                                            <Form.Control type=\"number\"\n                                                onChange={e=>{\n                                                    this.props.cambiarLitrosDeAgua(e.target.value)\n                                                }} \n                                                value={this.props.cantidadDeAgua}\n                                                id='inputLitros'/>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row className='justify-content-center align-items-center flex-column'>\n                                        {this.props.aditivos?\n                                            <>\n                                                <div className=\"form-row\">\n                                                    <div className=\"col-auto\">\n                                                        <p className='text-dark'>Aditivos (ml)</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"container\">\n                                                    <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                                        {this.props.aditivos.map((aditivo,i)=>(\n                                                            <>  \n                                                                <div className=\"form-group col-4\" key={'input'+i}>\n                                                                    <OverlayTrigger trigger=\"hover\" placement='top' overlay={\n                                                                        <Popover  id=\"popover-basic\">\n                                                                            <Popover.Title as=\"h1\">{aditivo.nombre}</Popover.Title>\n                                                                            <Popover.Content>\n                                                                                <div className=\"container-fluid\">\n                                                                                    {aditivo?\n                                                                                        Object.keys(aditivo.dosis).map(tipoDeDosis=>(\n                                                                                            <div className=\"container\">\n                                                                                                <div className=\"row\">\n                                                                                                    <span className='badge badge-pill badge-dark'>{tipoDeDosis}</span>\n                                                                                                </div>\n                                                                                                {Object.keys(aditivo.dosis[tipoDeDosis]).map(dosis=>(\n                                                                                                    <>\n                                                                                                        <div className=\"row\">\n                                                                                                                <div className=\"col-auto p-0\">\n                                                                                                                    {dosis}\n                                                                                                                </div>\n                                                                                                                <div className=\"col text-right align-self-center p-0\">\n                                                                                                                    {aditivo.dosis[tipoDeDosis][dosis]}\n                                                                                                                </div>\n                                                                                                        </div>\n                                                                                                        <hr/>\n                                                                                                    </>\n                                                                                                ))}\n                                                                                            </div>\n                                                                                        ))\n                                                                                        :\n                                                                                        null\n                                                                                    }\n                                                                                </div>\n                                                                            </Popover.Content>\n                                                                        </Popover>}>\n                                                                        <div className='text-dark'>\n                                                                            {aditivo.nombre}\n                                                                        </div>\n                                                                    </OverlayTrigger>\n                                                                    <input type=\"number\" \n                                                                        className='form-control' \n                                                                        onChange={e=>{\n                                                                            if(e.target.value){\n                                                                                this.props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                            }\n                                                                            else{\n                                                                                this.props.eliminarAditivo([aditivo.nombre])\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                </div>\n                                                            </>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            </>\n                                            :\n                                            null\n                                        }\n                                    </Form.Row>\n                                </Form>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default FormularioAccion","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>{\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n            return null\n        })\n        this.setState({\n            plantas:plantas,\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.regar}\n                    />\n                </div>\n            );\n        }\n    })\n    regar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarRiegoBD(planta,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:fertilizantes[fertilizante]\n                }\n                return null\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Riego'\n                />\n                <div className=\"container d-flex flex-column justify-content-start h-100 overflow-auto\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDeRiego\n                            tipoDeRiego={this.state.tipoDeRiego}    \n                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                        />\n                        <FormularioAccion\n                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            cambiarAditivo={this.cambiarAditivo}\n                            adivito='Fertlizante'\n                            aditivos={this.props.aditivos}\n                            aditivosUsados={this.state.aditivos}\n                            eliminarAditivo={this.eliminarAditivo}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Riego'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion'\nimport { Accordion } from 'react-bootstrap';\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        platnas:undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n            Object.keys(this.props.plantas).map(key=>{\n                plantas={\n                    ...plantas,\n                    [key]:{\n                        selected:false,\n                        nombre:this.props.plantas[key].nombre\n                    },\n                }\n                return null\n            })\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.fumigar}\n                    />\n                </div>\n            );\n        }\n    })\n    fumigar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardrarFumigacionDB(planta,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:insecticidas[insecticida]\n                }\n                return null\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Insecticida'\n                />\n                <div className=\"container d-flex flex-column justify-content-start h-100 overflow-auto\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDeRiego\n                            tipoDeRiego={this.state.tipoDeRiego}\n                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                        />\n                        <FormularioAccion\n                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            cambiarAditivo={this.cambiarAditivo}\n                            aditivo='Insecticida'\n                            aditivos={this.props.aditivos}\n                            aditivosUsados={this.state.aditivos}\n                            eliminarAditivo={this.eliminarAditivo}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Fumigacion'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React from 'react'\nimport {Form,Row,Col,Container} from 'react-bootstrap'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let dosisList =[]\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                        check:true\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                        check:false\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            <Container fluid>\n                <Row>\n                    <Col xs={{span:10,offset:1}} lg={{span:6,offset:0}}>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h4 className='text-white'>Caracteristicas</h4>\n                            </div>\n                        </div>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Nombre\n                            </Form.Label>\n                            <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                updateState(e.target.value,'nombre')\n                            }}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Marca\n                            </Form.Label>\n                            <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                updateState(e.target.value,'marca')\n                            }}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Descripcion\n                            </Form.Label>\n                            <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                updateState(e.target.value,'descripcion')\n                            }}/>\n                        </Form.Group>\n                    </Col>\n                    <Col xs={{span:12}} lg={{span:6,offset:0}}>\n                            <div className=\"row\">\n                                <div className=\"col-12 text-center\">\n                                    <h4 className='text-white'>Dosificacion</h4>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa1' onChange={e=>{\n                                    updateState(e.target.value,'etapa','dosis1')\n                                }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad1'onChange={e=>{\n                                    updateState(e.target.value,'cantidad','dosis1')\n                                }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox1'\n                                    onChange={e=>{\n                                        updateState(e.target.value,'check','dosis1')\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa2'onChange={e=>{\n                                        updateState(e.target.value,'etapa','dosis2')\n                                    }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad2' onChange={e=>{\n                                        updateState(e.target.value,'cantidad','dosis2')\n                                    }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox2' onChange={e=>{\n                                        updateState(e.target.value,'check','dosis2')\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa3' onChange={e=>{\n                                        updateState(e.target.value,'etapa','dosis3')\n                                    }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad3' onChange={e=>{\n                                        updateState(e.target.value,'cantidad','dosis3')\n                                    }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox3' onChange={e=>{\n                                        updateState(e.target.value,'check','dosis3')\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa4' onChange={e=>{\n                                        updateState(e.target.value,'etapa','dosis4')\n                                    }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad4' onChange={e=>{\n                                        updateState(e.target.value,'cantidad','dosis4')\n                                    }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox4' onChange={e=>{\n                                        updateState(e.target.value,'check','dosis4')\n                                    }}/>\n                                </div>\n                            </div>\n                        </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo}) =>{\n    const [inputs,setInputs] = useState({})\n    const ClasificarDosis = ()=>{\n        const dosisArr = [inputs.dosis1,inputs.dosis2,inputs.dosis3,inputs.dosis4]\n        let Riego={}\n        let Foliar={}\n        dosisArr.map(dosis=>{\n            if(dosis){\n                if(dosis.check){\n                    Foliar={\n                        ...Foliar,\n                        [dosis.etapa]:dosis.cantidad\n                    }\n                }\n                else{\n                    Riego={\n                        ...Riego,\n                        [dosis.etapa]:dosis.cantidad\n                    }\n                }\n            }\n            return null\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        console.log(Riego,Foliar)\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Riego:Riego,\n                Foliar:Foliar\n            }\n        }\n        const newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,dosis)=>{\n        if(dosis){\n            setInputs({\n                ...inputs,\n                [dosis]:{\n                    ...inputs[dosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React from 'react'\nimport {Table,Accordion, Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nexport const TableAditivos = ({title,aditivos}) =>{\n\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className='overflow-auto'>\n            <Table striped bordered hover variant='dark'>\n                <tbody>\n                    <tr>\n                        <th className=' justify-content-center align-items-center'>\n                            <FontAwesomeIcon icon={faPlusCircle} onClick={e=>{\n                                alertNuevoAditivo()\n                            }}/>\n                        </th>\n                    </tr>\n                    <Accordion defaultActiveKey='0'>\n                    {aditivos?\n                        aditivos.map((aditivo,i)=>(\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='d-flex bg-dark justify-content-between px-4 hover' eventKey={i}>\n                                    <div>\n                                        {aditivo.nombre} <span className='badge badge-pill badge-light'>{aditivo.marca}</span>\n                                    </div>\n                                    <FontAwesomeIcon icon={faSortDown}/>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey={i}>\n                                    <Card.Body className='text-dark'>\n                                        <div className=\"container\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <strong>\n                                                        Descripcion\n                                                    </strong>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-left\">\n                                                    <small>\n                                                        {aditivo.descripcion}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                            <hr/>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <strong>\n                                                        Dosificacion\n                                                    </strong>\n                                                </div>\n                                            </div>\n                                            {Object.keys(aditivo.dosis).map(tipoDeAplicacion=>(\n                                                <>\n                                                    <div className=\"row mb-2 mt-2\">\n                                                        <div className=\"col-auto mr-auto\">\n                                                            <span className='badge badge-pill badge-dark'>\n                                                                {tipoDeAplicacion}\n                                                            </span>\n                                                        </div>\n                                                    <hr/>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis[tipoDeAplicacion]).map(aplicacion=>(\n                                                        <div className=\"row\">\n                                                            <div className=\"col-auto mr-auto\">\n                                                                {aplicacion}\n                                                            </div>\n                                                            <div className=\"col-auto ml-auto\">\n                                                                {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                            </div>\n                                                        </div>\n                                                    ))}\n                                                </>\n                                            ))}\n                                            <div className=\"row mt-4\">\n                                                <div className=\"col-auto ml-auto mr-auto\">\n                                                    <button type='button' className='btn btn-dark' onClick={e=>{\n                                                        alertEditarAditivo(aditivo)\n                                                    }}>\n                                                        Editar aditivo\n                                                    </button>\n                                                </div>\n                                                <div className=\"col-auto ml-auto mr-auto\">\n                                                    <button type='button' className='btn btn-outline-danger' onClick={e=>{\n                                                        eliminarAditivo(i)\n                                                    }}>\n                                                        Eliminar aditivo\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                    ))\n                    :\n                    <h1>Agrega {title}</h1>\n                    }\n                </Accordion>\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Tabs,Tab,Row,Col} from 'react-bootstrap'\nimport {TableAditivos} from './TableAditivos'\nexport const TabAditivos = ({fertilizantes,insecticidas}) =>{\n    const [key, setKey] = useState('Fertilizantes');\n    return(\n        <Row>\n            <Col xs={{span:12,offset:0}} sm={{span:10,offset:1}} md={{span:8,offset:2}} lg={{span:6,offset:3}}>\n                <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\n                    <Tab eventKey=\"Fertilizantes\" title=\"Fertilizantes\">\n                        <TableAditivos title='Fertilizantes' aditivos={fertilizantes}/>\n                    </Tab>\n                    <Tab eventKey=\"Insecticidas\" title=\"Insecticidas\">\n                        <TableAditivos title='Insecticidas' aditivos={insecticidas}/>\n                    </Tab>\n                </Tabs>\n            </Col>\n        </Row>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\n\nclass Aplicables extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid overflow-auto\">\n                <NavBarAccion\n                    title='Aditivos'\n                />\n                <TabAditivos fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        fertilizantes:state.fertilizantes,\n        insecticidas:state.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\n\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.tipoDePoda?'text-light bg-success':'text-dark'} eventKey=\"1\" role='button'>\n                                Ingresa el Tipo de Poda\n                                    {this.props.tipoDePoda?\n                                    <strong className=\"col-auto\">({this.props.tipoDePoda})</strong>\n                                    :\n                                    null\n                                    }\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <div className=\"row my-2 justify-content-center\">\n                                <div className=\"col-4\">\n                                    <input type=\"text\" className='form-control'placeholder='Ej: Apical' onChange={e=>{\n                                        this.props.handleChange(e.target.value)\n                                    }} />\n                                </div>\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    const databaseRef = await firebase.database().ref()\n    databaseRef.on('value', snapshot=>{\n      data= snapshot.val()\n      store=createStore(reducer, data)\n      this.setState({loading:false})\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <PantallaDeCarga/>\n      )\n    }\n    else{\n      return (\n        <Provider store={store}>\n          <Layout>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={Armario}/>\n                <Route exact path='/Riego' component={Riego}/>\n                <Route exact path='/Poda' component={Poda}/>\n                <Route exact path='/Insecticida' component={Insecticida}/>\n                <Route exact path='/Aplicables' component={Aplicables}/>\n                <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n              </Switch>\n            </HashRouter>\n          </Layout>\n        </Provider>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { Accordion } from 'react-bootstrap';\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>(\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n        ))\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.podar}\n                    />\n                </div>\n            );\n        }\n    })\n    podar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarPodaBD(planta)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Poda'\n                />\n                <div className=\"container d-flex flex-column justify-content-start h-100\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDePoda\n                            handleChange={(nuevoTipoDePoda=>{\n                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                            })}\n                            tipoDePoda={this.state.tipoDePoda}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Poda'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className=\"App justify-content-center\">\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-12 text-center'>\n                            <h1>Cargando</h1>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center mt-4\">\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}