{"version":3,"sources":["alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Armario.jsx","Pages/Layout.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/Popover.jsx","components/FormularioAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","components/ElegirTipoDePoda.jsx","App.js","Pages/Poda.jsx","reducers/index.js","Pages/PantallaDeCarga.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","onClick","e","alertRiegos","icon","faTint","alertPodas","faCut","alertFumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","idPlanta","tipoDeAccion","remove","alert","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertPodas","defaultActiveKey","podas","reverse","history","push","AlertRiego","riegos","fumigaciones","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","database","setState","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","format","alertNuevaPlanta","plantas","faPlusCircle","connect","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","MenuButton","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","to","faCogs","closeNavbar","Armario","menuOpened","AlertCambiarInicio","update","horas","changeStateOfNavbar","faAlignRight","Layout","children","AlertConfirmarAccion","accionfn","goBack","NavBarAccion","CheckboxPlanta","checked","handleClick","llave","ElegirPlantaAccion","selectedPlants","selected","length","seleccionarPlanta","ElegirTipoDeRiego","cambiarTipoDeRiego","BotoneraConfirmacionAccion","faCheck","confirmarAccion","Td","td","Th","th","PopOver","cantidadDeAgua","OverlayTrigger","trigger","placement","overlay","Popover","Title","Content","descripcion","responsive","dosis","tipoDeDosis","j","colSpan","k","FormularioAccion","aditivosUsados","Form","Group","Label","htmlFor","Control","onChange","cambiarLitrosDeAgua","target","cambiarAditivo","eliminarAditivo","Riego","regar","planta","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","adivito","Insecticida","platnas","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","dosisList","dosificacion","check","fluid","lg","rows","AlertNuevoAditivo","tipoDeAditivo","useState","inputs","setInputs","ClasificarDosis","dosisArr","dosis1","dosis2","dosis3","dosis4","Foliar","etapa","agregarAditivo","newAditivo","marca","valor","TableAditivos","splice","bordered","Button","tipoDeAplicacion","aplicacion","alertEditarAditivo","TabAditivos","setKey","Tabs","activeKey","onSelect","Tab","Aplicables","ElegirTipoDePoda","placeholder","handleChange","store","data","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","PantallaDeCarga","faCannabis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","loading","on","snapshot","val","createStore","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"0fAyEeA,E,iLAnEP,OACI,kBAACC,EAAA,EAAD,CAAKC,UAAU,gCACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,EAAEC,OAAO,GAAIC,GAAI,CAACF,KAAK,EAAEC,OAAO,GAAIE,GAAI,CAACH,KAAK,EAAEC,OAAO,GAAIJ,UAAU,oBAChF,kBAACO,EAAA,EAAD,CAAOC,IAAKC,IAAYT,UAAU,QAAQU,IAAI,GAAGC,eAAa,KAElE,kBAACV,EAAA,EAAD,CAAKK,GAAI,EAAGN,UAAU,qBAClB,kBAACY,EAAA,EAAD,CAAWZ,UAAU,aACjB,kBAACa,EAAA,EAAD,CAAOC,SAAO,EAACC,OAAK,EAACC,QAAQ,QACzB,+BACI,4BACI,4BACI,wBAAIhB,UAAU,IAAd,aAEJ,4BACI,wBAAIA,UAAU,eAAeiB,KAAKC,MAAMC,YAGhD,4BACI,4BACI,wBAAInB,UAAU,IAAd,SAEJ,4BACI,wBAAIA,UAAU,eAAeiB,KAAKC,MAAME,KAAxC,WAGR,4BACI,4BACI,wBAAIpB,UAAU,IAAd,yBAEJ,4BACI,wBAAIA,UAAU,eAAeiB,KAAKC,MAAMG,WAAxC,KAAsDC,MAASC,KAAKD,IAAOL,KAAKC,MAAMG,YAAY,QAAlG,YAGR,4BACI,4BACI,wBAAIrB,UAAU,IAAd,yBAEJ,4BACI,wBAAIA,UAAU,eACViB,KAAKC,MAAMM,iBAAX,UACOP,KAAKC,MAAMM,iBADlB,aACuCF,MAASC,KAAKD,IAAOL,KAAKC,MAAMM,kBAAkB,QADzF,UAGI,gBAIhB,4BACI,4BACI,wBAAIxB,UAAU,IAAd,wBAEJ,4BACI,wBAAIA,UAAU,eACViB,KAAKC,MAAMO,gBAAX,UACGR,KAAKC,MAAMO,gBADd,cACmCH,MAASC,KAAKD,IAAOL,KAAKC,MAAMO,iBAAiB,QADpF,UAGA,yB,GAzDhBC,a,gBCgCbC,E,iLA/BF,IAAD,OACJ,OACI,kBAAC5B,EAAA,EAAD,CAAKC,UAAU,8CACX,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAQF,UAAU,sCACvB,yBAAKA,UAAU,cAAc4B,QAAS,SAAAC,GAClC,EAAKX,MAAMY,gBAEX,kBAAC,IAAD,CAAiBC,KAAMC,IAAQhC,UAAU,oBACzC,2BAAOA,UAAU,8BAAjB,YAGR,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAQF,UAAU,sCACvB,yBAAKA,UAAU,cAAc4B,QAAS,SAAAC,GAClC,EAAKX,MAAMe,eAEX,kBAAC,IAAD,CAAiBF,KAAMG,IAAOlC,UAAU,oBACxC,2BAAOA,UAAU,8BAAjB,WAGR,kBAACC,EAAA,EAAD,CAAKC,GAAI,OAAOF,UAAU,sCACtB,yBAAKA,UAAU,cAAc4B,QAAS,SAAAC,GAClC,EAAKX,MAAMiB,sBAEX,kBAAC,IAAD,CAAiBJ,KAAMK,IAAOpC,UAAU,oBACxC,2BAAOA,UAAU,8BAAjB,uB,GAzBM0B,aCwBfW,E,iLAxBF,IAAD,OACJ,OACI,yBAAKrC,UAAU,+BACX,yBAAKA,UAAU,oBACViB,KAAKC,MAAMoB,YACR,kBAAC,IAAD,CAAiBP,KAAMQ,IAAaX,QAAS,SAAAC,GACzC,EAAKX,MAAMoB,eACZtC,UAAU,eAEb,MAGR,yBAAKA,UAAU,mCACViB,KAAKC,MAAMsB,OAEhB,yBAAKxC,UAAU,oBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASzC,UAAU,mCAAmC4B,QAAS,SAAAC,GAClF,EAAKX,MAAMwB,mB,GAlBThB,aCmBXiB,E,iLAnBF,IAAD,OACJ,OACI,yBAAK3C,UAAU,sCACX,yBAAKA,UAAWiB,KAAKC,MAAM0B,KAAM,kBAAkB,yBAA0BhB,QAAS,SAAAC,GAClF,EAAKX,MAAM2B,WAEV5B,KAAKC,MAAM4B,QAEf7B,KAAKC,MAAM0B,KACR,yBAAK5C,UAAU,0BACViB,KAAKC,MAAM0B,MAGhB,U,GAdWlB,a,QC6ChBqB,E,2MAxCXC,a,sBAAc,8BAAAC,EAAA,sEACQC,oBAAUC,IAAI,EAAKjC,MAAMkC,IADjC,OACJD,EADI,OAEJE,EAAOC,SAASC,eAAe,SAASC,MAAM,GAEpDL,EAAIM,IAAIJ,GAAMK,MAAK,SAAA7B,GACf8B,QAAQC,IAAI,mCALN,2C,wEASV,OACI,yBAAK5D,UAAU,mDACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,WAEhD,kBAAC,EAAD,CACI3B,SAAUF,KAAKC,MAAMC,SACrBC,KAAMH,KAAKC,MAAME,KACjBC,WAAYJ,KAAKC,MAAMG,WACvBG,iBAAkBP,KAAKC,MAAMM,iBAC7BC,gBAAiBR,KAAKC,MAAMO,kBAEhC,kBAAC,EAAD,CACIK,YAAab,KAAKC,MAAMY,YACxBG,WAAYhB,KAAKC,MAAMe,WACvBE,kBAAmBlB,KAAKC,MAAMiB,oBAElC,yBAAKnC,UAAU,mCACX,yBAAKA,UAAU,YACX,yBAAKA,UAAU,aACX,4BAAQ6D,KAAK,SAAS7D,UAAU,sBAAqB4B,QAASX,KAAKC,MAAM4C,qBAAzE,mBACA,4BAAQD,KAAK,SAAS7D,UAAU,wBAAuB4B,QAASX,KAAKC,MAAM6C,mBAA3E,yB,GAjCFrC,a,kBC+FXsC,E,2MA/FXC,e,sBAAgB,sBAAAhB,EAAA,sEACNiB,aAAoBf,MAAMgB,MAAM,WAAWA,MAAM,EAAKjD,MAAMkD,UAAUD,MAAM,EAAKjD,MAAMmD,cAAcF,MAAM,EAAKjD,MAAMkC,IAAIkB,SADpH,OAEZ,EAAKpD,MAAMqD,QAFC,2C,wEAIP,IAAD,OACJ,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQC,SAAU5D,KAAKC,MAAM4D,OACpD,yBAAK9E,UAAU,mBACX,yBAAKA,UAAU,OACgB,UAA1BiB,KAAKC,MAAMmD,aACZ,yBAAKrE,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,aAAaiB,KAAKC,MAAM6D,OAAOC,QAEjD,yBAAKhF,UAAU,oBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASb,QAAS,SAAAC,GAAI,EAAKoC,sBAG1D,yBAAKjE,UAAU,OACViB,KAAKC,MAAM+D,WACR,yBAAKjF,UAAU,OACX,6BACA,wBAAIA,UAAU,aAAaiB,KAAKC,MAAM+D,aAG1C,OAKR,yBAAKjF,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,aAAaiB,KAAKC,MAAM6D,OAAOC,QAEjD,yBAAKhF,UAAU,oBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASb,QAAS,SAAAC,GAAI,EAAKoC,sBAG1D,yBAAKjE,UAAU,OACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,aAAaiB,KAAKC,MAAM6D,OAAOG,KAA7C,eAEJ,yBAAKlF,UAAU,YACX,4BACI,yBAAKA,UAAU,+BACViB,KAAKC,MAAM6D,OAAOI,gBAKlClE,KAAKC,MAAM6D,OAAOK,SACf,yBAAKpF,UAAU,OACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAiB+B,KAAMsD,QAI/B,SAOnBpE,KAAKC,MAAM6D,OAAOK,SACf,kBAACX,EAAA,EAAUa,SAAX,CAAoBT,SAAU5D,KAAKC,MAAM4D,OACrC,kBAACN,EAAA,EAAKe,KAAN,KACI,yBAAKvF,UAAU,mBACX,yBAAKA,UAAU,OACNwF,OAAOC,KAAKxE,KAAKC,MAAM6D,OAAOK,UAAUM,KAAI,SAACC,EAAQC,GAAT,OACzC,yBAAK5F,UAAU,WAAW6F,IAAKF,EAAQC,GACnC,0BAAM5F,UAAU,+BACZ,yBAAKA,UAAU,YACV2F,GAEL,yBAAK3F,UAAU,YACV,EAAKkB,MAAM6D,OAAOK,SAASO,GADhC,gBAWhC,U,GA1FMjE,aCsCfoE,E,iLArCF,IAAD,OACJ,OACI,yBAAK9F,UAAU,yBACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,OAAQF,KAAK,QAAQC,OAAQ5B,KAAKC,MAAMoB,gBAExF,yBAAKtC,UAAU,8BACX,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACvB9E,KAAKC,MAAM8E,MACRR,OAAOC,KAAKxE,KAAKC,MAAM8E,OAAOC,UAAUP,KAAI,SAACtC,EAAGwC,GAAJ,OACxC,kBAAC,EAAD,CAAiBd,MAAOc,EAAGrB,MAAO,EAAKrD,MAAMqD,MAAOQ,OAAQ,EAAK7D,MAAM8E,MAAM5C,GAAK6B,WAAY,EAAK/D,MAAM8E,MAAM5C,GAAI6B,WAAWZ,aAAa,QAAQD,SAAU,EAAKlD,MAAMkD,SAAUhB,GAAIA,EAAIyC,IAAKzC,OAGnM,oCACI,yBAAKpD,UAAU,mCACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,wCAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACf,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,GAChD,EAAKX,MAAMwB,UACX,EAAKxB,MAAMgF,QAAQC,KAAK,WAFhC,2B,GAxBXzE,aCsCV0E,E,iLArCF,IAAD,OACJ,OACI,yBAAKpG,UAAU,yBACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,OAAQF,KAAM,QAASC,OAAQ5B,KAAKC,MAAMoB,gBAE1F,yBAAKtC,UAAU,8BACX,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACvB9E,KAAKC,MAAMmF,OACRb,OAAOC,KAAKxE,KAAKC,MAAMmF,QAAQJ,UAAUP,KAAI,SAACtC,EAAGwC,GAAJ,OACzC,kBAAC,EAAD,CAAiBd,MAAOc,EAAGrB,MAAO,EAAKrD,MAAMqD,MAAOQ,OAAQ,EAAK7D,MAAMmF,OAAOjD,GAAKiB,aAAa,SAASD,SAAU,EAAKlD,MAAMkD,SAAUhB,GAAIA,EAAIyC,IAAKzC,OAGzJ,oCACI,yBAAKpD,UAAU,mCACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,wCAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,GACpD,EAAKX,MAAMwB,UACX,EAAKxB,MAAMgF,QAAQC,KAAK,YAF5B,4B,GAxBfzE,aCsCVS,E,iLArCF,IAAD,OACJ,OACI,yBAAKnC,UAAU,yBACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,kBAAC,EAAD,CAAkBM,OAAQ7B,KAAKC,MAAM4B,OAAQF,KAAK,eAAeC,OAAQ5B,KAAKC,MAAMoB,gBAE/F,yBAAKtC,UAAU,8BACX,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACvB9E,KAAKC,MAAMoF,aACRd,OAAOC,KAAKxE,KAAKC,MAAMoF,cAAcL,UAAUP,KAAI,SAAAtC,GAAE,OACjD,kBAAC,EAAD,CAAiBmB,MAAO,EAAKrD,MAAMqD,MAAOQ,OAAQ,EAAK7D,MAAMoF,aAAalD,GAAKiB,aAAa,eAAeD,SAAU,EAAKlD,MAAMkD,SAAUhB,GAAIA,EAAIyC,IAAKzC,OAGvJ,oCACA,yBAAKpD,UAAU,mCACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAd,0CAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACf,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,GAChD,EAAKX,MAAMwB,UACX,EAAKxB,MAAMgF,QAAQC,KAAK,kBAFhC,6B,GAxBJzE,aCuBjB6E,E,iLAzBF,IAAD,OACJ,OACI,yBAAKvG,UAAU,qCACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,kCAA2DiB,KAAKC,MAAM4B,OAAtE,mBAGR,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQwG,IAAI,SAASxG,UAAU,iBAAiB4B,QAAS,SAAAC,GACrD,EAAKX,MAAMuF,iBACX,EAAKvF,MAAMwB,YAFf,iBAKJ,yBAAK1C,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAU,oBAAoB4B,QAASX,KAAKC,MAAMwB,SAAxE,mB,GAjBUhB,aC6BnBgF,E,iLA1BP,OACI,yBAAK1G,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAMoB,YACxBI,QAASzB,KAAKC,MAAMyF,UAExB,yBAAK3G,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,kCAA2DiB,KAAKC,MAAM4B,OAAtE,mBAGR,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,mBACX,4BAAQwG,IAAI,SAASxG,UAAU,iBAAiB4B,QAAS,SAAAC,MAAzD,iBAGJ,yBAAK7B,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAU,oBAAoB4B,QAASX,KAAKC,MAAMwB,SAAxE,mB,GAnBQhB,a,+WCDzB,IAAMkF,EAAQC,IAAOC,IAAR,KAGPC,EAAMF,IAAOG,IAAV,KAIHxC,EAAOqC,IAAOC,IAAV,KCuIFG,E,2MAjIXC,MAAM,CACF9F,UAAK+F,G,EAETrD,oBAAoB,kBAAIsD,uBAAa,CACjCC,SAAW,YAAe,IAAb3E,EAAY,EAAZA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,EAAD,CACI8C,OAAQ,EAAK5B,MAAM4B,OACnB2D,eAAgB,EAAKA,eACrB/D,QAASA,S,EAM7BqB,kBAAkB,kBAAIqD,uBAAa,CAC/BC,SAAW,YAAe,IAAb3E,EAAY,EAAZA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,EAAD,CACIsC,YAAa,EAAKA,YAClBI,QAASA,EACTI,OAAQ,EAAK5B,MAAM4B,c,EAMvCR,YAAY,kBAAI8E,uBAAa,CACzBC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,yBACX,kBAAC,EAAD,iBACQ,EAAKkB,MADb,CAEIwB,QAASA,EACToB,oBAAqB,EAAKA,oBAC1BC,kBAAmB,EAAKA,kBACxBjC,YAAa,EAAKA,YAClBG,WAAY,EAAKA,WACjBE,kBAAmB,EAAKA,0B,EAM5CL,YAAY,kBAAIsF,uBAAa,CACzBC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,oBACX,kBAAC,EAAD,CACIoE,SAAU,EAAKlD,MAAMkC,GACrBmB,MAAO,EAAKzC,YACZY,QAASA,EACTJ,YAAa,EAAKA,YAClBQ,OAAQ,EAAK5B,MAAM4B,OACnBuD,OAAQ,EAAKnF,MAAMmF,OACnBH,QAAS,EAAKhF,MAAMgF,e,EAMxCjE,WAAW,kBAAImF,uBAAa,CACxBC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,oBACX,kBAAC,EAAD,CACIoE,SAAU,EAAKlD,MAAMkC,GACrBmB,MAAO,EAAKtC,WACZS,QAASA,EACTJ,YAAa,EAAKA,YAClBQ,OAAQ,EAAK5B,MAAM4B,OACnBkD,MAAO,EAAK9E,MAAM8E,MAClBE,QAAS,EAAKhF,MAAMgF,e,EAMxC/D,kBAAkB,kBAAIiF,uBAAa,CAC/BC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,oBACX,kBAACsH,EAAD,CACIlD,SAAU,EAAKlD,MAAMkC,GACrBmB,MAAO,EAAKpC,kBACZO,QAASA,EACTJ,YAAa,EAAKA,YAClBQ,OAAQ,EAAK5B,MAAM4B,OACnBwD,aAAc,EAAKpF,MAAMoF,aACzBJ,QAAS,EAAKhF,MAAMgF,e,EAWxCO,e,sBAAe,sBAAAxD,EAAA,sEACLsE,qBAAWpE,MAAMgB,MAAM,WAAWA,MAAM,EAAKjD,MAAMkC,IAAIkB,SADlD,2C,mFAJXrD,KAAKuG,SAAS,CACVpG,KAAKE,MAASC,KAAKD,IAAOL,KAAKC,MAAMG,YAAY,Y,+BAOrD,OACI,yBAAKrB,UAAU,YACX,kBAAC,EAAD,CAAMA,UAAU,gBAAgB4B,QAASX,KAAKqB,aAC1C,kBAACyE,EAAD,CAAKvG,IAAKC,IAAYT,UAAU,eAAeU,IAAI,QACnD,kBAACkG,EAAD,CAAS5G,UAAU,qEACf,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAciB,KAAKC,MAAM4B,UAG/C,yBAAK9C,UAAU,OACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,iCAAiCiB,KAAKiG,MAAM9F,KAA1D,mB,GAxHRM,a,QC2Cb+F,G,uLArDF,IAAD,OACJ,OACI,yBAAKzH,UAAU,qCACf,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,cAAd,yCAGR,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,WAIJ,2BAAO6D,KAAK,OAAO7D,UAAU,eAAeoD,GAAG,iBAEnD,yBAAKpD,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,aAIJ,2BAAO6D,KAAK,OAAO7D,UAAU,eAAeoD,GAAG,qBAI3D,yBAAKpD,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CACI+B,KAAM2F,IACN1H,UAAU,0BACV4B,QAAS,SAAAC,GACL,IAAMiB,EAASQ,SAASC,eAAe,eAAeoE,MAChDxG,EAAWmC,SAASC,eAAe,iBAAiBoE,MAC1D,EAAKzG,MAAM0G,qBAAqB9E,EAAO3B,GACvC,EAAKD,MAAMwB,cAGvB,yBAAK1C,UAAU,YACX,kBAAC,IAAD,CACI+B,KAAM8F,IACNjG,QAAS,SAAAC,GACL,EAAKX,MAAMwB,WAEf1C,UAAU,iC,GA/CH0B,cCQzBoG,G,2MACFF,qB,uCAAsB,WAAO9E,EAAO3B,GAAd,SAAA8B,EAAA,sEACZsE,qBAAWpE,MAAMgB,MAAM,WAAWgC,KAAK,CACzCrD,OAAOA,EACP3B,SAASA,EACTE,WAAWC,MAASyG,OAAO,OAJb,2C,0DAOtBC,iBAAiB,kBAAIZ,uBAAa,CAC9BC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,yBACX,kBAAC,EAAD,CACI0C,QAASA,EACTkF,qBAAsB,EAAKA,4B,wEAMtC,IAAD,OACJ,OACI,yBAAK5H,UAAU,aACX,yBAAKA,UAAU,0EACViB,KAAKC,MAAM+G,QACRzC,OAAOC,KAAKxE,KAAKC,MAAM+G,SAASvC,KAAI,SAAAG,GAAG,OACnC,kBAAC,EAAD,CACIxE,WAAY,EAAKH,MAAM+G,QAAQpC,GAAKxE,WACpCF,SAAU,EAAKD,MAAM+G,QAAQpC,GAAK1E,SAClCK,iBAAkB,EAAKN,MAAM+G,QAAQpC,GAAKrE,iBAC1CC,gBAAiB,EAAKP,MAAM+G,QAAQpC,GAAKpE,gBACzCuE,MAAO,EAAK9E,MAAM+G,QAAQpC,GAAKG,MAC/BK,OAAQ,EAAKnF,MAAM+G,QAAQpC,GAAKQ,OAChCC,aAAc,EAAKpF,MAAM+G,QAAQpC,GAAKS,aACtCxD,OAAQ,EAAK5B,MAAM+G,QAAQpC,GAAK/C,OAChCM,GAAIyC,EACJA,IAAKA,EACLK,QAAS,EAAKhF,MAAMgF,aAI5B,oCACI,yBAAKlG,UAAU,sBACX,wBAAIA,UAAU,cAAd,sBACA,gDAIZ,yBAAKA,UAAU,SACX,kBAAC,IAAD,CAAiB+B,KAAMmG,IAAclI,UAAU,aAAa4B,QAASX,KAAK+G,0B,GAjDpEtG,aA6DfyG,gBALS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,WAGiB,KAAxBE,CAA8BL,ICnD9BM,G,2MAjBXlB,MAAM,CACFlC,MAAM,GAAD,OAAI1D,MAASyG,OAAO,cAApB,YAAqCzG,MAASyG,OAAO,Q,mFAE1C,IAAD,OACfM,aAAY,WACR,EAAKb,SAAS,CACVxC,MAAM,GAAD,OAAK1D,MAASyG,OAAO,cAArB,YAAsCzG,MAASyG,OAAO,WAEhE,O,+BAGH,OAEI,4BAAK9G,KAAKiG,MAAMlC,W,GAdHtD,aCInB4G,G,2MAEFpB,MAAM,CACFqB,OAAO,EACPC,cAASrB,EACTsB,kBAAatB,EACbuB,sBAAiBvB,EACjBwB,UAAS,G,EAEbC,iBAAkB,SAACF,GACf,IAAID,EAAe,EAAKI,qBAAqBH,GAC1C,EAAKxH,MAAM4H,cAAc,EAAK5H,MAAM6H,YACnCpF,QAAQC,IAAItC,IAAO,EAAKJ,MAAM4H,aAAa,KAAKvH,KAAKD,MAAS,MAG9DqC,QAAQC,KAAKtC,IAAO,EAAKJ,MAAM4H,aAAa,KAAKvH,KAAKD,MAAS,MAEnE,IAAM0H,EAAgB,EAAKC,0BAiB3B,OAhBGR,EAAaS,MAAM,EAAE,GAAGF,GACvBP,EAAeA,EAAaS,MAAM,EAAE,GAAGF,EAAcP,EAAaS,MAAM,GACxE,EAAK1B,SAAS,CACVmB,UAAS,KAIb,EAAKnB,SAAS,CACVmB,UAAS,IAGjB,EAAKnB,SAAS,CACVwB,cAAeA,EACfP,aAAcA,EACdD,SAAS,EAAKW,qBAEX,CAACV,EAAaO,I,EAEzBI,0BAA0B,WACtB,IAAMC,EAAS,EAAKT,iBAAiB,EAAKU,2BAC5BhG,SAASC,eAAe,YAChCgG,MAAMC,MAAZ,UAAqB,EAAKC,sBAAsBJ,EAAS,GAAGA,EAAS,IAArE,M,EAEJC,wBAAwB,WACpB,IAAMI,EAAOpI,MAASyG,OAAO,MAAMmB,MAAM,EAAE,GAE3C,OADAvF,QAAQC,MACL8F,GAAM,EAAKxI,MAAM4H,cAAgBY,EAAO,EAAKxI,MAAM6H,a,EA4B1DI,iBAAiB,WACb,GAAG,EAAKjI,MAAM6H,aAAa,EAAK7H,MAAM4H,aAAa,CAE/C,IAAIa,OAAOxC,EAEPwC,EADJ,EAAKzC,MAAMyB,SACArH,MAASC,KAAKD,IAAO,EAAKJ,MAAM4H,aAAa,KAAK,KAElDxH,MAASC,KAAKD,IAAO,EAAKJ,MAAM6H,YAAY,KAAKa,IAAI,EAAE,QAAQ,KAC1E,IAAMC,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,MAAM,GAAN,OAAUE,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,GAI/D,IAAIJ,OAAOxC,EAEPwC,EADJ,EAAKzC,MAAMyB,UACCrH,MAASC,KAAKD,IAAO,EAAKJ,MAAM4H,aAAa,KAAK,KAEnDxH,MAASC,KAAKD,IAAO,EAAKJ,MAAM6H,YAAY,KAAK,KAC5D,IAAMc,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,MAAM,GAAN,OAAUE,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,EAA/D,M,EAGRlB,qBAAqB,SAACH,GAClB,GAAG,EAAKxH,MAAM6H,aAAa,EAAK7H,MAAM4H,aAAa,CAC/C,IAAIa,OAAOxC,EAEPwC,EADJ,EAAKzC,MAAMyB,SACArH,MAASC,KAAKD,IAAO,EAAKJ,MAAM8I,KAAK,KAAK,MAEzC1I,MAASC,KAAKD,IAAO,EAAKJ,MAAM6H,YAAY,KAAK,KAC7D,IAAMc,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,OADAhG,QAAQC,IAAR,uBAA4BiG,EAAM,GAAI,IAAIA,EAAMA,EAAhD,YAAyDE,EAAQ,GAAI,IAAIA,EAAQA,IAC3E,GAAN,OAAUF,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,GAG/D,IAAIJ,OAAOxC,EAEPwC,EADJ,EAAKzC,MAAMyB,SACArH,MAASC,KAAKD,IAAO,EAAKJ,MAAM4H,aAAa,KAAKc,IAAI,EAAE,QAAQ,KAEhEtI,MAASC,KAAKD,IAAO,EAAKJ,MAAM6H,YAAY,KAAKa,IAAI,EAAE,QAAQ,KAC1E,IAAMC,EAAQC,UAAUH,EAAK,IACvBI,GAAWJ,EAAK,GAEtB,OADAhG,QAAQC,IAAR,wBAA6BiG,EAAM,GAAI,IAAIA,EAAMA,EAAjD,YAA0DE,EAAQ,GAAI,IAAIA,EAAQA,IAC5E,GAAN,OAAUF,EAAM,GAAI,IAAIA,EAAMA,EAA9B,YAAuCE,EAAQ,GAAI,IAAIA,EAAQA,EAA/D,M,EAGRE,uBAAuB,WACnB,EAAKzC,SAAS,CACVkB,kBAAkB,EAAKxB,MAAMwB,oB,EAGrCe,sBAAsB,SAAChB,EAAcO,GACjC,OAAG,EAAK9H,MAAM6H,YAAa,EAAK7H,MAAM4H,cAEZ,GADRgB,SAASrB,EAAaS,MAAM,EAAET,EAAayB,QAAQ,OACtCJ,SAASrB,EAAaS,MAAMT,EAAayB,QAAQ,KAAK,MACnD,GAAdlB,GAAkB,K,mFAhFtB,IAAD,OACf/H,KAAKmI,4BACL,IAAMe,EAAW9B,aAAY,WACzB,EAAKe,8BACN,KACHnI,KAAKuG,SAAS,CACV2C,SAAUA,M,6CAIdC,cAAcnJ,KAAKiG,MAAMiD,Y,gDAGzB,OAAGlJ,KAAKC,MAAM6H,aAAa9H,KAAKC,MAAM4H,aAC3BxH,IAAOL,KAAKC,MAAM6H,YAAY,KAAKa,IAAI,EAAE,QAAQrI,KAAKD,IAAOL,KAAKC,MAAM4H,aAAa,KAAK,KAI1FxH,IAAOL,KAAKC,MAAM6H,YAAY,KAAKxH,KAAKD,IAAOL,KAAKC,MAAM4H,aAAa,KAAK,O,+BAwEvF,OACI,yBAAK9I,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,4BACX,kBAAC,GAAD,QAGR,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,mBACX,uCAAaiB,KAAKC,MAAMmJ,WAGhC,yBAAKrK,UAAU,OACX,yBAAKA,UAAU,mBACX,8CAAoBiB,KAAKiG,MAAM8B,cAA/B,QAAmD/H,KAAKC,MAAM4H,aAA9D,SAAkF7H,KAAKC,MAAM6H,YAA7F,UAGR,yBAAK/I,UAAU,OACX,yBAAKA,UAAU,mBAAf,qBACuBiB,KAAKiG,MAAMuB,cAElC,yBAAKzI,UAAU,mBAAf,iBACmBiB,KAAKiG,MAAMsB,WAGlC,yBAAKxI,UAAU,OACViB,KAAKiG,MAAMyB,SACR,yBAAK3I,UAAU,mBACX,0BAAMA,UAAU,mCAAhB,mBAKJ,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,sCAAhB,kBAMZ,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,YACX,yBAAKA,UAAWiB,KAAKiG,MAAMyB,SAAS,kEAAmE,qEAAuE2B,KAAK,cAAclH,GAAG,WAAWmH,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,gB,GAxLrQ/I,aAuMVyG,gBAPO,SAAAjB,GAClB,MAAM,CACFmD,QAAQnD,EAAMmD,QACdvB,aAAa5B,EAAM4B,aACnBC,YAAY7B,EAAM6B,eAGa,KAAxBZ,CAA8BG,IC/I9BoC,G,iLA5DF,IAAD,OACJ,OACI,yBAAK1K,UAAU,qCACX,kBAAC,EAAD,CACI0C,QAASzB,KAAKC,MAAMwB,QACpBF,MAAO,8BAEX,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,kBACf,2BAAOA,UAAU,SACT,+BACI,4BACI,wBAAIA,UAAU,cAAd,WACA,wBAAIA,UAAU,yBACV,4BAAQ2K,KAAK,GAAGvH,GAAG,IACf,4BAAQuE,MAAM,IACT1G,KAAKC,MAAMmJ,SAEhB,4BAAQ1C,MAAM,IAAd,eAGA,4BAAQA,MAAM,IAAd,gBAMZ,4BACI,wBAAI3H,UAAU,cAAd,4BACA,wBAAIA,UAAU,yBAAyBiB,KAAKC,MAAM4H,aAAlD,QAEJ,4BACI,wBAAI9I,UAAU,cAAd,4BACA,wBAAIA,UAAU,yBAAyBiB,KAAKC,MAAM6H,YAAlD,YAMpB,yBAAK/I,UAAU,8BACX,yBAAKA,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,kBAAkB4B,QAAS,SAAAC,GACvD,EAAKX,MAAM0J,wBADf,oBAIJ,yBAAK5K,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,kBAAkB4B,QAAS,SAAAC,GACvD,EAAKX,MAAM2J,uBADf,2BAIJ,yBAAK7K,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,kBAAkB4B,QAAS,SAAAC,GACvD,EAAKX,MAAM4J,sBADf,gC,GApDgBpJ,aCoBzBqJ,G,iLAlBF,IAAD,OACJ,OACI,yBAAK/K,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAM2F,IAAe1H,UAAU,0BAA0B4B,QAAS,SAAAC,GAC/E,EAAKX,MAAM8J,cACX,EAAK9J,MAAM+J,yBAGnB,yBAAKjL,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAM8F,IAAe7H,UAAU,wBAAwB4B,QAAS,SAAAC,GAC7E,EAAKX,MAAM+J,8B,GAZKvJ,aCyBzBwJ,GA1Ba,WACxB,OACI,yBAAKlL,UAAU,mCACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,0BACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,SAIJ,2BAAOmL,WAAS,EAACtH,KAAK,SAASuH,IAAI,IAAIC,IAAI,KAAKjI,GAAG,aAAapD,UAAU,mBAGlF,yBAAKA,UAAU,UACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,uBACX,0BAAMA,UAAU,oBAAhB,YAIJ,2BAAO6D,KAAK,SAASuH,IAAI,IAAIC,IAAI,KAAKjI,GAAG,eAAepD,UAAU,qBCAvEsL,G,iLAhBP,OACI,yBAAKtL,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAM+J,mBACxBvI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAM,oCAEV,kBAAC,GAAD,MACA,kBAAC,GAAD,CACIwI,YAAa/J,KAAKC,MAAMqK,mBACxBN,mBAAoBhK,KAAKC,MAAM+J,0B,GAZnBvJ,aCkBjB4J,G,iLAhBP,OACI,yBAAKtL,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAM+J,mBACxBvI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAM,oCAEV,kBAAC,GAAD,MACA,kBAAC,GAAD,CACIwI,YAAa/J,KAAKC,MAAMsK,oBACxBP,mBAAoBhK,KAAKC,MAAM+J,0B,GAZnBvJ,aC2CjB+J,G,iLA1CF,IAAD,OACJ,OACI,yBAAKzL,UAAU,qCACX,kBAAC,EAAD,CACIsC,YAAarB,KAAKC,MAAM+J,mBACxBvI,QAASzB,KAAKC,MAAMwB,QACpBF,MAAM,gCAEV,yBAAKxC,UAAU,YACX,yBAAKA,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAqC,gBAA1BiB,KAAKC,MAAMwK,aAA6B,kBAAkB,0BAA2B9J,QAAS,SAAAC,GAC3H,EAAKX,MAAMyK,oBAAoB,iBADnC,gBAIJ,yBAAK3L,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAqC,eAA1BiB,KAAKC,MAAMwK,aAA4B,kBAAkB,0BAA2B9J,QAAS,SAAAC,GAC1H,EAAKX,MAAMyK,oBAAoB,gBADnC,eAIJ,yBAAK3L,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAqC,cAA1BiB,KAAKC,MAAMwK,aAA2B,kBAAkB,0BAA2B9J,QAAS,SAAAC,GACzH,EAAKX,MAAMyK,oBAAoB,eADnC,eAKR,yBAAK3L,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAM2F,IAAe1H,UAAU,0BAA0B4B,QAAS,SAAAC,GAC/E,EAAKX,MAAM0K,kBACX,EAAK1K,MAAM+J,yBAGnB,yBAAKjL,UAAU,YACX,kBAAC,IAAD,CAAiB+B,KAAM8F,IAAe7H,UAAU,wBAAwB4B,QAAS,SAAAC,GAC7E,EAAKX,MAAM+J,+B,GAnCLvJ,a,sLCF3B,IAAMmK,GAAahF,IAAOC,IAAV,M,koBCCvB,IAAMgF,GAAqBC,YAAH,MAUlBC,GAAYC,YAAH,KACKH,IAIPI,GAAOrF,IAAOsF,IAAR,KACbH,IAOOI,GAAKvF,IAAOwF,GAAV,MCCAC,GAxBO,WACd,OACI,yBAAKtM,UAAU,gDAAgDsK,KAAK,SAChE,yBAAKtK,UAAU,wBACX,4CAEJ,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMuM,GAAG,UACL,4BAAQ1I,KAAK,SAAS7D,UAAU,yBAAhC,WAGR,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMuM,GAAG,SACL,4BAAQ1I,KAAK,SAAS7D,UAAU,yBAAhC,WAGR,yBAAKA,UAAU,uBACX,kBAAC,IAAD,CAAMuM,GAAG,gBACL,4BAAQ1I,KAAK,SAAS7D,UAAU,yBAAhC,eCdlBkM,G,iLACO,IAAD,OACJ,OACI,kBAAC,GAAD,KACI,yBAAKlM,UAAU,6DACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,kBAAC,IAAD,CAAiB+B,KAAMyK,IAAQxM,UAAU,aAAa4B,QAAS,SAAAC,GAC3D,EAAKX,MAAM+J,yBAGnB,yBAAKjL,UAAU,kBACX,kBAAC,IAAD,CAAiB+B,KAAMU,IAASzC,UAAU,aAAa4B,QAAS,SAAAC,GAAI,EAAKX,MAAMuL,mBAGvF,kBAACL,GAAD,MACCnL,KAAKC,MAAM+G,QACR,kBAAC,GAAD,MAEA,KAEJ,kBAACmE,GAAD,MACA,yBAAKpM,UAAU,8BACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMuM,GAAG,eACL,4BAAQ1I,KAAK,SAAS7D,UAAU,iBAAhC,cAGR,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAMuM,GAAG,2BACL,4BAAQ1I,KAAK,SAAS7D,UAAU,iBAAhC,qC,GA9BX0B,aA4CNyG,gBALS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,WAGiB,KAAxBE,CAA8B+D,ICjCvCQ,G,2MACFxF,MAAM,CACFwE,kBAAavE,EACbwF,YAAW,G,EAEf/B,oBAAoB,kBAAIxD,uBAAa,CACjCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACI0C,QAASA,EACTuI,mBAAoB,EAAKA,mBACzBS,aAAc,EAAKxE,MAAMwE,aACzBC,oBAAqB,SAAAD,GACjB,EAAKlE,SAAS,CACVkE,aAAaA,KAGrBE,gBAAiB,EAAKA,uB,EAM1Cf,mBAAmB,kBAAIzD,uBAAa,CAChCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC4M,GAAD,CACIlK,QAASA,EACTuI,mBAAoB,EAAKA,mBACzBO,oBAAqB,EAAKA,2B,EAM9CV,kBAAkB,kBAAI1D,uBAAa,CAC/BC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACI0C,QAASA,EACTuI,mBAAoB,EAAKA,mBACzBM,mBAAoB,EAAKA,0B,EAM7CN,mBAAmB,kBAAI7D,uBAAa,CAChCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIqK,QAAS,EAAKnJ,MAAMmJ,QACpBtB,YAAa,EAAK7H,MAAM6H,YACxBD,aAAc,EAAK5H,MAAM4H,aACzBpG,QAASA,EACToI,kBAAmB,EAAKA,kBACxBD,mBAAoB,EAAKA,mBACzBD,oBAAqB,EAAKA,2B,EAM9CgB,gB,sBAAgB,sBAAA3I,EAAA,sEACNsE,qBAAWpE,MAAM0J,OAAO,CAC1BxC,QAAQ,EAAKnD,MAAMwE,eAFX,2C,EAKhBF,oB,sBAAoB,4BAAAvI,EAAA,6DACV6J,EAAQxJ,SAASC,eAAe,cAAcoE,MADpC,SAGVJ,qBAAWpE,MAAM0J,OAAO,CAC1B/D,aAAcgB,SAASgD,KAJX,2C,EAOpBvB,mB,sBAAmB,4BAAAtI,EAAA,6DACT6J,EAAQxJ,SAASC,eAAe,cAAcoE,MADrC,SAGTJ,qBAAWpE,MAAM0J,OAAO,CAC1B9D,YAAae,SAASgD,KAJX,2C,EAOnBC,oBAAqB,WACjB,EAAKvF,SAAS,CAACmF,YAAY,EAAKzF,MAAMyF,c,wEAEjC,IAAD,OACJ,OACI,yBAAK3M,UAAU,mEACViB,KAAKiG,MAAMyF,WACR,kBAAC,GAAD,CAAQ1B,mBAAoBhK,KAAKgK,mBAAmBwB,YAAaxL,KAAK8L,sBAEtE,kBAAClB,GAAD,CAAYjK,QAAS,SAAAC,GACjB,EAAKkL,wBAEL,kBAAC,IAAD,CAAiBhL,KAAMiL,OAG/B,yBAAKhN,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,GAAD,QAGR,yBAAKA,UAAU,OACX,kBAAC,GAAD,CAAiBkG,QAASjF,KAAKC,MAAMgF,gB,GA3GnCxE,aAyHPyG,gBARS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,QACdoC,QAAQnD,EAAMmD,QACdvB,aAAa5B,EAAM4B,aACnBC,YAAY7B,EAAM6B,eAGa,KAAxBZ,CAA8BuE,ICjI9BO,G,iLAPP,OACI,yBAAKjN,UAAU,OACNiB,KAAKC,MAAMgM,c,GAJXxL,a,SC2BNyL,G,iLA1BF,IAAD,OACJ,OACI,yBAAKnN,UAAU,qFACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,aAAsCiB,KAAKC,MAAM6D,OAAjD,OAGR,yBAAK/E,UAAU,mCACX,yBAAKA,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,wBAAwB4B,QAAS,SAAAC,GAC7D,EAAKX,MAAMkM,WACX,EAAKlM,MAAMwB,UACX,EAAKxB,MAAMgF,QAAQmH,WAHvB,cAMJ,yBAAKrN,UAAU,YACX,4BAAQ6D,KAAK,SAAS7D,UAAU,wBAAwB4B,QAAS,SAAAC,GAC7D,EAAKX,MAAMwB,YADf,mB,GAlBWhB,aCmBpB4L,G,iLAdP,OACI,yBAAKtN,UAAU,YACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAMuM,GAAG,KACL,kBAAC,IAAD,CAAiBxK,KAAMQ,IAAavC,UAAU,oBAGtD,yBAAKA,UAAU,qBACX,wBAAIA,UAAU,cAAciB,KAAKC,MAAMsB,a,GAVhCd,aCFrB6L,G,iLAEE,OACI,yBAAKvN,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAWiB,KAAKC,MAAMsM,QAAQ,kBAAkB,uBAAwB5L,QAASX,KAAKC,MAAMuM,aAC7GxM,KAAKC,MAAM+G,QAAQhH,KAAKC,MAAMwM,OAAO5K,a,GAL7BpB,aAgBdyG,gBALS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,WAGiB,KAAxBE,CAA8BoF,ICsC9BI,G,iLAnDF,IAAD,OACAC,EAAgB,GASpB,OARG3M,KAAKC,MAAM+G,SACVzC,OAAOC,KAAKxE,KAAKC,MAAM+G,SAASvC,KAAI,SAAAG,GAIhC,OAHG,EAAK3E,MAAM+G,QAAQpC,GAAKgI,WACvBD,EAAe,EAAK1M,MAAM+G,QAAQpC,GAAK/C,SAAQ,GAE5C,QAIX,kBAAC/C,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,kBAACoE,EAAA,EAAD,KACI,4BAAQxE,UAAU,gBACd,kBAACyE,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ5E,UAAWwF,OAAOC,KAAKmI,GAAgBE,OAAO,wBAAwB,YAAajJ,SAAS,IAAIyF,KAAK,UAAxI,oBAEI,yBAAKtK,UAAU,OACV4N,EACDpI,OAAOC,KAAKmI,GAAgBlI,KAAI,SAAC5C,EAAO8C,GAAR,OAC5B,yBAAK5F,UAAU,WAAW6F,IAAK,gBAAgBD,GAC3C,0BAAM5F,UAAU,oCACX8C,OAKb,QAKZ,kBAAC2B,EAAA,EAAUa,SAAX,CAAoBT,SAAS,KACzB,yBAAK7E,UAAU,mCACViB,KAAKC,MAAM+G,QACRzC,OAAOC,KAAKxE,KAAKC,MAAM+G,SAASvC,KAAI,SAAAG,GAAG,OACnC,kBAAC,GAAD,CAAgB2H,QAAS,EAAKtM,MAAM+G,QAAQpC,GAAKgI,SAAUH,MAAO7H,EAAKA,IAAKA,EAAK4H,YAAa,SAAA5L,GAC1F,EAAKX,MAAM6M,kBAAkBlI,SAIzC,c,GA1CCnE,aC+BlBsM,I,wLA9BF,IAAD,OACJ,OACI,kBAACjO,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,kBAACoE,EAAA,EAAD,KACI,4BAAQxE,UAAU,gBACd,kBAACyE,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ5E,UAAWiB,KAAKC,MAAMiE,YAAY,yBAAyB,YAAaN,SAAS,KAApH,0BAC4B5D,KAAKC,MAAMiE,YAAY,oCAAUlE,KAAKC,MAAMiE,YAArB,KAA4C,OAGnG,kBAACV,EAAA,EAAUa,SAAX,CAAoBT,SAAS,KACzB,yBAAK7E,UAAU,YACX,yBAAKA,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAoC,WAAzBiB,KAAKC,MAAMiE,YAAuB,kBAAkB,uBAAwBvD,QAAS,SAAAC,GAAI,EAAKX,MAAM+M,mBAAmB,YAAxJ,WAIJ,yBAAKjO,UAAU,mBACX,4BAAQ6D,KAAK,SAAS7D,UAAoC,WAAzBiB,KAAKC,MAAMiE,YAAuB,kBAAkB,uBAAwBvD,QAAS,SAAAC,GAAI,EAAKX,MAAM+M,mBAAmB,YAAxJ,oB,GAnBJvM,cCoBjBwM,G,iLAnBF,IAAD,OACJ,OACI,yBAAKlO,UAAU,YACP,yBAAKA,UAAU,mBACX,kBAAC,IAAD,CAAiB+B,KAAMoM,IAASnO,UAAU,oBAAoB4B,QAC1D,SAAAC,GACI,EAAKX,MAAMkN,gBAAgB,EAAKlN,MAAM6D,YAItD,yBAAK/E,UAAU,mBACX,kBAAC,IAAD,CAAMuM,GAAG,KACL,kBAAC,IAAD,CAAiBxK,KAAMU,IAASzC,UAAU,2B,GAbzB0B,a,+TCFlC,IAAM2M,GAAKxH,IAAOyH,GAAV,MAIFC,GAAK1H,IAAO2H,GAAV,MCHFC,GAAU,SAAC,GAAgC,IAA/B9I,EAA8B,EAA9BA,QAA8B,IAAtB+I,sBAAsB,MAAN,EAAM,EACnD,OACI,kBAACC,GAAA,EAAD,CAAgBC,QAAQ,QAAQC,UAAU,QAAQC,QAC9C,kBAACC,GAAA,EAAD,CAAU3L,GAAG,iBACT,kBAAC2L,GAAA,EAAQC,MAAT,CAAerK,GAAG,KAAK3E,UAAU,sBAAsB2F,EAAQ7C,QAC/D,kBAACiM,GAAA,EAAQE,QAAT,KACI,yBAAKjP,UAAU,mBACV2F,EACG,oCACI,yBAAK3F,UAAU,wBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACV2F,EAAQuJ,eAIrB,kBAACrO,EAAA,EAAD,CAAOsO,YAAU,EAACrO,SAAO,EAACE,QAAQ,QAC9B,+BACI,kBAACuN,GAAD,UACA,kBAACA,GAAD,eAEJ,+BACK/I,OAAOC,KAAKE,EAAQyJ,OAAO1J,KAAI,SAAC2J,EAAYC,GAAb,OAC5B,kBAAC,WAAD,CAAUzJ,IAAK,cAAcyJ,GACzB,4BACI,kBAACjB,GAAD,CAAIkB,QAAQ,IAAIvP,UAAU,QACtB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,mBACX,0BAAMA,UAAU,oDAAoDqP,QAMvF7J,OAAOC,KAAKE,EAAQyJ,MAAMC,IAAc3J,KAAI,SAAC0J,EAAMI,GAAP,OACzC,wBAAI3J,IAAK,QAAQ2J,GACb,kBAACnB,GAAD,CAAIrO,UAAU,aACToP,GAEL,kBAACf,GAAD,CAAIrO,UAAU,cACT8J,SAASnE,EAAQyJ,MAAMC,GAAaD,GAAOlG,MAAM,EAAEvD,EAAQyJ,MAAMC,GAAaD,GAAOlF,QAAQ,OAAOwE,EADzG,kBAW5B,SAKhB,yBAAK1O,UAAU,aACV2F,EAAQ7C,UC+BV2M,G,iLAvFF,IAAD,OACJ,OACI,kBAAC1P,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,kBAACoE,EAAA,EAAD,KACI,4BAAQxE,UAAU,gBACd,kBAACyE,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ5E,UAAWiB,KAAKC,MAAMwN,gBAAkBzN,KAAKC,MAAMwO,eAAe,kDAAkD,sCAAuC7K,SAAS,KAAvM,8BAEI,yBAAK7E,UAAU,OACX,yBAAKA,UAAU,4BACViB,KAAKC,MAAMwN,eACRzN,KAAKC,MAAMwN,eAAiB,MAE5B,OAIZ,yBAAK1O,UAAU,YACViB,KAAKC,MAAMwO,eACR,yBAAK1P,UAAU,YACVwF,OAAOC,KAAKxE,KAAKC,MAAMwO,gBAAgBhK,KAAI,SAACC,EAAQC,GAAT,OACxC,0BAAM5F,UAAU,wCAAwC6F,IAAK,UAAUD,GAClED,EADL,IACe,EAAKzE,MAAMwO,eAAe/J,GADzC,UAMR,QAIhB,kBAAClB,EAAA,EAAUa,SAAX,CAAoBT,SAAS,KACrB,kBAAC8K,GAAA,EAAD,KACI,kBAACA,GAAA,EAAK5P,IAAN,CAAUM,GAAI,CAACF,KAAK,EAAEC,OAAO,GAAIJ,UAAU,6CACvC,kBAAC2P,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKE,MAAN,CAAYC,QAAQ,aAAa9P,UAAU,aAA3C,kBACA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,SACfmM,SAAU,SAAAnO,GACN,EAAKX,MAAM+O,oBAAoBpO,EAAEqO,OAAOvI,QAE5CA,MAAO1G,KAAKC,MAAMwN,eAClBtL,GAAG,kBAGf,kBAACuM,GAAA,EAAK5P,IAAN,CAAUC,UAAU,yDACfiB,KAAKC,MAAMkE,SACR,oCACI,yBAAKpF,UAAU,YACX,yBAAKA,UAAU,YACX,uBAAGA,UAAU,aAAb,mBAGR,yBAAKA,UAAU,aACX,yBAAKA,UAAU,6CACViB,KAAKC,MAAMkE,SAASM,KAAI,SAACC,EAAQC,GAAT,OACrB,kBAAC,WAAD,CAAUC,IAAK,QAAQD,GACnB,yBAAK5F,UAAU,oBACX,kBAAC,GAAD,CAAS2F,QAASA,EAAS+I,eAAgB,EAAKxN,MAAMwN,iBACtD,2BAAO7K,KAAK,SACR7D,UAAU,eACVgQ,SAAU,SAAAnO,GACHA,EAAEqO,OAAOvI,MACR,EAAKzG,MAAMiP,eAAe,CAACxK,EAAQ7C,QAAQjB,EAAEqO,OAAOvI,OAGpD,EAAKzG,MAAMkP,gBAAgB,CAACzK,EAAQ7C,oBAWxE,e,GA7EbpB,a,kkBCWzB2O,G,2MACFnJ,MAAM,CACF/B,iBAAYgC,EACZuH,oBAAevH,EACfc,aAASd,G,EAEb4G,kBAAkB,SAAC3K,GACf,EAAKoE,SAAS,CACVS,QAAQ,GAAD,GACA,EAAKf,MAAMe,QADX,gBAEF7E,EAFE,MAGI,EAAK8D,MAAMe,QAAQ7E,GAHvB,CAICyK,UAAU,EAAK3G,MAAMe,QAAQ7E,GAAIyK,gB,EAqBjDO,gBAAgB,SAACrJ,GAAD,OAAUqC,uBAAa,CACnCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIkG,QAAS,EAAKhF,MAAMgF,QACpBxD,QAASA,EACTqC,OAAQA,EACRqI,SAAU,EAAKkD,a,EAMnCA,MAAM,WACF9K,OAAOC,KAAK,EAAKyB,MAAMe,SAASvC,KAAI,SAAA6K,GAIhC,OAHG,EAAKrJ,MAAMe,QAAQsI,GAAQ1C,UAC1B,EAAK2C,eAAeD,EAAO,EAAKrJ,MAAMwH,eAAe,EAAKxH,MAAM/B,YAAY,EAAK+B,MAAM9B,UAEpF,S,EAGfoL,e,uCAAgB,WAAOpM,EAASc,EAAKC,EAAYsL,GAAjC,eAAAxN,EAAA,6DACRyN,EAAqB,GACtBD,GACCjL,OAAOC,KAAKgL,GAAe/K,KAAI,SAAAiL,GAK3B,OAJAD,EAAmB,GAAD,GACXA,EADW,gBAEbC,EAAcF,EAAcE,KAE1B,QARH,SAWNpJ,qBAAWpE,MAAMgB,MAAM,WAAWA,MAAMC,GAAUD,MAAM,UAAUgC,KAAK,CACzEjB,KAAKA,EACLC,YAAYA,EACZH,MAAM1D,MAASyG,OAAO,OACtB3C,SAASsL,IAfD,2C,8DAkBhBzC,mBAAmB,SAAC9I,GAChB,EAAKqC,SAAS,CACVrC,YAAYA,K,EAGpB8K,oBAAoB,SAACW,GACjB,EAAKpJ,SAAS,CACVkH,eAAekC,K,EAGvBT,eAAe,SAACQ,EAAaE,GACzB,EAAKrJ,SAAS,CACVpC,SAAS,GAAD,GAAK,EAAK8B,MAAM9B,SAAhB,gBAA0BuL,EAAcE,O,EAGxDT,gBAAgB,SAACO,GACb,IAAIG,EAAc,EAAK5J,MAAM9B,gBACtB0L,EAAYH,GAChBnL,OAAOC,KAAKqL,GAAahD,OACxB,EAAKtG,SAAS,CAACpC,SAAS0L,IAGxB,EAAKtJ,SAAS,CAACpC,SAAS,Q,mFA9EZ,IAAD,OACX6C,EAAQ,GACZzC,OAAOC,KAAKxE,KAAKC,MAAM+G,SAASvC,KAAI,SAAAG,GAQhC,OAPAoC,EAAQ,GAAD,GACAA,EADA,gBAEFpC,EAAK,CACFgI,UAAS,EACT/K,OAAO,EAAK5B,MAAM+G,QAAQpC,GAAK/C,UAGhC,QAEX7B,KAAKuG,SAAS,CACVS,QAAQA,M,+BAqEZ,OACI,yBAAKjI,UAAU,0BACX,kBAAC,GAAD,CACIwC,MAAM,UAEV,yBAAKxC,UAAU,gFACX,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACxB,kBAAC,GAAD,CACIgI,kBAAmB9M,KAAK8M,kBACxB9F,QAAShH,KAAKiG,MAAMe,UAExB,kBAAC,GAAD,CACI9C,YAAalE,KAAKiG,MAAM/B,YACxB8I,mBAAoBhN,KAAKgN,qBAE7B,kBAAC,GAAD,CACIgC,oBAAqBhP,KAAKgP,oBAC1BvB,eAAgBzN,KAAKiG,MAAMwH,eAC3ByB,eAAgBlP,KAAKkP,eACrBY,QAAQ,cACR3L,SAAUnE,KAAKC,MAAMkE,SACrBsK,eAAgBzO,KAAKiG,MAAM9B,SAC3BgL,gBAAiBnP,KAAKmP,oBAIlC,kBAAC,GAAD,CACIrL,OAAO,QACPqJ,gBAAiBnN,KAAKmN,uB,GA/HtB1M,aA2ILyG,gBANS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,QACd7C,SAAS8B,EAAMuJ,iBAGgB,KAAxBtI,CAA8BkI,I,kkBC3IvCW,G,2MACF9J,MAAM,CACF/B,iBAAYgC,EACZuH,oBAAevH,EACf8J,aAAQ9J,G,EAEZ4G,kBAAkB,SAAC3K,GACf,EAAKoE,SAAS,CACVS,QAAQ,MACD,EAAKf,MAAMe,QADX,gBAEF7E,EAFE,MAGI,EAAK8D,MAAMe,QAAQ7E,GAHvB,CAICyK,UAAU,EAAK3G,MAAMe,QAAQ7E,GAAIyK,gB,EAqBjDO,gBAAgB,SAACrJ,GAAD,OAAUqC,uBAAa,CACnCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIkG,QAAS,EAAKhF,MAAMgF,QACpBxD,QAASA,EACTqC,OAAQA,EACRqI,SAAU,EAAK8D,e,EAMnCA,QAAQ,WACJ1L,OAAOC,KAAK,EAAKyB,MAAMe,SAASvC,KAAI,SAAA6K,GAIhC,OAHG,EAAKrJ,MAAMe,QAAQsI,GAAQ1C,UAC1B,EAAKsD,qBAAqBZ,EAAO,EAAKrJ,MAAMwH,eAAe,EAAKxH,MAAMwH,eAAe,EAAKxH,MAAM9B,SAAS,EAAK8B,MAAM/B,aAEjH,S,EAGfgM,qB,uCAAsB,WAAO/M,EAASc,EAAKwJ,EAAe0C,EAAajM,GAAjD,eAAAlC,EAAA,6DACdoO,EAAoB,GACrBD,GACC5L,OAAOC,KAAK2L,GAAc1L,KAAI,SAAA4L,GAK1B,OAJAD,EAAkB,MACXA,EADU,gBAEZC,EAAaF,EAAaE,KAExB,QARG,SAWZ/J,qBAAWpE,MAAMgB,MAAM,WAAWA,MAAMC,GAAUD,MAAM,gBAAgBgC,KAAK,CAC/EjB,KAAKA,EACLwJ,eAAeA,EACf1J,MAAM1D,MAASyG,OAAO,OACtB3C,SAASiM,EACTlM,YAAYA,IAhBE,2C,gEAmBtB8I,mBAAmB,SAAC9I,GAChB,EAAKqC,SAAS,CACVrC,YAAYA,K,EAGpB8K,oBAAoB,SAACW,GACjB,EAAKpJ,SAAS,CACVkH,eAAekC,K,EAGvBT,eAAe,SAACQ,EAAaE,GACzB,EAAKrJ,SAAS,CACVpC,SAAS,MAAI,EAAK8B,MAAM9B,SAAhB,gBAA0BuL,EAAcE,O,EAGxDT,gBAAgB,SAACO,GACb,IAAIG,EAAc,EAAK5J,MAAM9B,gBACtB0L,EAAYH,GAChBnL,OAAOC,KAAKqL,GAAahD,OACxB,EAAKtG,SAAS,CAACpC,SAAS0L,IAGxB,EAAKtJ,SAAS,CAACpC,SAAS,Q,mFA/EZ,IAAD,OACX6C,EAAQ,GACRzC,OAAOC,KAAKxE,KAAKC,MAAM+G,SAASvC,KAAI,SAAAG,GAQhC,OAPAoC,EAAQ,MACDA,EADA,gBAEFpC,EAAK,CACFgI,UAAS,EACT/K,OAAO,EAAK5B,MAAM+G,QAAQpC,GAAK/C,UAGhC,QAEf7B,KAAKuG,SAAS,CACVS,QAAQA,M,+BAsEZ,OACI,yBAAKjI,UAAU,0BACX,kBAAC,GAAD,CACIwC,MAAM,gBAEV,yBAAKxC,UAAU,gFACX,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACxB,kBAAC,GAAD,CACIgI,kBAAmB9M,KAAK8M,kBACxB9F,QAAShH,KAAKiG,MAAMe,UAExB,kBAAC,GAAD,CACI9C,YAAalE,KAAKiG,MAAM/B,YACxB8I,mBAAoBhN,KAAKgN,qBAE7B,kBAAC,GAAD,CACIgC,oBAAqBhP,KAAKgP,oBAC1BvB,eAAgBzN,KAAKiG,MAAMwH,eAC3ByB,eAAgBlP,KAAKkP,eACrBxK,QAAQ,cACRP,SAAUnE,KAAKC,MAAMkE,SACrBsK,eAAgBzO,KAAKiG,MAAM9B,SAC3BgL,gBAAiBnP,KAAKmP,oBAIlC,kBAAC,GAAD,CACIrL,OAAO,aACPqJ,gBAAiBnN,KAAKmN,uB,GAhIhB1M,aA4IXyG,gBANS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,QACd7C,SAAS8B,EAAMkK,gBAGgB,KAAxBjJ,CAA8B6I,I,uCCxJhCO,GAAmB,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,YAAY7L,EAAY,EAAZA,QACtC8L,EAAW,GA0Bf,OAzBG9L,GACCH,OAAOC,KAAKE,EAAQyJ,OAAO1J,KAAI,SAACP,EAAYS,GAqBxC,MApBiB,WAAdT,EACCK,OAAOC,KAAKE,EAAQyJ,MAAMjK,IAAcO,KAAI,SAACgM,EAAapC,GAMtD,OALAmC,EAAUtL,KAAK,CACXrD,OAAO4O,EACPb,SAASlL,EAAQyJ,MAAMjK,GAAauM,GACpCC,OAAM,IAEH,QAIXnM,OAAOC,KAAKE,EAAQyJ,MAAMjK,IAAcO,KAAI,SAACgM,EAAapC,GAMtD,OALAmC,EAAUtL,KAAK,CACXrD,OAAO4O,EACPb,SAASlL,EAAQyJ,MAAMjK,GAAauM,GACpCC,OAAM,IAEH,QAGR,QAIX,kBAAChC,GAAA,EAAD,CAAM3P,UAAU,kCACZ,kBAACY,EAAA,EAAD,CAAWgR,OAAK,GACZ,kBAAC7R,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,GAAGC,OAAO,GAAIyR,GAAI,CAAC1R,KAAK,EAAEC,OAAO,IAC5C,yBAAKJ,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,qBAGR,kBAAC2P,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,UAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,SAAS4M,SAAU,SAAAnO,GAC5C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,cAGnC,kBAACgI,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,SAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,QAAS4M,SAAU,SAAAnO,GAC5C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,aAGnC,kBAACgI,GAAA,EAAKC,MAAN,KACI,kBAACD,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,eAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAcpL,GAAG,WAAWmN,KAAK,IAAI1O,GAAG,cAAe4M,SAAU,SAAAnO,GAC7D2P,EAAY3P,EAAEqO,OAAOvI,MAAM,oBAIvC,kBAAC1H,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,IAAK0R,GAAI,CAAC1R,KAAK,EAAEC,OAAO,IAC/B,yBAAKJ,UAAU,OACX,yBAAKA,UAAU,sBACX,wBAAIA,UAAU,cAAd,kBAGR,yBAAKA,UAAU,yCACX,yBAAKA,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,SAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,SAAS4M,SAAU,SAAAnO,GAChD2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,cAGvC,yBAAK3H,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,YAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,YAAW4M,SAAU,SAAAnO,GAClD2P,EAAY3P,EAAEqO,OAAOvI,MAAM,WAAW,cAG1C,yBAAK3H,UAAU,YACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,WAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,WAAWT,GAAG,YACjC4M,SAAU,SAAAnO,GACN2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,eAI/C,yBAAK3H,UAAU,yCACX,yBAAKA,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,SAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,SAAQ4M,SAAU,SAAAnO,GAC3C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,cAG3C,yBAAK3H,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,YAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,YAAY4M,SAAU,SAAAnO,GAC/C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,WAAW,cAG9C,yBAAK3H,UAAU,YACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,WAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,WAAWT,GAAG,YAAY4M,SAAU,SAAAnO,GACnD2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,eAI/C,yBAAK3H,UAAU,yCACX,yBAAKA,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,SAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,SAAS4M,SAAU,SAAAnO,GAC5C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,cAG3C,yBAAK3H,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,YAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,YAAY4M,SAAU,SAAAnO,GAC/C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,WAAW,cAG9C,yBAAK3H,UAAU,YACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,WAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,WAAWT,GAAG,YAAY4M,SAAU,SAAAnO,GACnD2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,eAI/C,yBAAK3H,UAAU,yCACX,yBAAKA,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,SAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,SAAS4M,SAAU,SAAAnO,GAC5C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,cAG3C,yBAAK3H,UAAU,SACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,YAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,OAAOT,GAAG,YAAY4M,SAAU,SAAAnO,GAC/C2P,EAAY3P,EAAEqO,OAAOvI,MAAM,WAAW,cAG9C,yBAAK3H,UAAU,YACX,kBAAC2P,GAAA,EAAKE,MAAN,CAAY7P,UAAU,cAAtB,WAGA,kBAAC2P,GAAA,EAAKI,QAAN,CAAclM,KAAK,WAAWT,GAAG,YAAY4M,SAAU,SAAAnO,GACnD2P,EAAY3P,EAAEqO,OAAOvI,MAAM,QAAQ,oB,8jBCtKpE,IAAMoK,GAAoB,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,cAActP,EAAgC,EAAhCA,QAAgC,IAAxB0C,gBAAwB,MAAf,GAAe,EAAZO,EAAY,EAAZA,QAAY,EAClDsM,mBAAS,IADyC,oBACtEC,EADsE,KAC/DC,EAD+D,KAEvEC,EAAkB,WACpB,IAAMC,EAAW,CAACH,EAAOI,OAAOJ,EAAOK,OAAOL,EAAOM,OAAON,EAAOO,QAC/DpC,EAAM,GACNqC,EAAO,GAkBX,OAjBAL,EAAS3M,KAAI,SAAA0J,GAeT,OAdGA,IACIA,EAAMuC,MACLe,EAAO,MACAA,EADD,gBAEDtD,EAAMuD,MAAOvD,EAAMyB,WAIxBR,EAAM,MACCA,EADF,gBAEAjB,EAAMuD,MAAOvD,EAAMyB,YAIzB,QAEL,CAACR,QAAMqC,WAEXE,EAAc,uCAAE,oCAAA3P,EAAA,wDACGmP,IAAd/B,EADW,EACXA,MAAMqC,EADK,EACLA,OACb/O,QAAQC,IAAIyM,EAAMqC,GACZG,EAAY,CACd/P,OAAOoP,EAAOpP,OACdgQ,MAAMZ,EAAOY,MACb5D,YAAYgD,EAAOhD,YACnBE,MAAM,CACFiB,MAAMA,EACNqC,OAAOA,KAGT5B,EAAY1L,GACNe,KAAK0M,GAbC,KAcVb,EAdU,OAeT,kBAfS,OAoBT,iBApBS,yCAgBJzK,qBAAWpE,MAAM0J,OAAO,CAC1B4D,cAAcK,IAjBR,6DAqBJvJ,qBAAWpE,MAAM0J,OAAO,CAC1BuE,aAAaN,IAtBP,wFAAF,qDA8CpB,OACI,yBAAK9Q,UAAU,wFACX,kBAAC,EAAD,CACI0C,QAASA,EACTF,MAAOwP,IAEX,kBAAC,GAAD,CAAkBrM,QAASA,EAAS6L,YAAa,SAACuB,EAAMjQ,EAAOsM,IAvBrD,SAAC2D,EAAMjQ,EAAOsM,GAExB+C,EAAU,MACHD,EAFR9C,EACU,gBAEJA,EAFI,MAGE8C,EAAO9C,GAHT,gBAIAtM,EAAQiQ,KAKR,gBAEJjQ,EAAQiQ,KAWTvB,CAAYuB,EAAMjQ,EAAOsM,MAE7B,kBAAC,GAAD,CAA2BpE,YAAa4H,EAAgB3H,mBAAoBvI,MC5E3EsQ,I,OAAgB,SAAC,GAAqB,IAApBxQ,EAAmB,EAAnBA,MAAM4C,EAAa,EAAbA,SA6B3BgL,EAAe,uCAAC,WAAOhN,GAAP,eAAAH,EAAA,uDACd6N,EAAc1L,GACN6N,OAAO7P,EAAG,GAFJ,KAGVZ,EAHU,OAIT,kBAJS,OAST,iBATS,uCAKJ+E,qBAAWpE,MAAM0J,OAAO,CAC3B4D,cAAcK,IANP,2DAUJvJ,qBAAWpE,MAAM0J,OAAO,CAC1BuE,aAAaN,IAXP,wFAAD,sDAkBrB,OACI,yBAAK9Q,UAAU,iBACX,kBAACa,EAAA,EAAD,CAAOC,SAAO,EAACoS,UAAQ,EAACnS,OAAK,EAACC,QAAQ,QAClC,+BACI,4BACI,wBAAIhB,UAAU,8CACV,kBAACmT,GAAA,EAAD,CAAQnS,QAAQ,gBAAgBY,QAAS,SAAAC,GAnDrCuF,uBAAa,CACrCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIoF,SAAUA,EACV4M,cAAexP,EACfE,QAASA,UA4CL,gBAII,kBAAC,IAAD,CAAiBX,KAAMmG,IAAclI,UAAU,YAI3D,4BACI,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACvBX,EACGA,EAASM,KAAI,SAACC,EAAQC,GAAT,OACT,kBAACpB,EAAA,EAAD,CAAMqB,IAAK,UAAUD,GACjB,kBAACnB,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ5E,UAAU,oDAAoD6E,SAAUe,GACvG,6BACKD,EAAQ7C,OADb,IACqB,0BAAM9C,UAAU,gCAAgC2F,EAAQmN,QAE7E,kBAAC,IAAD,CAAiB/Q,KAAMsD,OAE3B,kBAACZ,EAAA,EAAUa,SAAX,CAAoBT,SAAUe,GAC1B,kBAACpB,EAAA,EAAKe,KAAN,CAAWvF,UAAU,aACjB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,iDAKR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,+BACK2F,EAAQuJ,eAIrB,6BACA,yBAAKlP,UAAU,OACX,yBAAKA,UAAU,sBACX,kDAKPwF,OAAOC,KAAKE,EAAQyJ,OAAO1J,KAAI,SAAC0N,EAAiB9D,GAAlB,OAC5B,kBAAC,WAAD,CAAUzJ,IAAK,mBAAmByJ,GAC9B,yBAAKtP,UAAU,iBACX,yBAAKA,UAAU,oBACX,0BAAMA,UAAU,+BACXoT,IAGb,8BAEC5N,OAAOC,KAAKE,EAAQyJ,MAAMgE,IAAmB1N,KAAI,SAAC2N,EAAW7D,GAAZ,OAC9C,yBAAKxP,UAAU,MAAM6F,IAAK,QAAQ2J,GAC9B,yBAAKxP,UAAU,oBACVqT,GAEL,yBAAKrT,UAAU,oBACV2F,EAAQyJ,MAAMgE,GAAkBC,YAMrD,yBAAKrT,UAAU,YACX,yBAAKA,UAAU,4BACX,4BAAQ6D,KAAK,SAAS7D,UAAU,eAAe4B,QAAS,SAAAC,IA1GvF,SAAC8D,GAAUyB,uBAAa,CAC7CC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIoF,SAAUA,EACV4M,cAAexP,EACfE,QAASA,EACTiD,QAASA,QAmG+B2N,CAAmB3N,KADvB,mBAMJ,yBAAK3F,UAAU,4BACX,4BAAQ6D,KAAK,SAAS7D,UAAU,yBAAyB4B,QAAS,SAAAC,GAC9DuO,EAAgBxK,KADpB,6BAa5B,sCAAYpD,UCnJ/B+Q,GAAc,SAAC,GAAiC,IAAhC9C,EAA+B,EAA/BA,cAAcW,EAAiB,EAAjBA,aAAiB,EAClCa,mBAAS,iBADyB,oBACjDpM,EADiD,KAC5C2N,EAD4C,KAExD,OACI,kBAACzT,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKC,GAAI,CAACC,KAAK,GAAGC,OAAO,GAAIC,GAAI,CAACF,KAAK,GAAGC,OAAO,GAAIE,GAAI,CAACH,KAAK,EAAEC,OAAO,GAAIyR,GAAI,CAAC1R,KAAK,EAAEC,OAAO,IAC3F,kBAACqT,GAAA,EAAD,CAAMrQ,GAAG,yBAAyBsQ,UAAW7N,EAAK8N,SAAU,SAAAnE,GAAC,OAAIgE,EAAOhE,KACpE,kBAACoE,GAAA,EAAD,CAAK/O,SAAS,gBAAgBrC,MAAM,iBAChC,kBAAC,GAAD,CAAeA,MAAM,gBAAgB4C,SAAUqL,KAEnD,kBAACmD,GAAA,EAAD,CAAK/O,SAAS,eAAerC,MAAM,gBAC/B,kBAAC,GAAD,CAAeA,MAAM,eAAe4C,SAAUgM,SCRhEyC,G,iLAEE,OACI,yBAAK7T,UAAU,iCACX,kBAAC,GAAD,CACIwC,MAAM,aAEV,kBAAC,GAAD,CAAaiO,cAAexP,KAAKC,MAAMuP,cAAeW,aAAcnQ,KAAKC,MAAMkQ,oB,GAPtE1P,aAmBVyG,gBANQ,SAACjB,GACpB,MAAM,CACFuJ,cAAcvJ,EAAMuJ,cACpBW,aAAalK,EAAMkK,gBAGY,KAAxBjJ,CAA8B0L,ICW9BC,G,iLA/BF,IAAD,OACJ,OACI,kBAAC/T,EAAA,EAAD,KACI,kBAACE,EAAA,EAAD,CAAKI,GAAI,CAACF,KAAK,EAAEC,OAAO,IACpB,kBAACoE,EAAA,EAAD,KACI,4BAAQxE,UAAU,gBACd,kBAACyE,EAAA,EAAUC,OAAX,CAAkBC,GAAIH,IAAKI,OAAQ5E,UAAWiB,KAAKC,MAAM+D,WAAW,wBAAwB,YAAaJ,SAAS,IAAIyF,KAAK,UAA3H,0BAESrJ,KAAKC,MAAM+D,WACZ,4BAAQjF,UAAU,YAAlB,IAA+BiB,KAAKC,MAAM+D,WAA1C,KAEA,OAIZ,kBAACR,EAAA,EAAUa,SAAX,CAAoBT,SAAS,KACzB,yBAAK7E,UAAU,mCACX,yBAAKA,UAAU,SACX,2BAAO6D,KAAK,OAAO7D,UAAU,eAAc+T,YAAY,aAAa/D,SAAU,SAAAnO,GAC1E,EAAKX,MAAM8S,aAAanS,EAAEqO,OAAOvI,oB,GApB1CjG,a,kkBCc3BuS,GACAC,GCJEC,G,2MACFjN,MAAM,CACFe,aAAQd,EACRlC,gBAAWkC,G,EAEf4G,kBAAkB,SAAC3K,GACf,EAAKoE,SAAS,CACVS,QAAQ,MACD,EAAKf,MAAMe,QADX,gBAEF7E,EAFE,MAGI,EAAK8D,MAAMe,QAAQ7E,GAHvB,CAICyK,UAAU,EAAK3G,MAAMe,QAAQ7E,GAAIyK,gB,EAoBjDO,gBAAgB,SAACrJ,GAAD,OAAUqC,uBAAa,CACnCC,SAAU,YAAkB,IAAf3E,EAAc,EAAdA,QACT,OACI,yBAAK1C,UAAU,aACX,kBAAC,GAAD,CACIkG,QAAS,EAAKhF,MAAMgF,QACpBxD,QAASA,EACTqC,OAAQA,EACRqI,SAAU,EAAKgH,a,EAMnCA,MAAM,WACF5O,OAAOC,KAAK,EAAKyB,MAAMe,SAASvC,KAAI,SAAA6K,GAIhC,OAHG,EAAKrJ,MAAMe,QAAQsI,GAAQ1C,UAC1B,EAAKwG,cAAc9D,GAEhB,S,EAGf8D,c,uCAAe,WAAOjQ,GAAP,SAAAnB,EAAA,sEACLsE,qBAAWpE,MAAMgB,MAAM,WAAWA,MAAMC,GAAUD,MAAM,SAASgC,KAAK,CACxEnB,MAAM1D,MAASyG,OAAO,OACtB9C,WAAW,EAAKiC,MAAMjC,aAHf,2C,wDAMfqP,kBAAkB,SAACC,GACf,EAAK/M,SAAS,CACVvC,WAAWsP,K,mFA7CC,IAAD,OACXtM,EAAQ,GACZzC,OAAOC,KAAKxE,KAAKC,MAAM+G,SAASvC,KAAI,SAAAG,GAAG,OACnCoC,EAAQ,MACDA,EADA,gBAEFpC,EAAK,CACFgI,UAAS,EACT/K,OAAO,EAAK5B,MAAM+G,QAAQpC,GAAK/C,aAI3C7B,KAAKuG,SAAS,CACVS,QAAQA,M,+BAoCP,IAAD,OACJ,OACI,yBAAKjI,UAAU,0BACX,kBAAC,GAAD,CACIwC,MAAM,SAEV,yBAAKxC,UAAU,kEACX,kBAACyE,EAAA,EAAD,CAAWsB,iBAAiB,KACxB,kBAAC,GAAD,CACIgI,kBAAmB9M,KAAK8M,kBACxB9F,QAAShH,KAAKiG,MAAMe,UAExB,kBAAC,GAAD,CACI+L,aAAe,SAAAO,GACX,EAAKD,kBAAkBC,IAE3BtP,WAAYhE,KAAKiG,MAAMjC,eAInC,kBAAC,GAAD,CACIF,OAAO,OACPqJ,gBAAiBnN,KAAKmN,uB,GAtFvB1M,aAiGJyG,gBALS,SAAAjB,GACpB,MAAM,CACFe,QAAQf,EAAMe,WAGiB,KAAxBE,CAA8BgM,IC5G9BK,GAHC,SAACtN,EAAMuN,GACnB,OAAOvN,G,SCmCIwN,I,wLA9BP,OACI,yBAAK1U,UAAU,8BACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sBACX,0CAGR,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,YACX,4BACI,kBAAC,IAAD,CAAiB+B,KAAM4S,IAAY3U,UAAU,eAAeoD,GAAG,oBAGvE,yBAAKpD,UAAU,YACX,4BACI,kBAAC,IAAD,CAAiB+B,KAAM4S,IAAY3U,UAAU,eAAeoD,GAAG,oBAGvE,yBAAKpD,UAAU,YACX,4BACI,kBAAC,IAAD,CAAiB+B,KAAM4S,IAAY3U,UAAU,eAAeoD,GAAG,2B,GAvBjE1B,cHwB9BwC,gBATe,CACb0Q,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,cACnBC,MAAO,uC,IA+CMC,G,2MA3CbjO,MAAM,CACJkO,SAAQ,G,8EAEK1J,GACbzK,KAAKuG,SAAS,CACZ6C,QAAQqB,M,+KAIgBxH,aAAoBf,M,cAClCkS,GAAG,SAAS,SAAAC,GACtBpB,GAAMoB,EAASC,MACftB,GAAMuB,aAAYhB,GAASN,IAC3B,EAAK1M,SAAS,CAAC4N,SAAQ,O,gIAIzB,OAAGnU,KAAKiG,MAAMkO,QAEV,kBAAC,GAAD,MAKA,kBAAC,IAAD,CAAUnB,MAAOA,IACf,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwB,OAAK,EAACC,KAAK,IAAIC,UAAWjJ,KACjC,kBAAC,IAAD,CAAO+I,OAAK,EAACC,KAAK,SAASC,UAAWtF,KACtC,kBAAC,IAAD,CAAOoF,OAAK,EAACC,KAAK,QAAQC,UAAWxB,KACrC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,eAAeC,UAAW3E,KAC5C,kBAAC,IAAD,CAAOyE,OAAK,EAACC,KAAK,cAAcC,UAAW9B,KAC3C,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,0BAA0BC,UAAW9B,a,GAlCrDnS,aIjBZkU,GAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,GAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTzS,MAAK,SAAA8S,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxP,QACfmP,UAAUC,cAAcO,YAI1BlT,QAAQC,IACN,iHAKEwS,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,KAMlB7S,QAAQC,IAAI,sCAGRwS,GAAUA,EAAOW,WACnBX,EAAOW,UAAUP,WAO5BQ,OAAM,SAAAC,GACLtT,QAAQsT,MAAM,4CAA6CA,MCtFjEC,IAASC,OACL,kBAAC,GAAD,MACF7T,SAASC,eAAe,SDUnB,SAAkB6S,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIe,IAAIC,wBAAwBvB,OAAOC,SAASuB,MACpDC,SAAWzB,OAAOC,SAASwB,OAIvC,OAGFzB,OAAO0B,iBAAiB,QAAQ,WAC9B,IAAMrB,EAAK,UAAMkB,wBAAN,sBAEPzB,KAgEV,SAAiCO,EAAOC,GAEtCqB,MAAMtB,GACHzS,MAAK,SAAAgU,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYzN,QAAQ,cAG5CmM,UAAUC,cAAcyB,MAAMrU,MAAK,SAAA8S,GACjCA,EAAawB,aAAatU,MAAK,WAC7BoS,OAAOC,SAASkC,eAKpB/B,GAAgBC,EAAOC,MAG1BY,OAAM,WACLrT,QAAQC,IACN,oEArFAsU,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAMrU,MAAK,WACjCC,QAAQC,IACN,iHAMJsS,GAAgBC,EAAOC,OCjC/BE,I,wCCjBA6B,EAAOC,QAAU,IAA0B,2C","file":"static/js/main.bc1b2824.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nclass DetallePlanta extends Component{\n    render(){\n        return(\n            <Row className=\"mt-4 mb-4 align-items-center\">\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\n                </Col>\n                <Col md={8} className=\"align-self-center\">\n                    <Container className=\"container\">\n                        <Table striped hover variant='dark' >\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Genetica</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Edad</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Fecha de Germinacion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Vegetativo</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioVegetativo?\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\n                                                :\n                                                '--/--/----'\n                                            }</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Floracion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioFloracion?\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Container>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetallePlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nclass DetalleAcciones extends Component{\n    render(){\n        return(\n            <Row className=\"pt-2 pb-2 botonera justify-content-center \">\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertRiegos()\n                    }}>\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Riegos</small>\n                    </div>\n                </Col>\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertPodas()\n                    }}>\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Podas</small>\n                    </div>\n                </Col>\n                <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertFumigaciones()\n                    }}>\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetalleAcciones","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {storage} from 'firebase'\nclass AlertPlanta extends Component{\n    subirArchivo= async ()=>{\n        const ref = await storage().ref(this.props.id)\n        const file = document.getElementById('input').files[0]\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\n        ref.put(file).then(e=>{\n            console.log('Archivo subido Correctamente')\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\n                />\n                <DetallePlanta \n                    genetica={this.props.genetica}\n                    edad={this.props.edad}\n                    nacimiento={this.props.nacimiento}\n                    inicioVegetativo={this.props.inicioVegetativo}\n                    inicioFloracion={this.props.inicioFloracion}\n                />\n                <DetalleAcciones\n                    alertRiegos={this.props.alertRiegos}\n                    alertPodas={this.props.alertPodas}\n                    alertFumigaciones={this.props.alertFumigaciones}\n                />\n                <div className=\"row mt-4 justify-content-center\">\n                    <div className=\"col-auto\">\n                        <div className=\"btn-group\">\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n        this.props.alert()\n    }\n    render(){\n        return(\n            <Card>\n                <Accordion.Toggle as={Card.Header} eventKey={this.props.index}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {this.props.tipoDeAccion==='podas'?\n                            <div className='container-fluid'>\n                                <div className=\"row\">\n                                    <div className=\"col-auto\">\n                                        <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                                    </div>\n                                    <div className=\"col-auto ml-auto\">\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {this.props.tipoDePoda?\n                                        <div className='col'>\n                                            <hr/>\n                                            <h5 className='text-dark'>{this.props.tipoDePoda}</h5>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                                :\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                                        </div>\n                                        <div className=\"col-auto ml-auto\">\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-dark'>{this.props.accion.agua} L de agua</h5>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <h5>\n                                                <div className=\"badge badge-pill badge-dark\">\n                                                    {this.props.accion.tipoDeRiego}\n                                                </div>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                    {this.props.accion.aditivos?\n                                        <div className=\"row\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <FontAwesomeIcon icon={faSortDown}/>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                    {this.props.accion.aditivos?\n                        <Accordion.Collapse eventKey={this.props.index}>\n                            <Card.Body>\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                                                <div className=\"col-auto\" key={aditivo+i}>\n                                                    <span className='badge badge-pill badge-dark'>\n                                                        <div className=\"col-auto\">\n                                                            {aditivo}\n                                                        </div>\n                                                        <div className=\"col-auto\">\n                                                            {this.props.accion.aditivos[aditivo]} ml\n                                                        </div>\n                                                    </span>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                        :\n                        null\n                    }\n                </Card>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport { Accordion } from 'react-bootstrap'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.podas?\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.riegos?\n                            Object.keys(this.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Riego')\n                                        }}>Riegala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport { Accordion } from 'react-bootstrap'\nclass alertFumigaciones extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.fumigaciones?\n                            Object.keys(this.props.fumigaciones).reverse().map(id=>(\n                                <AccionDetallada alert={this.props.alert} accion={this.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Insecticida')\n                                        }}>Fumigala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default alertFumigaciones","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/alertPlanta.css'\nimport AlertPlanta from '../alerts/AlertPlanta'\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        alertPlanta={this.alertPlanta}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    alertPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertPlanta\n                        {...this.props}\n                        onClose={onClose}\n                        alertEliminarPlanta={this.alertEliminarPlanta}\n                        alertCambiarCiclo={this.alertCambiarCiclo}\n                        alertRiegos={this.alertRiegos}\n                        alertPodas={this.alertPodas}\n                        alertFumigaciones={this.alertFumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    alertRiegos=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertRiego\n                        idPlanta={this.props.id}\n                        alert={this.alertRiegos}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        riegos={this.props.riegos}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    alertPodas=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertPodas\n                        idPlanta={this.props.id}\n                        alert={this.alertPodas}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        podas={this.props.podas}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    alertFumigaciones=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertFumigaciones\n                        idPlanta={this.props.id}\n                        alert={this.alertFumigaciones}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        fumigaciones={this.props.fumigaciones}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await database().ref().child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-auto\">\n                <Card className=\"card bg-light\" onClick={this.alertPlanta} >\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h4 className=\"card-title\">{this.props.nombre}</h4>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </Overlay>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta \n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <>\n                            <div className=\"col-12 text-center\">\n                                <h2 className='text-white'>Aun No hay plantas</h2>\n                                <small>Agrega una!</small>\n                            </div>\n                        </>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            \n            <h1>{this.state.fecha}</h1>\n        )\n    }\n}\nexport default FechaYHora","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\n\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined,\n        descanso:false\n    }\n    actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\n            console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = this.actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            this.setState({\n                descanso:true\n            })\n        }\n        else{\n            this.setState({\n                descanso:false\n            })\n        }\n        this.setState({\n            cicloLuminico: cicloLuminico,\n            transcurrido: transcurrido,\n            faltante:this.calcularFaltante()\n        })\n        return [transcurrido,cicloLuminico]\n    }\n    actualizarBarraDeProgreso=()=>{\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        console.log()\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    componentDidMount(){\n        this.actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            this.actualizarBarraDeProgreso()\n        }, 1000);\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=(lamparaEncendida)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <FechaYHora/>\n                    </div>\n                </div>\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.descanso?\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-dark'>\n                                Descansando...\n                            </span>\n                        </div>\n                        :\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-success'>\n                                Creciendo...\n                            </span>\n                        </div>\n                    }\n                </div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-10 offset-1\">\n                        <div className=\"progress\">\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    position:absolute;\n    z-index:1;\n    top:2%;\n    right:2%;\n    font-size:2rem;\n    cursor:pointer\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nclass Navbar extends Component{\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faAlignRight} from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    changeStateOfNavbar =() =>{\n        this.setState({menuOpened:!this.state.menuOpened})\n    }\n    render(){\n        return(\n            <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\n                {this.state.menuOpened?\n                    <Navbar alertConfiguracion={this.alertConfiguracion}closeNavbar={this.changeStateOfNavbar}/>\n                    :\n                    <MenuButton onClick={e=>{\n                        this.changeStateOfNavbar()\n                    }}>\n                        <FontAwesomeIcon icon={faAlignRight}/>\n                    </MenuButton>\n                }\n                <div className='row'>\n                    <div className='col'>\n                        <BarraDeLuz/>            \n                    </div>\n                </div>\n                <div className='row'>\n                    <CarouselPlantas history={this.props.history}/>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nclass Layout extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                    {this.props.children}\n            </div>\n        )\n    }\n}\nexport default Layout","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\n\nclass ElegirPlantaAccion extends Component{\n    render(){\n        let selectedPlants= {}\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>{\n                if(this.props.plantas[key].selected){\n                    selectedPlants[this.props.plantas[key].nombre]=true\n                }\n                return null\n            })\n        }\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={Object.keys(selectedPlants).length?'text-light bg-success':'text-dark'} eventKey=\"0\" role='button'>\n                                Elige Las Plantas\n                                <div className=\"row\">\n                                    {selectedPlants?\n                                    Object.keys(selectedPlants).map((nombre,i)=>(\n                                        <div className=\"col-auto\" key={'selectedPlant'+i}>\n                                            <span className='badge badge-pill badge-light p-2'>\n                                                {nombre}\n                                            </span>\n                                        </div>\n                                    ))\n                                    :\n                                    null\n                                    }\n                                </div>\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <div className=\"row my-2 justify-content-center\">\n                                {this.props.plantas?\n                                    Object.keys(this.props.plantas).map(key=>(\n                                        <CheckboxPlanta checked={this.props.plantas[key].selected} llave={key} key={key} handleClick={e=>{\n                                            this.props.seleccionarPlanta(key)\n                                        }}/>\n                                    ))\n                                :\n                                null\n                                }\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirPlantaAccion","import React, {Component} from 'react'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport './styles/accion-card.css'\n\nclass ElegirTipoDeRiego extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.tipoDeRiego?'text-white bg-success ':'text-dark'} eventKey=\"1\">\n                                Elige El tipo de Riego {this.props.tipoDeRiego?<strong>({this.props.tipoDeRiego})</strong>:null}\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <div className=\"row my-2\">\n                                <div className=\"col text-center\">\n                                    <button type='button' className={this.props.tipoDeRiego==='Tierra'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Tierra')}}>\n                                        Tierra\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button type='button' className={this.props.tipoDeRiego==='Foliar'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Foliar')}}>\n                                        Foliar\n                                    </button>\n                                </div>\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirTipoDeRiego","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Link} from 'react-router-dom'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                    <div className=\"col text-center\">\n                        <FontAwesomeIcon icon={faCheck} className='icon continueIcon' onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }/>\n                    </div>\n                <div className=\"col text-center\">\n                    <Link to='/'>\n                        <FontAwesomeIcon icon={faTimes} className='icon cancelIcon'/>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React,{Fragment} from 'react'\nimport {Popover,OverlayTrigger,Table} from 'react-bootstrap'\nimport {Td,Th} from './styles/PopoverStyle'\nexport const PopOver = ({aditivo,cantidadDeAgua= 0}) =>{\n    return(\n        <OverlayTrigger trigger=\"hover\" placement='right' overlay={\n            <Popover  id=\"popover-basic\">\n                <Popover.Title as=\"h1\" className='bg-dark text-light'>{aditivo.nombre}</Popover.Title>\n                <Popover.Content>\n                    <div className=\"container-fluid\">\n                        {aditivo?\n                            <>\n                                <div className=\"container-fluid mb-2\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            {aditivo.descripcion}\n                                        </div>\n                                    </div>\n                                </div>\n                                <Table responsive striped variant='dark'>\n                                    <thead>\n                                        <Th>#</Th>\n                                        <Th>Dosis</Th>\n                                    </thead>\n                                    <tbody>\n                                        {Object.keys(aditivo.dosis).map((tipoDeDosis,j)=>(\n                                            <Fragment key={'tipoDeDosis'+j}>\n                                                <tr>\n                                                    <Td colSpan='2' className='py-1'>\n                                                        <div className=\"container\">\n                                                            <div className=\"row\">\n                                                                <div className=\"col text-center\">\n                                                                    <span className='badge badge-pill badge-light p-2 ml-auto mr-auto'>{tipoDeDosis}</span>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Td>\n                                                </tr>\n                                                {Object.keys(aditivo.dosis[tipoDeDosis]).map((dosis,k)=>(\n                                                    <tr key={'dosis'+k}>\n                                                        <Td className='text-left'>\n                                                            {dosis}\n                                                        </Td>\n                                                        <Td className='text-right'>\n                                                            {parseInt(aditivo.dosis[tipoDeDosis][dosis].slice(0,aditivo.dosis[tipoDeDosis][dosis].indexOf(' ')))*cantidadDeAgua} ml\n                                                        </Td>\n                                                    </tr>\n                                                ))}\n                                            </Fragment>\n                                        ))}\n                                    </tbody>\n                                </Table>\n                            </>\n                            :\n                            null\n                        }\n                    </div>\n                </Popover.Content>\n            </Popover>}>\n            <div className='text-dark'>\n                {aditivo.nombre}\n            </div>\n        </OverlayTrigger>\n    )\n}","import React , {Component,Fragment} from 'react'\nimport {Row,Col,Form,Accordion,Card} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nclass FormularioAccion extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.cantidadDeAgua || this.props.aditivosUsados?'text-light overflow-auto flex-nowrap bg-success':'text-dark overflow-auto flex-nowrap'} eventKey=\"2\">\n                                Cantidad de Agua y Aditivos\n                                <div className=\"row\">\n                                    <div className=\"col-auto mr-auto ml-auto\">\n                                        {this.props.cantidadDeAgua?\n                                            this.props.cantidadDeAgua + ' L.'\n                                            :\n                                            null\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"row mt-2\">\n                                    {this.props.aditivosUsados?\n                                        <div className=\"col-auto\">\n                                            {Object.keys(this.props.aditivosUsados).map((aditivo,i)=>(\n                                                <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\n                                                    {aditivo} {this.props.aditivosUsados[aditivo]}ml\n                                                </span>\n                                            ))}\n                                        </div>\n                                        :\n                                        null}\n                                </div>\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"2\">\n                                <Form>  \n                                    <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                                        <Form.Group>\n                                            <Form.Label htmlFor=\"inputLitos\" className='text-dark'>Litros de Agua</Form.Label>\n                                            <Form.Control type=\"number\"\n                                                onChange={e=>{\n                                                    this.props.cambiarLitrosDeAgua(e.target.value)\n                                                }} \n                                                value={this.props.cantidadDeAgua}\n                                                id='inputLitros'/>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row className='justify-content-center align-items-center flex-column'>\n                                        {this.props.aditivos?\n                                            <>\n                                                <div className=\"form-row\">\n                                                    <div className=\"col-auto\">\n                                                        <p className='text-dark'>Aditivos (ml)</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"container\">\n                                                    <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                                        {this.props.aditivos.map((aditivo,i)=>(\n                                                            <Fragment key={'input'+i}>  \n                                                                <div className=\"form-group col-4\">\n                                                                    <PopOver aditivo={aditivo} cantidadDeAgua={this.props.cantidadDeAgua}/>\n                                                                    <input type=\"number\" \n                                                                        className='form-control' \n                                                                        onChange={e=>{\n                                                                            if(e.target.value){\n                                                                                this.props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                            }\n                                                                            else{\n                                                                                this.props.eliminarAditivo([aditivo.nombre])\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                </div>\n                                                            </Fragment>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            </>\n                                            :\n                                            null\n                                        }\n                                    </Form.Row>\n                                </Form>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default FormularioAccion","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>{\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n            return null\n        })\n        this.setState({\n            plantas:plantas,\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.regar}\n                    />\n                </div>\n            );\n        }\n    })\n    regar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarRiegoBD(planta,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:fertilizantes[fertilizante]\n                }\n                return null\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Riego'\n                />\n                <div className=\"container-fluid d-flex flex-column justify-content-start h-100 overflow-auto\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDeRiego\n                            tipoDeRiego={this.state.tipoDeRiego}    \n                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                        />\n                        <FormularioAccion\n                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            cambiarAditivo={this.cambiarAditivo}\n                            adivito='Fertlizante'\n                            aditivos={this.props.aditivos}\n                            aditivosUsados={this.state.aditivos}\n                            eliminarAditivo={this.eliminarAditivo}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Riego'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion'\nimport { Accordion } from 'react-bootstrap';\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        platnas:undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n            Object.keys(this.props.plantas).map(key=>{\n                plantas={\n                    ...plantas,\n                    [key]:{\n                        selected:false,\n                        nombre:this.props.plantas[key].nombre\n                    },\n                }\n                return null\n            })\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.fumigar}\n                    />\n                </div>\n            );\n        }\n    })\n    fumigar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardrarFumigacionDB(planta,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:insecticidas[insecticida]\n                }\n                return null\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Insecticida'\n                />\n                <div className=\"container-fluid d-flex flex-column justify-content-start h-100 overflow-auto\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDeRiego\n                            tipoDeRiego={this.state.tipoDeRiego}\n                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                        />\n                        <FormularioAccion\n                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            cambiarAditivo={this.cambiarAditivo}\n                            aditivo='Insecticida'\n                            aditivos={this.props.aditivos}\n                            aditivosUsados={this.state.aditivos}\n                            eliminarAditivo={this.eliminarAditivo}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Fumigacion'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React from 'react'\nimport {Form,Row,Col,Container} from 'react-bootstrap'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let dosisList =[]\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                        check:true\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                        check:false\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            <Container fluid>\n                <Row>\n                    <Col xs={{span:10,offset:1}} lg={{span:6,offset:0}}>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h4 className='text-white'>Caracteristicas</h4>\n                            </div>\n                        </div>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Nombre\n                            </Form.Label>\n                            <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                updateState(e.target.value,'nombre')\n                            }}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Marca\n                            </Form.Label>\n                            <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                updateState(e.target.value,'marca')\n                            }}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Descripcion\n                            </Form.Label>\n                            <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                updateState(e.target.value,'descripcion')\n                            }}/>\n                        </Form.Group>\n                    </Col>\n                    <Col xs={{span:12}} lg={{span:6,offset:0}}>\n                            <div className=\"row\">\n                                <div className=\"col-12 text-center\">\n                                    <h4 className='text-white'>Dosificacion</h4>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa1' onChange={e=>{\n                                    updateState(e.target.value,'etapa','dosis1')\n                                }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad1'onChange={e=>{\n                                    updateState(e.target.value,'cantidad','dosis1')\n                                }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox1'\n                                    onChange={e=>{\n                                        updateState(e.target.value,'check','dosis1')\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa2'onChange={e=>{\n                                        updateState(e.target.value,'etapa','dosis2')\n                                    }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad2' onChange={e=>{\n                                        updateState(e.target.value,'cantidad','dosis2')\n                                    }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox2' onChange={e=>{\n                                        updateState(e.target.value,'check','dosis2')\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa3' onChange={e=>{\n                                        updateState(e.target.value,'etapa','dosis3')\n                                    }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad3' onChange={e=>{\n                                        updateState(e.target.value,'cantidad','dosis3')\n                                    }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox3' onChange={e=>{\n                                        updateState(e.target.value,'check','dosis3')\n                                    }}/>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center form-group\">\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Etapa\n                                    </Form.Label>\n                                    <Form.Control type='text' id='etapa4' onChange={e=>{\n                                        updateState(e.target.value,'etapa','dosis4')\n                                    }}/>\n                                </div>\n                                <div className=\"col-5\">\n                                    <Form.Label className='text-light'>\n                                        Cantidad\n                                    </Form.Label>\n                                    <Form.Control type='text' id='cantidad4' onChange={e=>{\n                                        updateState(e.target.value,'cantidad','dosis4')\n                                    }}/>\n                                </div>\n                                <div className=\"col-auto\">\n                                    <Form.Label className='text-light'>\n                                        Foliar?\n                                    </Form.Label>\n                                    <Form.Control type='checkbox' id='checkbox4' onChange={e=>{\n                                        updateState(e.target.value,'check','dosis4')\n                                    }}/>\n                                </div>\n                            </div>\n                        </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo}) =>{\n    const [inputs,setInputs] = useState({})\n    const ClasificarDosis = ()=>{\n        const dosisArr = [inputs.dosis1,inputs.dosis2,inputs.dosis3,inputs.dosis4]\n        let Riego={}\n        let Foliar={}\n        dosisArr.map(dosis=>{\n            if(dosis){\n                if(dosis.check){\n                    Foliar={\n                        ...Foliar,\n                        [dosis.etapa]:dosis.cantidad\n                    }\n                }\n                else{\n                    Riego={\n                        ...Riego,\n                        [dosis.etapa]:dosis.cantidad\n                    }\n                }\n            }\n            return null\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        console.log(Riego,Foliar)\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Riego:Riego,\n                Foliar:Foliar\n            }\n        }\n        const newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,dosis)=>{\n        if(dosis){\n            setInputs({\n                ...inputs,\n                [dosis]:{\n                    ...inputs[dosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nexport const TableAditivos = ({title,aditivos}) =>{\n\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className='overflow-auto'>\n            <Table striped bordered hover variant='dark'>\n                <tbody>\n                    <tr>\n                        <th className=' justify-content-center align-items-center'>\n                            <Button variant='outline-light' onClick={e=>{\n                                    alertNuevoAditivo()\n                                }}>\n                                Nuevo Aditivo\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\n                            </Button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <Accordion defaultActiveKey='0'>\n                            {aditivos?\n                                aditivos.map((aditivo,i)=>(\n                                    <Card key={'aditivo'+i}>\n                                        <Accordion.Toggle as={Card.Header} className='d-flex bg-dark justify-content-between px-4 hover' eventKey={i} >\n                                            <div>\n                                                {aditivo.nombre} <span className='badge badge-pill badge-light'>{aditivo.marca}</span>\n                                            </div>\n                                            <FontAwesomeIcon icon={faSortDown}/>\n                                        </Accordion.Toggle>\n                                        <Accordion.Collapse eventKey={i}>\n                                            <Card.Body className='text-dark'>\n                                                <div className=\"container\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Descripcion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col text-left\">\n                                                            <small>\n                                                                {aditivo.descripcion}\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Dosificacion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\n                                                            <div className=\"row mb-2 mt-2\">\n                                                                <div className=\"col-auto mr-auto\">\n                                                                    <span className='badge badge-pill badge-dark'>\n                                                                        {tipoDeAplicacion}\n                                                                    </span>\n                                                                </div>\n                                                            <hr/>\n                                                            </div>\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                                <div className=\"row\" key={'dosis'+k}>\n                                                                    <div className=\"col-auto mr-auto\">\n                                                                        {aplicacion}\n                                                                    </div>\n                                                                    <div className=\"col-auto ml-auto\">\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </Fragment>\n                                                    ))}\n                                                    <div className=\"row mt-4\">\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\n                                                                alertEditarAditivo(aditivo)\n                                                            }}>\n                                                                Editar aditivo\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-outline-danger' onClick={e=>{\n                                                                eliminarAditivo(i)\n                                                            }}>\n                                                                Eliminar aditivo\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n                                ))\n                                :\n                                <h1>Agrega {title}</h1>\n                            }\n                        </Accordion>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Tabs,Tab,Row,Col} from 'react-bootstrap'\nimport {TableAditivos} from './TableAditivos'\nexport const TabAditivos = ({fertilizantes,insecticidas}) =>{\n    const [key, setKey] = useState('Fertilizantes');\n    return(\n        <Row>\n            <Col xs={{span:12,offset:0}} sm={{span:10,offset:1}} md={{span:8,offset:2}} lg={{span:6,offset:3}}>\n                <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\n                    <Tab eventKey=\"Fertilizantes\" title=\"Fertilizantes\">\n                        <TableAditivos title='Fertilizantes' aditivos={fertilizantes}/>\n                    </Tab>\n                    <Tab eventKey=\"Insecticidas\" title=\"Insecticidas\">\n                        <TableAditivos title='Insecticidas' aditivos={insecticidas}/>\n                    </Tab>\n                </Tabs>\n            </Col>\n        </Row>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\n\nclass Aplicables extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid overflow-auto\">\n                <NavBarAccion\n                    title='Aditivos'\n                />\n                <TabAditivos fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        fertilizantes:state.fertilizantes,\n        insecticidas:state.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\n\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.tipoDePoda?'text-light bg-success':'text-dark'} eventKey=\"1\" role='button'>\n                                Ingresa el Tipo de Poda\n                                    {this.props.tipoDePoda?\n                                    <strong className=\"col-auto\">({this.props.tipoDePoda})</strong>\n                                    :\n                                    null\n                                    }\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <div className=\"row my-2 justify-content-center\">\n                                <div className=\"col-4\">\n                                    <input type=\"text\" className='form-control'placeholder='Ej: Apical' onChange={e=>{\n                                        this.props.handleChange(e.target.value)\n                                    }} />\n                                </div>\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    const databaseRef = await firebase.database().ref()\n    databaseRef.on('value', snapshot=>{\n      data= snapshot.val()\n      store=createStore(reducer, data)\n      this.setState({loading:false})\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <PantallaDeCarga/>\n      )\n    }\n    else{\n      return (\n        <Provider store={store}>\n          <Layout>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={Armario}/>\n                <Route exact path='/Riego' component={Riego}/>\n                <Route exact path='/Poda' component={Poda}/>\n                <Route exact path='/Insecticida' component={Insecticida}/>\n                <Route exact path='/Aplicables' component={Aplicables}/>\n                <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n              </Switch>\n            </HashRouter>\n          </Layout>\n        </Provider>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { Accordion } from 'react-bootstrap';\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>(\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n        ))\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.podar}\n                    />\n                </div>\n            );\n        }\n    })\n    podar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarPodaBD(planta)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Poda'\n                />\n                <div className=\"container-fluid d-flex flex-column justify-content-start h-100\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDePoda\n                            handleChange={(nuevoTipoDePoda=>{\n                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                            })}\n                            tipoDePoda={this.state.tipoDePoda}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Poda'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className=\"App justify-content-center\">\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-12 text-center'>\n                            <h1>Cargando</h1>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center mt-4\">\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}