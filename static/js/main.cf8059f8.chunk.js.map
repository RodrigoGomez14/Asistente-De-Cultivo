{"version":3,"sources":["images/background.png","images/riegos.svg","images/addFile.svg","images/periodo.svg","images/sea of green.png","images/semilla.svg","images/vegetativo.svg","images/floracion.svg","images/maceta.svg","images/adn.svg","images/balanza.svg","images/cosecha.svg","images/transplante.svg","alerts/AlertEliminarPlanta.jsx","alert-components/AlertNavBar.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/TarjetaArmario.jsx","components/BarraDeLuz.jsx","components/Navbar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","components/FormLogin.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","components/ListConfig.jsx","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","components/BotoneraConfiguracionPlanta.jsx","components/InputCantidadCosechada.jsx","Pages/Planta.jsx","alert-components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","alert-components/BreadcrumbPlanta.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","Pages/NotFound.jsx","components/ElegirNuevaMaceta.jsx","Pages/Transplante.jsx","components/FormNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","Pages/NuevoAditivo.jsx","Pages/PlantaTransplantes.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","Component","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","dark","padding","spacing","TarjetaPlanta","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","Grow","in","timeout","Paper","elevation","to","pathname","src","fotoPlanta","alt","nombre","CarouselPlantas","plantas","Typography","variant","Object","keys","map","key","user","genetica","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","transplantes","volumenMaceta","id","history","IconButton","color","AddCircleOutline","Button","endIcon","connect","state","uid","data","text","contrastText","FechaYHora","format","fecha","setFecha","setInterval","main","flexGrow","marginTop","marginLeft","marginRight","display","flexDirection","alignItems","maxWidth","listText","itemList","justifyContent","width","paperMain","type","secondary","borderRadius","avatar","height","TarjetaArmario","periodo","horaDeInicio","cicloLuminico","convertirHora","hora","Avatar","periodoImg","ListItemText","root","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","minutoDeInicio","minutoFinal","actualizarEstadoDeLampara","console","log","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","actualizarBarraDeEstado","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","menuButton","danger","error","page","planta","setRedirect","setMenuOpened","React","anchorEl","setAnchorEl","open","Boolean","AppBar","position","Toolbar","edge","location","replace","goBack","aria-label","ArrowBackRounded","currentTarget","displayName","slice","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","auth","signOut","size","MenuDrawer","menuOpened","image","Drawer","anchor","CardMedia","component","List","ListItem","button","ListItemIcon","HomeOutlined","faTint","faCut","faBug","NatureOutlined","faCogs","a","drawer","app","minHeight","maxHeight","textAlign","fontSize","Layout","children","redirect","foto","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","selectEmpty","alert","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","i","FormControlLabel","control","Checkbox","selected","onChange","value","label","Alert","severity","AlertTitle","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","card","pos","background","containerPlantas","paddingLeft","paddingTop","ResumenAccion","tipoDePoda","nuevaMaceta","Divider","parseFloat","indexOf","toFixed","overflow","resetContainer","paperSecondary","paddingBottom","light","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","rootLastStep","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","database","ref","child","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","firstPaper","secondPaper","dosisList","flexWrap","form","FormNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","update","updateState","valor","indexDosis","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","multiline","startIcon","AddOutlined","Array","fill","vacio","placeholder","AlertBotoneraConfirmacion","faCheckCircle","cambiarHora","alertConfiguracion","faTimesCircle","AlertNuevoAditivo","heading","typography","pxToRem","secondaryHeading","paperDark","expansionPanel","textShadow","buttonText","expandIcon","addButton","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","j","aplicacion","k","confirmAlert","customUI","alertEditarAditivo","EditOutlined","gutterBottom","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","widht","PantallaDeCarga","faCannabis","borderColor","submit","border","link","textDecoration","checkBox","linkButtons","FormSignIn","inputUser","setInputUser","inputPassword","setInputPassword","userError","passwordError","logIn","loading","LockOutlined","noValidate","required","fullWidth","helperText","autoFocus","Link","href","grey","objectFit","SignInPage","setloading","setUserError","setPasswordError","signInWithEmailAndPassword","then","catch","code","Grid","container","item","xs","md","FormLogin","inputNombre","setInputNombre","signIn","createUserWithEmailAndPassword","updateProfile","LogInPage","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","FormControlSwitch","textField","inputCicloLuminico","ListConfig","switchValue","setSwitchValue","cambiarHoraDeInicio","cambiarPeriodo","cambiarCicloLuminico","errorCicloLuminico","setErrorCicloLuminico","horaDeRespaldo","setHoraDeRespaldo","Switch","readOnly","startAdornment","InputAdornment","hour","localStorage","getItem","switchModoOscuro","setSwitchModoOscuro","setTheme","setItem","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","CardHeader","subheader","historial","plantaDelHistorial","DetallePlanta","adn","maceta","semilla","vegetativo","floracion","cosecha","balanza","store","outline","DetalleAcciones","transplante","editButton","deleteButton","editText","deleteText","cosecharButton","success","cosecharText","BotoneraConfiguracionPlanta","cosecharPlanta","eliminarPlanta","InputCantidadCosechada","inputCantidad","setInputCantidad","guardarCantidadCosechada","InputProps","CheckCircle","buttonDanger","buttonTextDanger","backdrop","zIndex","paperPrimary","gridList","transform","rightPanel","Planta","remove","tileData","GridList","cols","tile","GridListTile","edit","delete","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","NotFound","ElegirNuevaMaceta","nuevoVolumen","Transplante","transplantar","setNuevaMaceta","guardarTransplanteDB","input","FormNuevaPlanta","guardarNuevaPlantaDB","periodoArmario","getDate","year","getFullYear","month","getMonth","days","setNombre","setGenetica","setEtapa","inicioGerminacion","setInicioGerminacion","setInicioVegetativo","setInicioFloracion","setVolumenMaceta","renderInputsEtapa","CheckCircleOutlineOutlined","PlantaTransplantes","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","themeProvider","createMuiTheme","white","ThemeProvider","exact","path","Armario","Aplicables","render","Historial","NuevaPlanta","NuevoAditivo","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cf8059f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c43b7cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/riegos.daab22d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/periodo.9341cc77.svg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.837d7016.png\";","module.exports = __webpack_public_path__ + \"static/media/semilla.985d2882.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetativo.62b8c74e.svg\";","module.exports = __webpack_public_path__ + \"static/media/floracion.9ef8fb5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/maceta.547ce152.svg\";","module.exports = __webpack_public_path__ + \"static/media/adn.2312614b.svg\";","module.exports = __webpack_public_path__ + \"static/media/balanza.36f92367.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosecha.0baa34b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/transplante.e7b5eb30.svg\";","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {useState,useEffect} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nimport {Grow} from '@material-ui/core' \nimport {makeStyles} from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor:theme.palette.primary.dark,\n      padding:theme.spacing(1)\n    },\n  }));\n\nexport const TarjetaPlanta=(props)=>{\n    let [edad,setEdad]=useState(undefined)\n    useEffect(()=>{\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\n    })\n    const classes = useStyles()\n    return(\n        <div className=\"col-auto\">\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={6} className={classes.paper}>\n                    <Link className='text-white' to={{\n                        pathname:'/Planta',\n                        props:{\n                            ...props\n                        }\n                    }}>\n                        <Card className=\"card\" >\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Overlay>\n                        </Card>\n                    </Link>\n                </Paper>\n            </Grow>\n        </div>\n    )\n}","import React, {Component} from 'react'\nimport {TarjetaPlanta} from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport {Button,Typography,Grow,IconButton} from '@material-ui/core'\nimport {AddCircleOutline} from '@material-ui/icons'\nimport {Link} from 'react-router-dom'\nclass CarouselPlantas extends Component{\n    render(){\n        return(\n            <div className=\"container\">\n                {this.props.plantas?\n                    <>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <Grow in={true}\n                                    {...(true ? { timeout: 1500 } : {})}>\n                                    <Typography variant='h5'>\n                                        Plantas Dentro Del Armario\n                                    </Typography>\n                                </Grow>\n                            </div>\n                        </div>\n                        <div className=\"row mt-3\">\n                            {Object.keys(this.props.plantas).map(key=>(\n                                <TarjetaPlanta\n                                    user={this.props.user}\n                                    nacimiento={this.props.plantas[key].nacimiento} \n                                    genetica={this.props.plantas[key].genetica}\n                                    inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                    inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                    podas={this.props.plantas[key].podas} \n                                    riegos={this.props.plantas[key].riegos}\n                                    fumigaciones={this.props.plantas[key].fumigaciones}\n                                    transplantes={this.props.plantas[key].transplantes}\n                                    volumenMaceta={this.props.plantas[key].volumenMaceta}\n                                    nombre={this.props.plantas[key].nombre}\n                                    id={key}\n                                    key={key}\n                                    history={this.props.history}\n                                />\n                            ))}\n                            <div className=\"col-auto align-self-center\">\n                                <Grow in={true}\n                                {...(true ? { timeout: 1500 } : {})}>\n                                    <Link to='/Nueva-Planta'>\n                                        <IconButton\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                        >\n                                            <AddCircleOutline />\n                                        </IconButton>\n                                    </Link>\n                                </Grow>\n                            </div>\n                        </div>\n                    </>\n                    :\n                    <div className=\"row mb-3\">\n                        <div className=\"col-12 text-center\">\n                            <Typography  variant='h6' className='text-lihgt'>No hay plantas</Typography>\n                            <Link to='/Nueva-Planta'>\n                                <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutline/>}>\n                                    Agrega una!\n                                </Button>\n                            </Link>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user.uid,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport {Typography,makeStyles} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    text:{\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const  FechaYHora=()=>{\n    const classes = useStyles()\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\n    useEffect(() => {\n        setInterval(() => {\n            setFecha(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\n        }, 1000);\n    });\n    return(\n        <Typography variant='h4' className={classes.text}>{fecha}</Typography>\n    )\n}","import React from 'react'\nimport {Paper,List,ListItem,ListItemText,makeStyles,Grow,Avatar} from '@material-ui/core'\nimport periodoImg from '../images/periodo.svg'\n\nconst useStyles=makeStyles(theme=>({\n    paper:{\n        backgroundColor:theme.palette.primary.main,\n        padding:theme.spacing(1),\n        flexGrow:'1',\n        marginTop:theme.spacing(2),\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        maxWidth:'220px'\n    },\n    listText:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    itemList:{\n        display:'flex',\n        justifyContent:'space-around',\n        width:'100%',\n        marginTop:theme.spacing(2)\n    },\n    paperMain:{\n        display:'flex',\n        width:'100%',\n        padding:theme.spacing(1),\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    },\n    avatar:{\n        padding:theme.spacing(1),\n        width:theme.spacing(7),\n        height:theme.spacing(7)\n    }\n}))\nexport const TarjetaArmario = ({periodo,horaDeInicio,cicloLuminico})=>{\n    const convertirHora=hora=>{\n        return hora<10?`0${hora}:00 Hs`:`${hora}:00 Hs`\n    }\n    const classes = useStyles()\n    return(\n        <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n            <div className={classes.itemList}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={periodoImg} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Periodo' secondary={periodo}/>\n                </Paper>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Ciclo Luminico' secondary={convertirHora(cicloLuminico)}/>\n                </Paper>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Hora De Inicio' secondary={convertirHora(horaDeInicio)}/>\n                </Paper>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Hora De Final' secondary={convertirHora(horaDeInicio+cicloLuminico)}/>\n                </Paper>\n            </div>\n        </Grow>\n    )\n}","import React, {useEffect,useState} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {FechaYHora} from '../components/FechaYHora'\nimport './styles/table.css'\nimport {Paper,Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grow}from '@material-ui/core'\nimport {TarjetaArmario} from '../components/TarjetaArmario'\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        width:'100%',\n        padding:theme.spacing(2),  \n    },\n    text:{\n        color: theme.palette.primary.contrastText\n    }\n}));\n\nexport const BarraDeLuz=(props)=>{\n    let [activo,setActivo]=useState(0)\n    let [faltante,setFaltante]=useState(undefined)\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\n    let [transcurrido,setTranscurrido]=useState(undefined)\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\n    let [intervalo,setIntervalo]=useState(undefined)\n\n    const getMinutes=(moment)=>{\n        const date = new Date()\n        const minutes= date.getMinutes()+date.getHours()*60\n        return minutes\n    }\n    const actualizarEstadoDeLampara=(minutes)=>{\n        let minutoDeInicio = props.horaDeInicio*60\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\n        if(minutoFinal>1440){\n            if(minutes<minutoDeInicio){\n                minutoFinal=minutoFinal-1440\n                if(minutes<minutoFinal){\n                    setLampraEncendida(true)\n                }\n                else{\n                    setLampraEncendida(false)\n                }\n            }\n            else{\n                setLampraEncendida(true)\n            }\n        }\n        else{\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\n                setLampraEncendida(true)\n            }\n            else{\n                setLampraEncendida(false)\n            }\n        }\n    }\n    const actualizarTranscurrido=minutes=>{\n\n        let minutoDeInicio = props.horaDeInicio*60\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\n        if(minutoFinal>1440){\n            if(minutes<minutoDeInicio){\n                minutoFinal=minutoFinal-1440\n                if(minutes<minutoFinal){\n                    console.log(minutes+(1440-minutoDeInicio))\n                }\n                else{\n                    console.log(minutes-minutoFinal)\n                }\n            }\n            else{\n                console.log(minutes-minutoDeInicio)\n            }\n        }\n        else{\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\n                console.log(minutes-minutoDeInicio)\n            }\n            else{\n                console.log(minutoFinal-minutes)\n            }\n        }\n\n\n        if(lamparaEncendida){\n            setTranscurrido(minutes-(props.horaDeInicio*60))\n            console.log(minutes-(props.horaDeInicio*60))\n        }\n        else{\n            if(props.horaDeInicio+props.cicloLuminico>24){\n                setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico-24)*60))\n            }\n            else{\n\n            }\n        }\n    }\n    const actualizarFaltante=minutes=>{\n        if(lamparaEncendida){\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\n            setFaltante(diferencia)\n        }\n        else{\n            if(props.horaDeInicio+props.cicloLuminico>24){\n                const diferencia = ((props.horaDeInicio)*60)-minutes\n                setFaltante(diferencia)\n            }\n            else{\n\n            }\n        }\n    }\n    const actualizarBarraDeEstado=()=>{\n        const barra = document.getElementById('barraLuz')\n        if(lamparaEncendida){\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\n            barra.style.width=porcentaje+'%'\n        }\n        else{\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\n            console.log(porcentaje)\n            barra.style.width=porcentaje+'%'\n        }\n    }\n    useEffect(()=>{\n        const minutes= getMinutes()\n        actualizarEstadoDeLampara(minutes)\n        actualizarTranscurrido(minutes)\n        actualizarFaltante(minutes)\n        actualizarBarraDeEstado()\n    })\n    const calcularHoraFinal=()=>{\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\n        if(horaDeFinal>24){\n            horaDeFinal=horaDeFinal-24\n            if(horaDeFinal<10){\n                horaDeFinal='0'+horaDeFinal\n            }\n            return `${horaDeFinal}:00 +1`\n        }\n        else{\n            if(horaDeFinal<10){\n                horaDeFinal='0'+horaDeFinal\n            }\n            return `${horaDeFinal}:00`\n        }\n    }\n    const classes = useStyles()\n    return(\n        <Grow in={true}\n        {...(true ? { timeout: 1500 } : {})}>\n            <div className={classes.root}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <FechaYHora/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {!lamparaEncendida?\n                            <div className=\"col text-center\">\n                                <Typography variant='h4' className={classes.text}>\n                                    Descansando...\n                                </Typography>\n                            </div>\n                            :\n                            <div className=\"col text-center\">\n                                <Typography variant ='h4' className={classes.text}>\n                                    Creciendo...\n                                </Typography>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"row mt-4\">\n                        <div className=\"col-10 offset-1\">\n                            <div className=\"progress\">\n                                <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <TarjetaArmario periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico} />\n                    </div>\n                </div>\n            </div>\n        </Grow>\n    )\n}","import React , {useState}from 'react'\nimport {makeStyles, Hidden} from '@material-ui/core'\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel,Avatar,Menu,MenuItem} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\nimport {auth} from 'firebase'\nimport {connect} from 'react-redux'\nconst useStyles = makeStyles( theme=>({\n    appBar:{\n        backgroundColor:theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    avatar:{\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark,\n    },\n    danger:{\n        color:theme.palette.error.main\n    }\n}))\n\nconst NavBar = ({page,planta,history,setRedirect,setMenuOpened,user}) =>{\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n      };\n    \n      const handleClose = () => {\n        setAnchorEl(null);\n      };\n    return(\n        <AppBar className={classes.appBar} position=\"static\" >\n            <Toolbar>\n            {page!=='Armario'?\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                    if(!planta){\n                        if(history.location.pathname==='/Planta'){\n                            history.replace('/')\n                        }\n                        else{\n                            history.goBack()\n                        }\n                    }\n                    else{\n                        setRedirect(true)\n                    }\n                }} color=\"inherit\" aria-label=\"menu\">\n                    <ArrowBackRounded />\n                </IconButton>\n                :\n                <div>\n                    <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{handleMenu(e)}} color=\"inherit\" aria-label=\"menu\">\n                        <Avatar className={classes.avatar}>\n                            {user.displayName.slice(0,1)}\n                        </Avatar>\n                    </IconButton>\n                    <Menu\n                        id=\"menu-appbar\"\n                        anchorEl={anchorEl}\n                        anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                        }}\n                        keepMounted\n                        transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right',\n                        }}\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem onClick={e=>{auth().signOut()}} className={classes.danger}>Cerrar Sesion</MenuItem>\n                    </Menu>\n                </div>\n            }\n            <Typography variant=\"h6\" className={classes.title} >\n                {page}\n            </Typography>\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                setMenuOpened(true)\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\n                <MenuIcon />\n            </IconButton>\n            </Toolbar>\n        </AppBar>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user\n})\nexport default connect(mapStateToProps,null)(NavBar)","import React from 'react'\nimport {auth} from 'firebase'\nimport {Card,CardMedia,} from '@material-ui/core'\nimport {HomeOutlined,NatureOutlined} from '@material-ui/icons'\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme=>({\n    paper:{\n        maxWidth:'300px',\n        height:'100%',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main\n    },\n    icon:{\n        color:\n            theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n}))\nexport const MenuDrawer = ({menuOpened,setMenuOpened,image,history})=>{\n    const classes = useStyles()\n    return(\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\n            <Paper className={classes.paper} elevation={6}>\n                <Card>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Sea Of Green\"\n                        image={image}\n                        title=\"Sea Of Green\"\n                    />\n                </Card>\n                <List>\n                    <Link to='/' className='outline-none text-dark'>\n                        <ListItem button key={'Armario'} >\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Armario'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Riego' className='outline-none text-dark'>\n                        <ListItem button key={'Regar'} >\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Regar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Poda' className='outline-none text-dark'>\n                        <ListItem button key={'Podar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Podar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Insecticida' className='outline-none text-dark'>\n                        <ListItem button key={'Fumigar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Transplante' className='outline-none text-dark'>\n                        <ListItem button key={'Transplantar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Transplantar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Aplicables' className='outline-none text-dark'>\n                        <ListItem button key={'Aditivos'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Historial' className='outline-none text-dark'>\n                        <ListItem button key={'Historial'}>\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Aditivos' className='outline-none text-dark'>\n                        <ListItem button key={'Carencias y Excesos'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Configuracion' className='outline-none text-dark'>\n                        <ListItem button key={'Configuracion'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\n                        </ListItem>\n                    </Link>\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                            await auth().signOut()\n                            history.replace('/')\n                        }}>\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                        <ListItemText primary={'Cerrar Sesion'} />\n                    </ListItem>\n                </List>\n            </Paper>\n        </Drawer>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {Paper} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport NavBar from '../components/Navbar'\nimport {MenuDrawer} from '../components/MenuDrawer'\nimport foto from '../images/sea of green.png'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    drawer:{\n        maxWidth:'300px',\n        height:'100%',\n    },\n    icon:{\n        color:theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n    app:{\n        minHeight: '100vh',\n        height: '100vh',\n        maxHeight:'100vh',\n        display: 'flex',\n        textAlign: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'start',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n    }\n}));\n\n\nexport const Layout=({page,children,history,planta,user})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n    let [redirect,setRedirect]=useState(false)\n    if(redirect){\n        return(\n            <Redirect to={{\n                pathname:'/Planta',\n                props:{...planta}\n            }}/>\n        )\n    }\n    return(\n        <Paper className={classes.app}>\n            {user &&\n            <>\n                <NavBar page={page} planta={planta} history={history}  setRedirect={setRedirect} setMenuOpened={setMenuOpened}/>\n                <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened} image={foto} history={history}/>\n            </>\n            }\n            {children}\n        </Paper>\n    )\n}","import React , {Component,useState} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport {BarraDeLuz} from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Armario=(props)=>{\n    const classes = useStyles()\n    const cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(props.user).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    const cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(props.user).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    return(\n        <Layout history={props.history} page=\"Armario\" user={props.user}>\n            <Paper className={classes.root}>\n                <BarraDeLuz periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico}/>\n                <CarouselPlantas history={props.history}/>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user.uid,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.horaDeInicio,\n        cicloLuminico:state.data.cicloLuminico,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    formControl:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container pt-4\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                    <Checkbox color='primary'  checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Plantas En el Armario - <Link to='/Nueva-Planta'>Agrega una ahora!</Link> </AlertTitle> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}))\n\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                        <FormControlLabel\n                            className={classes.radio}\n                            value=\"top\"\n                            control={<Radio\n                                value=\"Tierra\" \n                                name=\"Tierra\"\n                                color='primary'\n                            />}\n                            label='Tierra'\n                            labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                            value=\"top\"\n                            className={classes.radio}\n                            control={<Radio\n                                value=\"Foliar\"\n                                name=\"Foliar\"\n                                color='primary'\n                            />}\n                            label=\"Foliar\"\n                            labelPlacement=\"top\"\n                        />\n                    </RadioGroup>\n                </div>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button,makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    buttonPrimary:{\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport const BotoneraConfirmacionAccion=(props)=>{\n    const classes = useStyles()\n    return(\n            <div className={classes.actionsContainer}>\n                <div>\n                    <Button\n                        className={classes.button}\n                        onClick={props.handleBack}\n                        className='mr-2'\n                    >\n                        Volver\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={\n                            e=>{\n                                props.confirmarAccion(props.accion)\n                            }\n                        }\n                    >\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                    Guardar {props.accion}\n                </Button>\n                </div>\n            </div>\n    )\n}","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport {Alert,AlertTitle} from '@material-ui/lab';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    title:{\n        color: theme.palette.primary.contrastText,\n        marginTop:theme.spacing(1)\n    }\n  }));\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid className='pt-4'>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <Typography variant='h6' className={classes.title}>Aditivos (ml)</Typography>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </AlertTitle> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme=>({\n  card: {\n    minWidth: 275,\n  },\n  root:{\n      margin:'0'\n  },\n  title: {\n    fontSize: 14,\n    color:theme.palette.secondary.contrastText,\n  },\n  pos: {\n    marginBottom: 12,\n    color:theme.palette.secondary.contrastText,\n  },\n  paper:{\n      background:theme.palette.secondary.main,\n      color:theme.palette.secondary.contrastText,\n      padding: theme.spacing(1)\n  },\n  containerPlantas:{\n    textAlign:'left',\n    paddingLeft:theme.spacing(2),\n    paddingTop:theme.spacing(2)\n  }\n}));\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda,nuevaMaceta})=>{\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n            {tipoDePoda &&\n                <List>\n                    <ListItem>\n                        <ListItemText primary='Tipo De Poda' secondary={tipoDePoda}/>    \n                    </ListItem>\n                </List>\n            }\n            {nuevaMaceta &&  \n                <List>\n                    <ListItem>\n                        <ListItemText primary='Nuevo Volumen De Maceta' secondary={`${nuevaMaceta} Lt`}/>    \n                    </ListItem>\n                </List>\n            }\n            {tipoDeRiego&&cantidadDeAgua&&\n                <List>\n                    <ListItem>\n                        <ListItemText  primary='Tipo De Riego' secondary={tipoDeRiego}/>    \n                    </ListItem>\n                    <ListItem>\n                        <ListItemText primary='Cantidad De Agua' secondary={`${cantidadDeAgua} Lt`}/>    \n                    </ListItem>\n                </List>\n            }\n            <Divider/>\n            <div className={classes.containerPlantas}>\n                <Typography variant='h6'>\n                    Plantas Seleccionadas\n                </Typography>\n                <List>\n                    {plantas.map(planta => (\n                        planta.selected &&\n                        <ListItem>\n                            <ListItemText primary={planta.nombre}/>    \n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n            <Divider/>\n            {tipoDeRiego &&\n                <div className={classes.containerPlantas}>\n                    <Typography variant='h6'>\n                        Aditivos Usados\n                    </Typography>\n                    <List>\n                        {aditivos?\n                            Object.keys(aditivos).map(aditivo=>{\n                                const dosis= aditivos[aditivo]\n                                return(\n                                    <ListItem>\n                                        <ListItemText primary={aditivo} secondary={`${parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} ${dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}`}/>    \n                                    </ListItem>\n                                )\n                            })\n                            :\n                            <ListItem>\n                                <ListItemText primary='-'/>    \n                            </ListItem>\n                        }\n                    </List>\n                </div>\n            }\n    </div>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root:{\n    height:'100%',\n    width:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'space.around',\n    overflow:'auto',\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  buttonPrimary:{\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  paperSecondary:{\n    backgroundColor:theme.palette.type==='dark'?theme.palette.primary.dark:theme.palette.primary.main,\n    paddingBottom:theme.spacing(2),\n    paddingTop:theme.spacing(2),\n  },\n  padding:{\n    paddingBottom:theme.spacing(1),\n    color:theme.palette.primary.contrastText,\n    backgroundColor:theme.palette.secondary.light\n  },\n  stepper:{\n    backgroundColor:'transparent'\n  },\n  stepTitle:{\n    '& .MuiStepLabel-label':{\n      color:theme.palette.primary.contrastText\n    },\n  },\n  resetContainer:{\n    backgroundColor:theme.palette.secondary.light,\n    width:'500px'\n  },\n  rootLastStep:{\n    display:'flex',\n    justifyContent:'center'\n  }\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants,nuevaMaceta})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===0){\n      return selectedPlants.length?false:true\n    }\n    else if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else if(tipoDeAccion==='Transplante'){\n        return nuevaMaceta?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    else if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <Paper className={classes.root}>\n    <Grow in={true}\n      {...(true ? { timeout: 1500 } : {})}>\n        <div>\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\n            {steps.map((step, index) => (\n              step?\n                    <Step key={step.title}>\n                      <Paper elevation={3} className={classes.paperSecondary}>\n                        <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\n                      </Paper>\n                      <StepContent>\n                        <Paper elevation={6} className={classes.padding}>\n                            <Typography>{step.content}</Typography>\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Atras\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.buttonPrimary}\n                                    disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                                </Button>\n                                </div>\n                            </div>\n                          </Paper>\n                        </StepContent>\n                    </Step>\n                    :\n                    null\n            ))}\n          </Stepper>\n          {activeStep === steps.length && (\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n              <div className={classes.rootLastStep}>\n                <Paper square elevation={6} className={classes.resetContainer}>\n                    {resumenAccion}\n                    <BotoneraConfirmacionAccion\n                        accion={tipoDeAccion}\n                        handleBack={handleBack}\n                        confirmarAccion={confirmarAccion}\n                    />\n                </Paper>\n              </div>\n            </Grow>\n          )}\n        </div>\n      </Grow>\n    </Paper>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n        <Layout history={this.props.history} page='Riego' user={this.props.user}>\n            <StepperAccion \n                step1='Plantas'\n                step2='Tipo De Riego'\n                step3='Cantidad de agua y aditivos'\n                selectedPlants={selectedPlants}\n                cantidadDeAgua={this.state.cantidadDeAgua}\n                tipoDeRiego={this.state.tipoDeRiego}\n                confirmarAccion={this.confirmarAccion}\n                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                tipoDeAccion='Riego'\n                steps={[\n                        {\n                        title:'Plantas',\n                        content:(\n                            <ElegirPlantaAccion\n                                seleccionarPlanta={this.seleccionarPlanta}\n                                plantas={this.state.plantas}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Tipo De Riego',\n                        content:(\n                            <ElegirTipoDeRiego\n                                tipoDeRiego={this.state.tipoDeRiego}    \n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Cantidad De Agua y Aditivos',\n                        content:(\n                            <FormularioAccion\n                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                    tipoDeRiego={this.state.tipoDeRiego}\n                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                    cantidadDeAgua={this.state.cantidadDeAgua}\n                                    cambiarAditivo={this.cambiarAditivo}\n                                    adivito='Fertlizante'\n                                    aditivos={this.props.aditivos}\n                                    aditivosUsados={this.state.aditivos}\n                                    eliminarAditivo={this.eliminarAditivo}\n                                    setExpansionExpanded={this.setExpansionExpanded}\n                                    expanded={this.state.expanded}\n                                />\n                        )},\n                ]}\n            />\n        </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user.uid,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion' user={this.props.user}>\n                <div className=\"container-fluid overflow-auto h-100\">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Fumigacion'\n                                steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Tipo De Riego',\n                                    content:(\n                                        <ElegirTipoDeRiego\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Cantidad De Agua y Aditivos',\n                                    content:(\n                                        <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            aditivo='Insecticida'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user.uid,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\nimport {AddOutlined} from '@material-ui/icons'\nimport {database} from 'firebase'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        alignItems:'center',\n        overflow:'auto'\n    },\n    firstPaper:{\n        width:'300px',\n        display:'flex',\n        flexDirection:'column',\n        marginTop:theme.spacing(1),\n        padding:theme.spacing(4),\n        backgroundColor:theme.palette.primary.main\n    },\n    secondPaper:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(1),\n        width:'80%',\n        backgroundColor:theme.palette.primary.main\n    },\n    dosisList:{\n        display:'flex',\n        flexWrap:'nowrap',\n        overflow:'auto',\n        width:'100%',\n        marginBottom:theme.spacing(1)\n    },\n    form:{\n        display:'flex',\n        minWidth:'200px',\n        margin:theme.spacing(1),\n        flexDirection:'column'\n    },\n    button:{\n        marginTop:theme.spacing(2),\n        marginBottom:theme.spacing(2),\n    }\n}))\n\nexport const FormNuevoAditivo = ({aditivos=[],tipoDeAditivo,user,history}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        console.log(tipoDeAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                history.goBack()\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                history.goBack()\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    \n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <Paper elevation={4} className={classes.firstPaper}>\n                <Typography variant='h5'>\n                    Caracteristicas\n                </Typography>\n                <TextField label=\"Nombre\"  onChange={e=>{\n                    updateState(e.target.value,'nombre')\n                }}/>\n                <TextField label=\"Marca\"  onChange={e=>{\n                    updateState(e.target.value,'marca')\n                }}/>\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\n                    updateState(e.target.value,'descripcion')\n                }}/>\n            </Paper>\n            <Paper elevation={4} className={classes.secondPaper}>\n                <Typography variant='h5'>\n                    Dosificaciones\n                </Typography>\n                <Button\n                    variant='outlined'\n                    color='#fff'\n                    startIcon={<AddOutlined/>}\n                    onClick={e=>{\n                        setCantidadDeDosis(cantidadDeDosis+=1)\n                    }}\n                >\n                    Agregar otra dosis\n                </Button>\n                <div className={classes.dosisList}>\n                    {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                        <form className={classes.form}>\n                            <TextField label=\"Etapa\"  color='#fff' placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                updateState(e.target.value,'etapa','dosis'+i)\n                            }}/>\n                            <TextField label=\"Cantidad\" color='#fff' onChange={e=>{\n                                updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                            }}/>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    color='#fff'\n                                    onChange={e=>{\n                                        updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                    }}\n                                >\n                                    <MenuItem value={'1'}>gr/L</MenuItem>\n                                    <MenuItem value={'2'}>ml/L</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    color='#fff'\n                                    id=\"demo-simple-select\"\n                                    onChange={e=>{\n                                        updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                    }}\n                                >\n                                    <MenuItem value={'Tierra'}>Tierra</MenuItem>\n                                    <MenuItem value={'Foliar'}>Foliar</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    ))}\n                </div>\n            </Paper>\n            <Button\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                onClick={e=>{\n                    agregarAditivo()\n                }}\n            >\n                Agregar {tipoDeAditivo}!\n            </Button>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor:theme.palette.secondary.light,\n        color:theme.palette.primary.contrastText\n    },\n    paperDark: {\n        backgroundColor: theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px white'\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    },\n    addButton:{\n        marginBottom:theme.spacing(1),\n        color:theme.palette.primary.contrastText\n    }\n  }));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <Link to={{\n                            pathname:'/Nuevo-Aditivo',\n                            props:{\n                                tipoDeAditivo:title\n                            }\n                        }}>\n                            <Button \n                                variant='text' \n                                className={classes.addButton} \n                                startIcon={<AddOutlined/>}\n                                >\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n                {aditivos?\n                    aditivos.map((aditivo,i)=>(\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\n                                <Paper elevation={4} className={classes.paperDark}>\n                                    <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                    >\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                    </ExpansionPanelSummary>\n                                </Paper>\n                                <Paper elevation={6} className={classes.paperMain}>\n                                    <ExpansionPanelDetails>\n                                        <div className=\"container\">\n                                            <div className=\"row mb-2\">\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography variant='h5'>\n                                                        Descripcion\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-left\">\n                                                    <Typography variant='body2'>\n                                                        {aditivo.descripcion}\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <hr/>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography variant='h5'>\n                                                        Dosificacion\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                <Fragment key={'tipoDeAplicacion'+j}>\n                                                    <Typography  variant ='h6'>\n                                                            {tipoDeAplicacion}\n                                                    </Typography>\n                                                    <List>\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                            <ListItem>\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\n                                                            </ListItem> \n                                                        ))}\n                                                    </List>\n                                                </Fragment>\n                                            ))}\n                                            <div className=\"row my-2 justify-content-around\">\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{alertEditarAditivo(aditivo)}}\n                                                    >   \n                                                        <EditOutlined className={classes.buttonText}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                        Editar\n                                                    </Typography>\n                                                </div>\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{eliminarAditivo(i)}}\n                                                    >\n                                                        <DeleteOutline className={classes.buttonText}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                        Eliminar\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ExpansionPanelDetails>\n                                    </Paper>\n                            </ExpansionPanel>\n                        </Grow>\n                        </div>\n                    </div>\n                    ))\n                    :\n                    <Typography>Aun no hay ningun Aditivo</Typography>\n                }\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nimport { makeStyles,Theme } from '@material-ui/core/styles';\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paperMain: {\n      backgroundColor: 'transparent',\n    },\n    paperDark: {\n    backgroundColor: theme.palette.primary.light,\n    },\n    tabs:{\n        \"&.MuiTabs-scroller\":{\n            '&.MuiTabs-indicator':{\n                color: '#fff'\n            }\n        },\n    },\n    tab:{\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\n            color: '#fff',\n        }\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    const classes = useStyles()\n    return(\n        <div className=\"container-fluid overflow-auto\">\n            <div className=\"row\">\n                <div className=\"col-12 px-0\">\n                    <Paper className={classes.paperDark}>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={(e,value)=>{\n                                setValue(value)\n                            }}\n                            className={classes.tabs}\n                            aria-label=\"disabled tabs example\"\n                        >\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\n                        </Tabs>\n                    </Paper>\n                    <TabPanel value={value} index={0}>\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Aplicables=(props)=>{\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page='Aditivos' user={props.user}>\n            <Paper elevation={3} className={classes.root}>\n                <TabAditivos user={props.user} fertilizantes={props.fertilizantes} insecticidas={props.insecticidas}/>\n            </Paper>\n        </Layout>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user.uid,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport {Paper,makeStyles,Typography} from '@material-ui/core'\nimport './styles/loading.css'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        display:'flex',\n        justifyContent:'center',\n        flexDirection:'column',\n        alignItems:'center',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n        height:'100vh',\n        widht:'100%'\n    },\n    title:{\n        color:theme.palette.primary.contrastText,\n    }\n}))\nexport const PantallaDeCarga =()=>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <div className='row'>\n                <div className='col-12 text-center'>\n                    <Typography variant='h2'className={classes.title}>Cargando</Typography>\n                </div>\n            </div>\n            <div className=\"row justify-content-center mt-4\">\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                    </h2>\n                </div>\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                    </h2>\n                </div>\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                    </h2>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link,FormControlLabel,Checkbox} from '@material-ui/core'\nimport {LockOutlined} from '@material-ui/icons'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin: theme.spacing(0, 4),\n      padding:theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      '& .MuiOutlinedInput-input':{\n        color:theme.palette.primary.contrastText,\n      },\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.primary.contrastText\n      },\n      '& .MuiFormLabel-root.Mui-focused':{\n        color:theme.palette.secondary.contrastText\n      },\n      '& .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.secondary.dark,\n      },\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color:theme.palette.primary.contrastText,\n      '&.MuiButton-outlined':{\n        border: `1px solid ${theme.palette.primary.contrastText}`\n      },\n    },\n    background:{\n      background:theme.palette.primary.main,\n      color:theme.palette.primary.contrastText\n    },\n    link:{\n      color:theme.palette.primary.contrastText,\n      '& .MuiLink-underlineHover':{\n        textDecoration:'none',\n        color:theme.palette.primary.contrastText,\n      }\n    },\n    root:{\n        width:'100%',\n    },\n    title:{\n        color:theme.palette.primary.contrastText\n    },\n    checkBox:{\n        color: theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText,\n        }\n    },\n    linkButtons:{\n        display:'flex',\n        flexDirection:'column'\n    }\n  }));\nexport const FormSignIn = ({inputUser,setInputUser,inputPassword,setInputPassword,userError,passwordError,loading,logIn})=>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                    Inicia Sesion\n                </Typography>\n                <form className={classes.form} noValidate>\n                <TextField\n                variant=\"filled\"\n                margin=\"normal\"\n                color='primary'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                error={userError}\n                helperText={userError?'Usuario No Encontrado':null}\n                name=\"email\"\n                value={inputUser}\n                onChange={e=>{setInputUser(e.target.value)}}\n                autoFocus\n                />\n                <TextField\n                variant=\"filled\"\n                color='primary'\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                value={inputPassword}\n                helperText={passwordError?'Contraseña incorrecta':null}\n                error={passwordError}\n                onChange={e=>{setInputPassword(e.target.value)}}\n                label=\"contraseña\"\n                type=\"password\"\n                id=\"password\"\n                />\n                <FormControlLabel\n                className={classes.checkBox}\n                control={<Checkbox value=\"remember\"  />}\n                label=\"Recuerdame\"\n                />\n                <Button\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={e=>{logIn()}}\n                >\n                Ingresar!\n                </Button>\n                <div className={classes.linkButtons}>\n                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\n                        Olvidaste tu contraseña?\n                    </Link>\n                    <Link variant=\"body2\">\n                        <LinkRouter to='/Login' className={classes.link}>\n                            {\"No tienes una cuenta? Registrate!\"}\n                        </LinkRouter>\n                    </Link>\n                </div>\n            </form>\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/background.png'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from './PantallaDeCarga'\nimport {Layout} from './Layout'\nimport {FormSignIn} from '../components/FormSignIn'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    width:\"100%\",\n    height:\"100%\",\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n    borderRadius:'0',\n    display:'flex',\n    alignItems:'center'\n  },\n  \n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const logIn=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .then(()=>{\n          setloading(false)\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n          setloading(false)\n        })\n    }\n\n    return (\n      <Layout>\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5}>\n              {!loading?\n              <Paper elevation={3} className={classes.paper}>\n                <FormSignIn logIn={logIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword} userError={userError} passwordError={passwordError} />\n              </Paper>\n              :\n              <PantallaDeCarga/>\n              }\n        </Grid>\n        </Grid>\n      </Layout>\n    );\n}","import React,{useState} from 'react'\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link} from '@material-ui/core'\nimport {LockOutlined} from '@material-ui/icons'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\nimport {auth,database} from 'firebase'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin: theme.spacing(0, 4),\n      padding:theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      '& .MuiOutlinedInput-input':{\n        color:theme.palette.primary.contrastText,\n      },\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.primary.contrastText\n      },\n      '& .MuiFormLabel-root.Mui-focused':{\n        color:theme.palette.secondary.contrastText\n      },\n      '& .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.secondary.dark,\n      },\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color:theme.palette.primary.contrastText,\n      '&.MuiButton-outlined':{\n        border: `1px solid ${theme.palette.primary.contrastText}`\n      },\n    },\n    background:{\n      background:theme.palette.primary.main,\n      color:theme.palette.primary.contrastText\n    },\n    link:{\n      color:theme.palette.primary.contrastText\n    },\n    root:{\n        width:'100%',\n    },\n    title:{\n      color:theme.palette.primary.contrastText\n    }\n  }));\nexport const FormLogin=({setloading,history})=>{\n    const classes = useStyles()\n    let [inputUser,setInputUser]=useState(undefined)\n    let [inputNombre,setInputNombre]=useState(undefined)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [nombreError,setNombreError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n\n    const signIn=async()=>{\n      setloading(true)\n      await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n      .then(async e=>{\n          e.user.updateProfile({\n            displayName:inputNombre\n          })\n          await database().ref().child(e.user.uid).update({\n              horaDeInicio:0,\n              cicloLuminico:1,\n              periodo:'Vegetativo'\n          })\n          history.push('/')\n          setloading(false)\n      })\n      .catch(error=>{\n        if(error.code==='auth/user-not-found'){\n          setUserError(error)\n        }\n        else{\n          setPasswordError(error)\n        }\n        setloading(false)\n      })\n  }\n    return(\n          <div className={classes.root}>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                    Registrate\n                </Typography>\n                <form className={classes.form} noValidate>\n                <TextField\n                    variant=\"filled\"\n                    margin=\"normal\"\n                    color='primary'\n                    required\n                    fullWidth\n                    id=\"Nombre\"\n                    label=\"Nombre\"\n                    name=\"nombre\"\n                    value={inputNombre}\n                    onChange={e=>{setInputNombre(e.target.value)}}\n                    autoFocus\n                />\n                <TextField\n                    variant=\"filled\"\n                    margin=\"normal\"\n                    color='primary'\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                />\n                <TextField\n                    variant=\"filled\"\n                    margin=\"normal\"\n                    color='secondary'\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                />\n                <Button\n                  fullWidth\n                  color='#fff'\n                  variant=\"outlined\"\n                  className={classes.submit}\n                  onClick={e=>{signIn()}}\n                >\n                Registrate!\n                </Button>\n                <Link variant=\"body2\">\n                      <LinkRouter to='/' className={classes.link}>\n                        Ya tienes una cuenta? Ingresa!\n                      </LinkRouter>\n                  </Link>\n            </form>\n            </div>\n          </div>\n    )\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/background.png'\nimport {PantallaDeCarga} from './PantallaDeCarga'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {Layout} from './Layout'\nimport {FormLogin} from '../components/FormLogin'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    width:\"100%\",\n    height:\"100%\",\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n    borderRadius:'0',\n    display:'flex',\n    alignItems:'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n    let [loading,setloading]=useState(false)\n\n    return (\n      <Layout>\n          <Grid container component=\"main\" className={classes.root}>\n              <Grid item xs={false} sm={4} md={7} className={classes.image}>\n                <img src={foto} alt=\"\" className={classes.img}/>\n              </Grid>\n              <Grid item xs={12} sm={8} md={5}>\n                {!loading?\n                  <Paper elevation={3} className={classes.paper}>\n                    <FormLogin setloading={setloading} history={history}/>\n                  </Paper>\n                  :\n                  <PantallaDeCarga/>\n                }\n            </Grid>\n          </Grid>\n      </Layout>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}))\n\nexport const ElegirTipoDePoda=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.tipoDePoda}\n                            className={classes.radio}\n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda' user={this.props.user}>\n                <div className=\"container-fluid overflow-auto h-100 \">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDePoda={this.state.tipoDePoda}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                                tipoDeAccion='Poda'\n                                steps={[\n                                {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                        />\n                                    )},\n                                {\n                                    title:'Tipo De Poda',\n                                    content:(\n                                        <ElegirTipoDePoda\n                                            handleChange={(nuevoTipoDePoda=>{\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                            })}\n                                            tipoDePoda={this.state.tipoDePoda}\n                                        />\n                                )}]\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user.uid,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React,{useState}from 'react'\nimport { Paper,ListItem,List,ListItemText,FormControl,InputLabel,Select,MenuItem,makeStyles,Switch,FormControlLabel,TextField,InputAdornment,Grow,Button, Typography } from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\n\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    paper:{\n        marginTop:theme.spacing(1),\n        width:'300px',\n        background:theme.palette.primary.main,\n        display:'flex',\n        flexDirection:'column',\n        padding:theme.spacing(1)\n    },\n    FormControlSwitch:{\n        marginLeft:'auto',\n        marginRight:'auto'\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    inputCicloLuminico:{\n        display:'flex',\n        flexDirection:'column'\n    },\n    alert:{\n        marginTop:theme.spacing(1)\n    }\n}))\nexport const ListConfig =({switchValue,setSwitchValue,horaDeInicio,cambiarHoraDeInicio,periodo,cambiarPeriodo,cicloLuminico,cambiarCicloLuminico})=>{\n    const classes = useStyles()\n    let [errorCicloLuminico,setErrorCicloLuminico]= useState(undefined)\n    let [horaDeRespaldo,setHoraDeRespaldo]= useState(undefined)\n    return(\n        <div className={classes.root}>\n            <Paper elevation={3} className={classes.paper}>\n                <FormControlLabel\n                    className={classes.FormControlSwitch}\n                    control={\n                        <Switch checked={switchValue} onChange={e=>{setSwitchValue(e.target.checked)}} value=\"switch\" />\n                    }\n                    label=\"Modo Oscuro\"\n                />\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Periodo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        readOnly={true}\n                        id=\"select\"\n                        value={periodo}\n                        onChange={e=>{\n                            cambiarPeriodo(e.target.value)\n                        }}\n                    >\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Hora De Inicio Del Ciclo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"select\"\n                        value={horaDeInicio}\n                        startAdornment={\n                            <InputAdornment position=\"start\">HS</InputAdornment>\n                        }\n                        onChange={e=>{\n                            cambiarHoraDeInicio(e.target.value)\n                        }}\n                    >\n                        {new Array(24).fill(undefined).map((hour,index)=>(\n                            <MenuItem value={index}>\n                                {index<10?`0${index}:00`:`${index}:00`}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Duracion Del Ciclo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"select\"\n                        value={cicloLuminico}\n                        error={errorCicloLuminico}\n                        startAdornment={\n                            <InputAdornment position=\"start\">HS</InputAdornment>\n                        }\n                        onChange={e=>{\n                            console.log(e.target.value)\n                            if(e.target.value<13&&periodo==='Vegetativo'){\n                                setErrorCicloLuminico('Si este es menor de 13 Hs el armario pasara al periodo de Floracion')\n                                setHoraDeRespaldo(e.target.value)\n                            }\n                            if(e.target.value>=13&&periodo==='Floracion'){\n                                setErrorCicloLuminico('Si este es mayor de 13 Hs el armario pasara al periodo Vegetativo')\n                                setHoraDeRespaldo(e.target.value)\n                            }\n                            else{\n                                cambiarCicloLuminico(e.target.value)\n                            }\n                        }}\n                    >\n                        {new Array(25).fill(undefined).map((hour,index)=>(\n                            index&&\n                                <MenuItem value={index}>\n                                    {index}\n                                </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                {errorCicloLuminico&&\n                <Grow in={true}>\n                <   Alert className={classes.alert} variant=\"filled\" severity=\"warning\">\n                        <Typography>\n                            Quiere cambiar el ciclo luminico a {horaDeRespaldo} HS?\n                        </Typography>\n                        {errorCicloLuminico}\n                        <Button\n                            variant='contained'\n                            onClick={e=>{\n                                cambiarCicloLuminico(horaDeRespaldo)\n                                cambiarPeriodo(horaDeRespaldo>=13?'Vegetativo':'Floracion')\n                                setErrorCicloLuminico(undefined)\n                            }}\n                        >\n                            Continuar\n                        </Button>\n                    </Alert>\n                </Grow>\n                }\n            </Paper>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport {Layout} from './Layout'\nimport {connect} from 'react-redux'\nimport {ListConfig} from '../components/ListConfig'\nimport {database}from 'firebase'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space.around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Configuracion=(props)=>{\n    let [switchModoOscuro,setSwitchModoOscuro]= useState(localStorage.getItem('theme')==='dark'?true:false)\n    const setSwitchValue=value=>{\n        setSwitchModoOscuro(value)\n        if(!value){\n            props.setTheme('light')\n            localStorage.setItem('theme','light')\n        }\n        else{\n            props.setTheme('dark')\n            localStorage.setItem('theme','dark')\n        }\n    }\n    const cambiarHoraDeInicio=horaDeInicio=>{\n        database().ref().child(props.user).update({\n            horaDeInicio:horaDeInicio\n        })\n    }\n    const cambiarPeriodo=periodo=>{\n        database().ref().child(props.user).update({\n            periodo:periodo\n        })\n    }\n    const cambiarCicloLuminico=cicloLuminico=>{\n        database().ref().child(props.user).update({\n            cicloLuminico:cicloLuminico\n        })\n    }\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page='Configuracion' user={props.user}>\n            <Paper className={classes.root}>\n                <ListConfig \n                    switchValue={switchModoOscuro} \n                    setSwitchValue={setSwitchValue} \n                    horaDeInicio={props.horaDeInicio} \n                    cambiarHoraDeInicio={cambiarHoraDeInicio}\n                    periodo={props.periodo} \n                    cambiarPeriodo={cambiarPeriodo}\n                    cicloLuminico={props.cicloLuminico}\n                    cambiarCicloLuminico={cambiarCicloLuminico}\n                />\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps = state=>({\n    user:state.user.uid,\n    periodo:state.data.periodo,\n    horaDeInicio:state.data.horaDeInicio,\n    cicloLuminico:state.data.cicloLuminico\n})\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {Card,CardHeader,CardMedia,CardActions,makeStyles,IconButton} from '@material-ui/core'\nconst useStyles= makeStyles(theme=>({\n    root: {\n        width: 250,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    cardHeader:{\n        backgroundColor:theme.palette.primary.dark,\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\n    const classes= useStyles()\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={nombre}\n                subheader={fechaDeCorte}\n            />\n            <CardMedia\n                className={classes.media}\n                image={fotoPlanta}\n            />\n        </Card>\n    )\n}","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button,Typography} from '@material-ui/core'\nimport {CardHistorial} from '../components/CardHistorial'\nimport {makeStyles,Paper} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Historial=(props)=>{\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page={'Historial'} user={props.user}>\n            <Paper elevation={3} className={classes.root}>\n                <div className=\"container-fluid overflow-auto\">\n                    <div className=\"row justify-content-center\">\n                        {props.historial?\n                            Object.keys(props.historial).map(planta=>(\n                                <div className=\"col-auto mt-3\">\n                                    <Link className='text-white' to={{\n                                        pathname:'/Historial/Planta',\n                                        props:{\n                                            ...props.historial[planta],\n                                            user:props.user,\n                                            id:planta,\n                                            history:props.history,\n                                            plantaDelHistorial:true\n                                        }\n                                    }}>\n                                        <CardHistorial cantidadDeGramos={props.historial[planta].cantidadDeGramos} nombre={props.historial[planta].nombre} fechaDeCorte={props.historial[planta].fechaDeCorte}/>\n                                    </Link>\n                                </div>\n                            )):\n                            <div className=\"col-auto\">\n                                <Typography>\n                                    No hay plantas en el historial\n                                </Typography>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user.uid,\n    historial:state.data.historial\n})\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia,ListItemAvatar,Avatar,Grow} from '@material-ui/core'\nimport { PortableWifiOff, Height } from '@material-ui/icons';\nimport semilla from '../images/semilla.svg'\nimport vegetativo from '../images/vegetativo.svg'\nimport floracion from '../images/floracion.svg'\nimport maceta from '../images/maceta.svg'\nimport adn from '../images/adn.svg'\nimport balanza from '../images/balanza.svg'\nimport cosecha from '../images/cosecha.svg'\nconst useStyles = makeStyles(theme => ({\n    paper:{\n        backgroundColor:theme.palette.primary.main,\n        padding:theme.spacing(1),\n        flexGrow:'1',\n        marginTop:theme.spacing(2),\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        maxWidth:'220px'\n    },\n    listText:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    itemList:{\n        display:'flex',\n        justifyContent:'space-around',\n        width:'100%'\n    },\n    avatar:{\n        padding:theme.spacing(1),\n        width:theme.spacing(7),\n        height:theme.spacing(7)\n    }\n}))\n\nexport const DetallePlanta=(props)=>{\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    const classes = useStyles()\n            \n    return(\n        <div className={classes.itemList}>\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={adn} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Genetica' secondary={props.genetica}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={maceta} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Volumen Maceta' secondary={`${props.volumenMaceta} Lt`}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={semilla} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Fecha De Germinacion' secondary={props.nacimiento?props.nacimiento:'-'}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={vegetativo} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Fecha De Vegetativo' secondary={props.inicioVegetativo?props.inicioVegetativo:'-'}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={floracion} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Fecha De Floracion' secondary={props.inicioFloracion?props.inicioFloracion:'-'}/>\n                </Paper>\n            </Grow>\n            {props.plantaDelHistorial && props.fechaDeCorte &&\n                <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={cosecha} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Fecha De Corte' secondary={props.fechaDeCorte}/>\n                    </Paper>\n                </Grow>\n            }\n            {props.plantaDelHistorial &&\n                <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={balanza} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Cantidad Cosechada' secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\n                    </Paper>\n                </Grow>\n            }\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {Button,makeStyles,Avatar,SvgIcon} from '@material-ui/core'\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\nimport {riegos} from '../images/riegos.svg'\nimport {transplante} from '../images/transplante.svg'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    link:{\n        textDecoration:'none',\n        outline:'none',\n        margin:theme.spacing(1)\n    },\n    button:{\n        backgroundColor:theme.palette.primary.main\n    },\n    avatar:{\n        width:theme.spacing(5),\n        height:theme.spacing(5)\n    }\n}))\n\nexport const DetalleAcciones =(props)=>{\n    const classes= useStyles()\n    return(\n            <div className={classes.root}>\n                <Link\n                className={classes.link} \n                to={{ \n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\n                    props:{\n                        ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        endIcon={\n                            <Avatar src={riegos} className={classes.avatar}/>\n                        }\n                    >\n                        Riegos\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}\n                to={{ \n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\n                    props:{\n                        ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                    >\n                        Podas\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}                 \n                to={{ \n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\n                props:{\n                    ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        endIcon={\n                            <Avatar src={riegos} className={classes.avatar}/>\n                        }\n                    >\n                        Fumigaciones\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}                 \n                to={{ \n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Transplantes':'/Planta/Transplantes',\n                props:{\n                    ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        endIcon={\n                            <Avatar src={transplante} className={classes.avatar}/>\n                        }>\n                        Transplantes\n                    </Button>\n                </Link>\n            </div>\n    )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport {Layout} from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\nimport Configuracion from './Pages/Configuracion';\nimport Historial from './Pages/Historial';\nimport {Planta} from './Pages/Planta'\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\nimport {PlantaPodas} from './Pages/PlantaPodas'\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\nimport {NotFound} from './Pages/NotFound'\nimport Transplante from './Pages/Transplante'\nimport NuevaPlanta from './Pages/NuevaPlanta'\nimport NuevoAditivo from './Pages/NuevoAditivo'\nimport {PlantaTransplantes} from './Pages/PlantaTransplantes'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true,\n    theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'light'\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n    const theme = localStorage.getItem('theme')\n    console.log(theme)\n    if(!theme){\n        localStorage.setItem('theme','light')\n    }\n  }\n  \nsetTheme=theme=>{\n  console.log(theme)\n  this.setState({theme:theme})\n}\n  render(){\n    const themeProvider = createMuiTheme({\n      palette: {\n          white:'#fff',\n          primary: {\n          light: '#48a999',\n          main: '#00796b',\n          dark: '#004c40',\n          contrastText: '#fff',\n          },\n          secondary: {\n          light: '#4f5b62',\n          main: '#263238',\n          dark: '#000a12',\n          contrastText: '#000',\n          },\n          danger:'#c62828',\n          type:this.state.theme\n      },\n  });\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <ThemeProvider theme={themeProvider}>\n              <PantallaDeCarga/>\n          </ThemeProvider>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <ThemeProvider theme={themeProvider}>\n              <Provider store={this.state.store}>\n                <HashRouter>\n                  <Switch>\n                    <Route exact path='/' component={Armario}/>\n                    <Route exact path='/Riego' component={Riego}/>\n                    <Route exact path='/Poda' component={Poda}/>\n                    <Route exact path='/Transplante' component={Transplante}/>\n                    <Route exact path='/Insecticida' component={Insecticida}/>\n                    <Route exact path='/Aplicables' component={Aplicables}/>\n                    <Route exact path='/Configuracion' render={(props) => <Configuracion {...props} setTheme={this.setTheme} />}/>\n                    <Route exact path='/Historial' component={Historial}/>\n                    <Route exact path='/Planta' component={Planta}/>\n                    <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\n                    <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\n                    <Route exact path='/Historial/Planta' component={Planta}/>\n                    <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\n                    <Route exact path='/Planta/Podas' component={PlantaPodas}/>\n                    <Route exact path='/Planta/Transplantes' component={PlantaTransplantes}/>\n                    <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                    <Route exact path='/Historial/Planta/Riegos' component={PlantaRiegos}/>\n                    <Route exact path='/Historial/Planta/Podas' component={PlantaPodas}/>\n                    <Route exact path='/Historial/Planta/Transplantes' component={PlantaTransplantes}/>\n                    <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                    <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                  </Switch>\n                </HashRouter>\n              </Provider>\n            </ThemeProvider>\n        )\n      }\n      else{\n        return (\n          <ThemeProvider theme={themeProvider}>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={SignInPage}/>\n                <Route exact path='/Login' component={LogInPage}/>\n                <Route  component={NotFound}/>\n              </Switch>\n            </HashRouter>\n          </ThemeProvider>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","import React , {useState} from 'react'\nimport {makeStyles,IconButton,Typography} from '@material-ui/core'\nimport {DeleteOutline,EditOutlined} from '@material-ui/icons'\n\nconst useStyles= makeStyles(theme=>({\n    editButton:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText,\n    },\n    deleteButton:{\n        color:theme.palette.error.main\n    },\n    editText:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText,\n    },\n    deleteText:{\n        color:theme.palette.error.main\n    },\n    cosecharButton:{\n        color:theme.palette.success.main\n    },\n    cosecharText:{\n        color:theme.palette.success.main\n    },\n}))\n\nexport const BotoneraConfiguracionPlanta =({inicioFloracion,cosecharPlanta,eliminarPlanta,}) =>{\n    const classes = useStyles()\n    return(\n        <div className=\"row my-2 justify-content-around\">\n            {inicioFloracion &&\n                <div className='d-flex flex-column'>\n                    <IconButton\n                        variant=\"contained\"\n                        color='secondary'\n                        onClick={cosecharPlanta}\n                        className={classes.cosecharButton}\n                        >\n                        <DeleteOutline/>\n                    </IconButton>\n                    <Typography variant='caption' className={classes.cosecharText}>\n                        Cosechar\n                    </Typography>\n                </div>\n            }\n            <div className='d-flex flex-column'>\n                <IconButton\n                    variant=\"contained\"\n                    className={classes.editButton}\n                    >\n                    <EditOutlined/>\n                </IconButton>\n                <Typography variant='caption'className={classes.editText}>\n                    Editar\n                </Typography>\n            </div> \n            <div className='d-flex flex-column'>\n                <IconButton\n                    variant=\"contained\"\n                    className={classes.deleteButton}\n                    onClick={e=>{\n                        eliminarPlanta()\n                    }}\n                >\n                    <DeleteOutline/>\n                </IconButton>\n                <Typography variant='caption' className={classes.deleteText}>\n                Eliminar\n                </Typography>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {makeStyles,Typography,ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails,TextField,InputAdornment,Button} from '@material-ui/core'\nimport {CheckCircle,ExpandMore} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    expansionPanel:{\n        width:'50%'\n    },\n    ExpansionPanelDetails:{\n        flexDirection:'column',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n}))\nexport const InputCantidadCosechada = ({inputCantidad,setInputCantidad,guardarCantidadCosechada}) =>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                    <TextField id=\"outlined-basic\" \n                        value={inputCantidad}\n                        type='number'\n                        label=\"Cantidad Cosechada\"\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                gr\n                            </InputAdornment>\n                            ),\n                        }}\n                        variant=\"outlined\"\n                        onChange={e=>{\n                            setInputCantidad(e.target.value)\n                        }}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={e=>{\n                            guardarCantidadCosechada()\n                        }}\n                        endIcon={\n                            <CheckCircle/>\n                        }\n                        >\n                        Guardar \n                    </Button>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    )\n}\n","import React,{useState}from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nimport {DeleteOutline, EditOutlined, CheckCircle,ExpandMore} from '@material-ui/icons'\nimport {IconButton,Button,ButtonGroup,makeStyles,TextField,Paper,ExpansionPanel,ExpansionPanelSummary,Typography,ExpansionPanelDetails,GridList,GridListTile,CardMedia,InputAdornment} from '@material-ui/core'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\n\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space.around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    buttonTextDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paperPrimary:{\n        width:'100%',\n        height:'100%',\n        display:'flex',\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        width:'100%',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n        '& .MuiGridListTile-root':{\n            width:'30% !important'\n        }\n    },\n    media: {\n        height:'100%'\n    },\n    rightPanel:{\n        display:'flex',\n        flexDirection:'column',\n        height:'100%',\n        justifyContent:'space-between',\n        padding:theme.spacing(1),\n    }\n}))\n\nexport const Planta =(props)=>{\n    const classes = useStyles()\n    let [collapseInputCantidad,setCollapseInputCantidad] = useState(false)\n    let [inputCantidad, setInputCantidad]= useState(undefined)\n    const cosecharPlanta=async ()=>{\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\n            nombre:props.location.props.nombre?props.location.props.nombre:null,\n            nacimiento:props.location.props.nacimiento?props.location.props.nacimiento:null,\n            genetica:props.location.props.genetica?props.location.props.genetica:null,\n            inicioVegetativo:props.location.props.inicioVegetativo?props.location.props.inicioVegetativo:null,\n            inicioFloracion:props.location.props.inicioFloracion?props.location.props.inicioFloracion:null,\n            podas:props.location.props.podas?props.location.props.podas:null,\n            riegos:props.location.props.riegos?props.location.props.riegos:null,\n            fumigaciones:props.location.props.fumigaciones?props.location.props.fumigaciones:null,\n            fechaDeCorte:moment().format('LLL')\n        })\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\n        props.location.props.history.goBack()\n    }\n    const guardarCantidadCosechada=async ()=>{\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\n            cantidadDeGramos:inputCantidad+' gr'\n        })\n        props.location.props.history.goBack()\n    }\n    const eliminarPlanta=async ()=>{\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\n        props.location.props.history.replace('/')\n    }\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid h-100\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <GridList className={classes.gridList} cols={2.5}>\n                                    {tileData.map(tile => (\n                                    <GridListTile key={tile.img} className={classes.tile}>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={fotoPlanta}\n                                        />\n                                    </GridListTile>\n                                    ))}\n                                </GridList>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <DetallePlanta \n                                genetica={props.location.props.genetica}\n                                cantidadDeGramos={props.location.props.cantidadDeGramos}\n                                plantaDelHistorial={props.location.props.plantaDelHistorial}\n                                edad={props.location.props.edad}\n                                nacimiento={props.location.props.nacimiento}\n                                inicioVegetativo={props.location.props.inicioVegetativo}\n                                inicioFloracion={props.location.props.inicioFloracion}\n                                fechaDeCorte={props.location.props.fechaDeCorte}\n                                volumenMaceta={props.location.props.volumenMaceta}\n                            />\n                            <DetalleAcciones\n                                {...props.location.props}\n                            />\n                            {props.location.props.plantaDelHistorial && !props.location.props.cantidadDeGramos &&\n                                <InputCantidadCosechada inputCantidad={inputCantidad} setInputCantidad={setInputCantidad} guardarCantidadCosechada={guardarCantidadCosechada} />\n                            }\n                            <div className=\"col-6 d-flex flex-column justify-content-around\">\n                                {!props.location.props.plantaDelHistorial &&\n                                    <BotoneraConfiguracionPlanta\n                                        inicioFloracion={props.location.props.inicioFloracion}\n                                        cosecharPlanta={cosecharPlanta}\n                                        eliminarPlanta={eliminarPlanta}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      color:theme.palette.primary.contrastText\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor: theme.palette.secondary.light,\n        color:theme.palette.primary.contrastText\n    },\n    paperDark: {\n        backgroundColor:theme.palette.primary.main,\n        borderRadius:'0'\n    },\n    edit:{\n        color:theme.palette.primary.contrastText,\n    },\n    delete:{\n        color:theme.palette.error.main\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n    },\n    buttonText:{\n        color:theme.palette.secondary.contrastText,\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    }\n  }));\nexport const AccionDetallada=(props)=>{\n    const classes= useStyles()\n    let [show,setShow] = useState(false)\n    \n    const eliminarAccion= async()=>{\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\n    }\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setShow(true)\n        }, 100);\n    })\n    return(\n        <div className=\"row\">\n            <div className=\"col-10 offset-1\">\n                <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\n                        <Paper elevation={4} className={classes.paperDark}>\n                            <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                            >\n                                <Typography className={classes.heading}>{props.accion.fecha}</Typography>\n                            </ExpansionPanelSummary>\n                        </Paper>\n                        <Paper elevation={4} className={classes.paperMain}>\n                            <ExpansionPanelDetails>\n                                <div className=\"container\">\n                                    {props.accion.agua &&\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.agua} L. De Agua \n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                    {props.accion.tipoDeRiego &&\n                                        <div className=\"row my-2\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                    {props.accion.tipoDePoda &&\n                                        <div className=\"col text-left\">\n                                            <Typography variant='h5'>\n                                                Poda {props.accion.tipoDePoda}\n                                            </Typography>\n                                        </div>\n                                    }\n                                    {props.accion.volumenMaceta &&\n                                        <div className=\"col text-left\">\n                                            <Typography variant='h5'>\n                                                Nuevo Volumen {props.accion.volumenMaceta} Lt\n                                            </Typography>\n                                        </div>\n                                    }\n                                    <Divider/>\n                                    {props.tipoDeAccion!=='podas' && props.tipoDeAccion!=='transplantes' && \n                                        <div className=\"row my-2\">\n                                            {props.accion.aditivos?\n                                                <>\n                                                    <div className=\"col-12 text-left\">\n                                                        <Typography variant='h5'>\n                                                            Aditivos Usados\n                                                        </Typography>\n                                                    </div>\n                                                    <List>\n                                                        {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\n                                                            <>\n                                                                <Divider/>\n                                                                <ListItem>\n                                                                    <ListItemText\n                                                                        primary={aditivo}\n                                                                        secondary={props.accion.aditivos[aditivo]+' ml'} \n                                                                    />\n                                                                </ListItem>\n                                                            </>\n                                                        ))}\n                                                    </List>\n                                                </>\n                                                :\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography>\n                                                        No se utilizaron Aditivos\n                                                    </Typography>\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    <Divider/>\n                                    {!props.plantaDelHistorial &&\n                                        <div className=\"row my-2 justify-content-around\">\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                >   \n                                                        <EditOutlined className={classes.edit}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.edit} gutterBottom>\n                                                    Editar\n                                                </Typography>\n                                            </div>\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                    onClick={e=>{eliminarAccion()}}\n                                                >\n                                                        <DeleteOutline className={classes.delete}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.delete} gutterBottom>\n                                                    Eliminar\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </ExpansionPanelDetails>\n                        </Paper>\n                    </ExpansionPanel>\n                </Grow>\n            </div>\n        </div>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {makeStyles,Paper} from '@material-ui/core';\nimport {Layout} from './Layout'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaRiegos =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.location.props.riegos?\n                                Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\n                                    <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\n                                        </div>\n                                    </div>\n                                    {!props.location.props.plantaDelHistorial &&\n                                        <div className=\"row justify-content-center mt-4\">\n                                            <div className=\"col-auto\">\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                    props.history.push('/Riego')\n                                                }}>Riegala Ahora!</button>\n                                            </div>\n                                        </div>\n                                    }\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {useState} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaPodas =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.location.props.podas?\n                            Object.keys(props.location.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user} index={i}  plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} handleChange={handleChange} accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                {!props.location.props.plantaDelHistorial &&\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                        </div>\n                                    </div>\n                                }\n                            </>\n                        }\n                    </div>        \n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {useState} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaFumigaciones =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.location.props.fumigaciones?\n                                Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\n                                    <AccionDetallada handleChange={handleChange} index={i} plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.id} id={id} key={id}/>\n                                    ))\n                                    :\n                                    <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                        </div>\n                                    </div>\n                                    {!props.location.props.plantaDelHistorial &&\n                                        <div className=\"row justify-content-center mt-4\">\n                                            <div className=\"col-auto\">\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                    props.history.push('/Insecticida')\n                                                }}>Fumigala Ahora!</button>\n                                            </div>\n                                        </div>\n                                    }\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nexport const NotFound = () =>{\n    return(\n        <div className=\"container\">\n            <h1>la pagina no se encuentra disponible</h1>\n            <Link to='/'>\n                Vuelve al Home\n            </Link>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles,InputAdornment} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}))\n\nexport const ElegirNuevaMaceta=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.nuevoVolumen}\n                            className={classes.radio}\n                            type='number'\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    Lt\n                                </InputAdornment>\n                                ),\n                            }}\n                            label=\"Nueva Maceta\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport {Layout} from './Layout'\nimport {connect } from 'react-redux'\nimport {StepperAccion} from '../components/StepperAccion'\nimport {ElegirPlantaAccion} from '../components/ElegirPlantaAccion'\nimport {ElegirNuevaMaceta} from '../components/ElegirNuevaMaceta'\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {database} from 'firebase'\nimport moment from 'moment'\n class Transplante extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n        nuevaMaceta:undefined,\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.transplantar()\n        this.props.history.push('/')\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    setNuevaMaceta=(nuevoVolumen)=>{\n        this.setState({nuevaMaceta:nuevoVolumen})\n    }\n    transplantar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarTransplanteDB(planta.id,this.state.nuevaMaceta)\n            }\n            return null\n        })\n    }\n    guardarTransplanteDB= async (idPlanta,nuevoVolumen)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('transplantes').push({\n            volumenMaceta:nuevoVolumen,\n            fecha:moment().format('LLL'),\n        })\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).update({\n            volumenMaceta:nuevoVolumen,\n        })\n    }\n    render(){\n    let selectedPlants=[]\n    if(this.state.plantas){\n        this.state.plantas.map(planta=>(\n            planta.selected?\n                selectedPlants.push(planta.nombre)\n                :\n                null\n        ))\n    }\n        return(\n        <Layout history={this.props.history} page='Transplante' user={this.props.user}>\n            <div className=\"container-fluid overflow-auto h-100\">\n                <div className=\"row h-100\">\n                    <div className=\"col-12 px-0\">\n                        <StepperAccion \n                            step1='Plantas'\n                            step2='Nuevo Volumen de tierra'\n                            selectedPlants={selectedPlants}\n                            confirmarAccion={this.confirmarAccion}\n                            nuevaMaceta={this.state.nuevaMaceta}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} nuevaMaceta={this.state.nuevaMaceta}/>}\n                            tipoDeAccion='Transplante'\n                            steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {\n                                    title:'Nuevo Volumen de tierra',\n                                    content:(\n                                        <ElegirNuevaMaceta\n                                            handleChange={this.setNuevaMaceta}\n                                            nuevoVolumen={this.state.nuevaMaceta}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                            ]}\n                        />\n                    </div>\n                </div>\n            </div>\n        </Layout>\n        )\n    }\n }\n const mapStateToProps=state=>({\n     user:state.user.uid,\n     plantas:state.data.plantas,\n\n })\n export default connect(mapStateToProps,null)(Transplante)","import React,{useState} from 'react'\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100vh',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        alignItems:'center',\n    },\n    form:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(2),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    paper:{\n        backgroundColor:theme.palette.primary.main\n    },\n    input:{\n        marginTop:theme.spacing(1),\n        marginBottom:theme.spacing(1),\n    }\n}))\n\n\nexport const FormNuevaPlanta =({guardarNuevaPlantaDB,periodoArmario})=>{\n    const getDate=()=>{\n        const date = new Date\n        const year = date.getFullYear()\n        let month = date.getMonth()+1\n        month = month<10?month=`0${month}`:month\n        const days = date.getDate()\n        return`${days}/${month}/${year}`\n    }\n    const classes = useStyles()\n    let [nombre,setNombre]=useState(undefined)\n    let [genetica,setGenetica]=useState(undefined)\n    let [etapa,setEtapa]=useState(undefined)\n    let [selectedDate,setSelectedDate]=useState(undefined)\n    let [inicioGerminacion,setInicioGerminacion]= useState(getDate())\n    let [inicioVegetativo,setInicioVegetativo]= useState(undefined)\n    let [inicioFloracion,setInicioFloracion]= useState(undefined)\n    let [volumenMaceta,setVolumenMaceta]= useState(undefined)\n\n    const handleDateChange = date => {\n        setSelectedDate(date);\n    };\n    \n    const renderInputsEtapa=etapa=>{\n        const date = getDate()\n        switch (etapa) {\n            case 'Vegetativo':\n                if(periodoArmario===etapa ){\n                    return(\n                        <>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} disabled={date===inicioGerminacion&&true} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                        </>\n                    )\n                }\n                else{\n                    return(\n                        <>  \n                            <Alert variant='outlined' severity=\"warning\">\n                                <AlertTitle>Si ingresa esta planta al armario empezara el periodo de floracion</AlertTitle>\n                            </Alert>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} disabled={!inicioGerminacion&&true} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                        </>\n                    )\n                }\n                break;\n            case 'Floracion':\n                if(periodoArmario===etapa){\n                    return(\n                        <>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                            <TextField label=\"Incio Floracion\" value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\n                        </>\n                    )\n                }\n                else{\n                    return(\n                        <>\n                            <Alert variant='outlined' severity=\"error\">\n                                <AlertTitle>No es recomendable introducir una planta en periodo de floracion en un armario con periodo Vegetativo</AlertTitle>\n                            </Alert>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                            <TextField label=\"Incio Floracion\" value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\n                        </>\n                    )\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className={classes.root}>\n            <Paper elevation={6} className={classes.paper}>\n                <form className={classes.form}>\n                    <Typography className={classes.title}>\n                        Ingresa los siguientes datos\n                    </Typography>\n                    <TextField label=\"Nombre\" className={classes.input} value={nombre} onChange={e=>{setNombre(e.target.value)}}/>\n                    <TextField label=\"Genetica\"  className={classes.input} value={genetica} onChange={e=>{setGenetica(e.target.value)}}/>\n                    <TextField \n                        label=\"Volumen De Maceta\" \n                        className={classes.input}\n                        value={volumenMaceta} \n                        type='number'  \n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                Lt\n                            </InputAdornment>\n                            ),\n                        }}\n                        onChange={e=>{setVolumenMaceta(e.target.value)}}/>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\n                        <Select\n                            labelId=\"etapa-select-label\"\n                            id=\"etapa-select\"\n                            value={etapa}\n                            onChange={e=>{\n                                const etapa = e.target.value\n                                if(etapa==='Vegetativo'){\n                                    setInicioGerminacion(getDate())\n                                    setEtapa(e.target.value)\n                                }\n                                else{\n                                    setInicioGerminacion(undefined)\n                                    setEtapa(e.target.value)}\n                                }\n                            }\n                        >\n                            <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\n                            <MenuItem value={'Floracion'}>Floracion</MenuItem>\n                        </Select>\n                    </FormControl>\n                </form>\n            </Paper>\n            {etapa &&\n                <Paper elevation={6}>\n                    <form className={classes.form}>\n                        {renderInputsEtapa(etapa)}\n                    </form>\n                </Paper>\n            }\n\n            <Button\n                variant='contained'\n                color='primary'\n                disabled={!nombre&&true}\n                startIcon={<CheckCircleOutlineOutlined/>}\n                onClick={e=>{\n                    guardarNuevaPlantaDB(nombre,genetica,inicioGerminacion,inicioVegetativo,inicioFloracion,volumenMaceta)\n                }}\n            >\n                Agregar Planta!\n            </Button>\n        </div>\n    )\n}","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport {FormNuevaPlanta} from '../components/FormNuevaPlanta'\nimport addFile from '../images/addFile.svg'\nimport {makeStyles, Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\n\nconst  NuevaPlanta=(props)=>{\n    const classes = useStyles()\n    const guardarNuevaPlantaDB= async (nombre,genetica,inicioGerminacion,inicioVegetativo,inicioFloracion,volumenMaceta)=>{\n        await database().ref().child(props.user).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica?genetica:'Desconocida',\n            volumenMaceta:volumenMaceta?volumenMaceta:null,\n            nacimiento:inicioGerminacion?inicioGerminacion:null,\n            inicioVegetativo:inicioVegetativo?inicioVegetativo:null,\n            inicioFloracion:inicioFloracion?inicioFloracion:null\n        })\n        props.history.replace('/')\n    }\n    return(\n        <Layout page='Nueva Planta' user={props.user} history={props.history}>\n            <Paper elevation={3} className={classes.root}>\n                <FormNuevaPlanta guardarNuevaPlantaDB={guardarNuevaPlantaDB} periodoArmario={props.periodo}/>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user.uid,\n    periodo:state.data.periodo\n})\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport addFile from '../images/addFile.svg'\nimport { FormNuevoAditivo } from '../alert-components/FormNuevoAditivo'\nimport {Redirect} from 'react-router-dom'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst NuevoAditivo=(props)=>{\n    const classes = useStyles()\n    if(!props.location.props){\n        return(\n            <Redirect to='Aplicables'/>\n        )\n    }\n    else{\n        return(\n            <Layout page='Nuevo Aditivo' user={props.user} history={props.history}>\n                <Paper elevation={3} className={classes.root}>\n                    <FormNuevoAditivo  \n                        history={props.history}\n                        aditivos={props.location.props.tipoDeAditivo==='Fertilizantes'?props.fertilizantes:props.insecticidas}\n                        tipoDeAditivo={props.location.props.tipoDeAditivo}\n                        user={props.user}\n                    />\n                </Paper>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps=state=>({\n    user:state.user.uid,\n    fertilizantes:state.data.fertilizantes,\n    insecticidas:state.data.insecticidas\n})\nexport default connect(mapStateToProps,null)(NuevoAditivo)","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaTransplantes =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Transplantes'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.location.props.transplantes?\n                                Object.keys(props.location.props.transplantes).reverse().map((id,i)=>(\n                                    <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.transplantes[id]} tipoDeAccion='transplantes' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\n                                        </div>\n                                    </div>\n                                    {!props.location.props.plantaDelHistorial &&\n                                        <div className=\"row justify-content-center mt-4\">\n                                            <div className=\"col-auto\">\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                    props.history.push('/Transplante')\n                                                }}>Transplatala Ahora!</button>\n                                            </div>\n                                        </div>\n                                    }\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}