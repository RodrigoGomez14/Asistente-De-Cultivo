{"version":3,"sources":["images/sea of green.jpg","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","Pages/Planta.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Component","BreadcrumbPlanta","item","return","nombre","AccionDetallada","eliminarAccion","a","firebase","ref","child","user","idPlanta","tipoDeAccion","id","remove","state","show","componentDidMount","setTimeout","setState","Grow","in","timeout","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertEliminarPlanta","tpe","eliminarPlanta","type","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","edad","undefined","alertEliminarPlanta","confirmAlert","customUI","alertCambiarCiclo","database","moment","diff","nacimiento","Paper","elevation","to","pathname","src","fotoPlanta","alt","AlertNuevaPlanta","faCheckCircle","document","getElementById","value","genetica","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","push","format","alertNuevaPlanta","plantas","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","history","Button","variant","color","faPlusCircle","connect","data","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","signOut","auth","faCogs","closeNavbar","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Layout","page","children","planta","classes","useState","menuOpened","setMenuOpened","redirect","setRedirect","AppBar","position","Toolbar","IconButton","edge","location","replace","goBack","aria-label","ArrowBackRounded","AccountCircle","Typography","Menu","Drawer","anchor","open","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","primary","Divider","faTint","faCut","faBug","Armario","selectedTab","AlertCambiarInicio","update","horas","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","selectEmpty","marginTop","alert","alignItems","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","FormControlLabel","control","Checkbox","selected","onChange","label","Alert","severity","ElegirTipoDeRiego","cambiarTipoDeRiego","RadioGroup","target","Radio","labelPlacement","BotoneraConfirmacionAccion","handleBack","confirmarAccion","faCheck","size","td","th","FormularioAccion","Container","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","marginBottom","ResumenAccion","Grid","xs","container","justify","CardContent","gutterBottom","parseFloat","toFixed","height","flexDirection","justifyContent","actionsContainer","resetContainer","padding","StepperAccion","steps","resumenAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","console","log","md","lg","defaultActiveKey","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","TabPanel","other","component","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","overflow","image","backgroundColor","grey","objectFit","paper","avatar","main","form","submit","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","foto","Avatar","noValidate","required","fullWidth","helperText","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","then","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","DetallePlanta","tileData","flexWrap","background","gridList","light","titleBar","GridList","cols","tile","GridListTile","Table","striped","hover","store","DetalleAcciones","Planta","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.283ffe0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nimport {Grow} from '@material-ui/core'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child(this.props.user).child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n    }\n    state={\n        show:false\n    }\n    componentDidMount=()=>{\n        setTimeout(() => {\n            this.setState({show:true})\n        }, 100);\n    }\n    render(){\n        return(\n            <Grow in={this.state.show} \n            {...(this.state.show ? { timeout: 1500 } : {})}>\n                <Card>\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {this.props.tipoDeAccion==='podas'?\n                            <div className='container-fluid'>\n                                <div className=\"row\">\n                                    <div className=\"col-auto\">\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                    </div>\n                                    <div className=\"col-auto ml-auto\">\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {this.props.tipoDePoda?\n                                        <div className='col'>\n                                            <hr/>\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                                :\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                        </div>\n                                        <div className=\"col-auto ml-auto\">\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <h5>\n                                                <div className=\"badge badge-pill badge-light\">\n                                                    {this.props.accion.tipoDeRiego}\n                                                </div>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                    {this.props.accion.aditivos?\n                                        <div className=\"row\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <FontAwesomeIcon icon={faSortDown}/>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                    {this.props.accion.aditivos?\n                        <Accordion.Collapse eventKey={this.props.index}>\n                            <Card.Body>\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                                                <div className=\"col-auto\" key={aditivo+i}>\n                                                    <span className='badge badge-pill badge-dark'>\n                                                        <div className=\"col-auto\">\n                                                            {aditivo}\n                                                        </div>\n                                                        <div className=\"col-auto\">\n                                                            {this.props.accion.aditivos[aditivo]} ml\n                                                        </div>\n                                                    </span>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                        :\n                        null\n                    }\n                </Card>\n            </Grow>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport { Accordion } from 'react-bootstrap'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.podas?\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid submodalIn\">\n                <Accordion defaultActiveKey='0'>\n                    {this.props.riegos?\n                        Object.keys(this.props.riegos).reverse().map((id,i)=>(\n                            <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                        ))\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                        this.props.onClose()\n                                        this.props.history.push('/Riego')\n                                    }}>Riegala Ahora!</button>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </Accordion>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nimport {Grow} from '@material-ui/core' \nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        user={this.props.user}\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        user={this.props.user}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await database().ref().child(this.props.user).child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-auto\">\n                <Grow in={true}\n                    {...(true ? { timeout: 1500 } : {})}>\n                    <Paper elevation={6}>\n                        <Link className='text-white' to={{\n                            pathname:'/Planta',\n                            props:{\n                                ...this.props,\n                            }\n                        }}>\n                            <Card className=\"card bg-light\" >\n                                <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                                <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col text-left\">\n                                                <h4 className=\"card-title\">{this.props.nombre}</h4>\n                                            </div>\n                                        </div>\n                                        <div className=\"row\">\n                                            <div className=\"col text-left\">\n                                                <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Overlay>\n                            </Card>\n                        </Link>\n                    </Paper>\n                </Grow>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nimport {Button} from '@material-ui/core'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child(this.props.user).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta\n                                user={this.props.user}\n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <div className=\"col-12 text-center\">\n                            <h2 className='text-white'>Aun No hay plantas</h2>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.alertNuevaPlanta}>\n                                Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\n                            </Button>\n                        </div>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            \n            <h1>{this.state.fecha}</h1>\n        )\n    }\n}\nexport default FechaYHora","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\n\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined,\n        descanso:false\n    }\n    actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\n            //console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            //console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = this.actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            this.setState({\n                descanso:true\n            })\n        }\n        else{\n            this.setState({\n                descanso:false\n            })\n        }\n        this.setState({\n            cicloLuminico: cicloLuminico,\n            transcurrido: transcurrido,\n            faltante:this.calcularFaltante()\n        })\n        return [transcurrido,cicloLuminico]\n    }\n    actualizarBarraDeProgreso=()=>{\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    componentDidMount(){\n        this.actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            this.actualizarBarraDeProgreso()\n        }, 1000);\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=(lamparaEncendida)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <FechaYHora/>\n                    </div>\n                </div>\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.descanso?\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-dark'>\n                                Descansando...\n                            </span>\n                        </div>\n                        :\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-success'>\n                                Creciendo...\n                            </span>\n                        </div>\n                    }\n                </div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-10 offset-1\">\n                        <div className=\"progress\">\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.horaDeInicio,\n        horaDeFinal:state.data.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    cursor:pointer;\n    font-size:2.5rem\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport {auth} from 'firebase'\nimport {Redirect} from 'react-router-dom'\nclass Navbar extends Component{\n    signOut=async ()=>{\n        await auth().signOut()\n        return <Redirect to='/'/>\n    }\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\n                                Cerrar Sesion\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {useState} from 'react'\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\nimport {auth} from 'firebase'\nimport {AppBar,Toolbar,IconButton,Typography,Menu} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }));\nexport const Layout=({page,children,history,planta})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n    let [redirect,setRedirect]=useState(false)\n    if(redirect){\n        return(\n            <Redirect to={{\n                pathname:'/Planta',\n                props:{...planta}\n            }}/>\n        )\n    }\n    return(\n        <div className=\"App d-flex flex-column justify-content-start\">\n                <AppBar position=\"static\">\n                    <Toolbar>\n                    {page!=='Armario'?\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                            if(!planta){\n                                if(history.location.pathname==='/Planta'){\n                                    history.replace('/')\n                                }\n                                else{\n                                    history.goBack()\n                                }\n                            }\n                            else{\n                                setRedirect(true)\n                            }\n                        }} color=\"inherit\" aria-label=\"menu\">\n                            <ArrowBackRounded />\n                        </IconButton>\n                        :\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                            \n                        }} color=\"inherit\" aria-label=\"menu\">\n                            <AccountCircle />\n                        </IconButton>\n                    }\n                    <Typography variant=\"h6\" className={classes.title} >\n                        {page}\n                    </Typography>\n                    <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                        setMenuOpened(true)\n                    }} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer anchor=\"right\" open={menuOpened} onClose={e=>{setMenuOpened(false)}}>\n                    <div className=\"container d-flex flex-column h-100 justify-content-between\">\n                        <div>\n                            <List>\n                                <Link to='/' className='outline-none text-dark'>\n                                    <ListItem button key={'Armario'} >\n                                        <ListItemIcon><HomeOutlined/></ListItemIcon>\n                                        <ListItemText primary={'Armario'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='/Riego' className='outline-none text-dark'>\n                                    <ListItem button key={'Regar'} >\n                                        <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                                        <ListItemText primary={'Regar'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='/Poda' className='outline-none text-dark'>\n                                    <ListItem button key={'Podar'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                                        <ListItemText primary={'Podar'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='/Insecticida' className='outline-none text-dark'>\n                                    <ListItem button key={'Fumigar'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Fumigar'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                        </div>\n                        <div>\n                            <Divider />\n                            <List>\n                                <Link to='/Aplicables' className='outline-none text-dark'>\n                                    <ListItem button key={'Aditivos'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Aditivos'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='/Aditivos' className='outline-none text-dark'>\n                                    <ListItem button key={'Carencias y Excesos'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Carencias y Excesos'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='/Configuracion' className='outline-none text-dark'>\n                                    <ListItem button key={'Configuracion'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                                        <ListItemText primary={'Configuracion'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                                        await auth().signOut()\n                                    }}>\n                                    <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                                    <ListItemText primary={'Cerrar Sesion'} />\n                                </ListItem>\n                            </List>\n                        </div>\n                    </div>\n                </Drawer>\n            {children}\n        </div>\n    )\n}\n/*\n                            <BottomNavigation value={this.state.selectedTab} onChange={(e,value)=>{\n                                this.setState({selectedTab:value})\n                                if(value==='recents'){\n                                    this.props.history.push('/')\n                                }\n                                else if(value==='favorites'){\n                                    this.props.history.push('/Riego')\n                                }\n                                else if(value==='nearby'){\n                                    this.props.history.push('/Aplicables')\n                                }\n                            }}>\n                                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n                                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n                                <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n                                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n                            </BottomNavigation>\n\n*/","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Layout} from './Layout'\nimport {Paper }from '@material-ui/core'\n\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false,\n        selectedTab:'recents'\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().child(this.props.user).update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    render(){\n        return(\n            <Layout history={this.props.history} page=\"Armario\">\n                <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\n                    <div className='row'>\n                        <div className='col'>\n                            <BarraDeLuz/>            \n                        </div>\n                    </div>\n                    <CarouselPlantas history={this.props.history}/>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.hora,\n        horaDeFinal:state.data.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                control={\n                                    <Checkbox color='default' checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                    />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    return(\n        <Row>\n            <div className=\"cola-auto ml-auto mr-auto\">\n                <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                    <FormControlLabel\n                        value=\"top\"\n                        control={<Radio\n                            value=\"Tierra\" \n                            name=\"Tierra\"\n                            color='default'\n                        />}\n                        label='Tierra'\n                        labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                        value=\"top\"\n                        control={<Radio\n                            value=\"Foliar\"\n                            name=\"Foliar\"\n                            color='default'\n                        />}\n                        label=\"Foliar\"\n                        labelPlacement=\"top\"\n                    />\n                </RadioGroup>\n            </div>\n        </Row>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button} from '@material-ui/core'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <Button\n                        onClick={this.props.handleBack}\n                        className='mr-2'\n                    >\n                        Atras\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }\n                    >\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                        Guardar {this.props.accion}\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    }\n  }));\n  /*\n  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >    \n                    <Typography>\n                        Cantidad de Agua y Aditivos\n                    </Typography>\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            {props.cantidadDeAgua?\n                                <Typography>\n                                    {props.cantidadDeAgua} L\n                                </Typography>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className=\"col-auto\">\n                            {props.aditivosUsados?\n                                <Typography className=\"col-auto\">\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\n                                        const cantidad = props.aditivosUsados[aditivo]\n                                        return(\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\n                                            </span>\n                                        )\n                                    })}\n                                </Typography>\n                                :\n                                null}\n                        </div>\n                    </div>\n                </ExpansionPanelSummary>*/\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <p className='text-dark'>Aditivos (ml)</p>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  return (\n    <Grid item xs={12}>\n        <Grid container justify=\"space-around\" className='mb-2' >\n            <Grid item>     \n                <Paper elevation={3}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Plantas Seleccionadas\n                            </Typography>\n                            {plantas.map(planta => (\n                                planta.selected?\n                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                        <strong>{planta.nombre}</strong>\n                                    </Typography>\n                                    :\n                                    null\n                            ))}\n                        </CardContent>\n                    </Card>\n                </Paper>\n            </Grid>\n            {tipoDeRiego?\n                <>  \n                    <Grid item>      \n                        <Paper elevation={3}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                        Tipo De Riego\n                                    </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong>{tipoDeRiego}</strong>\n                                        </Typography>\n                                </CardContent>\n                            </Card>\n                        </Paper>\n                    </Grid>\n                    <Grid item>      \n                        <Paper elevation={3}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                        <strong>{cantidadDeAgua} L de agua</strong>\n                                    </Typography>\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                        Aditivos usados\n                                    </Typography>\n                                    {aditivos?\n                                        Object.keys(aditivos).map(aditivo=>{\n                                            const dosis= aditivos[aditivo]\n                                            return(\n                                                <Typography className={classes.pos} color=\"textSecondary\">\n                                                    <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\n                                                </Typography>\n                                            )\n                                        })\n                                        :\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong>-</strong>\n                                        </Typography>\n                                    }\n                                </CardContent>\n                            </Card>\n                        </Paper>\n                    </Grid>\n                </>\n                :\n                <Grid item>      \n                    <Paper elevation={3}>\n                        <Card className={classes.card} variant=\"outlined\">\n                            <CardContent>\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                    Tipo De Poda\n                                </Typography>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    <strong>{tipoDePoda}</strong>\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n    </Grid>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===0){\n      return selectedPlants.length?false:true\n    }\n    else if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    else if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} elevation={3} orientation=\"vertical\">\n        {steps.map((step, index) => (\n            step?\n                <Step key={step.title}>\n                    <StepLabel>{step.title}</StepLabel>\n                <StepContent>\n                    <Typography>{step.content}</Typography>\n                    <div className={classes.actionsContainer}>\n                        <div>\n                        <Button\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            className={classes.button}\n                        >\n                            Atras\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            className={classes.button}\n                            disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                        >\n                            {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                        </Button>\n                        </div>\n                    </div>\n                    </StepContent>\n                </Step>\n                :\n                null\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={6} className={classes.resetContainer}>\n            {resumenAccion}\n            <BotoneraConfirmacionAccion\n                accion={tipoDeAccion}\n                handleBack={handleBack}\n                confirmarAccion={confirmarAccion}\n            />\n        </Paper>\n      )}\n    </div>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Riego'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                    <StepperAccion \n                        step1='Plantas'\n                        step2='Tipo De Riego'\n                        step3='Cantidad de agua y aditivos'\n                        selectedPlants={selectedPlants}\n                        cantidadDeAgua={this.state.cantidadDeAgua}\n                        tipoDeRiego={this.state.tipoDeRiego}\n                        confirmarAccion={this.confirmarAccion}\n                        resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                        tipoDeAccion='Riego'\n                        steps={[\n                                {\n                                title:'Plantas',\n                                content:(\n                                    <ElegirPlantaAccion\n                                        seleccionarPlanta={this.seleccionarPlanta}\n                                        plantas={this.state.plantas}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Tipo De Riego',\n                                content:(\n                                    <ElegirTipoDeRiego\n                                        tipoDeRiego={this.state.tipoDeRiego}    \n                                        cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Cantidad De Agua y Aditivos',\n                                content:(\n                                    <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            adivito='Fertlizante'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                )},\n                        ]}\n                    />\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                        <StepperAccion \n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            tipoDeRiego={this.state.tipoDeRiego}\n                            confirmarAccion={this.confirmarAccion}\n                            selectedPlants={selectedPlants}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                            tipoDeAccion='Fumigacion'\n                            steps={[\n                                {\n                                title:'Plantas',\n                                content:(\n                                    <ElegirPlantaAccion\n                                        seleccionarPlanta={this.seleccionarPlanta}\n                                        plantas={this.state.plantas}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Tipo De Riego',\n                                content:(\n                                    <ElegirTipoDeRiego\n                                        tipoDeRiego={this.state.tipoDeRiego}\n                                        cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                                {title:'Cantidad De Agua y Aditivos',\n                                content:(\n                                    <FormularioAccion\n                                        eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                        tipoDeRiego={this.state.tipoDeRiego}\n                                        cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                        cantidadDeAgua={this.state.cantidadDeAgua}\n                                        cambiarAditivo={this.cambiarAditivo}\n                                        aditivo='Insecticida'\n                                        aditivos={this.props.aditivos}\n                                        aditivosUsados={this.state.aditivos}\n                                        eliminarAditivo={this.eliminarAditivo}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                                )},\n                            ]}\n                        />\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            setCantidadDeDosis(cantidadDeDosis+=1)\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            {console.log(cantidadDeDosis)}\n            <Container fluid>\n                <Row>\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\n                        <Accordion defaultActiveKey='0'>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Caracteristicas</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\n                                    <div className=\"container\">\n                                        <div className=\"row mt-2\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Nombre\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                                        updateState(e.target.value,'nombre')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Marca\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                                        updateState(e.target.value,'marca')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Descripcion\n                                                    </Form.Label>\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                                        updateState(e.target.value,'descripcion')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Dosificacion</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\n                                        <Form>\n                                            <Container>\n                                                <Row className='flex-nowrap overflow-auto'>\n                                                {dosisList.length?\n                                                    dosisList.map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                    :\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                }\n                                                    <div className=\"col-auto align-self-center\">\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\n                                                        }}/>\n                                                    </div>\n                                                </Row>\n                                            </Container>\n                                        </Form>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n  }));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant='outline-dark my-2' onClick={e=>{\n                                    alertNuevoAditivo()\n                                }}>\n                                Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\n                            </Button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                            {aditivos?\n                                aditivos.map((aditivo,i)=>(\n                                    <Paper elevation={4}>\n                                        <ExpansionPanel expanded={expanded === 'panel'+i} onChange={handleChange('panel'+i)}>\n                                            <ExpansionPanelSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1bh-content\"\n                                            id=\"panel1bh-header\"\n                                            >\n                                                <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                            </ExpansionPanelSummary>\n                                            <ExpansionPanelDetails>\n                                                <div className=\"container\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Descripcion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col text-left\">\n                                                            <small>\n                                                                {aditivo.descripcion}\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Dosificacion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\n                                                            <div className=\"row mb-2 mt-2\">\n                                                                <div className=\"col-auto mr-auto\">\n                                                                    <span className='badge badge-pill badge-dark'>\n                                                                        {tipoDeAplicacion}\n                                                                    </span>\n                                                                </div>\n                                                            <hr/>\n                                                            </div>\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                                <div className=\"row\" key={'dosis'+k}>\n                                                                    <div className=\"col-auto mr-auto\">\n                                                                        {aplicacion}\n                                                                    </div>\n                                                                    <div className=\"col-auto ml-auto\">\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </Fragment>\n                                                    ))}\n                                                    <div className=\"row mt-4\">\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\n                                                                alertEditarAditivo(aditivo)\n                                                            }}>\n                                                                Editar aditivo\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-outline-danger' onClick={e=>{\n                                                                eliminarAditivo(i)\n                                                            }}>\n                                                                Eliminar aditivo\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </Paper>\n                                ))\n                                :\n                                <h1>Agrega {title}</h1>\n                            }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    return(\n        <Paper square elevation={2}>\n            <Paper>\n                <Tabs\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(e,value)=>{\n                        setValue(value)\n                    }}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label=\"Fertilizantes\" />\n                    <Tab label=\"Insecticidas\" />\n                </Tabs>\n            </Paper>\n            <TabPanel value={value} index={0}>\n                <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n            </TabPanel>\n            <TabPanel value={value} index={1}>\n                <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n            </TabPanel>\n        </Paper>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nclass Aplicables extends Component{\n    render(){\n        return(\n            <Layout history={this.props.history} page='Aditivos'>\n                <div className=\"container-fluid d-flex flex-column justify-content-start h-100 px-0 position-fixed zindex-fixed\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-12 text-center'>\n                        <h1>Cargando</h1>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport PantallaDeCarga from './PantallaDeCarga'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const login=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Inicia Sesion\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    error={userError}\n                    helperText={userError?'Usuario No Encontrado':null}\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    helperText={passwordError?'Contraseña incorrecta':null}\n                    error={passwordError}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                    />\n                    <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\n                    label=\"Recuerdame\"\n                    />\n                    <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e=>{login()}}\n                    >\n                    Ingresar!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\">\n                        Olvidaste tu contraseña?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link variant=\"body2\">\n                          <LinkRouter to='/Login'>\n                            {\"No tienes una cuenta? Registrate!\"}\n                          </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport PantallaDeCarga from './PantallaDeCarga'\nimport {Link as LinkRouter} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const signin=async()=>{\n        setloading(true)\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n        .then(async e=>{\n            await database().ref().child(e.user.uid).update({\n                horaDeInicio:0,\n                horaDeFinal:0,\n                periodo:'Vegetativo'\n            })\n            history.push('/')\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography>\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Registrate\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                    />\n                    <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e=>{signin()}}\n                    >\n                    Registrate!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link variant=\"body2\">\n                            <LinkRouter to='/'>\n                                Ya tienes una cuenta? Ingresa!\n                            </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {TextField} from '@material-ui/core'\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={this.props.tipoDePoda} \n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    this.props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n\n                        <StepperAccion \n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            tipoDePoda={this.state.tipoDePoda}\n                            confirmarAccion={this.confirmarAccion}\n                            selectedPlants={selectedPlants}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                            tipoDeAccion='Poda'\n                            steps={[\n                            {\n                                title:'Plantas',\n                                content:(\n                                    <ElegirPlantaAccion\n                                        seleccionarPlanta={this.seleccionarPlanta}\n                                        plantas={this.state.plantas}\n                                    />\n                                )},\n                            {\n                                title:'Tipo De Poda',\n                                content:(\n                                    <ElegirTipoDePoda\n                                        handleChange={(nuevoTipoDePoda=>{\n                                            this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                        })}\n                                        tipoDePoda={this.state.tipoDePoda}\n                                    />\n                            )}]\n                            }\n                        />\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React from 'react'\nimport {Layout} from './Layout'\nexport const Configuracion =({history})=>{\n    return(\n        <Layout history={history} page='Configuracion'>\n            <div className=\"container-fluid accion\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        Configuracion\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nexport const DetallePlanta=(props)=>{\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    const useStyles = makeStyles(theme => ({\n        root: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-around',\n            overflow: 'hidden',\n            backgroundColor: theme.palette.background.paper,\n        },\n        gridList: {\n            flexWrap: 'nowrap',\n          // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n            transform: 'translateZ(0)',\n        },\n        title: {\n            color: theme.palette.primary.light,\n        },\n        titleBar: {\n            background:\n            'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n        },\n    }));\n    const classes = useStyles()\n    return(\n        <Row className=\"mb-4 align-items-center\">\n            <Col xs={12}className='px-0 mb-2'>\n                <GridList className={classes.gridList} cols={2.5}>\n                    {tileData.map(tile => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img}  />\n                    </GridListTile>\n                    ))}\n                </GridList>\n            </Col>\n            <Col md={8} className=\"align-self-center\">\n                <Container className=\"container\">\n                    <Table striped hover variant='dark' >\n                        <tbody>\n                            <tr>\n                                <td>\n                                    <h6 className=''>Genetica</h6>\n                                </td>\n                                <td>\n                                    <h6 className='text-right '>{props.genetica}</h6>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h6 className=''>Edad</h6>\n                                </td>\n                                <td>\n                                    <h6 className='text-right '>{props.edad} Dias</h6>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h6 className=''>Fecha de Germinacion</h6>\n                                </td>\n                                <td>\n                                    <h6 className='text-right '>{props.nacimiento} ({moment().diff(moment(props.nacimiento),'days')} Dias)</h6>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h6 className=''>Inicio de Vegetativo</h6>\n                                </td>\n                                <td>\n                                    <h6 className='text-right '>{\n                                        props.inicioVegetativo?\n                                            `${props.inicioVegetativo} (${moment().diff(moment(props.inicioVegetativo),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td>\n                                    <h6 className=''>Inicio de Floracion</h6>\n                                </td>\n                                <td>\n                                    <h6 className='text-right '>{\n                                        props.inicioFloracion?\n                                        `${props.inicioFloracion}  (${moment().diff(moment(props.inicioFloracion),'days')} Dias)`\n                                        :\n                                        '--/--/----'\n                                    }</h6>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nexport const DetalleAcciones =(props)=>{\n    return(\n        <Row className=\"pt-2 pb-2 botonera justify-content-center \">\n            <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n            <Link to={{ \n                    pathname:'/Planta/Riegos',\n                    props:{\n                        ...props\n                }}}>\n                    <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                    <small className='alert-icon-text text-white'>Riegos</small>\n                </Link>\n            </Col>\n            <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n            <Link to={{ \n                    pathname:'/Planta/Podas',\n                    props:{\n                        ...props\n                }}}>\n                    <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                    <small className='alert-icon-text text-white'>Podas</small>\n                </Link>\n            </Col>\n            <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\n                <Link to={{ \n                    pathname:'/Planta/Fumigaciones',\n                    props:{\n                        ...props\n                }}}>\n                    <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                    <small className='alert-icon-text text-white'>Fumigaciones</small>\n                </Link>\n            </Col>\n        </Row>\n    )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\nimport { Configuracion } from './Pages/Configuracion';\nimport {Planta} from './Pages/Planta'\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\nimport {PlantaPodas} from './Pages/PlantaPodas'\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user.uid,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <PantallaDeCarga/>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <Provider store={this.state.store}>\n              <HashRouter>\n                <Switch>\n                  <Route exact path='/' component={Armario}/>\n                  <Route exact path='/Riego' component={Riego}/>\n                  <Route exact path='/Poda' component={Poda}/>\n                  <Route exact path='/Insecticida' component={Insecticida}/>\n                  <Route exact path='/Aplicables' component={Aplicables}/>\n                  <Route exact path='/Configuracion' component={Configuracion}/>\n                  <Route exact path='/Planta' component={Planta}/>\n                  <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\n                  <Route exact path='/Planta/Podas' component={PlantaPodas}/>\n                  <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                </Switch>\n              </HashRouter>\n        </Provider>\n        )\n      }\n      else{\n        return (\n          <HashRouter>\n            <Switch>\n              <Route exact path='/' component={SignInPage}/>\n              <Route exact path='/Login' component={LogInPage}/>\n            </Switch>\n          </HashRouter>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nexport const Planta =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre}>\n                <div className=\"container-fluid accion\">\n                    <DetallePlanta \n                        genetica={props.location.props.genetica}\n                        edad={props.location.props.edad}\n                        nacimiento={props.location.props.nacimiento}\n                        inicioVegetativo={props.location.props.inicioVegetativo}\n                        inicioFloracion={props.location.props.inicioFloracion}\n                    />\n                    <DetalleAcciones\n                        {...props.location.props}\n                    />\n                    <div className=\"row mt-4 justify-content-center\">\n                        <div className=\"col-auto\">\n                            <div className=\"btn-group\">\n                                <button type='button' className='btn btn-danger mr-4'onClick={props.location.props.alertEliminarPlanta} >Eliminar Planta</button>\n                                <button type='button' className='btn btn-outline-light'onClick={props.location.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaRiegos =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    <Accordion defaultActiveKey='0'>\n                        {props.location.props.riegos?\n                            Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Riego')\n                                        }}>Riegala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaPodas =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    <Accordion defaultActiveKey='0'>\n                        {props.location.props.podas?\n                            Object.keys(props.location.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>        \n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaFumigaciones =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    <Accordion defaultActiveKey='0'>\n                        {props.location.props.fumigaciones?\n                            Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Insecticida')\n                                        }}>Fumigala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}