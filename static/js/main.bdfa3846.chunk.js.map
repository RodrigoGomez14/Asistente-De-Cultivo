{"version":3,"sources":["images/background.png","images/reloj.svg","images/addFile.svg","images/fotoGerminacion.jpg","images/fotoVegetativo.jpg","images/fotoFloracion.jpg","images/periodo.svg","images/ciclo.svg","images/sea of green.png","images/semilla.svg","images/vegetativo.svg","images/floracion.svg","images/maceta.svg","images/calendario-blanco.svg","images/adn.svg","images/balanza.svg","images/cosecha.svg","images/riegos.svg","images/timeline.svg","images/fumigacion.svg","images/transplante.svg","images/podas.svg","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/TarjetaArmario.jsx","components/BarraDeLuz.jsx","components/Navbar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","components/FormLogin.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","components/ListConfig.jsx","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","components/DetallePlanta.jsx","components/DetalleAcciones.jsx","components/BotoneraConfiguracionPlanta.jsx","components/InputCantidadCosechada.jsx","Pages/Planta.jsx","Pages/PlantaHistorial.jsx","components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaFumigaciones.jsx","Pages/PlantaTransplantes.jsx","Pages/PlantaPodas.jsx","Pages/PlantaTimeLine.jsx","Pages/PlantaHistorialTimeLine.jsx","Pages/PlantaHistorialRiegos.jsx","Pages/PlantaHistorialFumigaciones.jsx","Pages/PlantaHistorialTransplantes.jsx","Pages/PlantaHistorialPodas.jsx","Pages/NotFound.jsx","components/ElegirNuevaMaceta.jsx","Pages/Transplante.jsx","components/FormCaracteristicasNuevaPlanta.jsx","components/FormEtapaNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","components/ResumenNuevaPlanta.jsx","components/FormNuevoAditivoCaracteristicas.jsx","components/FormNuevoAditivoDosificaciones.jsx","Pages/NuevoAditivo.jsx","App.js","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","main","padding","spacing","TarjetaPlanta","props","useState","undefined","setEdad","useEffect","moment","diff","nacimiento","classes","className","Grow","in","timeout","Paper","elevation","to","pathname","id","src","periodo","inicioVegetativo","fotoVegetativo","fotoGerminacion","fotoFloracion","alt","console","log","nombre","carousel","display","flexWrap","overflow","textLight","color","contrastText","icon","connect","state","user","uid","plantas","data","Typography","variant","Object","keys","map","key","history","IconButton","AddCircleOutline","Button","endIcon","text","FechaYHora","format","fecha","setFecha","hora","setHora","setInterval","flexGrow","marginTop","marginLeft","marginRight","flexDirection","alignItems","width","listText","itemList","fleWrap","paperMain","type","secondary","dark","borderRadius","avatar","height","TarjetaArmario","horaDeInicio","cicloLuminico","convertirHora","newHora","Avatar","periodoImg","ListItemText","ciclo","reloj","root","list","justifyContent","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","minutoDeInicio","minutoFinal","actualizarEstadoDeLampara","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","actualizarBarraDeEstado","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","menuButton","title","danger","error","NavBar","page","plantaId","plantaDelHistorial","setMenuOpened","React","anchorEl","Boolean","AppBar","position","Toolbar","edge","onClick","e","location","replace","goBack","aria-label","ArrowBackRounded","size","Menu","maxWidth","MenuDrawer","menuOpened","image","Drawer","anchor","open","onClose","CardMedia","component","List","ListItem","button","ListItemIcon","HomeOutlined","faTint","faCut","faBug","NatureOutlined","faCogs","a","auth","signOut","faTimes","drawer","app","minHeight","maxHeight","textAlign","fontSize","Layout","children","userVerification","foto","paddingBottom","emailVerified","CheckboxPlanta","this","checked","handleClick","llave","Component","formControl","margin","minWidth","selectEmpty","alert","light","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","planta","i","FormControlLabel","control","Checkbox","selected","onChange","value","label","Alert","severity","AlertTitle","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","pos","containerPlantas","paddingLeft","paddingTop","listItemText","ResumenAccion","tipoDePoda","nuevaMaceta","Divider","parseFloat","slice","indexOf","toFixed","resetContainer","paperSecondary","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","etapa","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","rootLastStep","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","database","ref","child","translateMonth","month","newDate","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","heading","typography","pxToRem","secondaryHeading","paperDark","expansionPanel","expandIcon","addButton","deleteButton","deleteText","TableAditivos","splice","update","setExpanded","tipoDeAditivo","startIcon","AddOutlined","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","marca","ExpansionPanelDetails","descripcion","tipoDeAplicacion","j","aplicacion","k","EditOutlined","gutterBottom","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","widht","PantallaDeCarga","faCannabis","form","borderColor","submit","border","background","link","textDecoration","checkBox","linkButtons","FormSignIn","inputUser","setInputUser","inputPassword","setInputPassword","userError","passwordError","logIn","loading","LockOutlined","noValidate","required","fullWidth","helperText","autoFocus","Link","href","grey","objectFit","SignInPage","setloading","setUserError","setPasswordError","signInWithEmailAndPassword","then","catch","code","Grid","container","item","xs","md","FormLogin","inputNombre","setInputNombre","signIn","createUserWithEmailAndPassword","sendEmailVerification","updateProfile","displayName","LogInPage","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","FormControlSwitch","textField","inputCicloLuminico","getFullDate","year","getFullYear","getMonth","days","getDate","ListConfig","switchValue","setSwitchValue","cambiarHoraDeInicio","cambiarPeriodo","cambiarCicloLuminico","errorCicloLuminico","setErrorCicloLuminico","horaDeRespaldo","setHoraDeRespaldo","Switch","readOnly","startAdornment","InputAdornment","Array","fill","hour","inicioFloracion","firstPaper","localStorage","getItem","switchModoOscuro","setSwitchModoOscuro","setTheme","setItem","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","fotoPlanta","historial","lineColor","reverse","dateText","dateInnerStyle","overflowX","DetallePlanta","dias","setDias","adn","genetica","calendarioBlanco","maceta","volumenMaceta","semilla","vegetativo","floracion","cosecha","balanza","outline","timeline","imageIcon","verticalAlign","iconRoot","paddingRight","DetalleAcciones","direction","justify","Icon","riegos","fumigacion","transplante","podas","editButton","editText","cosecharButton","success","cosecharText","BotoneraConfiguracionPlanta","cosecharPlanta","eliminarPlanta","InputCantidadCosechada","inputCantidad","setInputCantidad","guardarCantidadCosechada","InputProps","CheckCircle","textShadow","buttonText","buttonDanger","buttonTextDanger","backdrop","zIndex","paperPrimary","gridList","transform","rightPanel","rowBotonera","paperTile","iniciarVegetativo","setIniciarVegetativo","addPhoto","fumigaciones","transplantes","remove","comenzarVegetativo","GridList","cols","edad","tileData","tile","GridListTile","edit","delete","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","convertToArray","acciones","aux","array","arrayRiegos","arrayFumigaciones","arrayPodas","arrayTransplantes","riego","poda","sort","b","obtenerArray","NotFound","ElegirNuevaMaceta","nuevoVolumen","Transplante","transplantar","setNuevaMaceta","guardarTransplanteDB","input","inputWrapper","select","FormCaracteristicasNuevaPlanta","setNombre","setGenetica","setVolumenMaceta","setInicioGerminacion","setEtapa","placeholder","FormEtapaNuevaPlanta","periodoArmario","inicioGerminacion","setInicioVegetativo","setInicioFloracion","Input","renderInputs","convertirFecha","lastIndexOf","day","guardarNuevaPlantaDB","secondPaper","dosisList","FormNuevoAditivoCaracteristicas","updateState","multiline","FormNuevoAditivoDosificaciones","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","vacio","store","inputs","setInputs","setDosis","agregarAditivo","ClasificarDosis","Foliar","newAditivo","Tierra","valor","indexDosis","newDosis","tipoDeDosis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","themeProvider","createMuiTheme","white","ThemeProvider","exact","path","Armario","Aplicables","render","Historial","Planta","PlantaHistorial","NuevaPlanta","NuevoAditivo","PlantaRiegos","PlantaTimeLine","PlantaPodas","PlantaTransplantes","PlantaFumigaciones","PlantaHistorialRiegos","PlantaHistorialTimeLine","PlantaHistorialPodas","PlantaHistorialTransplantes","PlantaHistorialFumigaciones","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bdfa3846.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c43b7cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/reloj.824ae534.svg\";","module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/fotoGerminacion.a4c1e218.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fotoVegetativo.ecbae2ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fotoFloracion.7617cb20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/periodo.8f445686.svg\";","module.exports = __webpack_public_path__ + \"static/media/ciclo.1fb4973b.svg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.837d7016.png\";","module.exports = __webpack_public_path__ + \"static/media/semilla.8d6d8461.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetativo.03c6ad6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/floracion.a3290606.svg\";","module.exports = __webpack_public_path__ + \"static/media/maceta.f2707776.svg\";","module.exports = __webpack_public_path__ + \"static/media/calendario-blanco.4b915a64.svg\";","module.exports = __webpack_public_path__ + \"static/media/adn.4b7d438c.svg\";","module.exports = __webpack_public_path__ + \"static/media/balanza.8463ba47.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosecha.db5aeefe.svg\";","module.exports = __webpack_public_path__ + \"static/media/riegos.44b6984a.svg\";","module.exports = __webpack_public_path__ + \"static/media/timeline.0a789f67.svg\";","module.exports = __webpack_public_path__ + \"static/media/fumigacion.3e1c6a94.svg\";","module.exports = __webpack_public_path__ + \"static/media/transplante.1dfeaf43.svg\";","module.exports = __webpack_public_path__ + \"static/media/podas.68404d6c.svg\";","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {useState,useEffect} from 'react'\nimport moment from 'moment'\nimport fotoGerminacion from '../images/fotoGerminacion.jpg'\nimport fotoVegetativo from '../images/fotoVegetativo.jpg'\nimport fotoFloracion from '../images/fotoFloracion.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nimport {Grow} from '@material-ui/core' \nimport {makeStyles} from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor:theme.palette.primary.main,\n      padding:theme.spacing(1)\n    },\n  }));\n\nexport const TarjetaPlanta=(props)=>{\n    let [edad,setEdad]=useState(undefined)\n    useEffect(()=>{\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\n    })\n    const classes = useStyles()\n    return(\n        <div className=\"col-auto\">\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={6} className={classes.paper}>\n                    <Link className='text-white' to={{\n                        pathname:'/Planta',\n                        props:{\n                            id:props.id\n                        }\n                    }}>\n                        <Card className=\"card\" >\n                            <Img \n                                src={\n                                    props.periodo==='Vegetativo'?\n                                        props.inicioVegetativo?\n                                        fotoVegetativo\n                                        :\n                                        fotoGerminacion\n                                    :\n                                    fotoFloracion\n                                } \n                                className=\"card-img-top\" alt=\"...\"/>\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            {console.log(props)}\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Overlay>\n                        </Card>\n                    </Link>\n                </Paper>\n            </Grow>\n        </div>\n    )\n}","import React, {Component} from 'react'\nimport {TarjetaPlanta} from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport {Button,Typography,Grow,IconButton,makeStyles} from '@material-ui/core'\nimport {AddCircleOutline} from '@material-ui/icons'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme=>({\n    carousel:{\n        display:'flex',\n        flexWrap:'nowrap',\n        overflow:'auto'\n    },\n    textLight:{\n        color:theme.palette.primary.contrastText\n    },\n    icon:{\n        color: theme.palette.primary.contrastText\n    }\n}))\nconst CarouselPlantas=(props)=>{\n    const classes = useStyles()\n    return(\n        <div className=\"container\">\n            {props.plantas?\n                <>\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            <Grow in={true}\n                                {...(true ? { timeout: 1500 } : {})}>\n                                <Typography variant='subtitle1' className={classes.textLight}>\n                                    Plantas Dentro Del Armario\n                                </Typography>\n                            </Grow>\n                        </div>\n                    </div>\n                    <div className=\"row mt-3\">\n                        <div className={classes.carousel}>\n                            {Object.keys(props.plantas).map(key=>(\n                                <TarjetaPlanta\n                                    user={props.user}\n                                    id={key}\n                                    key={key}\n                                    history={props.history}\n                                    nombre={props.plantas[key].nombre}\n                                    inicioVegetativo={props.plantas[key].inicioVegetativo}\n                                    periodo={props.periodo}\n                                />\n                            ))}\n                            <div className=\"col-auto align-self-center\">\n                                <Grow in={true}\n                                {...(true ? { timeout: 1500 } : {})}>\n                                    <Link to='/Nueva-Planta'>\n                                        <IconButton\n                                        >\n                                            <AddCircleOutline className={classes.icon} />\n                                        </IconButton>\n                                    </Link>\n                                </Grow>\n                            </div>\n                        </div>\n                    </div>\n                </>\n                :\n                <div className=\"row mb-3\">\n                    <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                        <div className=\"col-12 text-center\">\n                            <Typography  variant='h6' className={classes.textLight}>No hay plantas</Typography>\n                            <Link to='/Nueva-Planta'>\n                                <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutline/>}>\n                                    Agrega una!\n                                </Button>\n                            </Link>\n                        </div>\n                    </Grow>\n                </div>\n            }\n        </div>\n    )\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user.uid,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport {Typography,makeStyles} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    text:{\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const  FechaYHora=()=>{\n    const classes = useStyles()\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')}`)\n    let [hora,setHora] = useState(` ${moment().format('LT')}`)\n    useEffect(() => {\n        setInterval(() => {\n            setFecha(`${moment().format('DD/MM/YYYY')}`)\n            setHora(`${moment().format('LT')}`)\n        }, 1000);\n    });\n    return(\n        <>\n            <Typography variant='h4' className={classes.text}>{fecha}</Typography>\n            <Typography variant='h4' className={classes.text}>{hora}</Typography>\n        </>\n    )\n}","import React from 'react'\nimport {Paper,List,ListItem,ListItemText,makeStyles,Grow,Avatar} from '@material-ui/core'\nimport periodoImg from '../images/periodo.svg'\nimport reloj from '../images/reloj.svg'\nimport ciclo from '../images/ciclo.svg'\n\nconst useStyles=makeStyles(theme=>({\n    paper:{\n        backgroundColor:theme.palette.primary.main,\n        padding:theme.spacing(1),\n        flexGrow:'1',\n        marginTop:theme.spacing(2),\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        width:'180px'\n    },\n    listText:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    itemList:{\n        display:'flex',\n        fleWrap:'nowrap',\n        overflow:'auto',\n        width:'100%',\n        marginTop:theme.spacing(2)\n    },\n    paperMain:{\n        display:'flex',\n        width:'100%',\n        padding:theme.spacing(1),\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    },\n    avatar:{\n        padding:theme.spacing(1),\n        width:theme.spacing(7),\n        height:theme.spacing(7)\n    }\n}))\nexport const TarjetaArmario = ({periodo,horaDeInicio,cicloLuminico})=>{\n    const convertirHora=hora=>{\n        if(hora<=24){\n            return hora<10?`0${hora}:00 Hs`:`${hora}:00 Hs`\n        }\n        else{\n            let newHora = hora-24\n            return newHora<10?`0${newHora}:00 Hs +1`:`${newHora}:00 Hs +1`\n        }\n    }\n    const classes = useStyles()\n    return(\n        <Grow in={true}\n        {...(true ? { timeout: 1500 } : {})}>\n            <>\n                <div className=\"col-auto p-0\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={periodoImg} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Periodo' secondary={periodo}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto p-0\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={ciclo} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Ciclo Luminico' secondary={convertirHora(cicloLuminico)}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto p-0\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={reloj} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Hora De Inicio' secondary={convertirHora(horaDeInicio)}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto p-0\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={reloj} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Hora De Final' secondary={convertirHora(horaDeInicio+cicloLuminico)}/>\n                    </Paper>\n                </div>\n            </>\n        </Grow>\n    )\n}","import React, {useEffect,useState} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {FechaYHora} from '../components/FechaYHora'\nimport './styles/table.css'\nimport {Paper,Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grow}from '@material-ui/core'\nimport {TarjetaArmario} from '../components/TarjetaArmario'\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        width:'100%',\n        padding:theme.spacing(2),  \n    },\n    text:{\n        color: theme.palette.primary.contrastText\n    },\n    list:{\n        justifyContent:'center',\n        flexWrap:'nowrap',\n        overflow:'auto'\n    }\n}));\n\nexport const BarraDeLuz=(props)=>{\n    let [activo,setActivo]=useState(0)\n    let [faltante,setFaltante]=useState(undefined)\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\n    let [transcurrido,setTranscurrido]=useState(undefined)\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\n    let [intervalo,setIntervalo]=useState(undefined)\n\n    const getMinutes=(moment)=>{\n        const date = new Date()\n        const minutes= date.getMinutes()+date.getHours()*60\n        return minutes\n    }\n    const actualizarEstadoDeLampara=(minutes)=>{\n        let minutoDeInicio = props.horaDeInicio*60\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\n        if(minutoFinal>1440){\n            if(minutes<minutoDeInicio){\n                minutoFinal=minutoFinal-1440\n                if(minutes<minutoFinal){\n                    setLampraEncendida(true)\n                }\n                else{\n                    setLampraEncendida(false)\n                }\n            }\n            else{\n                setLampraEncendida(true)\n            }\n        }\n        else{\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\n                setLampraEncendida(true)\n            }\n            else{\n                setLampraEncendida(false)\n            }\n        }\n    }\n    const actualizarTranscurrido=minutes=>{\n\n        let minutoDeInicio = props.horaDeInicio*60\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\n        if(minutoFinal>1440){\n            if(minutes<minutoDeInicio){\n                minutoFinal=minutoFinal-1440\n                if(minutes<minutoFinal){\n                    console.log(minutes+(1440-minutoDeInicio))\n                }\n                else{\n                    console.log(minutes-minutoFinal)\n                }\n            }\n            else{\n                console.log(minutes-minutoDeInicio)\n            }\n        }\n        else{\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\n                console.log(minutes-minutoDeInicio)\n            }\n            else{\n                console.log(minutoFinal-minutes)\n            }\n        }\n\n\n        if(lamparaEncendida){\n            setTranscurrido(minutes-(props.horaDeInicio*60))\n            console.log(minutes-(props.horaDeInicio*60))\n        }\n        else{\n            if(props.horaDeInicio+props.cicloLuminico>24){\n                setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico-24)*60))\n            }\n            else{\n\n            }\n        }\n    }\n    const actualizarFaltante=minutes=>{\n        if(lamparaEncendida){\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\n            setFaltante(diferencia)\n        }\n        else{\n            if(props.horaDeInicio+props.cicloLuminico>24){\n                const diferencia = ((props.horaDeInicio)*60)-minutes\n                setFaltante(diferencia)\n            }\n            else{\n\n            }\n        }\n    }\n    const actualizarBarraDeEstado=()=>{\n        const barra = document.getElementById('barraLuz')\n        if(lamparaEncendida){\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\n            barra.style.width=porcentaje+'%'\n        }\n        else{\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\n            console.log(porcentaje)\n            barra.style.width=porcentaje+'%'\n        }\n    }\n    useEffect(()=>{\n        const minutes= getMinutes()\n        actualizarEstadoDeLampara(minutes)\n        actualizarTranscurrido(minutes)\n        actualizarFaltante(minutes)\n        actualizarBarraDeEstado()\n    })\n    const calcularHoraFinal=()=>{\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\n        if(horaDeFinal>24){\n            horaDeFinal=horaDeFinal-24\n            if(horaDeFinal<10){\n                horaDeFinal='0'+horaDeFinal\n            }\n            return `${horaDeFinal}:00 +1`\n        }\n        else{\n            if(horaDeFinal<10){\n                horaDeFinal='0'+horaDeFinal\n            }\n            return `${horaDeFinal}:00`\n        }\n    }\n    const classes = useStyles()\n    return(\n        <Grow in={true}\n        {...(true ? { timeout: 1500 } : {})}>\n            <div className={classes.root}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <FechaYHora/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {!lamparaEncendida?\n                            <div className=\"col text-center\">\n                                <Typography variant='h6' className={classes.text}>\n                                    Descansando...\n                                </Typography>\n                            </div>\n                            :\n                            <div className=\"col text-center\">\n                                <Typography variant ='h6' className={classes.text}>\n                                    Creciendo...\n                                </Typography>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"row mt-4\">\n                        <div className=\"col-12\">\n                            <div className=\"progress\">\n                                <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row flex-nowrap overflow-auto\">\n                        <TarjetaArmario periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico} />\n                    </div>\n                </div>\n            </div>\n        </Grow>\n    )\n}","import React , {useState}from 'react'\nimport {makeStyles, Hidden} from '@material-ui/core'\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel,Avatar,Menu,MenuItem} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\nimport {auth} from 'firebase'\nimport {connect} from 'react-redux'\nconst useStyles = makeStyles( theme=>({\n    appBar:{\n        backgroundColor:theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    avatar:{\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark,\n    },\n    danger:{\n        color:theme.palette.error.main\n    }\n}))\n\nexport const NavBar = ({page,plantaId,history,plantaDelHistorial,setMenuOpened}) =>{\n    const classes = useStyles()\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n      };\n    \n      const handleClose = () => {\n        setAnchorEl(null);\n      };\n    return(\n        <AppBar className={classes.appBar} position=\"static\" >\n            <Toolbar>\n            {page!=='Armario'&&\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                    if(plantaId){\n                        if(plantaDelHistorial){\n                            if(history.location.pathname==='/Historial/Planta'){\n                                history.replace('/Historial')\n                            }\n                            else{\n                                history.replace({\n                                    pathname:'/Historial/Planta',\n                                    props:{\n                                        id:plantaId\n                                    }\n                                })\n                            }\n                        }\n                        else{\n                            if(history.location.pathname==='/Planta'){\n                                history.replace('/')\n                            }\n                            else{\n                                history.replace({\n                                    pathname:'/Planta',\n                                    props:{\n                                        id:plantaId\n                                    }\n                                })\n                            }\n                        }\n                    }\n                    else{\n                        history.goBack()\n                    }\n                }} color=\"inherit\" aria-label=\"menu\">\n                    <ArrowBackRounded />\n                </IconButton>\n            }\n            <Typography variant=\"h6\" className={classes.title} >\n                {page}\n            </Typography>\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                setMenuOpened(true)\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\n                <MenuIcon />\n            </IconButton>\n            </Toolbar>\n        </AppBar>\n    )\n}","import React from 'react'\nimport {auth} from 'firebase'\nimport {Card,CardMedia,IconButton} from '@material-ui/core'\nimport {HomeOutlined,NatureOutlined,ArrowBackOutlined} from '@material-ui/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs,faTimes } from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme=>({\n    paper:{\n        maxWidth:'280px',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n        overflow:'auto',\n        height:'100%'\n    },\n    icon:{\n        color:\n            theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n}))\nexport const MenuDrawer = ({menuOpened,setMenuOpened,image,history})=>{\n    const classes = useStyles()\n    return(\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\n            <Paper className={classes.paper} elevation={6}>\n                <Card>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Sea Of Green\"\n                        image={image}\n                        title=\"Sea Of Green\"\n                    />\n                </Card>\n                <List>\n                    <Link to='/' className='outline-none text-dark'>\n                        <ListItem button key={'Armario'} >\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Armario'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Riego' className='outline-none text-dark'>\n                        <ListItem button key={'Regar'} >\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Regar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Poda' className='outline-none text-dark'>\n                        <ListItem button key={'Podar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Podar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Insecticida' className='outline-none text-dark'>\n                        <ListItem button key={'Fumigar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Transplante' className='outline-none text-dark'>\n                        <ListItem button key={'Transplantar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Transplantar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Aplicables' className='outline-none text-dark'>\n                        <ListItem button key={'Aditivos'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Historial' className='outline-none text-dark'>\n                        <ListItem button key={'Historial'}>\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Aditivos' className='outline-none text-dark'>\n                        <ListItem button key={'Carencias y Excesos'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Configuracion' className='outline-none text-dark'>\n                        <ListItem button key={'Configuracion'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\n                        </ListItem>\n                    </Link>\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                            await auth().signOut()\n                            history.replace('/')\n                        }}>\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                        <ListItemText primary={'Cerrar Sesion'} />\n                    </ListItem>\n                </List>\n            </Paper>\n        </Drawer>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {Paper} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport {NavBar} from '../components/Navbar'\nimport {MenuDrawer} from '../components/MenuDrawer'\nimport foto from '../images/sea of green.png'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    drawer:{\n        maxWidth:'300px',\n        height:'100%',\n    },\n    icon:{\n        color:theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n    app:{\n        minHeight: '100vh',\n        height: '100vh',\n        maxHeight:'100vh',\n        display: 'flex',\n        textAlign: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'start',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n    }\n}));\n\n\nexport const Layout=({page,children,history,plantaId,user,plantaDelHistorial,userVerification})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n    return(\n        <Paper className={classes.app}>\n            {user && userVerification &&\n            <>\n                <NavBar page={page} plantaId={plantaId} plantaDelHistorial={plantaDelHistorial} history={history} setMenuOpened={setMenuOpened}/>\n                <Paper elevation={6}>\n                    <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened} image={foto} history={history}/>\n                </Paper>\n            </>\n            }\n            {children}\n        </Paper>\n    )\n}","import React , {Component,useState} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport {BarraDeLuz} from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database,storage} from 'firebase'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper,Input,Button, TextField} from '@material-ui/core'\nimport { Redirect } from 'react-router';\nimport moment from 'moment'\n\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto',\n        paddingBottom:theme.spacing(2)\n    }\n}))\nconst Armario=(props)=>{\n    const classes = useStyles()\n    const cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(props.user.uid).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    const cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(props.user.uid).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    let [file,setFile]=useState(undefined)\n    const subirImagen=(file)=>{\n\n    } \n    \n    if(!props.periodo||!props.horaDeInicio||!props.cicloLuminico){\n        return(\n            <Redirect to='/Configuracion'/>\n        )\n    }\n    else{\n        return(\n            <Layout history={props.history} page=\"Armario\" userVerification={props.user.emailVerified} user={props.user.uid}>\n                <Paper className={classes.root}>\n                    <BarraDeLuz periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico}/>\n                    <CarouselPlantas history={props.history} periodo={props.periodo}/>\n                </Paper>\n            </Layout>\n        )   \n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.horaDeInicio,\n        cicloLuminico:state.data.cicloLuminico,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    formControl:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        '& .MuiIconButton-label':{\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        }\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container pt-4\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                    <Checkbox color='primary'  checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Plantas En el Armario - <Link to='/Nueva-Planta'>Agrega una ahora!</Link> </AlertTitle> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        '& .MuiIconButton-label':{\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        }\n    }\n}))\n\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                        <FormControlLabel\n                            className={classes.radio}\n                            value=\"top\"\n                            control={<Radio\n                                value=\"Tierra\" \n                                name=\"Tierra\"\n                                color='primary'\n                            />}\n                            label='Tierra'\n                            labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                            value=\"top\"\n                            className={classes.radio}\n                            control={<Radio\n                                value=\"Foliar\"\n                                name=\"Foliar\"\n                                color='primary'\n                            />}\n                            label=\"Foliar\"\n                            labelPlacement=\"top\"\n                        />\n                    </RadioGroup>\n                </div>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button,makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    buttonPrimary:{\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport const BotoneraConfirmacionAccion=(props)=>{\n    const classes = useStyles()\n    return(\n            <div className={classes.actionsContainer}>\n                <div>\n                    <Button\n                        className={classes.button}\n                        onClick={props.handleBack}\n                        className='mr-2'\n                    >\n                        Volver\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={\n                            e=>{\n                                props.confirmarAccion(props.accion)\n                            }\n                        }\n                    >\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                    Guardar {props.accion}\n                </Button>\n                </div>\n            </div>\n    )\n}","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport {Alert,AlertTitle} from '@material-ui/lab';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    title:{\n        color: theme.palette.primary.contrastText,\n        marginTop:theme.spacing(1)\n    }\n  }));\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid className='pt-4'>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <Typography variant='h6' className={classes.title}>Aditivos (ml)</Typography>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </AlertTitle> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme=>({\n  card: {\n    minWidth: 275,\n  },\n  root:{\n      margin:'0'\n  },\n  title: {\n    fontSize: 14,\n    color:theme.palette.secondary.contrastText,\n  },\n  pos: {\n    marginBottom: 12,\n    color:theme.palette.secondary.contrastText,\n  },\n  paper:{\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\n    color:theme.palette.secondary.contrastText,\n    padding: theme.spacing(1)\n},\ncontainerPlantas:{\n    textAlign:'left',\n    paddingLeft:theme.spacing(2),\n    paddingTop:theme.spacing(2)\n},\nlistItemText:{\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n    '& .MuiTypography-colorTextSecondary':{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n    },\n},\ntitle:{\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n}\n}));\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda,nuevaMaceta})=>{\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n            {tipoDePoda &&\n                <List>\n                    <ListItem>\n                        <ListItemText className={classes.listItemText} primary='Tipo De Poda' secondary={tipoDePoda}/>    \n                    </ListItem>\n                </List>\n            }\n            {nuevaMaceta &&  \n                <List>\n                    <ListItem>\n                        <ListItemText className={classes.listItemText} primary='Nuevo Volumen De Maceta' secondary={`${nuevaMaceta} Lt`}/>    \n                    </ListItem>\n                </List>\n            }\n            {tipoDeRiego&&cantidadDeAgua&&\n                <List>\n                    <ListItem>\n                        <ListItemText className={classes.listItemText}  primary='Tipo De Riego' secondary={tipoDeRiego}/>    \n                    </ListItem>\n                    <ListItem>\n                        <ListItemText className={classes.listItemText} primary='Cantidad De Agua' secondary={`${cantidadDeAgua} Lt`}/>    \n                    </ListItem>\n                </List>\n            }\n            <Divider/>\n            <div className={classes.containerPlantas}>\n                <Typography className={classes.title} variant='h6'>\n                    Plantas Seleccionadas\n                </Typography>\n                <List>\n                    {plantas.map(planta => (\n                        planta.selected &&\n                        <ListItem>\n                            <ListItemText className={classes.listItemText} primary={planta.nombre}/>    \n                        </ListItem>\n                    ))}\n                </List>\n            </div>\n            <Divider/>\n            {tipoDeRiego &&\n                <div className={classes.containerPlantas}>\n                    <Typography className={classes.title} variant='h6'>\n                        Aditivos Usados\n                    </Typography>\n                    <List>\n                        {aditivos?\n                            Object.keys(aditivos).map(aditivo=>{\n                                const dosis= aditivos[aditivo]\n                                return(\n                                    <ListItem>\n                                        <ListItemText className={classes.listItemText} primary={aditivo} secondary={`${parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} ${dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}`}/>    \n                                    </ListItem>\n                                )\n                            })\n                            :\n                            <ListItem>\n                                <ListItemText className={classes.listItemText} primary='-'/>    \n                            </ListItem>\n                        }\n                    </List>\n                </div>\n            }\n    </div>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root:{\n    height:'100%',\n    width:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'space.around',\n    overflow:'auto',\n    borderRadius:'0',\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText\n    \n  },\n  buttonPrimary:{\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  paperSecondary:{\n    backgroundColor:theme.palette.type==='dark'?theme.palette.primary.dark:theme.palette.primary.main,\n    paddingBottom:theme.spacing(2),\n    paddingTop:theme.spacing(2),\n    borderRadius:'0'\n  },\n  padding:{\n    paddingBottom:theme.spacing(1),\n    color:theme.palette.primary.contrastText,\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light\n  },\n  stepper:{\n    backgroundColor:'transparent'\n  },\n  stepTitle:{\n    '& .MuiStepLabel-label':{\n      color:theme.palette.primary.contrastText\n    },\n  },\n  resetContainer:{\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\n    width:'500px'\n  },\n  rootLastStep:{\n    display:'flex',\n    justifyContent:'center'\n  }\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants,nuevaMaceta,etapa,nombre})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(tipoDeAccion==='Nueva Planta'){\n      if(activeStep===0){\n        return etapa && nombre?false:true\n      }\n    }\n    else if(tipoDeAccion==='Nuevo Aditivo'){\n      if(activeStep===0){\n        return false\n      }\n    }\n    else{\n      if(activeStep===0){\n        return selectedPlants.length?false:true\n      }\n      else if(activeStep===1){\n        if(tipoDeAccion==='Poda'){\n          return tipoDePoda?false:true\n        }\n        else if(tipoDeAccion==='Transplante'){\n          return nuevaMaceta?false:true\n        }\n        else{\n          return tipoDeRiego?false:true\n        }\n      }\n      else if(activeStep===2){\n          return cantidadDeAgua?false:true\n      }\n    }\n  }\n  return (\n    <Paper className={classes.root}>\n    <Grow in={true}\n      {...(true ? { timeout: 1500 } : {})}>\n        <div>\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\n            {steps.map((step, index) => (\n              step?\n                <Step key={step.title}>\n                  <Paper elevation={3} className={classes.paperSecondary}>\n                    <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\n                  </Paper>\n                  <StepContent>\n                    <Paper elevation={6} className={classes.padding}>\n                        <Typography>{step.content}</Typography>\n                        <div className={classes.actionsContainer}>\n                            <div>\n                            <Button\n                                disabled={activeStep === 0}\n                                onClick={handleBack}\n                                className={classes.button}\n                            >\n                                Atras\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={handleNext}\n                                className={classes.buttonPrimary}\n                                disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                            >\n                                {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                            </Button>\n                            </div>\n                        </div>\n                      </Paper>\n                    </StepContent>\n                </Step>\n                :\n                null\n            ))}\n          </Stepper>\n          {activeStep === steps.length && (\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n              <div className={classes.rootLastStep}>\n                <Paper square elevation={6} className={classes.resetContainer}>\n                    {resumenAccion}\n                    <BotoneraConfirmacionAccion\n                        accion={tipoDeAccion}\n                        handleBack={handleBack}\n                        confirmarAccion={confirmarAccion}\n                    />\n                </Paper>\n              </div>\n            </Grow>\n          )}\n        </div>\n      </Grow>\n    </Paper>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user.uid).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:this.translateMonth(moment().format('LLL')),\n            aditivos:fertilizantesFinal\n        })\n    }\n    translateMonth=date=>{\n        const month = date.slice(0,date.indexOf(' '))\n        const newDate = date.slice(date.indexOf(' ')+1)\n        switch (month) {\n            case 'January':\n                return `Enero ${newDate}`\n                break;\n            case 'February':\n                return `Febrero ${newDate}`\n                break;\n            case 'March':\n                return `Marzo ${newDate}`\n                break;\n            case 'April':\n                return `Abril ${newDate}`\n                break;\n            case 'May':\n                return `Mayo ${newDate}`\n                break;\n            case 'June':\n                return `Junio ${newDate}`\n                break;\n            case 'July':\n                return `Julio ${newDate}`\n                break;\n            case 'August':\n                return `Agosto ${newDate}`\n                break;\n            case 'September':\n                return `Septiembre ${newDate}`\n                break;\n            case 'October':\n                return `Octubre ${newDate}`\n                break;\n            case 'November':\n                return `Noviembre ${newDate}`\n                break;\n            case 'December':\n                return `Diciembre ${newDate}`\n                break;\n            default:\n            break;\n        }\n        return date\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n        <Layout history={this.props.history} page='Riego' user={this.props.user.uid} userVerification={this.props.user.emailVerified}>\n            <StepperAccion \n                step1='Plantas'\n                step2='Tipo De Riego'\n                step3='Cantidad de agua y aditivos'\n                selectedPlants={selectedPlants}\n                cantidadDeAgua={this.state.cantidadDeAgua}\n                tipoDeRiego={this.state.tipoDeRiego}\n                confirmarAccion={this.confirmarAccion}\n                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                tipoDeAccion='Riego'\n                steps={[\n                        {\n                        title:'Plantas',\n                        content:(\n                            <ElegirPlantaAccion\n                                seleccionarPlanta={this.seleccionarPlanta}\n                                plantas={this.state.plantas}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Tipo De Riego',\n                        content:(\n                            <ElegirTipoDeRiego\n                                tipoDeRiego={this.state.tipoDeRiego}    \n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Cantidad De Agua y Aditivos',\n                        content:(\n                            <FormularioAccion\n                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                    tipoDeRiego={this.state.tipoDeRiego}\n                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                    cantidadDeAgua={this.state.cantidadDeAgua}\n                                    cambiarAditivo={this.cambiarAditivo}\n                                    adivito='Fertlizante'\n                                    aditivos={this.props.aditivos}\n                                    aditivosUsados={this.state.aditivos}\n                                    eliminarAditivo={this.eliminarAditivo}\n                                    setExpansionExpanded={this.setExpansionExpanded}\n                                    expanded={this.state.expanded}\n                                />\n                        )},\n                ]}\n            />\n        </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user.uid).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:this.translateMonth(moment().format('LLL')),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    translateMonth=date=>{\n        const month = date.slice(0,date.indexOf(' '))\n        const newDate = date.slice(date.indexOf(' ')+1)\n        switch (month) {\n            case 'January':\n                return `Enero ${newDate}`\n                break;\n            case 'February':\n                return `Febrero ${newDate}`\n                break;\n            case 'March':\n                return `Marzo ${newDate}`\n                break;\n            case 'April':\n                return `Abril ${newDate}`\n                break;\n            case 'May':\n                return `Mayo ${newDate}`\n                break;\n            case 'June':\n                return `Junio ${newDate}`\n                break;\n            case 'July':\n                return `Julio ${newDate}`\n                break;\n            case 'August':\n                return `Agosto ${newDate}`\n                break;\n            case 'September':\n                return `Septiembre ${newDate}`\n                break;\n            case 'October':\n                return `Octubre ${newDate}`\n                break;\n            case 'November':\n                return `Noviembre ${newDate}`\n                break;\n            case 'December':\n                return `Diciembre ${newDate}`\n                break;\n            default:\n            break;\n        }\n        return date\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion' userVerification={this.props.user.emailVerified} user={this.props.user.uid}>\n                <div className=\"container-fluid overflow-auto h-100\">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Fumigacion'\n                                steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Tipo De Riego',\n                                    content:(\n                                        <ElegirTipoDeRiego\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Cantidad De Agua y Aditivos',\n                                    content:(\n                                        <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            aditivo='Insecticida'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{Fragment} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n    },\n    paperDark: {\n        backgroundColor: theme.palette.primary.main,\n        color:theme.palette.primary.contrastText,\n        borderRadius:'0'\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    },\n    addButton:{\n        marginBottom:theme.spacing(1),\n        color:theme.palette.primary.contrastText\n    },\n    deleteButton:{\n        color:theme.palette.error.main\n    },\n    deleteText:{\n        color:theme.palette.error.main\n    }\n}));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <Link to={{\n                            pathname:'/Nuevo-Aditivo',\n                            props:{\n                                tipoDeAditivo:title\n                            }\n                        }}>\n                            <Button \n                                variant='text' \n                                className={classes.addButton} \n                                startIcon={<AddOutlined/>}\n                                >\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n                {aditivos?\n                    aditivos.map((aditivo,i)=>(\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\n                                <Paper elevation={4} className={classes.paperDark}>\n                                    <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                    >\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                    </ExpansionPanelSummary>\n                                </Paper>\n                                <Paper elevation={6} className={classes.paperMain}>\n                                    <ExpansionPanelDetails>\n                                        <div className=\"container\">\n                                            <div className=\"row mb-2\">\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography variant='h5'>\n                                                        Descripcion\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-left\">\n                                                    <Typography variant='body2'>\n                                                        {aditivo.descripcion}\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <hr/>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography variant='h5'>\n                                                        Dosificaciones\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                <Fragment key={'tipoDeAplicacion'+j}>\n                                                    <Typography  variant ='h6'>\n                                                            {tipoDeAplicacion}\n                                                    </Typography>\n                                                    <List>\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                            <ListItem>\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\n                                                            </ListItem> \n                                                        ))}\n                                                    </List>\n                                                </Fragment>\n                                            ))}\n                                            <div className=\"row my-2 justify-content-around\">\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                    >   \n                                                        <EditOutlined />\n                                                    </IconButton>\n                                                    <Typography variant='caption'  gutterBottom>\n                                                        Editar\n                                                    </Typography>\n                                                </div>\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{eliminarAditivo(i)}}\n                                                    >\n                                                        <DeleteOutline className={classes.deleteButton}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.deleteText} gutterBottom>\n                                                        Eliminar\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ExpansionPanelDetails>\n                                    </Paper>\n                            </ExpansionPanel>\n                        </Grow>\n                        </div>\n                    </div>\n                    ))\n                    :\n                    <Typography>Aun no hay ningun Aditivo</Typography>\n                }\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nimport { makeStyles,Theme } from '@material-ui/core/styles';\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paperMain: {\n      backgroundColor: 'transparent',\n    },\n    paperDark: {\n    backgroundColor: theme.palette.primary.light,\n    borderRadius:'0'\n    },\n    tabs:{\n        \"&.MuiTabs-scroller\":{\n            '&.MuiTabs-indicator':{\n                color: '#fff'\n            }\n        },\n    },\n    tab:{\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\n            color: '#fff',\n        }\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    const classes = useStyles()\n    return(\n        <div className=\"container-fluid overflow-auto\">\n            <div className=\"row\">\n                <div className=\"col-12 px-0\">\n                    <Paper className={classes.paperDark}>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={(e,value)=>{\n                                setValue(value)\n                            }}\n                            className={classes.tabs}\n                            aria-label=\"disabled tabs example\"\n                        >\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\n                        </Tabs>\n                    </Paper>\n                    <TabPanel value={value} index={0}>\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Aplicables=(props)=>{\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page='Aditivos' userVerification={props.user.emailVerified} user={props.user.uid}>\n            <Paper elevation={3} className={classes.root}>\n                <TabAditivos user={props.user.uid} fertilizantes={props.fertilizantes} insecticidas={props.insecticidas}/>\n            </Paper>\n        </Layout>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport {Paper,makeStyles,Typography} from '@material-ui/core'\nimport './styles/loading.css'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        display:'flex',\n        justifyContent:'center',\n        flexDirection:'column',\n        alignItems:'center',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n        height:'100vh',\n        widht:'100%'\n    },\n    title:{\n        color:theme.palette.primary.contrastText,\n    }\n}))\nexport const PantallaDeCarga =()=>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <div className='row'>\n                <div className='col-12 text-center'>\n                    <Typography variant='h2'className={classes.title}>Cargando</Typography>\n                </div>\n            </div>\n            <div className=\"row justify-content-center mt-4\">\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                    </h2>\n                </div>\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                    </h2>\n                </div>\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                    </h2>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link,FormControlLabel,Checkbox} from '@material-ui/core'\nimport {LockOutlined} from '@material-ui/icons'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin: theme.spacing(0, 4),\n      padding:theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      '& .MuiOutlinedInput-input':{\n        color:theme.palette.primary.contrastText,\n      },\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.primary.contrastText\n      },\n      '& .MuiFormLabel-root.Mui-focused':{\n        color:theme.palette.secondary.contrastText\n      },\n      '& .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.secondary.dark,\n      },\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color:theme.palette.primary.contrastText,\n      '&.MuiButton-outlined':{\n        border: `1px solid ${theme.palette.primary.contrastText}`\n      },\n    },\n    background:{\n      background:theme.palette.primary.main,\n      color:theme.palette.primary.contrastText\n    },\n    link:{\n      color:theme.palette.primary.contrastText,\n      '& .MuiLink-underlineHover':{\n        textDecoration:'none',\n        color:theme.palette.primary.contrastText,\n      }\n    },\n    root:{\n        width:'100%',\n    },\n    title:{\n        color:theme.palette.primary.contrastText\n    },\n    checkBox:{\n        color: theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText,\n        }\n    },\n    linkButtons:{\n        display:'flex',\n        flexDirection:'column'\n    }\n  }));\nexport const FormSignIn = ({inputUser,setInputUser,inputPassword,setInputPassword,userError,passwordError,loading,logIn})=>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                    Inicia Sesion\n                </Typography>\n                <form className={classes.form} noValidate>\n                <TextField\n                variant=\"filled\"\n                margin=\"normal\"\n                color='primary'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                error={userError}\n                helperText={userError?'Usuario No Encontrado':null}\n                name=\"email\"\n                value={inputUser}\n                onChange={e=>{setInputUser(e.target.value)}}\n                autoFocus\n                />\n                <TextField\n                variant=\"filled\"\n                color='primary'\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                value={inputPassword}\n                helperText={passwordError?'Contraseña incorrecta':null}\n                error={passwordError}\n                onChange={e=>{setInputPassword(e.target.value)}}\n                label=\"contraseña\"\n                type=\"password\"\n                id=\"password\"\n                />\n                <FormControlLabel\n                className={classes.checkBox}\n                control={<Checkbox value=\"remember\"  />}\n                label=\"Recuerdame\"\n                />\n                <Button\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={e=>{logIn()}}\n                >\n                Ingresar!\n                </Button>\n                <div className={classes.linkButtons}>\n                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\n                        Olvidaste tu contraseña?\n                    </Link>\n                    <Link variant=\"body2\">\n                        <LinkRouter to='/Login' className={classes.link}>\n                            {\"No tienes una cuenta? Registrate!\"}\n                        </LinkRouter>\n                    </Link>\n                </div>\n            </form>\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/background.png'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from './PantallaDeCarga'\nimport {Layout} from './Layout'\nimport {FormSignIn} from '../components/FormSignIn'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    width:\"100%\",\n    height:\"100%\",\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n    borderRadius:'0',\n    display:'flex',\n    alignItems:'center'\n  },\n  \n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const logIn=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .then(()=>{\n          setloading(false)\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n          setloading(false)\n        })\n    }\n\n    return (\n      <Layout>\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5}>\n              {!loading?\n              <Paper elevation={3} className={classes.paper}>\n                <FormSignIn logIn={logIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword} userError={userError} passwordError={passwordError} />\n              </Paper>\n              :\n              <PantallaDeCarga/>\n              }\n        </Grid>\n        </Grid>\n      </Layout>\n    );\n}","import React,{useState} from 'react'\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link} from '@material-ui/core'\nimport {LockOutlined} from '@material-ui/icons'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\nimport {auth,database} from 'firebase'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin: theme.spacing(0, 4),\n      padding:theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      '& .MuiOutlinedInput-input':{\n        color:theme.palette.primary.contrastText,\n      },\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.primary.contrastText\n      },\n      '& .MuiFormLabel-root.Mui-focused':{\n        color:theme.palette.secondary.contrastText\n      },\n      '& .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.secondary.dark,\n      },\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color:theme.palette.primary.contrastText,\n      '&.MuiButton-outlined':{\n        border: `1px solid ${theme.palette.primary.contrastText}`\n      },\n    },\n    background:{\n      background:theme.palette.primary.main,\n      color:theme.palette.primary.contrastText\n    },\n    link:{\n      color:theme.palette.primary.contrastText\n    },\n    root:{\n        width:'100%',\n    },\n    title:{\n      color:theme.palette.primary.contrastText\n    }\n  }));\nexport const FormLogin=({history})=>{\n    const classes = useStyles()\n    let [inputUser,setInputUser]=useState(undefined)\n    let [inputNombre,setInputNombre]=useState(undefined)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [nombreError,setNombreError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    let [loading,setloading]=useState(false)\n\n    const signIn=async()=>{\n      setUserError(null)\n      setPasswordError(null)\n      if(inputUser && inputPassword){\n        setloading(true)\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n        .then(async e=>{\n            e.user.sendEmailVerification()\n            e.user.updateProfile({\n              displayName:inputNombre\n            })\n            await database().ref().child(e.user.uid).update({\n                horaDeInicio:'',\n                cicloLuminico:'',\n                periodo:''\n            })\n            history.push('/')\n            setloading(false)\n        })\n        .catch(error=>{\n          setloading(false)\n          switch (error.code) {\n            case \"auth/weak-password\":\n              console.log('set error')\n              setPasswordError('La clave debe tener al menos 6 caracteres')\n              break;\n            case \"auth/email-already-in-use\":\n              setUserError('La direccion de correo ya esta siendo utilizada')\n              break;\n          }\n        })\n      }\n      else{\n        if(inputUser){\n          setPasswordError('Debes ingresar una clave')\n        }\n        else if(inputPassword){\n          setUserError('Debes ingresar una direccion de correo')\n        }\n      }\n    }\n    return(\n          <div className={classes.root}>\n            {loading?\n              <PantallaDeCarga/>\n              :\n              <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlined/>\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                      Registrate\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    {console.log(passwordError)}\n                  <TextField\n                      variant=\"filled\"\n                      margin=\"normal\"\n                      color='primary'\n                      required\n                      fullWidth\n                      id=\"Nombre\"\n                      label=\"Nombre\"\n                      name=\"nombre\"\n                      value={inputNombre}\n                      onChange={e=>{setInputNombre(e.target.value)}}\n                      autoFocus\n                  />\n                  <TextField\n                      variant=\"filled\"\n                      margin=\"normal\"\n                      color='primary'\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      value={inputUser}\n                      error={userError}\n                      helperText={userError?userError:null}\n                      onChange={e=>{setInputUser(e.target.value)}}\n                  />\n                  <TextField\n                      variant=\"filled\"\n                      margin=\"normal\"\n                      color='secondary'\n                      required\n                      fullWidth\n                      name=\"password\"\n                      value={inputPassword}\n                      onChange={e=>{setInputPassword(e.target.value)}}\n                      error={passwordError}\n                      helperText={passwordError?passwordError:null}\n                      label=\"contraseña\"\n                      type=\"password\"\n                      id=\"password\"\n                  />\n                  <Button\n                    fullWidth\n                    color='#fff'\n                    variant=\"outlined\"\n                    className={classes.submit}\n                    onClick={e=>{signIn()}}\n                  >\n                  Registrate!\n                  </Button>\n                  <Link variant=\"body2\">\n                        <LinkRouter to='/' className={classes.link}>\n                          Ya tienes una cuenta? Ingresa!\n                        </LinkRouter>\n                    </Link>\n              </form>\n              </div>\n            }\n          </div>\n    )\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/background.png'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {Layout} from './Layout'\nimport {FormLogin} from '../components/FormLogin'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    width:\"100%\",\n    height:\"100%\",\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\n    borderRadius:'0',\n    display:'flex',\n    alignItems:'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n\n    return (\n      <Layout>\n          <Grid container component=\"main\" className={classes.root}>\n              <Grid item xs={false} sm={4} md={7} className={classes.image}>\n                <img src={foto} alt=\"\" className={classes.img}/>\n              </Grid>\n              <Grid item xs={12} sm={8} md={5}>\n                <Paper elevation={3} className={classes.paper}>\n                  <FormLogin history={history}/>\n                </Paper>\n            </Grid>\n          </Grid>\n      </Layout>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        '& .MuiIconButton-label':{\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        }\n    }\n}))\n\nexport const ElegirTipoDePoda=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.tipoDePoda}\n                            className={classes.radio}\n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user.uid).child('plantas').child(idPlanta).child('podas').push({\n            fecha:this.translateMonth(moment().format('LLL')),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    \n    translateMonth=date=>{\n        const month = date.slice(0,date.indexOf(' '))\n        const newDate = date.slice(date.indexOf(' ')+1)\n        switch (month) {\n            case 'January':\n                return `Enero ${newDate}`\n                break;\n            case 'February':\n                return `Febrero ${newDate}`\n                break;\n            case 'March':\n                return `Marzo ${newDate}`\n                break;\n            case 'April':\n                return `Abril ${newDate}`\n                break;\n            case 'May':\n                return `Mayo ${newDate}`\n                break;\n            case 'June':\n                return `Junio ${newDate}`\n                break;\n            case 'July':\n                return `Julio ${newDate}`\n                break;\n            case 'August':\n                return `Agosto ${newDate}`\n                break;\n            case 'September':\n                return `Septiembre ${newDate}`\n                break;\n            case 'October':\n                return `Octubre ${newDate}`\n                break;\n            case 'November':\n                return `Noviembre ${newDate}`\n                break;\n            case 'December':\n                return `Diciembre ${newDate}`\n                break;\n            default:\n            break;\n        }\n        return date\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda' user={this.props.user.uid} userVerification={this.props.user.emailVerified}>\n                <div className=\"container-fluid overflow-auto h-100 \">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDePoda={this.state.tipoDePoda}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                                tipoDeAccion='Poda'\n                                steps={[\n                                {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                        />\n                                    )},\n                                {\n                                    title:'Tipo De Poda',\n                                    content:(\n                                        <ElegirTipoDePoda\n                                            handleChange={(nuevoTipoDePoda=>{\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                            })}\n                                            tipoDePoda={this.state.tipoDePoda}\n                                        />\n                                )}]\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React,{useState}from 'react'\nimport { Paper,ListItem,List,ListItemText,FormControl,InputLabel,Select,MenuItem,makeStyles,Switch,FormControlLabel,TextField,InputAdornment,Grow,Button, Typography } from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {database} from 'firebase'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    paper:{\n        marginTop:theme.spacing(1),\n        width:'500px',\n        display:'flex',\n        flexDirection:'column',\n        padding:theme.spacing(1),\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n    },\n    FormControl:{\n        marginTop:theme.spacing(2),\n    },\n    FormControlSwitch:{\n        marginLeft:'auto',\n        marginRight:'auto'\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    inputCicloLuminico:{\n        display:'flex',\n        flexDirection:'column'\n    },\n    alert:{\n        marginTop:theme.spacing(1)\n    }\n}))\nconst getFullDate=()=>{\n    const date = new Date\n    const year = date.getFullYear()\n    let month = date.getMonth()+1\n    month = month<10?month=`0${month}`:month\n    const days = date.getDate()\n    return`${days}/${month}/${year}`\n}\nexport const ListConfig =({switchValue,setSwitchValue,horaDeInicio,cambiarHoraDeInicio,periodo,cambiarPeriodo,cicloLuminico,cambiarCicloLuminico,plantas,user})=>{\n    const classes = useStyles()\n    let [errorCicloLuminico,setErrorCicloLuminico]= useState(undefined)\n    let [horaDeRespaldo,setHoraDeRespaldo]= useState(undefined)\n    return(\n        <div className={classes.root}>\n            <Paper elevation={3} className={classes.paper}>\n                <FormControlLabel\n                    className={classes.FormControlSwitch}\n                    control={\n                        <Switch checked={switchValue} onChange={e=>{setSwitchValue(e.target.checked)}} value=\"switch\" />\n                    }\n                    label=\"Modo Oscuro\"\n                />\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Periodo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        readOnly={periodo&&true}\n                        id=\"select\"\n                        value={periodo}\n                        onChange={e=>{\n                            cambiarPeriodo(e.target.value)\n                        }}\n                    >\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Hora De Inicio Del Ciclo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"select\"\n                        value={horaDeInicio}\n                        startAdornment={\n                            <InputAdornment position=\"start\">HS</InputAdornment>\n                        }\n                        onChange={e=>{\n                            cambiarHoraDeInicio(e.target.value)\n                        }}\n                    >\n                        {new Array(24).fill(undefined).map((hour,index)=>(\n                            <MenuItem value={index}>\n                                {index<10?`0${index}:00`:`${index}:00`}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Duracion Del Ciclo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"select\"\n                        value={cicloLuminico}\n                        error={errorCicloLuminico}\n                        startAdornment={\n                            <InputAdornment position=\"start\">HS</InputAdornment>\n                        }\n                        onChange={e=>{\n                            console.log(e.target.value)\n                            if(e.target.value<13&&periodo==='Vegetativo'){\n                                setErrorCicloLuminico('Si este es menor de 13 Hs el armario pasara al periodo de Floracion, se establecera la fecha de inicio de floracion de cada planta al dia de hoy')\n                                setHoraDeRespaldo(e.target.value)\n                            }\n                            if(e.target.value>=13&&periodo==='Floracion'){\n                                setErrorCicloLuminico('Si este es mayor de 13 Hs el armario pasara al periodo Vegetativo')\n                                setHoraDeRespaldo(e.target.value)\n                            }\n                            else{\n                                cambiarCicloLuminico(e.target.value)\n                            }\n                        }}\n                    >\n                        {new Array(25).fill(undefined).map((hour,index)=>(\n                            index&&\n                                <MenuItem value={index}>\n                                    {index}\n                                </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                {errorCicloLuminico&&\n                <Grow in={true}>\n                <   Alert className={classes.alert} variant=\"filled\" severity=\"warning\">\n                        <Typography>\n                            Quiere cambiar el ciclo luminico a {horaDeRespaldo} HS?\n                        </Typography>\n                        {errorCicloLuminico}\n                        <Button\n                            variant='contained'\n                            onClick={e=>{\n                                const periodo = horaDeRespaldo>=13?'Vegetativo':'Floracion'\n                                cambiarCicloLuminico(horaDeRespaldo)\n                                cambiarPeriodo(periodo)\n                                if(periodo==='Floracion'){\n                                    {plantas&&\n                                        Object.keys(plantas).map(async key=>{\n                                            if(!plantas[key].inicioFloracion){\n                                                await database().ref().child(user).child('plantas').child(key).update({\n                                                    inicioFloracion:getFullDate()\n                                                })\n                                            }\n                                        })\n                                    }\n                                }\n                                setErrorCicloLuminico(undefined)\n                            }}>\n                            Continuar\n                        </Button>\n                    </Alert>\n                </Grow>\n                }\n            </Paper>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport {Layout} from './Layout'\nimport {connect} from 'react-redux'\nimport {ListConfig} from '../components/ListConfig'\nimport {database,auth}from 'firebase'\nimport {makeStyles,Paper,Typography,Button} from '@material-ui/core'\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space.around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    },\n    firstPaper:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center',\n        marginTop: theme.spacing(2)\n    },\n    paper:{\n        padding : theme.spacing(3),\n        display:'flex',\n        flexDirection:'column',\n    },\n    button:{\n        marginTop:theme.spacing(2),\n        marginBottom:theme.spacing(2)\n    }\n}))\nconst Configuracion=(props)=>{\n    let [switchModoOscuro,setSwitchModoOscuro]= useState(localStorage.getItem('theme')==='dark'?true:false)\n    const setSwitchValue=value=>{\n        setSwitchModoOscuro(value)\n        if(!value){\n            props.setTheme('light')\n            localStorage.setItem('theme','light')\n        }\n        else{\n            props.setTheme('dark')\n            localStorage.setItem('theme','dark')\n        }\n    }\n    const cambiarHoraDeInicio=horaDeInicio=>{\n        database().ref().child(props.user.uid).update({\n            horaDeInicio:horaDeInicio\n        })\n    }\n    const cambiarPeriodo=periodo=>{\n        database().ref().child(props.user.uid).update({\n            periodo:periodo\n        })\n    }\n    const cambiarCicloLuminico=cicloLuminico=>{\n        database().ref().child(props.user.uid).update({\n            cicloLuminico:cicloLuminico\n        })\n    }\n    var actionCodeSettings = {\n        // URL you want to redirect back to. The domain (www.example.com) for this\n        // URL must be whitelisted in the Firebase Console.\n        url: 'https://rodrigogomez14.github.io/Asistente-De-Cultivo/#/',\n        handleCodeInApp: true,\n      };\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page='Configuracion' userVerification={props.user.emailVerified} user={props.user.uid}>\n            <Paper className={classes.root}>\n                {!props.user.emailVerified?\n                    <div className={classes.firstPaper}>\n                        <Paper elevation={3} className={classes.paper}>\n                            <Typography variant='h4'>\n                                Verifica tu cuenta de correo!\n                            </Typography>\n                            <Typography variant='body1'>\n                                Para Comenzar a utilizar el Asistente de Cultivo debes completar la configuracion inicial\n                            </Typography>\n                            <Typography variant='body1'>\n                                Luego verifica la direccion de mail ingresada y listo! podras empezar a disfrutar del Asistente.\n                            </Typography>\n                            <Typography variant='caption'>\n                                Una vez verificada, recarga la pagina y ya estara todo listo!\n                            </Typography>\n                        </Paper>\n                    </div>\n                    :\n                    null\n                }\n                <ListConfig\n                    user={props.user.uid}\n                    switchValue={switchModoOscuro} \n                    setSwitchValue={setSwitchValue} \n                    horaDeInicio={props.horaDeInicio}\n                    cambiarHoraDeInicio={cambiarHoraDeInicio}\n                    periodo={props.periodo} \n                    cambiarPeriodo={cambiarPeriodo}\n                    cicloLuminico={props.cicloLuminico}\n                    cambiarCicloLuminico={cambiarCicloLuminico}\n                    plantas={props.plantas}\n                />\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps = state=>({\n    user:state.user,\n    plantas:state.data.plantas,\n    periodo:state.data.periodo,\n    horaDeInicio:state.data.horaDeInicio,\n    cicloLuminico:state.data.cicloLuminico\n})\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {Paper,makeStyles,Grow} from '@material-ui/core'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\n\nconst useStyles= makeStyles(theme=>({\n    root: {\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    paper:{\n        width: '250px',\n    },\n    cardHeader:{\n        backgroundColor:theme.palette.primary.dark,\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\n    const classes= useStyles()\n    return(\n        <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n            <Paper elevation={6} className={classes.paper}>\n                <Card className=\"card\" >\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h4 className=\"card-title text-white\">{nombre}</h4>\n                                </div>\n                            </div>\n                        </div>\n                    </Overlay>\n                </Card>\n            </Paper>\n        </Grow>\n    )\n}","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button,Typography} from '@material-ui/core'\nimport {CardHistorial} from '../components/CardHistorial'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto',\n        paddingBottom:theme.spacing(2)\n    }\n}))\nconst Historial=(props)=>{\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page={'Historial'} userVerification={props.user.emailVerified} user={props.user.uid}>\n            <Paper elevation={3} className={classes.root}>\n                <Timeline lineColor={'#ddd'}>\n                    {props.historial?\n                        Object.keys(props.historial).reverse().map(planta=>(\n                            <TimelineItem\n                                dateText={props.historial[planta].fechaDeCorte}\n                                dateInnerStyle={{ background: '#00796b', color: '#fff', width:'250px'}}\n                            >\n                                <Link className='text-white' to={{\n                                    pathname:'/Historial/Planta',\n                                    props:{\n                                        id:planta,\n                                    }\n                                }}>\n                                    <CardHistorial cantidadDeGramos={props.historial[planta].cantidadDeGramos} nombre={props.historial[planta].nombre} fechaDeCorte={props.historial[planta].fechaDeCorte}/>\n                                </Link>\n                            </TimelineItem>\n                        )):\n                        <div className=\"col-auto\">\n                            <Typography>\n                                No hay plantas en el historial\n                            </Typography>\n                        </div>\n                    }\n                </Timeline>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    historial:state.data.historial\n})\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component,useState, useEffect} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia,ListItemAvatar,Avatar,Grow} from '@material-ui/core'\nimport { PortableWifiOff, Height } from '@material-ui/icons';\nimport semilla from '../images/semilla.svg'\nimport vegetativo from '../images/vegetativo.svg'\nimport floracion from '../images/floracion.svg'\nimport maceta from '../images/maceta.svg'\nimport calendarioBlanco from '../images/calendario-blanco.svg'\nimport adn from '../images/adn.svg'\nimport balanza from '../images/balanza.svg'\nimport cosecha from '../images/cosecha.svg'\nconst useStyles = makeStyles(theme => ({\n    paper:{\n        backgroundColor:theme.palette.primary.main,\n        padding:theme.spacing(1),\n        flexGrow:'1',\n        marginTop:theme.spacing(2),\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        width:'180px',\n    },\n    listText:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    itemList:{\n        display:'flex',\n        flexWrap:'nowrap',\n        overflowX:'auto',\n        width:'100%'\n    },\n    avatar:{\n        padding:theme.spacing(1),\n        width:theme.spacing(7),\n        height:theme.spacing(7)\n    }\n}))\n\nexport const DetallePlanta=(props)=>{\n    const [dias, setDias] = useState('- Dias')\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    const classes = useStyles()\n\n    useEffect(()=>{\n        if(!props.plantaDelHistorial){\n            const dias = moment().diff(moment(props.nacimiento,\"DDMMYYYY\"),'days')\n            dias === 1?\n                setDias(`${dias} Dia`)\n                :\n                setDias(`${dias} Dias`)\n        }\n        else{\n            console.log(props.plantaDelHistorial)\n            const dias = moment(props.fechaDeCorte,'DDMMYYYY').diff(moment(props.nacimiento,\"DDMMYYYY\"),'days')\n            dias === 1?\n                setDias(`${dias} Dia`)\n                :\n                setDias(`${dias} Dias`)\n        }\n    }\n    ,[])\n    return(\n        <Grow in={true}\n        {...(true ? { timeout: 1500 } : {})}>\n            <>\n                <div className=\"col-auto\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={adn} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Genetica' secondary={props.genetica}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={calendarioBlanco} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Tiempo De Vida' secondary={dias}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={maceta} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Volumen Maceta' secondary={`${props.volumenMaceta} Lt`}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={semilla} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Inicio De Germinacion' secondary={props.nacimiento?props.nacimiento:'-'}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={vegetativo} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Inicio De Vegetativo' secondary={props.inicioVegetativo?props.inicioVegetativo:'-'}/>\n                    </Paper>\n                </div>\n                <div className=\"col-auto\">\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={floracion} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Inicio De Floracion' secondary={props.inicioFloracion?props.inicioFloracion:'-'}/>\n                    </Paper>\n                </div>\n                {props.fechaDeCorte &&\n                    <div className=\"col-auto\">\n                        <Paper elevation={3} className={classes.paper}>\n                            <Avatar src={cosecha} className={classes.avatar}/>\n                            <ListItemText className={classes.listText} primary='Fecha De Corte' secondary={props.fechaDeCorte}/>\n                        </Paper>\n                    </div>\n                }\n                {props.cantidadDeGramos &&\n                    <div className=\"col-auto\">\n                        <Paper elevation={3} className={classes.paper}>\n                            <Avatar src={balanza} className={classes.avatar}/>\n                            <ListItemText className={classes.listText} primary='Cantidad Cosechada' secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\n                        </Paper>\n                    </div>\n                }\n            </>\n        </Grow>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {Button,makeStyles,Avatar,Paper,Grid,SvgIcon,Icon} from '@material-ui/core'\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\n\nimport riegos from '../images/riegos.svg'\nimport timeline from '../images/timeline.svg'\nimport fumigacion from '../images/fumigacion.svg'\nimport transplante from '../images/transplante.svg'\nimport podas from '../images/podas.svg'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    link:{\n        textDecoration:'none',\n        outline:'none',\n        margin:theme.spacing(1)\n    },\n    button:{\n        marginBottom:theme.spacing(2),\n    },\n    paper:{\n        marginTop:theme.spacing(3),\n        marginBottom:theme.spacing(2),\n        width:'90%',\n\n    },\n    avatar:{\n        width:theme.spacing(5),\n        height:theme.spacing(5)\n    },\n    timeline:{\n        width:'80%',\n        marginTop:theme.spacing(2),\n        marginBottom:theme.spacing(1),\n    },\n    imageIcon: {\n        height: '100%',\n        verticalAlign:'top',\n    },\n    iconRoot: {\n        paddingRight:theme.spacing(7),\n        height:theme.spacing(5),\n        textAlign: 'center'\n      }\n}))\n\nexport const DetalleAcciones =({id,history})=>{\n    const classes= useStyles()\n    return(\n            <div className={classes.root}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Grid \n                        container\n                        direction=\"row\"\n                        justify=\"center\"\n                        alignItems=\"center\"\n                    >\n                        <Grid item xs={12} justify=\"center\">\n                            <Link\n                                to={{ \n                                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Timeline':'/Planta/Timeline',\n                                    props:{\n                                        id:id\n                            }}}>\n                                <Button\n                                    variant=\"contained\"\n                                    color='primary'\n                                    className={classes.timeline}\n                                >\n                                    <Icon classes={{root: classes.iconRoot}}>\n                                        <img className={classes.imageIcon} src={timeline}/>\n                                    </Icon>\n                                    Linea Temporal\n                                </Button>\n                            </Link>\n                        </Grid>\n                        <Grid xs={12} sm={6}>\n                            <Link\n                            to={{ \n                                pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\n                                props:{\n                                    id:id\n                            }}}>\n                                <Button\n                                    variant=\"text\"\n                                    className={classes.button}\n                                >\n                                    <Icon classes={{root: classes.iconRoot}}>\n                                        <img className={classes.imageIcon} src={riegos}/>\n                                    </Icon>\n                                    Riegos\n                                </Button>\n                            </Link>            \n                        </Grid>\n                        <Grid xs={12} sm={6}>\n                            <Link                \n                            to={{ \n                            pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\n                            props:{\n                                id:id\n                            }}}>\n                                <Button\n                                    variant=\"text\"\n                                    className={classes.button}\n                                >   \n                                    <Icon classes={{root: classes.iconRoot}}>\n                                        <img className={classes.imageIcon} src={fumigacion}/>\n                                    </Icon>\n                                    Fumigaciones\n                                </Button>\n                            </Link>\n                        </Grid>\n                        <Grid xs={12} sm={6}>\n                            <Link                \n                            to={{ \n                            pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Transplantes':'/Planta/Transplantes',\n                            props:{\n                                id:id\n                            }}}>\n                                <Button\n                                    variant=\"text\"\n                                    className={classes.button}\n                                >   \n                                    <Icon classes={{root: classes.iconRoot}}>\n                                        <img className={classes.imageIcon} src={transplante}/>\n                                    </Icon>\n                                    Transplantes\n                                </Button>\n                            </Link>\n                        </Grid>\n                        <Grid xs={12} sm={6}>\n                            <Link \n                                to={{ \n                                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\n                                    props:{\n                                        id:id\n                                }}}>\n                                    <Button\n                                        variant=\"text\"\n                                        className={classes.button}\n                                    >\n                                    <Icon classes={{root: classes.iconRoot}}>\n                                        <img className={classes.imageIcon} src={podas}/>\n                                    </Icon>\n                                        Podas\n                                    </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n    )\n}","import React , {useState} from 'react'\nimport {makeStyles,IconButton,Typography,SvgIcon} from '@material-ui/core'\nimport {DeleteOutline,EditOutlined,NatureOutlined} from '@material-ui/icons'\nconst useStyles= makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'space-around',\n        paddingBottom:theme.spacing(1)\n    },\n    editButton:{\n        color:theme.palette.primary.contrastText,\n    },\n    deleteButton:{\n        color:theme.palette.error.main\n    },\n    editText:{\n        color:theme.palette.primary.contrastText,\n    },\n    deleteText:{\n        color:theme.palette.error.main\n    },\n    cosecharButton:{\n        color:theme.palette.success.main\n    },\n    cosecharText:{\n        color:theme.palette.success.main\n    },\n}))\n\nexport const BotoneraConfiguracionPlanta =({inicioFloracion,cosecharPlanta,eliminarPlanta}) =>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            {inicioFloracion &&\n                <div className='d-flex flex-column'>\n                    <IconButton\n                        variant=\"contained\"\n                        onClick={cosecharPlanta}\n                        className={classes.cosecharButton}\n                        >\n                        <NatureOutlined/>\n                    </IconButton>\n                    <Typography variant='caption' className={classes.cosecharText}>\n                        Cosechar\n                    </Typography>\n                </div>\n            }\n            <div className='d-flex flex-column'>\n                <IconButton\n                    variant=\"contained\"\n                    className={classes.editButton}\n                    >\n                    <EditOutlined/>\n                </IconButton>\n                <Typography variant='caption'className={classes.editText}>\n                    Editar\n                </Typography>\n            </div> \n            <div className='d-flex flex-column'>\n                <IconButton\n                    variant=\"contained\"\n                    className={classes.deleteButton}\n                    onClick={e=>{\n                        eliminarPlanta()\n                    }}\n                >\n                    <DeleteOutline/>\n                </IconButton>\n                <Typography variant='caption' className={classes.deleteText}>\n                Eliminar\n                </Typography>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {makeStyles,Typography,ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails,TextField,InputAdornment,Button} from '@material-ui/core'\nimport {CheckCircle,ExpandMore} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center',\n        marginTop:theme.spacing(1)\n    },\n    expansionPanel:{\n        width:'50%'\n    },\n    ExpansionPanelDetails:{\n        flexDirection:'column',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n    button:{\n        marginTop:theme.spacing(1)\n    }\n}))\nexport const InputCantidadCosechada = ({inputCantidad,setInputCantidad,guardarCantidadCosechada}) =>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                    <TextField id=\"outlined-basic\" \n                        value={inputCantidad}\n                        type='number'\n                        label=\"Cantidad Cosechada\"\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                gr\n                            </InputAdornment>\n                            ),\n                        }}\n                        variant=\"outlined\"\n                        onChange={e=>{\n                            setInputCantidad(e.target.value)\n                        }}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={e=>{\n                            guardarCantidadCosechada()\n                        }}\n                        endIcon={\n                            <CheckCircle/>\n                        }\n                        >\n                        Guardar \n                    </Button>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    )\n}\n","import React,{useState, useEffect}from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../components/DetallePlanta'\nimport {DetalleAcciones} from '../components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nimport {makeStyles,GridListTile,CardMedia,Card,Paper,GridList, Divider,Button,Grow,Input,Typography, IconButton,TextField} from '@material-ui/core'\nimport {AddAPhotoOutlined} from '@material-ui/icons'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {database,storage} from 'firebase'\nimport moment from 'moment'\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\nimport {connect} from 'react-redux'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    buttonTextDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paperPrimary:{\n        width:'100%',\n        height:'100%',\n        display:'flex',\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        width:'100%',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n        '& .MuiGridListTile-root':{\n            width:'30% !important'\n        }\n    },\n    media: {\n        height:'100%'\n    },\n    rightPanel:{\n        display:'flex',\n        flexDirection:'column',\n        height:'100%',\n        justifyContent:'space-between',\n        padding:theme.spacing(1),\n    },\n    rowBotonera:{\n        marginTop:'auto',\n        width:'100%',\n        flexGrow:'1',\n        display:'flex'\n    },\n    alert:{\n        marginTop:theme.spacing(1),\n        '& .MuiAlert-message':{\n            width:'100%'\n        }\n    },\n    paperTile:{\n        width:'100% !important',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'center'\n    }\n}))\nconst getFullDate=()=>{\n    const date = new Date\n    const year = date.getFullYear()\n    let month = date.getMonth()+1\n    month = month<10?month=`0${month}`:month\n    const days = date.getDate()\n    return`${days}/${month}/${year}`\n}\nconst translateMonth=date=>{\n    const month = date.slice(0,date.indexOf(' '))\n    const newDate = date.slice(date.indexOf(' ')+1)\n    switch (month) {\n        case 'January':\n            return `Enero ${newDate}`\n            break;\n        case 'February':\n            return `Febrero ${newDate}`\n            break;\n        case 'March':\n            return `Marzo ${newDate}`\n            break;\n        case 'April':\n            return `Abril ${newDate}`\n            break;\n        case 'May':\n            return `Mayo ${newDate}`\n            break;\n        case 'June':\n            return `Junio ${newDate}`\n            break;\n        case 'July':\n            return `Julio ${newDate}`\n            break;\n        case 'August':\n            return `Agosto ${newDate}`\n            break;\n        case 'September':\n            return `Septiembre ${newDate}`\n            break;\n        case 'October':\n            return `Octubre ${newDate}`\n            break;\n        case 'November':\n            return `Noviembre ${newDate}`\n            break;\n        case 'December':\n            return `Diciembre ${newDate}`\n            break;\n        default:\n        break;\n    }\n    return date\n}\nconst Planta =(props)=>{\n    const classes = useStyles()\n    let [inputCantidad, setInputCantidad]= useState(undefined)\n    let [iniciarVegetativo, setIniciarVegetativo]= useState(false)\n    let [addPhoto, setAddPhoto]= useState(false)\n    let [loading,setLoading]=useState(true)\n    const cosecharPlanta=async ()=>{\n        await database().ref().child(props.user.uid).child('historial').child(props.location.props.id).update({\n            nombre:props.plantas[props.location.props.id].nombre?props.plantas[props.location.props.id].nombre:null,\n            nacimiento:props.plantas[props.location.props.id].nacimiento?props.plantas[props.location.props.id].nacimiento:null,\n            genetica:props.plantas[props.location.props.id].genetica?props.plantas[props.location.props.id].genetica:null,\n            inicioVegetativo:props.plantas[props.location.props.id].inicioVegetativo?props.plantas[props.location.props.id].inicioVegetativo:null,\n            inicioFloracion:props.plantas[props.location.props.id].inicioFloracion?props.plantas[props.location.props.id].inicioFloracion:null,\n            podas:props.plantas[props.location.props.id].podas?props.plantas[props.location.props.id].podas:null,\n            riegos:props.plantas[props.location.props.id].riegos?props.plantas[props.location.props.id].riegos:null,\n            fumigaciones:props.plantas[props.location.props.id].fumigaciones?props.plantas[props.location.props.id].fumigaciones:null,\n            transplantes:props.plantas[props.location.props.id].transplantes?props.plantas[props.location.props.id].transplantes:null,\n            fechaDeCorte:getFullDate()\n        })\n        props.history.replace({\n            pathname:'Historial/Planta',\n            props:{\n                id:props.location.props.id\n            }\n        })\n        await database().ref().child(props.user.uid).child('plantas').child(props.location.props.id).remove()\n    }\n    const eliminarPlanta=async ()=>{\n        props.history.replace('/')\n        await database().ref().child(props.user.uid).child('plantas').child(props.location.props.id).remove()\n    }\n    const comenzarVegetativo=async ()=>{\n        await database().ref().child(props.user.uid).child('plantas').child(props.location.props.id).update({\n            inicioVegetativo:getFullDate()\n        })\n        setIniciarVegetativo(false)\n    }\n    /*{!loading?\n        photos.length?\n            photos.map(tile => (\n            <GridListTile  className={classes.tile}>\n                <img/>\n            </GridListTile>\n            ))\n            :\n            <Paper\n                className={classes.paperTile}\n                elevation={3}\n            >\n                <IconButton\n                    onClick={e=>{setAddPhoto(true)}}\n                    variant=\"contained\"\n                    >\n                    <AddAPhotoOutlined/>\n                </IconButton>\n                <Typography variant='caption'>No hay Fotos Agrega Una</Typography>\n            </Paper>\n        :\n        <Paper>\n            ...cargando...\n        </Paper>\n    }*/\n    return(\n        props.location.props?\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <GridList className={classes.gridList} cols={2.5}>\n                                \n                            </GridList>\n                        </div>\n                        {addPhoto&&\n                        <Grow in={iniciarVegetativo}\n                        {...(true ? { timeout: 1500 } : {})}>\n                            <>\n                                <TextField type='file' variant='outlined' onChange={e=>{}}/>\n                            </>\n                        </Grow>\n                        }\n                        <div className=\"row flex-nowrap overflow-auto\">\n                            <DetallePlanta \n                                genetica={props.plantas[props.location.props.id].genetica}\n                                cantidadDeGramos={props.plantas[props.location.props.id].cantidadDeGramos}\n                                plantaDelHistorial={props.plantas[props.location.props.id].plantaDelHistorial}\n                                edad={props.plantas[props.location.props.id].edad}\n                                nacimiento={props.plantas[props.location.props.id].nacimiento}\n                                inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\n                                inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\n                                fechaDeCorte={props.plantas[props.location.props.id].fechaDeCorte}\n                                volumenMaceta={props.plantas[props.location.props.id].volumenMaceta}\n                            />\n                        </div>\n                        {!props.plantas[props.location.props.id].inicioFloracion &&\n                            <div className=\"row mt-2 justify-content-center\">\n                                {props.plantas[props.location.props.id].nacimiento && !props.plantas[props.location.props.id].inicioVegetativo &&\n                                    <Button variant='contained' color='primary' onClick={e=>{setIniciarVegetativo(true)}}>\n                                        Iniciar periodo Vegetativo\n                                    </Button>\n                                }\n                            </div>\n                        }\n                        {iniciarVegetativo&&\n                            <Grow in={iniciarVegetativo}\n                                {...(true ? { timeout: 1500 } : {})}>\n                                <Alert variant='filled' severity='warning' className={classes.alert}>\n                                    <AlertTitle>Iniciar Vegetativo?</AlertTitle>\n                                    Si continua se guardara el dia de la fecha como el inicio del ciclo Vegetativo\n                                    <Button variant='text' color='warning' onClick={e=>{comenzarVegetativo()}}>\n                                        Continuar\n                                    </Button>\n                                </Alert>\n                            </Grow>\n                        }\n                        <div className=\"row\">\n                            <DetalleAcciones\n                                history={props.history}\n                                id={props.location.props.id}\n                            />\n                        </div>\n                        <Divider/>\n                            {!props.plantas[props.location.props.id].plantaDelHistorial &&\n                                <div className={classes.rowBotonera}>\n                                    <BotoneraConfiguracionPlanta\n                                        inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\n                                        cosecharPlanta={cosecharPlanta}\n                                        eliminarPlanta={eliminarPlanta}\n                                        nacimiento={props.location.props.nacimiento}\n                                        inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\n                                        comenzarVegetativo={comenzarVegetativo}\n                                    />\n                                </div>\n                            }\n                        <Divider/>\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.plantas\n})\nexport default connect(mapStateToProps,null)(Planta)","import React,{useState}from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../components/DetallePlanta'\nimport {DetalleAcciones} from '../components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nimport {makeStyles,GridListTile,CardMedia,Paper,GridList, Divider,Button,Grow} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\nimport {connect} from 'react-redux'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    buttonTextDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paperPrimary:{\n        width:'100%',\n        height:'100%',\n        display:'flex',\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        width:'100%',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n        '& .MuiGridListTile-root':{\n            width:'30% !important'\n        }\n    },\n    media: {\n        height:'100%'\n    },\n    rightPanel:{\n        display:'flex',\n        flexDirection:'column',\n        height:'100%',\n        justifyContent:'space-between',\n        padding:theme.spacing(1),\n    },\n    rowBotonera:{\n        width:'100%',\n        flexGrow:'1',\n        display:'flex'\n    },\n    alert:{\n        marginTop:theme.spacing(1),\n        '& .MuiAlert-message':{\n            width:'100%'\n        }\n    }\n}))\nconst getFullDate=()=>{\n    const date = new Date\n    const year = date.getFullYear()\n    let month = date.getMonth()+1\n    month = month<10?month=`0${month}`:month\n    const days = date.getDate()\n    return`${days}/${month}/${year}`\n}\nconst PlantaHistorial =(props)=>{\n    const classes = useStyles()\n    let [inputCantidad, setInputCantidad]= useState(undefined)\n    let [iniciarVegetativo, setIniciarVegetativo]= useState(false)\n    const guardarCantidadCosechada=async ()=>{\n        await database().ref().child(props.user.uid).child('historial').child(props.location.props.id).update({\n            cantidadDeGramos:inputCantidad+' gr'\n        })\n    }\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <GridList className={classes.gridList} cols={2.5}>\n                                {tileData.map(tile => (\n                                <GridListTile key={tile.img} className={classes.tile}>\n                                    <CardMedia\n                                        className={classes.media}\n                                        image={fotoPlanta}\n                                    />\n                                </GridListTile>\n                                ))}\n                            </GridList>\n                        </div>\n                        <div className=\"row flex-nowrap overflow-auto\">\n                            <DetallePlanta \n                                genetica={props.plantas[props.location.props.id].genetica}\n                                cantidadDeGramos={props.plantas[props.location.props.id].cantidadDeGramos}\n                                plantaDelHistorial={true}\n                                edad={props.plantas[props.location.props.id].edad}\n                                nacimiento={props.plantas[props.location.props.id].nacimiento}\n                                inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\n                                inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\n                                fechaDeCorte={props.plantas[props.location.props.id].fechaDeCorte}\n                                volumenMaceta={props.plantas[props.location.props.id].volumenMaceta}\n                            />\n                        </div>\n                        <div className=\"row\">\n                            {!props.plantas[props.location.props.id].cantidadDeGramos &&\n                                <InputCantidadCosechada inputCantidad={inputCantidad} setInputCantidad={setInputCantidad} guardarCantidadCosechada={guardarCantidadCosechada} />\n                            }\n                        </div>\n                        <div className=\"row\">\n                            <DetalleAcciones\n                                history={props.history}\n                                id={props.location.props.id}\n                            />\n                        </div>\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.historial\n})\nexport default connect(mapStateToProps,null)(PlantaHistorial)","import React , {useState,useEffect} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      color:theme.palette.primary.contrastText\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor: theme.palette.secondary.light,\n        color:theme.palette.primary.contrastText\n    },\n    paperDark: {\n        backgroundColor:theme.palette.primary.main,\n        borderRadius:'0'\n    },\n    edit:{\n        color:theme.palette.primary.contrastText,\n    },\n    delete:{\n        color:theme.palette.error.main\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n    },\n    buttonText:{\n        color:theme.palette.secondary.contrastText,\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    },\n    listItemText:{\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText\n        }\n    }\n  }));\nexport const AccionDetallada=(props)=>{\n    const classes= useStyles()\n    let [show,setShow] = useState(false)\n    \n    const eliminarAccion= async()=>{\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\n    }\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setShow(true)\n        }, 100);\n    })\n    return(\n        <div className=\"row\">\n            <div className=\"col-10 offset-1\">\n                <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\n                        <Paper elevation={4} className={classes.paperDark}>\n                            <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                            >\n                                <Typography className={classes.heading}>{props.tipoDeAccion}</Typography>\n                            </ExpansionPanelSummary>\n                        </Paper>\n                        <Paper elevation={4} >\n                            <ExpansionPanelDetails>\n                                <div className=\"container\">\n                                    {props.accion.agua &&\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.agua} L. De Agua \n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                    {props.accion.tipoDeRiego &&\n                                        <div className=\"row my-2\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                    {props.accion.tipoDePoda &&\n                                        <div className=\"col text-left\">\n                                            <Typography variant='h5'>\n                                                Poda {props.accion.tipoDePoda}\n                                            </Typography>\n                                        </div>\n                                    }\n                                    {props.accion.volumenMaceta &&\n                                        <div className=\"col text-left\">\n                                            <Typography variant='h5'>\n                                                Nuevo Volumen {props.accion.volumenMaceta} Lt\n                                            </Typography>\n                                        </div>\n                                    }\n                                    <Divider/>\n                                    {props.tipoDeAccion!=='podas' && props.tipoDeAccion!=='transplantes' && \n                                        <div className=\"row my-2\">\n                                            {props.accion.aditivos?\n                                                <>\n                                                    <div className=\"col-12 text-left\">\n                                                        <Typography variant='h5'>\n                                                            Aditivos Usados\n                                                        </Typography>\n                                                    </div>\n                                                    <List>\n                                                        {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\n                                                            <>\n                                                                <ListItem>\n                                                                    <ListItemText\n                                                                        className={classes.listItemText}\n                                                                        primary={aditivo}\n                                                                        secondary={props.accion.aditivos[aditivo]+' ml'} \n                                                                    />\n                                                                </ListItem>\n                                                            </>\n                                                        ))}\n                                                    </List>\n                                                </>\n                                                :\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography>\n                                                        No se utilizaron Aditivos\n                                                    </Typography>\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    <Divider/>\n                                    {!props.plantaDelHistorial &&\n                                        <div className=\"row my-2 justify-content-around\">\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                >   \n                                                        <EditOutlined />\n                                                </IconButton>\n                                                <Typography variant='caption' gutterBottom>\n                                                    Editar\n                                                </Typography>\n                                            </div>\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                    onClick={e=>{eliminarAccion()}}\n                                                >\n                                                        <DeleteOutline className={classes.delete}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.delete} gutterBottom>\n                                                    Eliminar\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </ExpansionPanelDetails>\n                        </Paper>\n                    </ExpansionPanel>\n                </Grow>\n            </div>\n        </div>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {makeStyles,Paper} from '@material-ui/core';\nimport {Layout} from './Layout'\nimport {connect} from 'react-redux'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\n\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n}))\nconst PlantaRiegos =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Riegos'} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.plantas[props.location.props.id].riegos?\n                                <Timeline lineColor={'#ddd'}>\n                                        {Object.keys(props.plantas[props.location.props.id].riegos).reverse().map((id,i)=>(\n                                            <TimelineItem\n                                                dateText={props.plantas[props.location.props.id].riegos[id].fecha}\n                                                dateInnerStyle={{ background: '#00796b', color: '#fff' }}\n                                            >   \n                                                <AccionDetallada \n                                                    handleChange={handleChange} \n                                                    index={i} \n                                                    expanded={expanded} \n                                                    plantaDelHistorial={false}\n                                                    user={props.user.uid} \n                                                    accion={props.plantas[props.location.props.id].riegos[id]} \n                                                    tipoDeAccion='riegos' \n                                                    idPlanta={props.location.props.id} \n                                                    id={id} \n                                                    id={id}\n                                                />\n                                        </TimelineItem>\n                                        ))}\n                                </Timeline>\n                                :\n                                <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                props.history.push('/Riego')\n                                            }}>Riegala Ahora!</button>\n                                        </div>\n                                    </div>\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.plantas\n})\nexport default connect(mapStateToProps,null)(PlantaRiegos)\n","import React , {useState} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\n\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n}))\nconst PlantaFumigaciones =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Fumigaciones'} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.plantas[props.location.props.id].fumigaciones?\n                                <Timeline lineColor={'#ddd'}>\n                                    {Object.keys(props.plantas[props.location.props.id].fumigaciones).reverse().map((id,i)=>(\n                                        <TimelineItem\n                                            dateText={props.plantas[props.location.props.id].fumigaciones[id].fecha}\n                                            dateInnerStyle={{ background: '#00796b', color: '#fff' }}\n                                        > \n                                            <AccionDetallada \n                                                handleChange={handleChange} \n                                                index={i} \n                                                plantaDelHistorial={false} \n                                                expanded={expanded} \n                                                user={props.user.uid}\n                                                index={i} \n                                                accion={props.plantas[props.location.props.id].fumigaciones[id]} \n                                                tipoDeAccion='fumigaciones' \n                                                idPlanta={props.location.props.id} \n                                                id={id} \n                                                key={id}\n                                            />\n                                        </TimelineItem>\n                                        ))}\n                                </Timeline>\n                                \n                                    :\n                                    <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                props.history.push('/Insecticida')\n                                            }}>Fumigala Ahora!</button>\n                                        </div>\n                                    </div>\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.plantas\n})\nexport default connect(mapStateToProps,null)(PlantaFumigaciones)\n","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\n\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n}))\nconst PlantaTransplantes =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Transplantes'} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.plantas[props.location.props.id].transplantes?\n                                <Timeline lineColor={'#ddd'}>\n                                    {Object.keys(props.plantas[props.location.props.id].transplantes).reverse().map((id,i)=>(\n                                        <TimelineItem\n                                            dateText={props.plantas[props.location.props.id].transplantes[id].fecha}\n                                            dateInnerStyle={{ background: '#00796b', color: '#fff' }}\n                                        >\n                                            <AccionDetallada \n                                                handleChange={handleChange} \n                                                index={i} \n                                                expanded={expanded} \n                                                plantaDelHistorial={false} \n                                                user={props.user.uid} \n                                                accion={props.plantas[props.location.props.id].transplantes[id]} \n                                                tipoDeAccion='transplantes' \n                                                idPlanta={props.location.props.id} \n                                                id={id} \n                                                key={id}\n                                            />\n                                        </TimelineItem>   \n                                    ))}\n                                </Timeline>\n                                :\n                                <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\n                                        </div>\n                                    </div>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                props.history.push('/Transplante')\n                                            }}>Transplatala Ahora!</button>\n                                        </div>\n                                    </div>\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.plantas\n})\nexport default connect(mapStateToProps,null)(PlantaTransplantes)","import React , {useState} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\n\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n})) \nconst PlantaPodas =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Podas'} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.plantas[props.location.props.id].podas?\n                        <Timeline lineColor={'#ddd'}>\n                            {Object.keys(props.plantas[props.location.props.id].podas).reverse().map((id,i)=>(\n                                <TimelineItem\n                                dateText={props.plantas[props.location.props.id].podas[id].fecha}\n                                dateInnerStyle={{ background: '#00796b', color: '#fff' }}\n                                >\n                                    <AccionDetallada \n                                        user={props.user.uid} \n                                        index={i}  \n                                        plantaDelHistorial={false} \n                                        expanded={expanded} \n                                        handleChange={handleChange} \n                                        accion={props.plantas[props.location.props.id].podas[id]} \n                                        tipoDePoda={props.plantas[props.location.props.id].podas[id].tipoDePoda}\n                                        tipoDeAccion='podas' \n                                        idPlanta={props.location.props.id} \n                                        id={id} \n                                        key={id}/>\n                                </TimelineItem>\n                                ))}\n                        </Timeline>\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                        props.history.push('/Poda')\n                                    }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </div>        \n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.plantas\n})\nexport default connect(mapStateToProps,null)(PlantaPodas)\n","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper,Typography} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    },\n    paper:{\n        padding:theme.spacing(1)\n    }\n})) \nconst PlantaTimeLine =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n    let [arrayAcciones,setArrayAcciones]= useState([])\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    const convertToArray=(acciones=[],tipoDeAccion)=>{\n        let aux = []\n        Object.keys(acciones).map(key=>{\n            aux.push({accion:acciones[key],tipoDeAccion:tipoDeAccion,id:key})\n        })\n        return aux\n    }\n    const obtenerArray=()=>{\n        if(props.location.props){\n            let aux =[]\n            const arrayRiegos= convertToArray(props.plantas[props.location.props.id].riegos,'Riego')\n            const arrayFumigaciones= convertToArray(props.plantas[props.location.props.id].fumigaciones,'Fumigacion')\n            const arrayPodas= convertToArray(props.plantas[props.location.props.id].podas,'Poda')\n            const arrayTransplantes= convertToArray(props.plantas[props.location.props.id].transplantes,'Transplante')\n            arrayRiegos.map(riego=>{\n                aux.push(riego)\n            })\n            arrayFumigaciones.map(fumigacion=>{\n                aux.push(fumigacion)\n            })\n            arrayPodas.map(poda=>{\n                aux.push(poda)\n            })\n            arrayTransplantes.map(transplante=>{\n                aux.push(transplante)\n            })\n            return aux.sort(function compare(a, b) {\n                if (a.id < b.id) {\n                  return -1;\n                }\n                if (a.id > b.id) {\n                  return 1;\n                }\n                return 0;\n              }).reverse()\n        }\n    }\n    const array = obtenerArray()\n    return(\n        props.location.props?\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Timeline'} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    {array.length?\n                            <Timeline lineColor={'#fff'}>\n                                {array.map((accion,i)=>(\n                                    <TimelineItem\n                                        dateText={accion.accion.fecha}\n                                        dateInnerStyle={{ background: '#00796b', color: '#fff' }}\n                                    >   \n                                        <AccionDetallada \n                                            handleChange={handleChange} \n                                            index={i} \n                                            expanded={expanded} \n                                            plantaDelHistorial={true}\n                                            user={props.user.uid} \n                                            accion={accion.accion} \n                                            tipoDeAccion={accion.tipoDeAccion} \n                                            idPlanta={props.location.props.id} \n                                            id={accion.id} \n                                        />\n                                    </TimelineItem>\n                                ))}\n                            </Timeline>\n                            :\n                            <Typography variant='h4'> No se ha realizando nada sobre esta planta</Typography>\n                        }\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.plantas\n})\nexport default connect(mapStateToProps,null)(PlantaTimeLine)\n","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper,Typography} from '@material-ui/core'\nimport {connect} from 'react-redux'\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    },\n    paper:{\n        padding:theme.spacing(1)\n    }\n})) \nconst PlantaHistorialTimeLine =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n    let [arrayAcciones,setArrayAcciones]= useState([])\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    const convertToArray=(acciones=[],tipoDeAccion)=>{\n        let aux = []\n        Object.keys(acciones).map(key=>{\n            aux.push({accion:acciones[key],tipoDeAccion:tipoDeAccion,id:key})\n        })\n        return aux\n    }\n    const obtenerArray=()=>{\n        if(props.location.props){\n            let aux =[]\n            const arrayRiegos= convertToArray(props.plantas[props.location.props.id].riegos,'Riego')\n            const arrayFumigaciones= convertToArray(props.plantas[props.location.props.id].fumigaciones,'Fumigacion')\n            const arrayPodas= convertToArray(props.plantas[props.location.props.id].podas,'Poda')\n            const arrayTransplantes= convertToArray(props.plantas[props.location.props.id].transplantes,'Transplante')\n            arrayRiegos.map(riego=>{\n                aux.push(riego)\n            })\n            arrayFumigaciones.map(fumigacion=>{\n                aux.push(fumigacion)\n            })\n            arrayPodas.map(poda=>{\n                aux.push(poda)\n            })\n            arrayTransplantes.map(transplante=>{\n                aux.push(transplante)\n            })\n            return aux.sort(function compare(a, b) {\n                if (a.id < b.id) {\n                  return -1;\n                }\n                if (a.id > b.id) {\n                  return 1;\n                }\n                return 0;\n              }).reverse()\n        }\n    }\n    const array = obtenerArray()\n    return(\n        props.location.props?\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Timeline'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    {array.length?\n                        <Timeline lineColor={'#fff'}>\n                            {array.map((accion,i)=>(\n                                <TimelineItem\n                                    dateText={accion.accion.fecha}\n                                    dateInnerStyle={{ background: '#00796b', color: '#fff' }}\n                                >   \n                                    <AccionDetallada \n                                        handleChange={handleChange} \n                                        index={i} \n                                        expanded={expanded} \n                                        plantaDelHistorial={true}\n                                        user={props.user.uid} \n                                        accion={accion.accion} \n                                        tipoDeAccion={accion.tipoDeAccion} \n                                        idPlanta={props.location.props.id} \n                                        id={accion.id} \n                                    />\n                                </TimelineItem>\n                            ))}\n                        </Timeline>\n                        :\n                        <Typography variant='h4'> No se ha realizando nada sobre esta planta</Typography>\n                    }\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.historial\n})\nexport default connect(mapStateToProps,null)(PlantaHistorialTimeLine)","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {makeStyles,Paper} from '@material-ui/core';\nimport {Layout} from './Layout'\nimport {connect} from 'react-redux'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n}))\nconst PlantaHistorialRiegos =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Riegos'}  plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.plantas[props.location.props.id].riegos?\n                                Object.keys(props.plantas[props.location.props.id].riegos).reverse().map((id,i)=>(\n                                    <AccionDetallada \n                                        handleChange={handleChange} \n                                        index={i} \n                                        expanded={expanded} \n                                        plantaDelHistorial={true}\n                                        user={props.user.uid} \n                                        accion={props.plantas[props.location.props.id].riegos[id]} \n                                        tipoDeAccion='riegos' \n                                        idPlanta={props.location.props.id} \n                                        id={id} \n                                        id={id}\n                                    />\n                                ))\n                                :\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.historial\n})\nexport default connect(mapStateToProps,null)(PlantaHistorialRiegos)\n","import React , {useState} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {connect} from 'react-redux'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n}))\nconst PlantaHistorialFumigaciones =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Fumigaciones'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.plantas[props.location.props.id].fumigaciones?\n                                Object.keys(props.plantas[props.location.props.id].fumigaciones).reverse().map((id,i)=>(\n                                    <AccionDetallada \n                                        handleChange={handleChange} \n                                        index={i} \n                                        plantaDelHistorial={true} \n                                        expanded={expanded} \n                                        user={props.user.uid}\n                                        index={i} \n                                        accion={props.plantas[props.location.props.id].fumigaciones[id]} \n                                        tipoDeAccion='fumigaciones' \n                                        idPlanta={props.location.props.id} \n                                        id={id} \n                                        key={id}/>\n                                ))\n                                :\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.historial\n})\nexport default connect(mapStateToProps,null)(PlantaHistorialFumigaciones)\n","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {connect} from 'react-redux'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n}))\nconst PlantaHistorialTransplantes =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Transplantes'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.plantas[props.location.props.id].transplantes?\n                                Object.keys(props.plantas[props.location.props.id].transplantes).reverse().map((id,i)=>(\n                                    <AccionDetallada \n                                        handleChange={handleChange} \n                                        index={i} \n                                        expanded={expanded} \n                                        plantaDelHistorial={true} \n                                        user={props.user.uid} \n                                        accion={props.plantas[props.location.props.id].transplantes[id]} \n                                        tipoDeAccion='transplantes' \n                                        idPlanta={props.location.props.id} \n                                        id={id} \n                                        key={id}\n                                    />\n                                ))\n                                :\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\n                                    </div>\n                                </div>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.historial\n})\nexport default connect(mapStateToProps,null)(PlantaHistorialTransplantes)","import React , {useState} from 'react'\nimport {AccionDetallada} from '../components/AccionDetallada'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {connect} from 'react-redux'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0',\n        overflow:'auto'\n    }\n})) \nconst PlantaHistorialPodas =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Podas'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user.uid} userVerification={props.user.emailVerified}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.plantas[props.location.props.id].podas?\n                            Object.keys(props.plantas[props.location.props.id].podas).reverse().map((id,i)=>(\n                                <AccionDetallada \n                                    user={props.user.uid} \n                                    index={i}  \n                                    plantaDelHistorial={true} \n                                    expanded={expanded} \n                                    handleChange={handleChange} \n                                    accion={props.plantas[props.location.props.id].podas[id]} \n                                    tipoDePoda={props.plantas[props.location.props.id].podas[id].tipoDePoda}\n                                    tipoDeAccion='podas' \n                                    idPlanta={props.location.props.id} \n                                    id={id} \n                                    key={id}/>\n                            ))\n                            :\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\n                                </div>\n                            </div>\n                        }\n                    </div>        \n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    plantas:state.data.historial\n})\nexport default connect(mapStateToProps,null)(PlantaHistorialPodas)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nexport const NotFound = () =>{\n    return(\n        <div className=\"container\">\n            <h1>la pagina no se encuentra disponible</h1>\n            <Link to='/'>\n                Vuelve al Home\n            </Link>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles,InputAdornment} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        '& .MuiIconButton-label':{\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n        }\n    },\n    textLight:{\n        color:theme.palette.primary.contrastText\n    }\n}))\n\nexport const ElegirNuevaMaceta=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.nuevoVolumen}\n                            className={classes.radio}\n                            color='primary'\n                            type='number'\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    Lt\n                                </InputAdornment>\n                                ),\n                            }}\n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport {Layout} from './Layout'\nimport {connect } from 'react-redux'\nimport {StepperAccion} from '../components/StepperAccion'\nimport {ElegirPlantaAccion} from '../components/ElegirPlantaAccion'\nimport {ElegirNuevaMaceta} from '../components/ElegirNuevaMaceta'\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {database} from 'firebase'\nimport moment from 'moment'\n class Transplante extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n        nuevaMaceta:undefined,\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.transplantar()\n        this.props.history.push('/')\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    setNuevaMaceta=(nuevoVolumen)=>{\n        this.setState({nuevaMaceta:nuevoVolumen})\n    }\n    transplantar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarTransplanteDB(planta.id,this.state.nuevaMaceta)\n            }\n            return null\n        })\n    }\n    guardarTransplanteDB= async (idPlanta,nuevoVolumen)=>{\n        await database().ref().child(this.props.user.uid).child('plantas').child(idPlanta).child('transplantes').push({\n            volumenMaceta:nuevoVolumen,\n            fecha:this.translateMonth(moment().format('LLL')),\n        })\n        await database().ref().child(this.props.user.uid).child('plantas').child(idPlanta).update({\n            volumenMaceta:nuevoVolumen,\n        })\n    }\n    translateMonth=date=>{\n        const month = date.slice(0,date.indexOf(' '))\n        const newDate = date.slice(date.indexOf(' ')+1)\n        switch (month) {\n            case 'January':\n                return `Enero ${newDate}`\n                break;\n            case 'February':\n                return `Febrero ${newDate}`\n                break;\n            case 'March':\n                return `Marzo ${newDate}`\n                break;\n            case 'April':\n                return `Abril ${newDate}`\n                break;\n            case 'May':\n                return `Mayo ${newDate}`\n                break;\n            case 'June':\n                return `Junio ${newDate}`\n                break;\n            case 'July':\n                return `Julio ${newDate}`\n                break;\n            case 'August':\n                return `Agosto ${newDate}`\n                break;\n            case 'September':\n                return `Septiembre ${newDate}`\n                break;\n            case 'October':\n                return `Octubre ${newDate}`\n                break;\n            case 'November':\n                return `Noviembre ${newDate}`\n                break;\n            case 'December':\n                return `Diciembre ${newDate}`\n                break;\n            default:\n            break;\n        }\n        return date\n    }\n    render(){\n    let selectedPlants=[]\n    if(this.state.plantas){\n        this.state.plantas.map(planta=>(\n            planta.selected?\n                selectedPlants.push(planta.nombre)\n                :\n                null\n        ))\n    }\n        return(\n        <Layout history={this.props.history} page='Transplante' user={this.props.user.uid} userVerification={this.props.user.emailVerified}>\n            <div className=\"container-fluid overflow-auto h-100\">\n                <div className=\"row h-100\">\n                    <div className=\"col-12 px-0\">\n                        <StepperAccion \n                            step1='Plantas'\n                            step2='Nuevo Volumen de tierra'\n                            selectedPlants={selectedPlants}\n                            confirmarAccion={this.confirmarAccion}\n                            nuevaMaceta={this.state.nuevaMaceta}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} nuevaMaceta={this.state.nuevaMaceta}/>}\n                            tipoDeAccion='Transplante'\n                            steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {\n                                    title:'Nuevo Volumen de tierra',\n                                    content:(\n                                        <ElegirNuevaMaceta\n                                            handleChange={this.setNuevaMaceta}\n                                            nuevoVolumen={this.state.nuevaMaceta}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                            ]}\n                        />\n                    </div>\n                </div>\n            </div>\n        </Layout>\n        )\n    }\n }\n const mapStateToProps=state=>({\n     user:state.user,\n     plantas:state.data.plantas,\n\n })\n export default connect(mapStateToProps,null)(Transplante)","import React,{useState} from 'react'\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n    },\n    form:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    input:{\n        marginTop:theme.spacing(1),\n        marginBottom:theme.spacing(1),\n    },\n    inputWrapper:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'space-around',\n        marginTop:theme.spacing(1)\n    },\n    select:{\n        width:'100%'\n    }\n}))\n\n\nexport const FormCaracteristicasNuevaPlanta =({nombre,setNombre,genetica,setGenetica,volumenMaceta,setVolumenMaceta,etapa,setInicioGerminacion,getFullDate,setEtapa})=>{\n    \n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <form className={classes.form}>\n                <TextField label=\"Nombre\" className={classes.input} value={nombre} placeholder='Planta 1' onChange={e=>{setNombre(e.target.value)}}/>\n                <TextField label=\"Genetica\"  className={classes.input} value={genetica} placeholder='Purple Kush' onChange={e=>{setGenetica(e.target.value)}}/>\n                <TextField \n                    label=\"Volumen De Maceta\" \n                    className={classes.formControl}\n                    value={volumenMaceta}\n                    placeholder={10}\n                    type='number'  \n                    InputProps={{\n                        startAdornment: (\n                        <InputAdornment position=\"start\">\n                            Lt\n                        </InputAdornment>\n                        ),\n                    }}\n                    onChange={e=>{setVolumenMaceta(e.target.value)}}/>\n                <FormControl className={classes.select}>\n                    <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\n                    <Select\n                        labelId=\"etapa-select-label\"\n                        id=\"etapa-select\"\n                        value={etapa}\n                        onChange={e=>{\n                            const etapa = e.target.value\n                            if(etapa==='Vegetativo'){\n                                setInicioGerminacion(getFullDate())\n                                setEtapa(e.target.value)\n                            }\n                            else{\n                                setInicioGerminacion(undefined)\n                                setEtapa(e.target.value)}\n                            }\n                        }\n                    >\n                        <MenuItem value={'Germinacion'}>Germinacion</MenuItem>\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\n                    </Select>\n                </FormControl>\n            </form>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Paper, TextField,makeStyles,Typography,FormControlLabel,InputLabel,Select,MenuItem,Button,InputAdornment,Input} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n    },\n    form:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(2),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    input:{\n        marginTop:theme.spacing(1),\n        marginBottom:theme.spacing(1),\n    },\n    inputWrapper:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'space-around',\n        marginTop:theme.spacing(3)\n    }\n}))\n\nexport const FormEtapaNuevaPlanta =({getFullDate,periodoArmario,inicioGerminacion,setInicioGerminacion,inicioVegetativo,setInicioVegetativo,inicioFloracion,setInicioFloracion,etapa})=>{\n    const classes = useStyles()\n    const date = getFullDate()\n    const renderInputs=()=>{\n        switch (etapa) {\n            case 'Germinacion':\n                if(periodoArmario==='Vegetativo'){\n                    return(\n                        <div className={classes.inputWrapper}>\n                            <FormControlLabel\n                                label='Inicio de Germinacion'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                                }\n                            />\n                        </div>\n                    )\n                }\n                else{\n                    return(\n                        <Alert variant='outlined' severity=\"error\">\n                            <AlertTitle>No es recomendable introducir una semilla germinando en un armario con periodo de Floracion</AlertTitle>\n                        </Alert>\n                    )\n                }\n                break;\n            case 'Vegetativo':\n                if(periodoArmario===etapa ){\n                    return(\n                        <div className={classes.inputWrapper}>\n                            <FormControlLabel\n                                label='Inicio de Germinacion'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                                }\n                            />\n                        </div>\n                    )\n                }\n                else{\n                    return(\n                        <>\n                            <Alert variant='outlined' severity=\"warning\">\n                                <AlertTitle>Si ingresa esta planta al armario comenzara su periodo de floracion el dia de hoy</AlertTitle>\n                            </Alert>\n                            <div className={classes.inputWrapper}> \n                            <FormControlLabel\n                                label='Inicio de Germinacion'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                                }\n                            />\n                                <FormControlLabel\n                                label='Inicio de Vegetativo'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                                }\n                            />\n                            </div>\n                        </>\n                    )\n                }\n                break;\n            case 'Floracion':\n                if(periodoArmario===etapa){\n                    return(\n                        <div className={classes.inputWrapper}>\n                            <FormControlLabel\n                                label='Inicio de Germinacion'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                                }\n                            />\n                                <FormControlLabel\n                                label='Inicio de Vegetativo'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                                }\n                            />\n                            <FormControlLabel\n                                label='Inicio de Floracion'\n                                labelPlacement='top'\n                                control={\n                                    <Input type='date' value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\n                                }\n                            />\n                        </div>\n                    )\n                }\n                else{\n                    return(\n                        <Alert variant='outlined' severity=\"error\">\n                            <AlertTitle>No es recomendable introducir una planta en periodo de floracion en un armario con periodo Vegetativo</AlertTitle>\n                        </Alert>\n                    )\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className={classes.root}>\n            <form className={classes.form}>\n                {renderInputs()}\n            </form>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport {FormCaracteristicasNuevaPlanta} from '../components/FormCaracteristicasNuevaPlanta'\nimport {FormEtapaNuevaPlanta} from '../components/FormEtapaNuevaPlanta'\nimport addFile from '../images/addFile.svg'\nimport {makeStyles, Paper} from '@material-ui/core'\nimport {StepperAccion} from '../components/StepperAccion'\nimport {ResumenNuevaPlanta} from '../components/ResumenNuevaPlanta'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst getFullDate=()=>{\n    const date = new Date\n    const year = date.getFullYear()\n    let month = date.getMonth()+1\n    month = month<10?month=`0${month}`:month\n    const days = date.getDate()\n    return`${days}/${month}/${year}`\n}\nconst convertirFecha=fecha=>{\n    const year = fecha.slice(0,fecha.indexOf('-'))\n    const month=fecha.slice(fecha.indexOf('-')+1,fecha.lastIndexOf('-'))\n    const day=fecha.slice(fecha.lastIndexOf('-')+1)\n    return `${day}/${month}/${year}`\n}\nconst  NuevaPlanta=(props)=>{\n    const classes = useStyles()\n    let [nombre,setNombre]=useState(undefined)\n    let [genetica,setGenetica]=useState(undefined)\n    let [etapa,setEtapa]=useState(undefined)\n    let [volumenMaceta,setVolumenMaceta]= useState(undefined)\n    let [inicioGerminacion,setInicioGerminacion]= useState(getFullDate())\n    let [inicioVegetativo,setInicioVegetativo]= useState(undefined)\n    let [inicioFloracion,setInicioFloracion]= useState(undefined)\n    \n    const guardarNuevaPlantaDB= async ()=>{\n        console.log(props.periodo==='Floracion'?'fecha':'nofecha')\n        await database().ref().child(props.user.uid).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica?genetica:'Desconocida',\n            volumenMaceta:volumenMaceta?volumenMaceta:null,\n            nacimiento:inicioGerminacion?convertirFecha(inicioGerminacion):null,\n            inicioVegetativo:inicioVegetativo?convertirFecha(inicioVegetativo):null,\n            inicioFloracion:inicioFloracion?convertirFecha(inicioFloracion):props.periodo==='Floracion'? getFullDate():null\n        })\n        props.history.replace('/')\n    }\n    return(\n        <Layout history={props.history} page='Nueva Planta' user={props.user.uid} userVerification={props.user.emailVerified}>\n            <StepperAccion\n                tipoDeAccion='Nueva Planta'\n                confirmarAccion={guardarNuevaPlantaDB}\n                nombre={nombre}\n                etapa={etapa}\n                steps={[\n                    {\n                        title:'Caracteristicas',\n                        content:(\n                            <FormCaracteristicasNuevaPlanta \n                                nombre={nombre} \n                                genetica={genetica} \n                                etapa={etapa}\n                                setNombre={setNombre}\n                                setGenetica={setGenetica} \n                                setEtapa={setEtapa}\n                                volumenMaceta={volumenMaceta}\n                                setVolumenMaceta={setVolumenMaceta}\n                                periodoArmario={props.periodo}\n                                getFullDate={getFullDate}\n                                setInicioGerminacion={setInicioGerminacion}\n                            />\n                        )\n                    },\n                    {\n                        title:'Inicio de Etapas',\n                        content:(\n                            <FormEtapaNuevaPlanta\n                                inicioGerminacion={inicioGerminacion}\n                                inicioVegetativo={inicioVegetativo}\n                                inicioFloracion={inicioFloracion}\n                                setInicioGerminacion={setInicioGerminacion}\n                                setInicioVegetativo={setInicioVegetativo}\n                                setInicioFloracion={setInicioFloracion}\n                                etapa={etapa}\n                                getFullDate={getFullDate}\n                                periodoArmario={props.periodo}\n                            />\n                        )\n                    },\n                ]}\n            />\n        </Layout>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    periodo:state.data.periodo\n})\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme=>({\n  card: {\n    minWidth: 275,\n  },\n  root:{\n      margin:'0'\n  },\n  title: {\n    fontSize: 14,\n    color:theme.palette.secondary.contrastText,\n  },\n  pos: {\n    marginBottom: 12,\n    color:theme.palette.secondary.contrastText,\n  },\n  paper:{\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\n    color:theme.palette.secondary.contrastText,\n    padding: theme.spacing(1)\n},\ncontainerPlantas:{\n    textAlign:'left',\n    paddingLeft:theme.spacing(2),\n    paddingTop:theme.spacing(2)\n},\nlistItemText:{\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n    '& .MuiTypography-colorTextSecondary':{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n    },\n},\ntitle:{\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\n}\n}));\n\nexport const ResumenNuevaPlanta=({})=>{\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n        <List>\n            <ListItem>\n                <ListItemText className={classes.listItemText} primary='Tipo De Poda' />    \n            </ListItem>\n        </List>\n    </div>\n);\n}","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\nimport {AddOutlined} from '@material-ui/icons'\nimport {database} from 'firebase'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n    },\n    form:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center'\n    },\n    firstPaper:{\n        width:'300px',\n        display:'flex',\n        flexDirection:'column',\n        marginTop:theme.spacing(1),\n        padding:theme.spacing(4),\n        backgroundColor:theme.palette.primary.main\n    },\n    secondPaper:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(1),\n        width:'80%',\n        backgroundColor:theme.palette.primary.main\n    },\n    dosisList:{\n        display:'flex',\n        flexWrap:'nowrap',\n        overflow:'auto',\n        width:'100%',\n        marginBottom:theme.spacing(1)\n    },\n    button:{\n        marginTop:theme.spacing(2),\n        marginBottom:theme.spacing(2),\n    }\n}))\n\nexport const FormNuevoAditivoCaracteristicas = ({updateState}) =>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <div className={classes.form}>\n                <TextField label=\"Nombre\"  onChange={e=>{\n                    updateState(e.target.value,'nombre')\n                }}/>\n                <TextField label=\"Marca\"  onChange={e=>{\n                    updateState(e.target.value,'marca')\n                }}/>\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\n                    updateState(e.target.value,'descripcion')\n                }}/>\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\nimport {AddOutlined} from '@material-ui/icons'\nimport {database} from 'firebase'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        paddingTop:theme.spacing(2)\n    },\n    form:{\n        display:'flex',\n        flexDirection:'column',\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1)\n    },\n    firstPaper:{\n        width:'300px',\n        display:'flex',\n        flexDirection:'column',\n        marginTop:theme.spacing(1),\n        padding:theme.spacing(4),\n        backgroundColor:theme.palette.primary.main\n    },\n    secondPaper:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(1),\n        width:'80%',\n        backgroundColor:theme.palette.primary.main\n    },\n    dosisList:{\n        display:'flex',\n        flexWrap:'nowrap',\n        overflow:'auto',\n        width:'100%',\n        marginBottom:theme.spacing(1)\n    },\n    button:{\n        marginTop:theme.spacing(2),\n        marginBottom:theme.spacing(2),\n    }\n}))\n\nexport const FormNuevoAditivoDosificaciones = ({updateState}) =>{\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    const classes = useStyles()\n    return(\n        <div className='container-fluid'>\n            <Button\n                variant='outlined'\n                color='#fff'\n                className={classes.button}\n                startIcon={<AddOutlined/>}\n                onClick={e=>{\n                    setCantidadDeDosis(cantidadDeDosis+=1)\n                }}\n            >\n                Agregar otra dosis\n            </Button>\n            <div className='row flex-nowrap overflow-auto'>\n                {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                    <form className='col-auto d-flex flex-column'>\n                        <TextField label=\"Etapa\"  color='#fff' placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                            updateState(e.target.value,'etapa','dosis'+i)\n                        }}/>\n                        <TextField label=\"Cantidad\" type='number' color='#fff' onChange={e=>{\n                            updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                        }}/>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                id=\"demo-simple-select\"\n                                color='#fff'\n                                onChange={e=>{\n                                    updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                }}\n                            >\n                                <MenuItem value={'1'}>gr/L</MenuItem>\n                                <MenuItem value={'2'}>ml/L</MenuItem>\n                            </Select>\n                        </FormControl>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\n                            <Select\n                                labelId=\"demo-simple-select-label\"\n                                color='#fff'\n                                id=\"demo-simple-select\"\n                                onChange={e=>{\n                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                }}\n                            >\n                                <MenuItem value={'Tierra'}>Tierra</MenuItem>\n                                <MenuItem value={'Foliar'}>Foliar</MenuItem>\n                            </Select>\n                        </FormControl>\n                    </form>\n                ))}\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport addFile from '../images/addFile.svg'\nimport { FormNuevoAditivoCaracteristicas } from '../components/FormNuevoAditivoCaracteristicas'\nimport { FormNuevoAditivoDosificaciones } from '../components/FormNuevoAditivoDosificaciones'\nimport {Redirect} from 'react-router-dom'\nimport {makeStyles,Paper} from '@material-ui/core'\nimport {StepperAccion} from '../components/StepperAccion'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\n\n\nconst NuevoAditivo=(props)=>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const classes = useStyles()\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos =[]\n        if(props.location.props.tipoDeAditivo==='Fertilizantes'){\n            if(props.fertilizantes){\n                newAditivos=props.fertilizantes\n            } \n        }\n        else{\n            if(props.insecticidas){\n                newAditivos=props.insecticidas\n            }\n        }\n        newAditivos.push(newAditivo)\n        switch (props.location.props.tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(props.user.uid).update({\n                    fertilizantes:newAditivos\n                })\n                props.history.goBack()\n                break;\n            case 'Insecticidas':\n                await database().ref().child(props.user.uid).update({\n                    insecticidas:newAditivos\n                })\n                props.history.goBack()\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n\n    if(!props.location.props){\n        return(\n            <Redirect to='Aplicables'/>\n        )\n    }\n    else{\n        return(\n            <Layout page='Nuevo Aditivo' user={props.user.uid} userVerification={props.user.emailVerified} history={props.history}>\n                <StepperAccion\n                confirmarAccion={agregarAditivo}\n                tipoDeAccion='Nuevo Aditivo'\n                steps={[\n                    {\n                        title:'Caracteristicas',\n                        content:(\n                            <FormNuevoAditivoCaracteristicas\n                                updateState={updateState}\n                            />\n                        )\n                    },\n                    {\n                        title:'Dosificaciones',\n                        content:(\n                            <FormNuevoAditivoDosificaciones\n                                updateState={updateState} \n                            />\n                        )\n                    },\n                    ]}\n                />\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    fertilizantes:state.data.fertilizantes,\n    insecticidas:state.data.insecticidas\n})\nexport default connect(mapStateToProps,null)(NuevoAditivo)","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\nimport Configuracion from './Pages/Configuracion';\nimport Historial from './Pages/Historial';\nimport Planta from './Pages/Planta'\nimport PlantaHistorial from './Pages/PlantaHistorial'\nimport PlantaRiegos from './Pages/PlantaRiegos'\nimport PlantaFumigaciones from './Pages/PlantaFumigaciones'\nimport PlantaTransplantes from './Pages/PlantaTransplantes'\nimport PlantaPodas from './Pages/PlantaPodas'\nimport PlantaTimeLine from './Pages/PlantaTimeLine'\nimport PlantaHistorialTimeLine from './Pages/PlantaHistorialTimeLine'\nimport PlantaHistorialRiegos from './Pages/PlantaHistorialRiegos'\nimport PlantaHistorialFumigaciones from './Pages/PlantaHistorialFumigaciones'\nimport PlantaHistorialTransplantes from './Pages/PlantaHistorialTransplantes'\nimport PlantaHistorialPodas from './Pages/PlantaHistorialPodas'\nimport {NotFound} from './Pages/NotFound'\nimport Transplante from './Pages/Transplante'\nimport NuevaPlanta from './Pages/NuevaPlanta'\nimport NuevoAditivo from './Pages/NuevoAditivo'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true,\n    theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'light'\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        console.log(user)\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n    const theme = localStorage.getItem('theme')\n    console.log(theme)\n    if(!theme){\n        localStorage.setItem('theme','light')\n    }\n  }\n  \nsetTheme=theme=>{\n  console.log(theme)\n  this.setState({theme:theme})\n}\n  render(){\n    const themeProvider = createMuiTheme({\n      palette: {\n          white:'#fff',\n          primary: {\n          light: '#48a999',\n          main: '#00796b',\n          dark: '#004c40',\n          contrastText: '#fff',\n          },\n          secondary: {\n          light: '#4f5b62',\n          main: '#263238',\n          dark: '#000a12',\n          contrastText: '#000',\n          },\n          danger:'#c62828',\n          type:this.state.theme\n      },\n  });\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <ThemeProvider theme={themeProvider}>\n              <PantallaDeCarga/>\n          </ThemeProvider>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <ThemeProvider theme={themeProvider}>\n              <Provider store={this.state.store}>\n                <HashRouter>\n                  <Switch>\n                    <Route exact path='/' component={Armario}/>\n                    <Route exact path='/Riego' component={Riego}/>\n                    <Route exact path='/Poda' component={Poda}/>\n                    <Route exact path='/Transplante' component={Transplante}/>\n                    <Route exact path='/Insecticida' component={Insecticida}/>\n                    <Route exact path='/Aplicables' component={Aplicables}/>\n                    <Route exact path='/Configuracion' render={(props) => <Configuracion {...props} setTheme={this.setTheme} />}/>\n                    <Route exact path='/Historial' component={Historial}/>\n                    <Route exact path='/Planta' component={Planta}/>\n                    <Route exact path='/Historial/Planta' component={PlantaHistorial}/>\n                    <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\n                    <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\n                    <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\n                    <Route exact path='/Planta/Timeline' component={PlantaTimeLine}/>\n                    <Route exact path='/Planta/Podas' component={PlantaPodas}/>\n                    <Route exact path='/Planta/Transplantes' component={PlantaTransplantes}/>\n                    <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                    <Route exact path='/Historial/Planta/Riegos' component={PlantaHistorialRiegos}/>\n                    <Route exact path='/Historial/Planta/Timeline' component={PlantaHistorialTimeLine}/>\n                    <Route exact path='/Historial/Planta/Podas' component={PlantaHistorialPodas}/>\n                    <Route exact path='/Historial/Planta/Transplantes' component={PlantaHistorialTransplantes}/>\n                    <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaHistorialFumigaciones}/>\n                    <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                  </Switch>\n                </HashRouter>\n              </Provider>\n            </ThemeProvider>\n        )\n      }\n      else{\n        return (\n          <ThemeProvider theme={themeProvider}>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={SignInPage}/>\n                <Route exact path='/Login' component={LogInPage}/>\n                <Route  component={NotFound}/>\n              </Switch>\n            </HashRouter>\n          </ThemeProvider>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}