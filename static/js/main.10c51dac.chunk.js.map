{"version":3,"sources":["alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","components/TemperaturaYHumedad.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Armario.jsx","Pages/Layout.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/FormularioAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","components/ElegirTipoDePoda.jsx","App.js","Pages/Poda.jsx","reducers/index.js","Pages/PantallaDeCarga.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","onClick","e","alertRiegos","icon","faTint","alertPodas","faCut","alertFumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","idPlanta","tipoDeAccion","remove","alert","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","Object","keys","map","aditivo","i","key","AlertPodas","podas","reverse","AlertRiego","riegos","fumigaciones","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","Card","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","database","setState","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","push","format","alertNuevaPlanta","plantas","faPlusCircle","connect","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","style","width","calcularEstadoDeBarra","horaDeFinal","horaDeInicio","dif","time","add","hours","parseInt","minutes","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","MenuButton","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","to","faCogs","closeNavbar","Armario","menuOpened","AlertCambiarInicio","update","horas","changeStateOfNavbar","faAlignRight","Layout","children","AlertConfirmarAccion","accionfn","history","goBack","NavBarAccion","CheckboxPlanta","checked","handleClick","llave","ElegirPlantaAccion","selectedPlants","selected","Accordion","Toggle","as","Header","length","eventKey","Collapse","seleccionarPlanta","ElegirTipoDeRiego","cambiarTipoDeRiego","BotoneraConfirmacionAccion","faCheck","confirmarAccion","FormularioAccion","cantidadDeAgua","aditivosUsados","Form","Group","Label","htmlFor","Control","onChange","cambiarLitrosDeAgua","target","OverlayTrigger","trigger","placement","overlay","Popover","Title","Content","dosis","tipoDeDosis","cambiarAditivo","eliminarAditivo","Riego","regar","planta","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","defaultActiveKey","adivito","Insecticida","platnas","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","rows","AlertNuevoAditivo","tipoDeAditivo","useState","inputs","setInputs","ClasificarDosis","dosisArr","dosis1","dosis2","dosis3","dosis4","Foliar","check","etapa","agregarAditivo","newAditivo","marca","descripcion","valor","TableAditivos","splice","bordered","faSortDown","Body","tipoDeAplicacion","aplicacion","TabAditivos","setKey","Tabs","activeKey","onSelect","k","Tab","Aplicables","ElegirTipoDePoda","placeholder","handleChange","store","data","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","PantallaDeCarga","faCannabis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","loading","on","snapshot","val","createStore","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.10c51dac.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nclass DetallePlanta extends Component{\n    render(){\n        return(\n            <Row className=\"mt-4 mb-4 align-items-center\">\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\n                </Col>\n                <Col md={8} className=\"align-self-center\">\n                    <Container className=\"container\">\n                        <Table striped hover variant='dark' >\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Genetica</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Edad</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Fecha de Germinacion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Vegetativo</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioVegetativo?\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\n                                                :\n                                                '--/--/----'\n                                            }</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Floracion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioFloracion?\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Container>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetallePlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nclass DetalleAcciones extends Component{\n    render(){\n        return(\n            <Row className=\"pt-2 pb-2 botonera justify-content-start \">\n                <Col md={'auto'} className=\"align-self-center\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertRiegos()\n                    }}>\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Riegos</small>\n                    </div>\n                </Col>\n                <Col md={'auto'} className=\"align-self-center\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertPodas()\n                    }}>\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Podas</small>\n                    </div>\n                </Col>\n                <Col md={\"auto\"}className=\"align-self-center\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertFumigaciones()\n                    }}>\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetalleAcciones","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"col text-left\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col text-right\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {storage} from 'firebase'\nclass AlertPlanta extends Component{\n    subirArchivo= async ()=>{\n        const ref = await storage().ref(this.props.id)\n        const file = document.getElementById('input').files[0]\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\n        ref.put(file).then(e=>{\n            console.log('Archivo subido Correctamente')\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\n                />\n                <DetallePlanta \n                    genetica={this.props.genetica}\n                    edad={this.props.edad}\n                    nacimiento={this.props.nacimiento}\n                    inicioVegetativo={this.props.inicioVegetativo}\n                    inicioFloracion={this.props.inicioFloracion}\n                />\n                <DetalleAcciones\n                    alertRiegos={this.props.alertRiegos}\n                    alertPodas={this.props.alertPodas}\n                    alertFumigaciones={this.props.alertFumigaciones}\n                />\n                <div className=\"row mt-4 justify-content-center\">\n                    <div className=\"col-auto\">\n                        <div className=\"btn-group\">\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n        this.props.alert()\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    {this.props.tipoDeAccion==='podas'?\n                        <div className=\"col-auto\">\n                            <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                                {this.props.tipoDePoda?\n                                <>\n                                    <hr/>\n                                    <h5 className='text-dark'>{this.props.tipoDePoda}</h5>\n                                </>\n                                :\n                                null\n                            }\n                        </div>\n                        :\n                        <>\n                            <div className=\"col-auto\">\n                                <h5 className='text-dark'>{this.props.accion.fecha}</h5>\n                            </div>\n                            <div className=\"col-auto\">\n                                <h5 className='text-dark'>{this.props.accion.agua} L de agua</h5>\n                            </div>\n                            <div className=\"col text-right\">\n                                <h5>\n                                    <div className=\"badge badge-pill badge-dark\">\n                                        {this.props.accion.tipoDeRiego}\n                                    </div>\n                                </h5>\n                            </div>\n                        </>\n                    }\n                    <div className=\"col-auto ml-auto\">\n                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.props.accion.aditivos?\n                        Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                            <div className=\"col-auto\" key={aditivo+i}>\n                                <span className='badge badge-pill badge-dark'>\n                                    <div className=\"col-auto\">\n                                        {aditivo}\n                                    </div>\n                                    <div className=\"col-auto\">\n                                        {this.props.accion.aditivos[aditivo]} ml\n                                    </div>\n                                </span>\n                            </div>\n                        ))\n                        :\n                        null\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    {this.props.podas?\n                        <div className=\"list-group\">\n                            {Object.keys(this.props.podas).reverse().map(id=>(\n                                <div className=\"list-group-item list-group-item-action \">\n                                    <AccionDetallada alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                </div>\n                            ))}\n                        </div>\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    {this.props.riegos?\n                        <div className=\"list-group\">\n                            {Object.keys(this.props.riegos).reverse().map(id=>(\n                                <div className=\"list-group-item list-group-item-action \">\n                                    <AccionDetallada alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                </div>\n                            ))}\n                        </div>\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-outline-light\" onClick={e=>{\n                                        \n                                    }}>Riego</button>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nclass alertFumigaciones extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                        {this.props.fumigaciones?\n                            <div className=\"list-group\">\n                                {Object.keys(this.props.fumigaciones).reverse().map(id=>(\n                                    <div className=\"list-group-item list-group-item-action list-group-item-info\">\n                                        <AccionDetallada alert={this.props.alert} accion={this.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                    </div>\n                                ))}\n                            </div>\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-outline-light\">Riego</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                </div>\n            </div>\n        )\n    }\n}\nexport default alertFumigaciones","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/alertPlanta.css'\nimport AlertPlanta from '../alerts/AlertPlanta'\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        alertPlanta={this.alertPlanta}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    alertPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertPlanta\n                        {...this.props}\n                        onClose={onClose}\n                        alertEliminarPlanta={this.alertEliminarPlanta}\n                        alertCambiarCiclo={this.alertCambiarCiclo}\n                        alertRiegos={this.alertRiegos}\n                        alertPodas={this.alertPodas}\n                        alertFumigaciones={this.alertFumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    alertRiegos=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertRiego\n                        idPlanta={this.props.id}\n                        alert={this.alertRiegos}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        riegos={this.props.riegos}\n                    />\n                </div>\n            );\n        }\n    })\n    alertPodas=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertPodas\n                        idPlanta={this.props.id}\n                        alert={this.alertPodas}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        podas={this.props.podas}\n                    />\n                </div>\n            );\n        }\n    })\n    alertFumigaciones=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertFumigaciones\n                        idPlanta={this.props.id}\n                        alert={this.alertFumigaciones}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        fumigaciones={this.props.fumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await database().ref().child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-auto\">\n                <Card className=\"card bg-light\" onClick={this.alertPlanta} >\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h4 className=\"card-title\">{this.props.nombre}</h4>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </Overlay>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-center\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta \n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                            />\n                        ))\n                        :\n                        <>\n                            <div className=\"col-12 text-center\">\n                                <h2 className='text-white'>Aun No hay plantas</h2>\n                                <small>Agrega una!</small>\n                            </div>\n                        </>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            \n            <h1>{this.state.fecha}</h1>\n        )\n    }\n}\nexport default FechaYHora","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\n\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined,\n        descanso:false\n    }\n    actualizarEstado =()=>{\n        let transcurrido = this.calcularTranscurrido()\n        const cicloLuminico = this.actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            this.setState({\n                descanso:true\n            })\n        }\n        else{\n            this.setState({\n                descanso:false\n            })\n        }\n        this.setState({\n            cicloLuminico: cicloLuminico,\n            transcurrido: transcurrido,\n            faltante:this.calcularFaltante()\n        })\n        return [transcurrido,cicloLuminico]\n    }\n    actualizarBarraDeProgreso=()=>{\n        const elements=this.actualizarEstado()\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    componentDidMount(){\n        const interval = setInterval(() => {\n            this.actualizarBarraDeProgreso()\n        }, 1000);\n        this.actualizarBarraDeProgreso()\n        this.actualizarEstado()\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            console.log(dif)\n            dif<9?\n                this.state.descanso?\n                    time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                    :\n                    time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n                :\n                this.state.descanso?\n                    time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                    :\n                    time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            console.log(dif)\n            dif<9?\n                this.state.descanso?\n                    time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                    :\n                    time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n                :\n                this.state.descanso?\n                    time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                    :\n                    time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n                    \n                moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const time = moment(this.props.horaDeInicio,'h').diff(moment().add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            const time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n            const hours = parseInt(time/60)\n            const minutes = time%60\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n    }\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <FechaYHora/>\n                    </div>\n                </div>\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.descanso?\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-dark'>\n                                Descansando...\n                            </span>\n                        </div>\n                        :\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-success'>\n                                Creciendo...\n                            </span>\n                        </div>\n                    }\n                </div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-10 offset-1\">\n                        <div className=\"progress\">\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React, {Component} from 'react'\nclass TempreaturaYHumedad extends Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center\">\n                    <div className=\"col text-center\">\n                        <h4>\n                            <span className='badge badge-pill badge-info'>\n                                - C\n                            </span>\n                        </h4>\n                    </div>\n                    <div className=\"col\">\n                        <h4>\n                            <span className='badge badge-pill badge-info'>\n                                h - %\n                            </span>\n                        </h4>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default TempreaturaYHumedad","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    position:absolute;\n    z-index:1;\n    top:2%;\n    right:2%;\n    font-size:2rem;\n    cursor:pointer\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nclass Navbar extends Component{\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\nimport TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faAlignRight} from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    changeStateOfNavbar =() =>{\n        this.setState({menuOpened:!this.state.menuOpened})\n    }\n    render(){\n        return(\n            <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\n                {this.state.menuOpened?\n                    <Navbar alertConfiguracion={this.alertConfiguracion}closeNavbar={this.changeStateOfNavbar}/>\n                    :\n                    <MenuButton onClick={e=>{\n                        this.changeStateOfNavbar()\n                    }}>\n                        <FontAwesomeIcon icon={faAlignRight}/>\n                    </MenuButton>\n                }\n                <div className='row'>\n                    <div className='col'>\n                        <BarraDeLuz/>            \n                    </div>\n                </div>\n                <div className='row'>\n                    <CarouselPlantas/>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nclass Layout extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                    {this.props.children}\n            </div>\n        )\n    }\n}\nexport default Layout","import React , {Component} from 'react'\nimport { Link } from 'react-router-dom'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card,Button} from 'react-bootstrap'\n\nclass ElegirPlantaAccion extends Component{\n    render(){\n        let selectedPlants= {}\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>{\n                if(this.props.plantas[key].selected){\n                    selectedPlants[this.props.plantas[key].nombre]=true\n                }\n            })\n        }\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={Object.keys(selectedPlants).length?'text-light bg-success':'text-dark'} eventKey=\"0\" role='button'>\n                                Elige Las Plantas\n                                <div className=\"row\">\n                                    {selectedPlants?\n                                    Object.keys(selectedPlants).map(nombre=>(\n                                        <div className=\"col-auto\">\n                                            <span className='badge badge-pill badge-light p-2'>\n                                                {nombre}\n                                            </span>\n                                        </div>\n                                    ))\n                                    :\n                                    null\n                                    }\n                                </div>\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"0\">\n                            <div className=\"row my-2 justify-content-center\">\n                                {this.props.plantas?\n                                    Object.keys(this.props.plantas).map(key=>(\n                                        <CheckboxPlanta checked={this.props.plantas[key].selected} llave={key} key={key} handleClick={e=>{\n                                            this.props.seleccionarPlanta(key)\n                                        }}/>\n                                    ))\n                                :\n                                null\n                                }\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirPlantaAccion","import React, {Component} from 'react'\nimport {Row,Col,Accordion,Card,Button} from 'react-bootstrap'\nimport './styles/accion-card.css'\n\nclass ElegirTipoDeRiego extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.tipoDeRiego?'text-white bg-success ':'text-dark'} eventKey=\"1\">\n                                Elige El tipo de Riego {this.props.tipoDeRiego?<strong>({this.props.tipoDeRiego})</strong>:null}\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <div className=\"row my-2\">\n                                <div className=\"col text-center\">\n                                    <button type='button' className={this.props.tipoDeRiego==='Tierra'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Tierra')}}>\n                                        Tierra\n                                    </button>\n                                </div>\n                                <div className=\"col text-center\">\n                                    <button type='button' className={this.props.tipoDeRiego==='Foliar'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Foliar')}}>\n                                        Foliar\n                                    </button>\n                                </div>\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirTipoDeRiego","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Link} from 'react-router-dom'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                    <div className=\"col text-center\">\n                        <FontAwesomeIcon icon={faCheck} className='icon continueIcon' onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }/>\n                    </div>\n                <div className=\"col text-center\">\n                    <Link to='/'>\n                        <FontAwesomeIcon icon={faTimes} className='icon cancelIcon'/>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import React , {Component} from 'react'\nimport {Row,Col,Form,Accordion,Card,Button,Popover,OverlayTrigger, Overlay} from 'react-bootstrap'\nclass FormularioAccion extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.cantidadDeAgua || this.props.aditivosUsados?'text-light overflow-auto flex-nowrap bg-success':'text-dark overflow-auto flex-nowrap'} eventKey=\"2\">\n                                Cantidad de Agua y Aditivos\n                                <div className=\"row\">\n                                    <div className=\"col-auto mr-auto ml-auto\">\n                                        {this.props.cantidadDeAgua?\n                                            this.props.cantidadDeAgua + ' L.'\n                                            :\n                                            null\n                                        }\n                                    </div>\n                                </div>\n                                <div className=\"row mt-2\">\n                                    {this.props.aditivosUsados?\n                                        <div className=\"col-auto\">\n                                            {Object.keys(this.props.aditivosUsados).map(aditivo=>(\n                                                <span className='badge badge-pill badge-light mr-2 p-2'>\n                                                    {aditivo} {this.props.aditivosUsados[aditivo]}ml\n                                                </span>\n                                            ))}\n                                        </div>\n                                        :\n                                        null}\n                                </div>\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"2\">\n                                <Form>  \n                                    <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                                        <Form.Group>\n                                            <Form.Label htmlFor=\"inputLitos\" className='text-dark'>Litros de Agua</Form.Label>\n                                            <Form.Control type=\"number\"\n                                                onChange={e=>{\n                                                    this.props.cambiarLitrosDeAgua(e.target.value)\n                                                }} \n                                                value={this.props.cantidadDeAgua}\n                                                id='inputLitros'/>\n                                        </Form.Group>\n                                    </Form.Row>\n                                    <Form.Row className='justify-content-center align-items-center flex-column'>\n                                        {this.props.aditivos?\n                                            <>\n                                                <div className=\"form-row\">\n                                                    <div className=\"col-auto\">\n                                                        <p className='text-dark'>Aditivos (ml)</p>\n                                                    </div>\n                                                </div>\n                                                <div className=\"container\">\n                                                    <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                                        {this.props.aditivos.map((aditivo,i)=>(\n                                                            <>  \n                                                                <div className=\"form-group col-4\" key={'input'+i}>\n                                                                    <OverlayTrigger trigger=\"hover\" placement='top' overlay={\n                                                                        <Popover  id=\"popover-basic\">\n                                                                            <Popover.Title as=\"h1\">{aditivo.nombre}</Popover.Title>\n                                                                            <Popover.Content>\n                                                                                <div className=\"container-fluid\">\n                                                                                    {aditivo?\n                                                                                        Object.keys(aditivo.dosis).map(tipoDeDosis=>(\n                                                                                            <div className=\"container\">\n                                                                                                <div className=\"row\">\n                                                                                                    <span className='badge badge-pill badge-dark'>{tipoDeDosis}</span>\n                                                                                                </div>\n                                                                                                {Object.keys(aditivo.dosis[tipoDeDosis]).map(dosis=>(\n                                                                                                    <>\n                                                                                                        <div className=\"row\">\n                                                                                                                <div className=\"col-auto p-0\">\n                                                                                                                    {dosis}\n                                                                                                                </div>\n                                                                                                                <div className=\"col text-right align-self-center p-0\">\n                                                                                                                    {aditivo.dosis[tipoDeDosis][dosis]}\n                                                                                                                </div>\n                                                                                                        </div>\n                                                                                                        <hr/>\n                                                                                                    </>\n                                                                                                ))}\n                                                                                            </div>\n                                                                                        ))\n                                                                                        :\n                                                                                        null\n                                                                                    }\n                                                                                </div>\n                                                                            </Popover.Content>\n                                                                        </Popover>}>\n                                                                        <div className='text-dark'>\n                                                                            {aditivo.nombre}\n                                                                        </div>\n                                                                    </OverlayTrigger>\n                                                                    <input type=\"number\" \n                                                                        className='form-control' \n                                                                        onChange={e=>{\n                                                                            if(e.target.value){\n                                                                                this.props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                            }\n                                                                            else{\n                                                                                this.props.eliminarAditivo([aditivo.nombre])\n                                                                            }\n                                                                        }}\n                                                                    />\n                                                                </div>\n                                                            </>\n                                                        ))}\n                                                    </div>\n                                                </div>\n                                            </>\n                                            :\n                                            null\n                                        }\n                                    </Form.Row>\n                                </Form>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default FormularioAccion","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>{\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n        })\n        this.setState({\n            plantas:plantas,\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.regar}\n                    />\n                </div>\n            );\n        }\n    })\n    regar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarRiegoBD(planta,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:fertilizantes[fertilizante]\n                }\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Riego'\n                />\n                <div className=\"container d-flex flex-column justify-content-start h-100 overflow-auto\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDeRiego\n                            tipoDeRiego={this.state.tipoDeRiego}    \n                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                        />\n                        <FormularioAccion\n                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            cambiarAditivo={this.cambiarAditivo}\n                            adivito='Fertlizante'\n                            aditivos={this.props.aditivos}\n                            aditivosUsados={this.state.aditivos}\n                            eliminarAditivo={this.eliminarAditivo}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Riego'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport FormularioAccion from '../components/FormularioAccion'\nimport { Accordion } from 'react-bootstrap';\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        platnas:undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n            Object.keys(this.props.plantas).map(key=>{\n                plantas={\n                    ...plantas,\n                    [key]:{\n                        selected:false,\n                        nombre:this.props.plantas[key].nombre\n                    },\n                }\n                return\n            })\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.fumigar}\n                    />\n                </div>\n            );\n        }\n    })\n    fumigar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardrarFumigacionDB(planta,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:insecticidas[insecticida]\n                }\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Insecticida'\n                />\n                <div className=\"container d-flex flex-column justify-content-start h-100 overflow-auto\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDeRiego\n                            tipoDeRiego={this.state.tipoDeRiego}\n                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                        />\n                        <FormularioAccion\n                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                            cantidadDeAgua={this.state.cantidadDeAgua}\n                            cambiarAditivo={this.cambiarAditivo}\n                            aditivo='Insecticida'\n                            aditivos={this.props.aditivos}\n                            aditivosUsados={this.state.aditivos}\n                            eliminarAditivo={this.eliminarAditivo}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Fumigacion'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React from 'react'\nimport {Form,Row,Col} from 'react-bootstrap'\nexport const FormNuevoAditivo = ({updateState}) =>{\n    return(\n        <Row>\n            <Col xs={12}>\n                <Form className='d-flex align-items-center'>\n                    <Col xs={6}>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h4 className='text-white'>Caracteristicas</h4>\n                            </div>\n                        </div>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Nombre\n                            </Form.Label>\n                            <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                updateState(e.target.value,'nombre')\n                            }}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Marca\n                            </Form.Label>\n                            <Form.Control type=\"text\" id='marca'onChange={e=>{\n                                updateState(e.target.value,'marca')\n                            }}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label className='text-light'>\n                                Descripcion\n                            </Form.Label>\n                            <Form.Control as='textarea' rows='2' id='descripcion' onChange={e=>{\n                                updateState(e.target.value,'descripcion')\n                            }}/>\n                        </Form.Group>\n                    </Col>\n                    <Col xs={6}>\n                        <div className=\"row\">\n                            <div className=\"col-12 text-center\">\n                                <h4 className='text-white'>Dosificacion</h4>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Etapa\n                                </Form.Label>\n                                <Form.Control type='text' id='etapa1' onChange={e=>{\n                                updateState(e.target.value,'etapa','dosis1')\n                            }}/>\n                            </div>\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Cantidad\n                                </Form.Label>\n                                <Form.Control type='text' id='cantidad1'onChange={e=>{\n                                updateState(e.target.value,'cantidad','dosis1')\n                            }}/>\n                            </div>\n                            <div className=\"col-auto ml-auto mr-auto\">\n                                <Form.Label className='text-light'>\n                                    Foliar?\n                                </Form.Label>\n                                <Form.Control type='checkbox' id='checkbox1'\n                                onChange={e=>{\n                                    updateState(e.target.value,'check','dosis1')\n                                }}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Etapa\n                                </Form.Label>\n                                <Form.Control type='text' id='etapa2'onChange={e=>{\n                                    updateState(e.target.value,'etapa','dosis2')\n                                }}/>\n                            </div>\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Cantidad\n                                </Form.Label>\n                                <Form.Control type='text' id='cantidad2' onChange={e=>{\n                                    updateState(e.target.value,'cantidad','dosis2')\n                                }}/>\n                            </div>\n                            <div className=\"col-auto ml-auto mr-auto\">\n                                <Form.Label className='text-light'>\n                                    Foliar?\n                                </Form.Label>\n                                <Form.Control type='checkbox' id='checkbox2' onChange={e=>{\n                                    updateState(e.target.value,'check','dosis2')\n                                }}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Etapa\n                                </Form.Label>\n                                <Form.Control type='text' id='etapa3' onChange={e=>{\n                                    updateState(e.target.value,'etapa','dosis3')\n                                }}/>\n                            </div>\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Cantidad\n                                </Form.Label>\n                                <Form.Control type='text' id='cantidad3' onChange={e=>{\n                                    updateState(e.target.value,'cantidad','dosis3')\n                                }}/>\n                            </div>\n                            <div className=\"col-auto ml-auto mr-auto\">\n                                <Form.Label className='text-light'>\n                                    Foliar?\n                                </Form.Label>\n                                <Form.Control type='checkbox' id='checkbox3' onChange={e=>{\n                                    updateState(e.target.value,'check','dosis3')\n                                }}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Etapa\n                                </Form.Label>\n                                <Form.Control type='text' id='etapa4' onChange={e=>{\n                                    updateState(e.target.value,'etapa','dosis4')\n                                }}/>\n                            </div>\n                            <div className=\"col-5\">\n                                <Form.Label className='text-light'>\n                                    Cantidad\n                                </Form.Label>\n                                <Form.Control type='text' id='cantidad4' onChange={e=>{\n                                    updateState(e.target.value,'cantidad','dosis4')\n                                }}/>\n                            </div>\n                            <div className=\"col-auto ml-auto mr-auto\">\n                                <Form.Label className='text-light'>\n                                    Foliar?\n                                </Form.Label>\n                                <Form.Control type='checkbox' id='checkbox4' onChange={e=>{\n                                    updateState(e.target.value,'check','dosis4')\n                                }}/>\n                            </div>\n                        </div>\n                    </Col>\n                </Form>\n            </Col>\n        </Row>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[]}) =>{\n    const [inputs,setInputs] = useState({})\n    const ClasificarDosis = ()=>{\n        const dosisArr = [inputs.dosis1,inputs.dosis2,inputs.dosis3,inputs.dosis4]\n        let Riego={}\n        let Foliar={}\n        dosisArr.map(dosis=>{\n            if(dosis){\n                if(dosis.check){\n                    Foliar={\n                        ...Foliar,\n                        [dosis.etapa]:dosis.cantidad\n                    }\n                }\n                else{\n                    Riego={\n                        ...Riego,\n                        [dosis.etapa]:dosis.cantidad\n                    }\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        console.log(Riego,Foliar)\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Riego:Riego,\n                Foliar:Foliar\n            }\n        }\n        const newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,dosis)=>{\n        if(dosis){\n            setInputs({\n                ...inputs,\n                [dosis]:{\n                    ...inputs[dosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nexport const TableAditivos = ({title,aditivos}) =>{\n\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className='overflow-auto'>\n            <Table striped bordered hover variant='dark'>\n                <tbody>\n                    <tr>\n                        <th className=' justify-content-center align-items-center'>\n                            <FontAwesomeIcon icon={faPlusCircle} onClick={e=>{\n                                alertNuevoAditivo()\n                            }}/>\n                        </th>\n                    </tr>\n                    {aditivos?\n                        aditivos.map((aditivo,i)=>(\n                        <Accordion>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='d-flex bg-dark justify-content-between px-4 hover' eventKey=\"1\">\n                                    <div>\n                                        {aditivo.nombre} <span className='badge badge-pill badge-light'>{aditivo.marca}</span>\n                                    </div>\n                                    <FontAwesomeIcon icon={faSortDown}/>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse eventKey=\"1\">\n                                    <Card.Body className='text-dark'>\n                                        <div className=\"container\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <strong>\n                                                        Descripcion\n                                                    </strong>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-left\">\n                                                    <small>\n                                                        {aditivo.descripcion}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                            <hr/>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <strong>\n                                                        Dosificacion\n                                                    </strong>\n                                                </div>\n                                            </div>\n                                            {Object.keys(aditivo.dosis).map(tipoDeAplicacion=>(\n                                                <>\n                                                    <div className=\"row mb-2 mt-2\">\n                                                        <div className=\"col-auto mr-auto\">\n                                                            <span className='badge badge-pill badge-dark'>\n                                                                {tipoDeAplicacion}\n                                                            </span>\n                                                        </div>\n                                                    <hr/>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis[tipoDeAplicacion]).map(aplicacion=>(\n                                                        <div className=\"row\">\n                                                            <div className=\"col-auto mr-auto\">\n                                                                {aplicacion}\n                                                            </div>\n                                                            <div className=\"col-auto ml-auto\">\n                                                                {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                            </div>\n                                                        </div>\n                                                    ))}\n                                                </>\n                                            ))}\n                                            <div className=\"row mt-4\">\n                                                <div className=\"col-auto ml-auto mr-auto\">\n                                                    <button type='button' className='btn btn-dark'>\n                                                        Editar aditivo\n                                                    </button>\n                                                </div>\n                                                <div className=\"col-auto ml-auto mr-auto\">\n                                                    <button type='button' className='btn btn-outline-danger' onClick={e=>{\n                                                        eliminarAditivo(i)\n                                                    }}>\n                                                        Eliminar aditivo\n                                                    </button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Card.Body>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    ))\n                    :\n                    <h1>Agrega {title}</h1>\n                    }\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Tabs,Tab,Row,Col} from 'react-bootstrap'\nimport {TableAditivos} from './TableAditivos'\nexport const TabAditivos = ({fertilizantes,insecticidas}) =>{\n    const [key, setKey] = useState('Fertilizantes');\n    return(\n        <Row>\n            <Col xs={{span:6,offset:3}}>\n                <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\n                    <Tab eventKey=\"Fertilizantes\" title=\"Fertilizantes\">\n                        <TableAditivos title='Fertilizantes' aditivos={fertilizantes}/>\n                    </Tab>\n                    <Tab eventKey=\"Insecticidas\" title=\"Insecticidas\">\n                        <TableAditivos title='Insecticidas' aditivos={insecticidas}/>\n                    </Tab>\n                </Tabs>\n            </Col>\n        </Row>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\n\nclass Aplicables extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid overflow-auto\">\n                <NavBarAccion\n                    title='Aditivos'\n                />\n                <TabAditivos fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        fertilizantes:state.fertilizantes,\n        insecticidas:state.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card,Button} from 'react-bootstrap'\n\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <Card>\n                        <button className='btn btn-link'>\n                            <Accordion.Toggle as={Card.Header} className={this.props.tipoDePoda?'text-light bg-success':'text-dark'} eventKey=\"1\" role='button'>\n                                Ingresa el Tipo de Poda\n                                    {this.props.tipoDePoda?\n                                    <strong className=\"col-auto\">({this.props.tipoDePoda})</strong>\n                                    :\n                                    null\n                                    }\n                            </Accordion.Toggle>\n                        </button>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <div className=\"row my-2 justify-content-center\">\n                                <div className=\"col-4\">\n                                    <input type=\"text\" className='form-control'placeholder='Ej: Apical' onChange={e=>{\n                                        this.props.handleChange(e.target.value)\n                                    }} />\n                                </div>\n                            </div>\n                        </Accordion.Collapse>\n                    </Card>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    const databaseRef = await firebase.database().ref()\n    databaseRef.on('value', snapshot=>{\n      data= snapshot.val()\n      store=createStore(reducer, data)\n      this.setState({loading:false})\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <PantallaDeCarga/>\n      )\n    }\n    else{\n      return (\n        <Provider store={store}>\n          <Layout>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={Armario}/>\n                <Route exact path='/Riego' component={Riego}/>\n                <Route exact path='/Poda' component={Poda}/>\n                <Route exact path='/Insecticida' component={Insecticida}/>\n                <Route exact path='/Aplicables' component={Aplicables}/>\n                <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n              </Switch>\n            </HashRouter>\n          </Layout>\n        </Provider>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { Accordion } from 'react-bootstrap';\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>(\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n        ))\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=(accion)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfirmarAccion\n                        history={this.props.history}\n                        onClose={onClose}\n                        accion={accion}\n                        accionfn={this.podar}\n                    />\n                </div>\n            );\n        }\n    })\n    podar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarPodaBD(planta)\n            }\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Poda'\n                />\n                <div className=\"container d-flex flex-column justify-content-start h-100\">\n                    <Accordion defaultActiveKey='0'>\n                        <ElegirPlantaAccion\n                            seleccionarPlanta={this.seleccionarPlanta}\n                            plantas={this.state.plantas}\n                        />\n                        <ElegirTipoDePoda\n                            handleChange={(nuevoTipoDePoda=>{\n                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                            })}\n                            tipoDePoda={this.state.tipoDePoda}\n                        />\n                    </Accordion>\n                </div>\n                <BotoneraConfirmacionAccion\n                    accion='Poda'\n                    confirmarAccion={this.confirmarAccion}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className=\"App justify-content-center\">\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-12 text-center'>\n                            <h1>Cargando</h1>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center mt-4\">\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}