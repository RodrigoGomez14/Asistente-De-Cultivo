{"version":3,"sources":["alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertFumigaciones.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Armario.jsx","Pages/Layout.jsx","components/NavBarAccion.jsx","alerts/AlertConfirmarAccion.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","App.js","Pages/Poda.jsx","reducers/index.js","Pages/PantallaDeCarga.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","onClick","e","alertRiegos","icon","faTint","alertPodas","faCut","alertFumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","idPlanta","tipoDeAccion","remove","alert","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertPodas","defaultActiveKey","podas","reverse","history","push","AlertRiego","riegos","fumigaciones","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","state","undefined","confirmAlert","customUI","AlertFumigaciones","database","setState","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","format","alertNuevaPlanta","plantas","faPlusCircle","connect","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","MenuButton","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","to","signOut","auth","faCogs","closeNavbar","Button","Armario","menuOpened","AlertCambiarInicio","update","horas","changeStateOfNavbar","faAlignRight","Drawer","anchor","open","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","Layout","children","NavBarAccion","CheckboxPlanta","checked","handleClick","llave","ElegirPlantaAccion","selectedPlants","selected","seleccionarPlanta","ElegirTipoDeRiego","cambiarTipoDeRiego","BotoneraConfirmacionAccion","handleBack","color","confirmarAccion","faCheck","size","td","th","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","FormularioAccion","classes","fluid","Form","TextField","cantidadDeAgua","label","onChange","cambiarLitrosDeAgua","target","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","root","height","display","flexDirection","justifyContent","marginRight","actionsContainer","marginBottom","resetContainer","padding","StepperAccion","steps","resumenAccion","React","useState","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","Step","StepLabel","StepContent","Typography","content","length","Paper","square","elevation","Riego","expanded","regar","planta","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","parseFloat","toFixed","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","platnas","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","lg","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","TableAditivos","splice","bordered","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","TabAditivos","setKey","Tabs","activeKey","onSelect","Tab","Aplicables","image","backgroundColor","palette","grey","paper","alignItems","avatar","secondary","main","form","submit","LoginPage","inputUser","setInputUser","inputPassword","setInputPassword","login","signInWithEmailAndPassword","Grid","container","component","CssBaseline","foto","Avatar","noValidate","required","fullWidth","FormControlLabel","control","Checkbox","Link","href","Box","mt","ElegirTipoDePoda","handleChange","store","data","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","PantallaDeCarga","faCannabis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","loading","on","snapshot","val","createStore","user","currentUser","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.11562f19.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nclass DetallePlanta extends Component{\n    render(){\n        return(\n            <Row className=\"mt-4 mb-4 align-items-center\">\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\n                </Col>\n                <Col md={8} className=\"align-self-center\">\n                    <Container className=\"container\">\n                        <Table striped hover variant='dark' >\n                            <tbody>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Genetica</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Edad</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Fecha de Germinacion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Vegetativo</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioVegetativo?\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\n                                                :\n                                                '--/--/----'\n                                            }</h6>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <h6 className=''>Inicio de Floracion</h6>\n                                    </td>\n                                    <td>\n                                        <h6 className='text-right '>{\n                                            this.props.inicioFloracion?\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\n                                            :\n                                            '--/--/----'\n                                        }</h6>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </Table>\n                    </Container>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetallePlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nclass DetalleAcciones extends Component{\n    render(){\n        return(\n            <Row className=\"pt-2 pb-2 botonera justify-content-center \">\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertRiegos()\n                    }}>\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Riegos</small>\n                    </div>\n                </Col>\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertPodas()\n                    }}>\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Podas</small>\n                    </div>\n                </Col>\n                <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\n                    <div className=\"alertButton\" onClick={e=>{\n                        this.props.alertFumigaciones()\n                    }}>\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default DetalleAcciones","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport DetallePlanta from '../alert-components/DetallePlanta'\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {storage} from 'firebase'\nclass AlertPlanta extends Component{\n    subirArchivo= async ()=>{\n        const ref = await storage().ref(this.props.id)\n        const file = document.getElementById('input').files[0]\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\n        ref.put(file).then(e=>{\n            console.log('Archivo subido Correctamente')\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\n                />\n                <DetallePlanta \n                    genetica={this.props.genetica}\n                    edad={this.props.edad}\n                    nacimiento={this.props.nacimiento}\n                    inicioVegetativo={this.props.inicioVegetativo}\n                    inicioFloracion={this.props.inicioFloracion}\n                />\n                <DetalleAcciones\n                    alertRiegos={this.props.alertRiegos}\n                    alertPodas={this.props.alertPodas}\n                    alertFumigaciones={this.props.alertFumigaciones}\n                />\n                <div className=\"row mt-4 justify-content-center\">\n                    <div className=\"col-auto\">\n                        <div className=\"btn-group\">\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n        this.props.alert()\n    }\n    render(){\n        return(\n            <Card>\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {this.props.tipoDeAccion==='podas'?\n                            <div className='container-fluid'>\n                                <div className=\"row\">\n                                    <div className=\"col-auto\">\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                    </div>\n                                    <div className=\"col-auto ml-auto\">\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {this.props.tipoDePoda?\n                                        <div className='col'>\n                                            <hr/>\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                                :\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                        </div>\n                                        <div className=\"col-auto ml-auto\">\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <h5>\n                                                <div className=\"badge badge-pill badge-light\">\n                                                    {this.props.accion.tipoDeRiego}\n                                                </div>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                    {this.props.accion.aditivos?\n                                        <div className=\"row\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <FontAwesomeIcon icon={faSortDown}/>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                    {this.props.accion.aditivos?\n                        <Accordion.Collapse eventKey={this.props.index}>\n                            <Card.Body>\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                                                <div className=\"col-auto\" key={aditivo+i}>\n                                                    <span className='badge badge-pill badge-dark'>\n                                                        <div className=\"col-auto\">\n                                                            {aditivo}\n                                                        </div>\n                                                        <div className=\"col-auto\">\n                                                            {this.props.accion.aditivos[aditivo]} ml\n                                                        </div>\n                                                    </span>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                        :\n                        null\n                    }\n                </Card>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport { Accordion } from 'react-bootstrap'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.podas?\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item={'Riego'} return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.riegos?\n                            Object.keys(this.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Riego')\n                                        }}>Riegala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport { Accordion } from 'react-bootstrap'\nclass alertFumigaciones extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Fumigaciones' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.fumigaciones?\n                            Object.keys(this.props.fumigaciones).reverse().map((id,i)=>(\n                                <AccionDetallada index={i} alert={this.props.alert} accion={this.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Insecticida')\n                                        }}>Fumigala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default alertFumigaciones","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {Component} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/alertPlanta.css'\nimport AlertPlanta from '../alerts/AlertPlanta'\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertFumigaciones from '../alerts/AlertFumigaciones'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nclass TarjetaPlanta extends Component{\n    state={\n        edad:undefined\n    }\n    alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        nombre={this.props.nombre}\n                        eliminarPlanta={this.eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        alertPlanta={this.alertPlanta}\n                        onClose={onClose}\n                        nombre={this.props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    alertPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertPlanta\n                        {...this.props}\n                        onClose={onClose}\n                        alertEliminarPlanta={this.alertEliminarPlanta}\n                        alertCambiarCiclo={this.alertCambiarCiclo}\n                        alertRiegos={this.alertRiegos}\n                        alertPodas={this.alertPodas}\n                        alertFumigaciones={this.alertFumigaciones}\n                    />\n                </div>\n            );\n        }\n    })\n    alertRiegos=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertRiego\n                        idPlanta={this.props.id}\n                        alert={this.alertRiegos}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        riegos={this.props.riegos}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    alertPodas=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertPodas\n                        idPlanta={this.props.id}\n                        alert={this.alertPodas}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        podas={this.props.podas}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    alertFumigaciones=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui scroll'>\n                    <AlertFumigaciones\n                        idPlanta={this.props.id}\n                        alert={this.alertFumigaciones}\n                        onClose={onClose}\n                        alertPlanta={this.alertPlanta}\n                        nombre={this.props.nombre}\n                        fumigaciones={this.props.fumigaciones}\n                        history={this.props.history}\n                    />\n                </div>\n            );\n        }\n    })\n    componentDidMount(){\n        this.setState({\n            edad:moment().diff(moment(this.props.nacimiento),'days')\n        })\n    }\n    eliminarPlanta=async ()=>{\n        await database().ref().child('plantas').child(this.props.id).remove()\n    }\n    render(){\n        return(\n            <div className=\"col-auto\">\n                <Card className=\"card bg-light\" onClick={this.alertPlanta} >\n                    <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                    <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h4 className=\"card-title\">{this.props.nombre}</h4>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col text-left\">\n                                    <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\n                                </div>\n                            </div>\n                        </div>\n                    </Overlay>\n                </Card>\n            </div>\n        )\n    }\n}\nexport default TarjetaPlanta","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport Planta from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <Planta \n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <>\n                            <div className=\"col-12 text-center\">\n                                <h2 className='text-white'>Aun No hay plantas</h2>\n                                <small>Agrega una!</small>\n                            </div>\n                        </>\n                    }\n                    <div className=\"col-3\">\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            \n            <h1>{this.state.fecha}</h1>\n        )\n    }\n}\nexport default FechaYHora","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\n\n\n\nclass BarraDeLuz extends Component{\n    \n    state={\n        activo:0,\n        faltante:undefined,\n        transcurrido:undefined,\n        lamparaEncendida:undefined,\n        descanso:false\n    }\n    actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\n            console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = this.actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            this.setState({\n                descanso:true\n            })\n        }\n        else{\n            this.setState({\n                descanso:false\n            })\n        }\n        this.setState({\n            cicloLuminico: cicloLuminico,\n            transcurrido: transcurrido,\n            faltante:this.calcularFaltante()\n        })\n        return [transcurrido,cicloLuminico]\n    }\n    actualizarBarraDeProgreso=()=>{\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        console.log()\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n    componentDidMount(){\n        this.actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            this.actualizarBarraDeProgreso()\n        }, 1000);\n        this.setState({\n            interval: interval\n        })\n    }\n    componentWillUnmount(){\n        clearInterval(this.state.interval)\n    }\n    actualizarCicloLuminico(){\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\n        }\n    } \n    calcularFaltante=()=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\n            let time = undefined\n            this.state.descanso?\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    calcularTranscurrido=(lamparaEncendida)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            this.state.descanso?\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    cambiarEstadoDeLampara=()=>{\n        this.setState({\n            lamparaEncendida:!this.state.lamparaEncendida\n        })\n    }\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    render(){\n        return(\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <FechaYHora/>\n                    </div>\n                </div>\n                <div className=\"row mt-4 mb-4\">\n                    <div className=\"col text-center\">\n                        <h3>Periodo {this.props.periodo}</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        Transcurrido (Hs) {this.state.transcurrido}\n                    </div>\n                    <div className=\"col text-center\">\n                        Faltante (Hs) {this.state.faltante}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {this.state.descanso?\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-dark'>\n                                Descansando...\n                            </span>\n                        </div>\n                        :\n                        <div className=\"col text-center\">\n                            <span className='badge badge-pill p-3 badge-success'>\n                                Creciendo...\n                            </span>\n                        </div>\n                    }\n                </div>\n                <div className=\"row mt-4\">\n                    <div className=\"col-10 offset-1\">\n                        <div className=\"progress\">\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps=state=>{\n    return{\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    cursor:pointer;\n    font-size:2.5rem\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport {auth} from 'firebase'\nimport {Redirect} from 'react-router-dom'\nclass Navbar extends Component{\n    signOut=async ()=>{\n        await auth().signOut()\n        return <Redirect to='/'/>\n    }\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\n                                Cerrar Sesion\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport BarraDeLuz from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\nimport {auth} from 'firebase'\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    changeStateOfNavbar =() =>{\n        this.setState({menuOpened:!this.state.menuOpened})\n    }\n    render(){\n        return(\n            <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\n                <div className=\"row\">\n                    <div className=\"col-11 text-right\">\n                        <MenuButton onClick={e=>{\n                            this.setState({menuOpened:true})\n                        }}>\n                            <FontAwesomeIcon icon={faAlignRight}/>\n                        </MenuButton>\n                    </div>\n                </div>\n                <Drawer anchor=\"right\" open={this.state.menuOpened} onClose={e=>{this.setState({menuOpened:false})}}>\n                    <div className=\"container d-flex flex-column h-100 justify-content-between\">\n                        <div>\n                            <List>\n                                <Link to='Riego' className='outline-none text-dark'>\n                                    <ListItem button key={'Regar'} >\n                                        <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                                        <ListItemText primary={'Regar'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='Poda' className='outline-none text-dark'>\n                                    <ListItem button key={'Podar'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                                        <ListItemText primary={'Podar'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='Insecticida' className='outline-none text-dark'>\n                                    <ListItem button key={'Fumigar'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Fumigar'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                        </div>\n                        <div>\n                            <Divider />\n                            <List>\n                                <Link to='/Aplicables' className='outline-none text-dark'>\n                                    <ListItem button key={'Aditivos'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Aditivos'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <Link to='/Aditivos' className='outline-none text-dark'>\n                                    <ListItem button key={'Carencias y Excesos'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Carencias y Excesos'} />\n                                    </ListItem>\n                                </Link>\n                            </List>\n                            <Divider />\n                            <List>\n                                <ListItem button key={'Configuracion'} onClick={e=>{\n                                    this.alertConfiguracion()\n                                    this.setState({menuOpened:false})\n                                    }}>\n                                    <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                                    <ListItemText primary={'Configuracion'} />\n                                </ListItem>\n                            </List>\n                            <Divider />\n                            <List>\n                                <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                                        await auth().signOut()\n                                    }}>\n                                    <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                                    <ListItemText primary={'Cerrar Sesion'} />\n                                </ListItem>\n                            </List>\n                        </div>\n                    </div>\n                </Drawer>\n                <div className='row'>\n                    <div className='col'>\n                        <BarraDeLuz/>            \n                    </div>\n                </div>\n                <div className='row'>\n                    <CarouselPlantas history={this.props.history}/>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n        periodo:state.periodo,\n        horaDeInicio:state.horaDeInicio,\n        horaDeFinal:state.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nclass Layout extends Component{\n    render(){\n        return(\n            <div className=\"App\">\n                {this.props.children}\n            </div>\n        )\n    }\n}\nexport default Layout","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nclass ElegirPlantaAccion extends Component{\n    render(){\n        let selectedPlants= {}\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>{\n                if(this.props.plantas[key].selected){\n                    selectedPlants[this.props.plantas[key].nombre]=true\n                }\n                return null\n            })\n        }\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"container\">\n                        <div className=\"row my-2 justify-content-center\">\n                            {this.props.plantas?\n                                Object.keys(this.props.plantas).map(key=>(\n                                    <CheckboxPlanta checked={this.props.plantas[key].selected} llave={key} key={key} handleClick={e=>{\n                                        this.props.seleccionarPlanta(key)\n                                    }}/>\n                                ))\n                            :\n                            null\n                            }\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirPlantaAccion","import React, {Component} from 'react'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nclass ElegirTipoDeRiego extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2\">\n                        <div className=\"col text-center\">\n                            <button type='button' className={this.props.tipoDeRiego==='Tierra'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Tierra')}}>\n                                Tierra\n                            </button>\n                        </div>\n                        <div className=\"col text-center\">\n                            <button type='button' className={this.props.tipoDeRiego==='Foliar'?'btn btn-success':'btn btn-outline-dark'} onClick={e=>{this.props.cambiarTipoDeRiego('Foliar')}}>\n                                Foliar\n                            </button>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\nexport default ElegirTipoDeRiego","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button} from '@material-ui/core'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <Button\n                        onClick={this.props.handleBack}\n                        className='mr-2'\n                    >\n                        Atras\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }\n                    >\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                        Guardar {this.props.accion}\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }));\n  /*\n  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >    \n                    <Typography>\n                        Cantidad de Agua y Aditivos\n                    </Typography>\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            {props.cantidadDeAgua?\n                                <Typography>\n                                    {props.cantidadDeAgua} L\n                                </Typography>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className=\"col-auto\">\n                            {props.aditivosUsados?\n                                <Typography className=\"col-auto\">\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\n                                        const cantidad = props.aditivosUsados[aditivo]\n                                        return(\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\n                                            </span>\n                                        )\n                                    })}\n                                </Typography>\n                                :\n                                null}\n                        </div>\n                    </div>\n                </ExpansionPanelSummary>*/\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <p className='text-dark'>Aditivos (ml)</p>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))}\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep} orientation=\"vertical\">\n        {steps.map((step, index) => (\n            step?\n                <Step key={step.title}>\n                    <StepLabel>{step.title}</StepLabel>\n                <StepContent>\n                    <Typography>{step.content}</Typography>\n                    <div className={classes.actionsContainer}>\n                        <div>\n                        <Button\n                            disabled={activeStep === 0}\n                            onClick={handleBack}\n                            className={classes.button}\n                        >\n                            Atras\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleNext}\n                            className={classes.button}\n                            disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                        >\n                            {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                        </Button>\n                        </div>\n                    </div>\n                    </StepContent>\n                </Step>\n                :\n                null\n        ))}\n      </Stepper>\n      {activeStep === steps.length && (\n        <Paper square elevation={0} className={classes.resetContainer}>\n            {resumenAccion}\n            <BotoneraConfirmacionAccion\n                accion={tipoDeAccion}\n                handleBack={handleBack}\n                confirmarAccion={confirmarAccion}\n            />\n        </Paper>\n      )}\n    </div>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: undefined,\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>{\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n            return null\n        })\n        this.setState({\n            plantas:plantas,\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarRiegoBD(planta,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Riego'\n                />\n                <StepperAccion \n                    step1='Plantas'\n                    step2='Tipo De Riego'\n                    step3='Cantidad de agua y aditivos'\n                    cantidadDeAgua={this.state.cantidadDeAgua}\n                    tipoDeRiego={this.state.tipoDeRiego}\n                    confirmarAccion={this.confirmarAccion}\n                    resumenAccion={<div>hola</div>}\n                    tipoDeAccion='Riego'\n                    steps={[\n                            {\n                            title:'Plantas',\n                            content:(\n                                <ElegirPlantaAccion\n                                    seleccionarPlanta={this.seleccionarPlanta}\n                                    plantas={this.state.plantas}\n                                    setExpansionExpanded={this.setExpansionExpanded}\n                                    expanded={this.state.expanded}\n                                />\n                            )},\n                            {title:'Tipo De Riego',\n                            content:(\n                                <ElegirTipoDeRiego\n                                    tipoDeRiego={this.state.tipoDeRiego}    \n                                    cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                    setExpansionExpanded={this.setExpansionExpanded}\n                                    expanded={this.state.expanded}\n                                />\n                            )},\n                            {title:'Cantidad De Agua y Aditivos',\n                            content:(\n                                <FormularioAccion\n                                        eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                        tipoDeRiego={this.state.tipoDeRiego}\n                                        cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                        cantidadDeAgua={this.state.cantidadDeAgua}\n                                        cambiarAditivo={this.cambiarAditivo}\n                                        adivito='Fertlizante'\n                                        aditivos={this.props.aditivos}\n                                        aditivosUsados={this.state.aditivos}\n                                        eliminarAditivo={this.eliminarAditivo}\n                                        setExpansionExpanded={this.setExpansionExpanded}\n                                        expanded={this.state.expanded}\n                                    />\n                            )},\n                    ]}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport ElegirTipoDeRiego from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        platnas:undefined,\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n            Object.keys(this.props.plantas).map(key=>{\n                plantas={\n                    ...plantas,\n                    [key]:{\n                        selected:false,\n                        nombre:this.props.plantas[key].nombre\n                    },\n                }\n                return null\n            })\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            \n            if(this.state.plantas[planta].selected){\n                this.guardrarFumigacionDB(planta,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Insecticida'\n                />\n                <StepperAccion \n                    cantidadDeAgua={this.state.cantidadDeAgua}\n                    tipoDeRiego={this.state.tipoDeRiego}\n                    confirmarAccion={this.confirmarAccion}\n                    resumenAccion={<div>Hola</div>}\n                    tipoDeAccion='Fumigacion'\n                    steps={[\n                        {\n                        title:'Plantas',\n                        content:(\n                            <ElegirPlantaAccion\n                                seleccionarPlanta={this.seleccionarPlanta}\n                                plantas={this.state.plantas}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Tipo De Riego',\n                        content:(\n                            <ElegirTipoDeRiego\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Cantidad De Agua y Aditivos',\n                        content:(\n                            <FormularioAccion\n                                eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                cambiarAditivo={this.cambiarAditivo}\n                                aditivo='Insecticida'\n                                aditivos={this.props.aditivos}\n                                aditivosUsados={this.state.aditivos}\n                                eliminarAditivo={this.eliminarAditivo}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                    ]}\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n        aditivos:state.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            setCantidadDeDosis(cantidadDeDosis+=1)\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            {console.log(cantidadDeDosis)}\n            <Container fluid>\n                <Row>\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\n                        <Accordion defaultActiveKey='0'>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Caracteristicas</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\n                                    <div className=\"container\">\n                                        <div className=\"row mt-2\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Nombre\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                                        updateState(e.target.value,'nombre')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Marca\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                                        updateState(e.target.value,'marca')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Descripcion\n                                                    </Form.Label>\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                                        updateState(e.target.value,'descripcion')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Dosificacion</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\n                                        <Form>\n                                            <Container>\n                                                <Row className='flex-nowrap overflow-auto'>\n                                                {dosisList.length?\n                                                    dosisList.map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                    :\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                }\n                                                    <div className=\"col-auto align-self-center\">\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\n                                                        }}/>\n                                                    </div>\n                                                </Row>\n                                            </Container>\n                                        </Form>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nexport const TableAditivos = ({title,aditivos}) =>{\n\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className='overflow-auto'>\n            <Table striped bordered hover variant='dark'>\n                <tbody>\n                    <tr>\n                        <th className=' justify-content-center align-items-center'>\n                            <Button variant='outline-light' onClick={e=>{\n                                    alertNuevoAditivo()\n                                }}>\n                                Nuevo Aditivo\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\n                            </Button>\n                        </th>\n                    </tr>\n                    <tr>\n                        <Accordion defaultActiveKey='0'>\n                            {aditivos?\n                                aditivos.map((aditivo,i)=>(\n                                    <Card key={'aditivo'+i}>\n                                        <Accordion.Toggle as={Card.Header} className='d-flex bg-dark justify-content-between px-4 hover' eventKey={i} >\n                                            <div>\n                                                {aditivo.nombre} <span className='badge badge-pill badge-light'>{aditivo.marca}</span>\n                                            </div>\n                                            <FontAwesomeIcon icon={faSortDown}/>\n                                        </Accordion.Toggle>\n                                        <Accordion.Collapse eventKey={i}>\n                                            <Card.Body className='text-dark'>\n                                                <div className=\"container\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Descripcion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col text-left\">\n                                                            <small>\n                                                                {aditivo.descripcion}\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Dosificacion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\n                                                            <div className=\"row mb-2 mt-2\">\n                                                                <div className=\"col-auto mr-auto\">\n                                                                    <span className='badge badge-pill badge-dark'>\n                                                                        {tipoDeAplicacion}\n                                                                    </span>\n                                                                </div>\n                                                            <hr/>\n                                                            </div>\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                                <div className=\"row\" key={'dosis'+k}>\n                                                                    <div className=\"col-auto mr-auto\">\n                                                                        {aplicacion}\n                                                                    </div>\n                                                                    <div className=\"col-auto ml-auto\">\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </Fragment>\n                                                    ))}\n                                                    <div className=\"row mt-4\">\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\n                                                                alertEditarAditivo(aditivo)\n                                                            }}>\n                                                                Editar aditivo\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-outline-danger' onClick={e=>{\n                                                                eliminarAditivo(i)\n                                                            }}>\n                                                                Eliminar aditivo\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </Card.Body>\n                                        </Accordion.Collapse>\n                                    </Card>\n                                ))\n                                :\n                                <h1>Agrega {title}</h1>\n                            }\n                        </Accordion>\n                    </tr>\n                </tbody>\n            </Table>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Tabs,Tab,Row,Col} from 'react-bootstrap'\nimport {TableAditivos} from './TableAditivos'\nexport const TabAditivos = ({fertilizantes,insecticidas}) =>{\n    const [key, setKey] = useState('Fertilizantes');\n    return(\n        <Row>\n            <Col xs={{span:12,offset:0}} sm={{span:10,offset:1}} md={{span:8,offset:2}} lg={{span:6,offset:3}}>\n                <Tabs id=\"controlled-tab-example\" activeKey={key} onSelect={k => setKey(k)}>\n                    <Tab eventKey=\"Fertilizantes\" title=\"Fertilizantes\">\n                        <TableAditivos title='Fertilizantes' aditivos={fertilizantes}/>\n                    </Tab>\n                    <Tab eventKey=\"Insecticidas\" title=\"Insecticidas\">\n                        <TableAditivos title='Insecticidas' aditivos={insecticidas}/>\n                    </Tab>\n                </Tabs>\n            </Col>\n        </Row>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\n\nclass Aplicables extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid overflow-auto\">\n                <NavBarAccion\n                    title='Aditivos'\n                />\n                <TabAditivos fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        fertilizantes:state.fertilizantes,\n        insecticidas:state.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/apple cookies.jpg'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nexport const LoginPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [inputPassword,setInputPassword]=useState(undefined)\n\n    const login=async()=>{\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n            <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n                <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Inicia Sesion\n            </Typography>\n            <form className={classes.form} noValidate>\n                <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                name=\"email\"\n                value={inputUser}\n                onChange={e=>{setInputUser(e.target.value)}}\n                autoFocus\n                />\n                <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                value={inputPassword}\n                onChange={e=>{setInputPassword(e.target.value)}}\n                label=\"Contrasenia\"\n                type=\"password\"\n                id=\"password\"\n                />\n                <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Recuerdame\"\n                />\n                <Button\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={e=>{login()}}\n                >\n                Ingresar!\n                </Button>\n                <Grid container>\n                <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                    Olvidaste tu contrasenia?\n                    </Link>\n                </Grid>\n                <Grid item>\n                    <Link href=\"#\" variant=\"body2\">\n                    {\"No tienes una cuenta? Registrate!\"}\n                    </Link>\n                </Grid>\n                </Grid>\n                <Box mt={5}>\n                </Box>\n            </form>\n            </div>\n        </Grid>\n        </Grid>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {TextField} from '@material-ui/core'\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={this.props.tipoDePoda} \n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    this.props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {LoginPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n\n    const databaseRef = await firebase.database().ref()\n    databaseRef.on('value', snapshot=>{\n      data= snapshot.val()\n      store=createStore(reducer, data)\n      this.setState({loading:false})\n    })\n  }\n  render(){\n    const user = firebase.auth().currentUser\n    if(this.state.loading){\n      return(\n        <PantallaDeCarga/>\n      )\n    }\n    else{\n      return(\n        <Provider store={store}>\n          <Layout>\n            <HashRouter>\n                <Switch>\n                  {!user?\n                    <Route exact path='/' component={LoginPage}/>\n                    :\n                    <>\n                      <Route exact path='/' component={Armario}/>\n                      <Route exact path='/Riego' component={Riego}/>\n                      <Route exact path='/Poda' component={Poda}/>\n                      <Route exact path='/Insecticida' component={Insecticida}/>\n                      <Route exact path='/Aplicables' component={Aplicables}/>\n                      <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                    </>\n                  }\n                </Switch>\n              </HashRouter>\n          </Layout>\n        </Provider>\n      )\n    }\n  }\n}\n\nexport default App;\n","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n    }\n    seleccionarPlanta=(id)=>{\n        this.setState({\n            plantas:{\n                ...this.state.plantas,\n                [id]:{\n                    ...this.state.plantas[id],\n                    selected:!this.state.plantas[id].selected,\n                }\n            }\n        })\n    }\n    componentDidMount(){\n        let plantas={}\n        Object.keys(this.props.plantas).map(key=>(\n            plantas={\n                ...plantas,\n                [key]:{\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre\n                },\n            }\n        ))\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        Object.keys(this.state.plantas).map(planta=>{\n            if(this.state.plantas[planta].selected){\n                this.guardarPodaBD(planta)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        return(\n            <div className=\"container-fluid accion\">\n                <NavBarAccion\n                    title='Poda'\n                />\n                <StepperAccion \n                    cantidadDeAgua={this.state.cantidadDeAgua}\n                    tipoDePoda={this.state.tipoDePoda}\n                    confirmarAccion={this.confirmarAccion}\n                    resumenAccion={<div>hola</div>}\n                    tipoDeAccion='Poda'\n                    steps={[\n                    {\n                        title:'Plantas',\n                        content:(\n                            <ElegirPlantaAccion\n                                seleccionarPlanta={this.seleccionarPlanta}\n                                plantas={this.state.plantas}\n                            />\n                        )},\n                    {\n                        title:'Tipo De Poda',\n                        content:(\n                            <ElegirTipoDePoda\n                                handleChange={(nuevoTipoDePoda=>{\n                                    this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                })}\n                                tipoDePoda={this.state.tipoDePoda}\n                            />\n                    )}]\n                    }\n                />\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className=\"App justify-content-center\">\n                <div className='container'>\n                    <div className='row'>\n                        <div className='col-12 text-center'>\n                            <h1>Cargando</h1>\n                        </div>\n                    </div>\n                    <div className=\"row justify-content-center mt-4\">\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                            </h2>\n                        </div>\n                        <div className=\"col-auto\">\n                            <h2>\n                                <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                            </h2>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}