{"version":3,"sources":["images/background.png","images/reloj.svg","images/addFile.svg","images/periodo.svg","images/ciclo.svg","images/sea of green.png","images/semilla.svg","images/vegetativo.svg","images/floracion.svg","images/maceta.svg","images/adn.svg","images/balanza.svg","images/cosecha.svg","images/riegos.svg","images/transplante.svg","images/apple cookies.jpg","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/TarjetaArmario.jsx","components/BarraDeLuz.jsx","components/Navbar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","components/FormLogin.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","components/ListConfig.jsx","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","components/DetallePlanta.jsx","components/DetalleAcciones.jsx","components/BotoneraConfiguracionPlanta.jsx","components/InputCantidadCosechada.jsx","Pages/Planta.jsx","Pages/PlantaHistorial.jsx","components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaFumigaciones.jsx","Pages/PlantaTransplantes.jsx","Pages/PlantaPodas.jsx","Pages/PlantaTimeLine.jsx","Pages/PlantaHistorialTimeLine.jsx","Pages/PlantaHistorialRiegos.jsx","Pages/PlantaHistorialFumigaciones.jsx","Pages/PlantaHistorialTransplantes.jsx","Pages/PlantaHistorialPodas.jsx","Pages/NotFound.jsx","components/ElegirNuevaMaceta.jsx","Pages/Transplante.jsx","components/FormCaracteristicasNuevaPlanta.jsx","components/FormEtapaNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","components/ResumenNuevaPlanta.jsx","components/FormNuevoAditivoCaracteristicas.jsx","components/FormNuevoAditivoDosificaciones.jsx","Pages/NuevoAditivo.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","dark","padding","spacing","TarjetaPlanta","props","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","className","Grow","in","timeout","Paper","elevation","to","pathname","id","src","fotoPlanta","alt","console","log","nombre","carousel","display","flexWrap","overflow","textLight","color","contrastText","icon","connect","state","user","uid","plantas","data","Typography","variant","Object","keys","map","key","history","IconButton","AddCircleOutline","Button","endIcon","text","FechaYHora","format","fecha","setFecha","hora","setHora","setInterval","main","flexGrow","marginTop","marginLeft","marginRight","flexDirection","alignItems","minWidth","listText","itemList","fleWrap","width","paperMain","type","secondary","borderRadius","avatar","height","TarjetaArmario","periodo","horaDeInicio","cicloLuminico","convertirHora","Avatar","periodoImg","ListItemText","ciclo","reloj","root","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","minutoDeInicio","minutoFinal","actualizarEstadoDeLampara","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","actualizarBarraDeEstado","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","menuButton","title","danger","error","NavBar","page","plantaId","plantaDelHistorial","setMenuOpened","React","anchorEl","Boolean","AppBar","position","Toolbar","edge","onClick","e","location","replace","goBack","aria-label","ArrowBackRounded","size","Menu","maxWidth","MenuDrawer","menuOpened","image","Drawer","anchor","open","onClose","CardMedia","component","List","ListItem","button","ListItemIcon","HomeOutlined","faTint","faCut","faBug","NatureOutlined","faCogs","a","auth","signOut","faTimes","drawer","app","minHeight","maxHeight","textAlign","justifyContent","fontSize","Layout","children","foto","paddingBottom","CheckboxPlanta","this","checked","handleClick","llave","Component","formControl","margin","selectEmpty","alert","light","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","planta","i","FormControlLabel","control","Checkbox","selected","onChange","value","label","Alert","severity","AlertTitle","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","pos","containerPlantas","paddingLeft","paddingTop","listItemText","ResumenAccion","tipoDePoda","nuevaMaceta","Divider","parseFloat","slice","indexOf","toFixed","resetContainer","paperSecondary","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","etapa","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","rootLastStep","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","database","ref","child","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","heading","typography","pxToRem","secondaryHeading","paperDark","expansionPanel","expandIcon","addButton","deleteButton","deleteText","TableAditivos","splice","update","setExpanded","tipoDeAditivo","startIcon","AddOutlined","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","marca","ExpansionPanelDetails","descripcion","tipoDeAplicacion","j","aplicacion","k","EditOutlined","gutterBottom","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","widht","PantallaDeCarga","faCannabis","form","borderColor","submit","border","background","link","textDecoration","checkBox","linkButtons","FormSignIn","inputUser","setInputUser","inputPassword","setInputPassword","userError","passwordError","logIn","loading","LockOutlined","noValidate","required","fullWidth","helperText","autoFocus","Link","href","grey","objectFit","SignInPage","setloading","setUserError","setPasswordError","signInWithEmailAndPassword","then","catch","code","Grid","container","item","xs","md","FormLogin","inputNombre","setInputNombre","signIn","createUserWithEmailAndPassword","updateProfile","displayName","LogInPage","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","FormControlSwitch","textField","inputCicloLuminico","getFullDate","year","getFullYear","month","getMonth","days","getDate","ListConfig","switchValue","setSwitchValue","cambiarHoraDeInicio","cambiarPeriodo","cambiarCicloLuminico","errorCicloLuminico","setErrorCicloLuminico","horaDeRespaldo","setHoraDeRespaldo","Switch","readOnly","startAdornment","InputAdornment","Array","fill","hour","inicioFloracion","localStorage","getItem","switchModoOscuro","setSwitchModoOscuro","setTheme","setItem","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","historial","overflowX","DetallePlanta","adn","genetica","maceta","volumenMaceta","semilla","vegetativo","inicioVegetativo","floracion","cosecha","balanza","outline","DetalleAcciones","editButton","editText","cosecharButton","success","cosecharText","BotoneraConfiguracionPlanta","cosecharPlanta","eliminarPlanta","InputCantidadCosechada","inputCantidad","setInputCantidad","guardarCantidadCosechada","InputProps","CheckCircle","textShadow","buttonText","buttonDanger","buttonTextDanger","backdrop","zIndex","paperPrimary","gridList","transform","rightPanel","rowBotonera","iniciarVegetativo","setIniciarVegetativo","podas","riegos","fumigaciones","transplantes","remove","tileData","comenzarVegetativo","GridList","cols","tile","GridListTile","edit","delete","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","lineColor","reverse","dateText","dateInnerStyle","convertToArray","acciones","aux","array","arrayRiegos","arrayFumigaciones","arrayPodas","arrayTransplantes","riego","fumigacion","poda","transplante","sort","b","obtenerArray","NotFound","ElegirNuevaMaceta","nuevoVolumen","Transplante","transplantar","setNuevaMaceta","guardarTransplanteDB","input","inputWrapper","FormCaracteristicasNuevaPlanta","setNombre","setGenetica","setVolumenMaceta","setInicioGerminacion","setEtapa","FormEtapaNuevaPlanta","periodoArmario","inicioGerminacion","setInicioVegetativo","setInicioFloracion","placeholder","renderInputs","guardarNuevaPlantaDB","firstPaper","secondPaper","dosisList","FormNuevoAditivoCaracteristicas","updateState","multiline","FormNuevoAditivoDosificaciones","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","vacio","store","inputs","setInputs","setDosis","agregarAditivo","ClasificarDosis","Foliar","newAditivo","Tierra","valor","indexDosis","newDosis","tipoDeDosis","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","themeProvider","createMuiTheme","white","ThemeProvider","exact","path","Armario","Aplicables","render","Historial","Planta","PlantaHistorial","NuevaPlanta","NuevoAditivo","PlantaRiegos","PlantaTimeLine","PlantaPodas","PlantaTransplantes","PlantaFumigaciones","PlantaHistorialRiegos","PlantaHistorialTimeLine","PlantaHistorialPodas","PlantaHistorialTransplantes","PlantaHistorialFumigaciones","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.68c56145.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c43b7cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/reloj.824ae534.svg\";","module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/periodo.8f445686.svg\";","module.exports = __webpack_public_path__ + \"static/media/ciclo.1fb4973b.svg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.837d7016.png\";","module.exports = __webpack_public_path__ + \"static/media/semilla.8d6d8461.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetativo.03c6ad6b.svg\";","module.exports = __webpack_public_path__ + \"static/media/floracion.a3290606.svg\";","module.exports = __webpack_public_path__ + \"static/media/maceta.f2707776.svg\";","module.exports = __webpack_public_path__ + \"static/media/adn.4b7d438c.svg\";","module.exports = __webpack_public_path__ + \"static/media/balanza.8463ba47.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosecha.db5aeefe.svg\";","module.exports = __webpack_public_path__ + \"static/media/riegos.daab22d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/transplante.e7b5eb30.svg\";","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {useState,useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nimport {Link} from 'react-router-dom'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Grow} from '@material-ui/core' \r\nimport {makeStyles} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor:theme.palette.primary.dark,\r\n      padding:theme.spacing(1)\r\n    },\r\n  }));\r\n\r\nexport const TarjetaPlanta=(props)=>{\r\n    let [edad,setEdad]=useState(undefined)\r\n    useEffect(()=>{\r\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\r\n    })\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"col-auto\">\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={6} className={classes.paper}>\r\n                    <Link className='text-white' to={{\r\n                        pathname:'/Planta',\r\n                        props:{\r\n                            id:props.id\r\n                        }\r\n                    }}>\r\n                        <Card className=\"card\" >\r\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            {console.log(props)}\r\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Overlay>\r\n                        </Card>\r\n                    </Link>\r\n                </Paper>\r\n            </Grow>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {TarjetaPlanta} from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport {Button,Typography,Grow,IconButton,makeStyles} from '@material-ui/core'\r\nimport {AddCircleOutline} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme=>({\r\n    carousel:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto'\r\n    },\r\n    textLight:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    icon:{\r\n        color: theme.palette.primary.contrastText\r\n    }\r\n}))\r\nconst CarouselPlantas=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container\">\r\n            {props.plantas?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <Grow in={true}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                <Typography variant='subtitle1' className={classes.textLight}>\r\n                                    Plantas Dentro Del Armario\r\n                                </Typography>\r\n                            </Grow>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <div className={classes.carousel}>\r\n                            {Object.keys(props.plantas).map(key=>(\r\n                                <TarjetaPlanta\r\n                                    user={props.user}\r\n                                    id={key}\r\n                                    key={key}\r\n                                    history={props.history}\r\n                                    nombre={props.plantas[key].nombre}\r\n                                />\r\n                            ))}\r\n                            <div className=\"col-auto align-self-center\">\r\n                                <Grow in={true}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                    <Link to='/Nueva-Planta'>\r\n                                        <IconButton\r\n                                        >\r\n                                            <AddCircleOutline className={classes.icon} />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Grow>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className=\"row mb-3\">\r\n                    <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                        <div className=\"col-12 text-center\">\r\n                            <Typography  variant='h6' className={classes.textLight}>No hay plantas</Typography>\r\n                            <Link to='/Nueva-Planta'>\r\n                                <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutline/>}>\r\n                                    Agrega una!\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Grow>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\r\nimport moment from 'moment'\r\nimport {Typography,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const  FechaYHora=()=>{\r\n    const classes = useStyles()\r\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')}`)\r\n    let [hora,setHora] = useState(` ${moment().format('LT')}`)\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setFecha(`${moment().format('DD/MM/YYYY')}`)\r\n            setHora(`${moment().format('LT')}`)\r\n        }, 1000);\r\n    });\r\n    return(\r\n        <>\r\n            <Typography variant='h4' className={classes.text}>{fecha}</Typography>\r\n            <Typography variant='h4' className={classes.text}>{hora}</Typography>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {Paper,List,ListItem,ListItemText,makeStyles,Grow,Avatar} from '@material-ui/core'\r\nimport periodoImg from '../images/periodo.svg'\r\nimport reloj from '../images/reloj.svg'\r\nimport ciclo from '../images/ciclo.svg'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(1),\r\n        flexGrow:'1',\r\n        marginTop:theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        minWidth:'220px'\r\n    },\r\n    listText:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    itemList:{\r\n        display:'flex',\r\n        fleWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginTop:theme.spacing(2)\r\n    },\r\n    paperMain:{\r\n        display:'flex',\r\n        width:'100%',\r\n        padding:theme.spacing(1),\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    },\r\n    avatar:{\r\n        padding:theme.spacing(1),\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n    }\r\n}))\r\nexport const TarjetaArmario = ({periodo,horaDeInicio,cicloLuminico})=>{\r\n    const convertirHora=hora=>{\r\n        return hora<10?`0${hora}:00 Hs`:`${hora}:00 Hs`\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n            <div className={classes.itemList}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={periodoImg} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Periodo' secondary={periodo}/>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={ciclo} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Ciclo Luminico' secondary={convertirHora(cicloLuminico)}/>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={reloj} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Hora De Inicio' secondary={convertirHora(horaDeInicio)}/>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={reloj} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Hora De Final' secondary={convertirHora(horaDeInicio+cicloLuminico)}/>\r\n                </Paper>\r\n            </div>\r\n        </Grow>\r\n    )\r\n}","import React, {useEffect,useState} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {FechaYHora} from '../components/FechaYHora'\r\nimport './styles/table.css'\r\nimport {Paper,Typography} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grow}from '@material-ui/core'\r\nimport {TarjetaArmario} from '../components/TarjetaArmario'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        width:'100%',\r\n        padding:theme.spacing(2),  \r\n    },\r\n    text:{\r\n        color: theme.palette.primary.contrastText\r\n    }\r\n}));\r\n\r\nexport const BarraDeLuz=(props)=>{\r\n    let [activo,setActivo]=useState(0)\r\n    let [faltante,setFaltante]=useState(undefined)\r\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\r\n    let [transcurrido,setTranscurrido]=useState(undefined)\r\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\r\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\r\n    let [intervalo,setIntervalo]=useState(undefined)\r\n\r\n    const getMinutes=(moment)=>{\r\n        const date = new Date()\r\n        const minutes= date.getMinutes()+date.getHours()*60\r\n        return minutes\r\n    }\r\n    const actualizarEstadoDeLampara=(minutes)=>{\r\n        let minutoDeInicio = props.horaDeInicio*60\r\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\r\n        if(minutoFinal>1440){\r\n            if(minutes<minutoDeInicio){\r\n                minutoFinal=minutoFinal-1440\r\n                if(minutes<minutoFinal){\r\n                    setLampraEncendida(true)\r\n                }\r\n                else{\r\n                    setLampraEncendida(false)\r\n                }\r\n            }\r\n            else{\r\n                setLampraEncendida(true)\r\n            }\r\n        }\r\n        else{\r\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\r\n                setLampraEncendida(true)\r\n            }\r\n            else{\r\n                setLampraEncendida(false)\r\n            }\r\n        }\r\n    }\r\n    const actualizarTranscurrido=minutes=>{\r\n\r\n        let minutoDeInicio = props.horaDeInicio*60\r\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\r\n        if(minutoFinal>1440){\r\n            if(minutes<minutoDeInicio){\r\n                minutoFinal=minutoFinal-1440\r\n                if(minutes<minutoFinal){\r\n                    console.log(minutes+(1440-minutoDeInicio))\r\n                }\r\n                else{\r\n                    console.log(minutes-minutoFinal)\r\n                }\r\n            }\r\n            else{\r\n                console.log(minutes-minutoDeInicio)\r\n            }\r\n        }\r\n        else{\r\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\r\n                console.log(minutes-minutoDeInicio)\r\n            }\r\n            else{\r\n                console.log(minutoFinal-minutes)\r\n            }\r\n        }\r\n\r\n\r\n        if(lamparaEncendida){\r\n            setTranscurrido(minutes-(props.horaDeInicio*60))\r\n            console.log(minutes-(props.horaDeInicio*60))\r\n        }\r\n        else{\r\n            if(props.horaDeInicio+props.cicloLuminico>24){\r\n                setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico-24)*60))\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n    }\r\n    const actualizarFaltante=minutes=>{\r\n        if(lamparaEncendida){\r\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\r\n            setFaltante(diferencia)\r\n        }\r\n        else{\r\n            if(props.horaDeInicio+props.cicloLuminico>24){\r\n                const diferencia = ((props.horaDeInicio)*60)-minutes\r\n                setFaltante(diferencia)\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n    }\r\n    const actualizarBarraDeEstado=()=>{\r\n        const barra = document.getElementById('barraLuz')\r\n        if(lamparaEncendida){\r\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n        else{\r\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\r\n            console.log(porcentaje)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        const minutes= getMinutes()\r\n        actualizarEstadoDeLampara(minutes)\r\n        actualizarTranscurrido(minutes)\r\n        actualizarFaltante(minutes)\r\n        actualizarBarraDeEstado()\r\n    })\r\n    const calcularHoraFinal=()=>{\r\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\r\n        if(horaDeFinal>24){\r\n            horaDeFinal=horaDeFinal-24\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00 +1`\r\n        }\r\n        else{\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00`\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Grow in={true}\r\n        {...(true ? { timeout: 1500 } : {})}>\r\n            <div className={classes.root}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto ml-auto mr-auto\">\r\n                            <FechaYHora/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {!lamparaEncendida?\r\n                            <div className=\"col text-center\">\r\n                                <Typography variant='h6' className={classes.text}>\r\n                                    Descansando...\r\n                                </Typography>\r\n                            </div>\r\n                            :\r\n                            <div className=\"col text-center\">\r\n                                <Typography variant ='h6' className={classes.text}>\r\n                                    Creciendo...\r\n                                </Typography>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"progress\">\r\n                                <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <TarjetaArmario periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Grow>\r\n    )\r\n}","import React , {useState}from 'react'\r\nimport {makeStyles, Hidden} from '@material-ui/core'\r\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel,Avatar,Menu,MenuItem} from '@material-ui/core'\r\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nimport {auth} from 'firebase'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles( theme=>({\r\n    appBar:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    avatar:{\r\n        color: theme.palette.primary.contrastText,\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    danger:{\r\n        color:theme.palette.error.main\r\n    }\r\n}))\r\n\r\nexport const NavBar = ({page,plantaId,history,plantaDelHistorial,setMenuOpened}) =>{\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleMenu = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n    return(\r\n        <AppBar className={classes.appBar} position=\"static\" >\r\n            <Toolbar>\r\n            {page!=='Armario'&&\r\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                    if(plantaId){\r\n                        if(plantaDelHistorial){\r\n                            if(history.location.pathname==='/Historial/Planta'){\r\n                                history.replace('/Historial')\r\n                            }\r\n                            else{\r\n                                history.replace({\r\n                                    pathname:'/Historial/Planta',\r\n                                    props:{\r\n                                        id:plantaId\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(history.location.pathname==='/Planta'){\r\n                                history.replace('/')\r\n                            }\r\n                            else{\r\n                                history.replace({\r\n                                    pathname:'/Planta',\r\n                                    props:{\r\n                                        id:plantaId\r\n                                    }\r\n                                })\r\n                            }\r\n                        }\r\n                    }\r\n                    else{\r\n                        history.goBack()\r\n                    }\r\n                }} color=\"inherit\" aria-label=\"menu\">\r\n                    <ArrowBackRounded />\r\n                </IconButton>\r\n            }\r\n            <Typography variant=\"h6\" className={classes.title} >\r\n                {page}\r\n            </Typography>\r\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                setMenuOpened(true)\r\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport {auth} from 'firebase'\r\nimport {Card,CardMedia,} from '@material-ui/core'\r\nimport {HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug , faCogs, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    paper:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main\r\n    },\r\n    icon:{\r\n        color:\r\n            theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n}))\r\nexport const MenuDrawer = ({menuOpened,setMenuOpened,image,history})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\r\n            <Paper className={classes.paper} elevation={6}>\r\n                <Card>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Sea Of Green\"\r\n                        image={image}\r\n                        title=\"Sea Of Green\"\r\n                    />\r\n                </Card>\r\n                <List>\r\n                    <Link to='/' className='outline-none text-dark'>\r\n                        <ListItem button key={'Armario'} >\r\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Armario'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Riego' className='outline-none text-dark'>\r\n                        <ListItem button key={'Regar'} >\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Regar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Poda' className='outline-none text-dark'>\r\n                        <ListItem button key={'Podar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Podar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Insecticida' className='outline-none text-dark'>\r\n                        <ListItem button key={'Fumigar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Transplante' className='outline-none text-dark'>\r\n                        <ListItem button key={'Transplantar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Transplantar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aplicables' className='outline-none text-dark'>\r\n                        <ListItem button key={'Aditivos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Historial' className='outline-none text-dark'>\r\n                        <ListItem button key={'Historial'}>\r\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aditivos' className='outline-none text-dark'>\r\n                        <ListItem button key={'Carencias y Excesos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Configuracion' className='outline-none text-dark'>\r\n                        <ListItem button key={'Configuracion'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                            await auth().signOut()\r\n                            history.replace('/')\r\n                        }}>\r\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                        <ListItemText primary={'Cerrar Sesion'} />\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n        </Drawer>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {Paper} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\nimport {NavBar} from '../components/Navbar'\r\nimport {MenuDrawer} from '../components/MenuDrawer'\r\nimport foto from '../images/sea of green.png'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n    },\r\n    icon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    app:{\r\n        minHeight: '100vh',\r\n        height: '100vh',\r\n        maxHeight:'100vh',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\n\r\nexport const Layout=({page,children,history,plantaId,user,plantaDelHistorial})=>{\r\n    const classes = useStyles();\r\n    let [menuOpened,setMenuOpened]=useState(false)\r\n    let [selectedTabs,setSelectedTabs]=useState('recents')\r\n    return(\r\n        <Paper className={classes.app}>\r\n            {user &&\r\n            <>\r\n                <NavBar page={page} plantaId={plantaId} plantaDelHistorial={plantaDelHistorial} history={history} setMenuOpened={setMenuOpened}/>\r\n                <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened} image={foto} history={history}/>\r\n            </>\r\n            }\r\n            {children}\r\n        </Paper>\r\n    )\r\n}","import React , {Component,useState} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport {BarraDeLuz} from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database} from 'firebase'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto',\r\n        paddingBottom:theme.spacing(2)\r\n    }\r\n}))\r\nconst Armario=(props)=>{\r\n    const classes = useStyles()\r\n    const cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    const cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    if(!props.periodo||!props.horaDeInicio||!props.cicloLuminico){\r\n        return(\r\n            <Redirect to='/Configuracion'/>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Layout history={props.history} page=\"Armario\" user={props.user}>\r\n                <Paper className={classes.root}>\r\n                    <BarraDeLuz periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico}/>\r\n                    <CarouselPlantas history={props.history}/>\r\n                </Paper>\r\n            </Layout>\r\n        )   \r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        cicloLuminico:state.data.cicloLuminico,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab/'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    formControl:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container pt-4\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas.length?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                className={classes.formControl}\r\n                                control={\r\n                                    <Checkbox color='primary'  checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        <div className=\"col-12\">\r\n                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Plantas En el Armario - <Link to='/Nueva-Planta'>Agrega una ahora!</Link> </AlertTitle> </Alert>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                        <FormControlLabel\r\n                            className={classes.radio}\r\n                            value=\"top\"\r\n                            control={<Radio\r\n                                value=\"Tierra\" \r\n                                name=\"Tierra\"\r\n                                color='primary'\r\n                            />}\r\n                            label='Tierra'\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"top\"\r\n                            className={classes.radio}\r\n                            control={<Radio\r\n                                value=\"Foliar\"\r\n                                name=\"Foliar\"\r\n                                color='primary'\r\n                            />}\r\n                            label=\"Foliar\"\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                    </RadioGroup>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    buttonPrimary:{\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport const BotoneraConfirmacionAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n            <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Volver\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={\r\n                            e=>{\r\n                                props.confirmarAccion(props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                    Guardar {props.accion}\r\n                </Button>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Alert,AlertTitle} from '@material-ui/lab';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    title:{\r\n        color: theme.palette.primary.contrastText,\r\n        marginTop:theme.spacing(1)\r\n    }\r\n  }));\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid className='pt-4'>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <Typography variant='h6' className={classes.title}>Aditivos (ml)</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos?\r\n                                        props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        :\r\n                                        <div className=\"col-12\">\r\n                                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </AlertTitle> </Alert>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  root:{\r\n      margin:'0'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    color:theme.palette.secondary.contrastText,\r\n    padding: theme.spacing(1)\r\n},\r\ncontainerPlantas:{\r\n    textAlign:'left',\r\n    paddingLeft:theme.spacing(2),\r\n    paddingTop:theme.spacing(2)\r\n},\r\nlistItemText:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    '& .MuiTypography-colorTextSecondary':{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    },\r\n},\r\ntitle:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n}\r\n}));\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda,nuevaMaceta})=>{\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n            {tipoDePoda &&\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Tipo De Poda' secondary={tipoDePoda}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            {nuevaMaceta &&  \r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Nuevo Volumen De Maceta' secondary={`${nuevaMaceta} Lt`}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            {tipoDeRiego&&cantidadDeAgua&&\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText}  primary='Tipo De Riego' secondary={tipoDeRiego}/>    \r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Cantidad De Agua' secondary={`${cantidadDeAgua} Lt`}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            <Divider/>\r\n            <div className={classes.containerPlantas}>\r\n                <Typography className={classes.title} variant='h6'>\r\n                    Plantas Seleccionadas\r\n                </Typography>\r\n                <List>\r\n                    {plantas.map(planta => (\r\n                        planta.selected &&\r\n                        <ListItem>\r\n                            <ListItemText className={classes.listItemText} primary={planta.nombre}/>    \r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n            <Divider/>\r\n            {tipoDeRiego &&\r\n                <div className={classes.containerPlantas}>\r\n                    <Typography className={classes.title} variant='h6'>\r\n                        Aditivos Usados\r\n                    </Typography>\r\n                    <List>\r\n                        {aditivos?\r\n                            Object.keys(aditivos).map(aditivo=>{\r\n                                const dosis= aditivos[aditivo]\r\n                                return(\r\n                                    <ListItem>\r\n                                        <ListItemText className={classes.listItemText} primary={aditivo} secondary={`${parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} ${dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}`}/>    \r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                            :\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItemText} primary='-'/>    \r\n                            </ListItem>\r\n                        }\r\n                    </List>\r\n                </div>\r\n            }\r\n    </div>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{\r\n    height:'100%',\r\n    width:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'space.around',\r\n    overflow:'auto',\r\n    borderRadius:'0',\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText\r\n    \r\n  },\r\n  buttonPrimary:{\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperSecondary:{\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.primary.dark:theme.palette.primary.main,\r\n    paddingBottom:theme.spacing(2),\r\n    paddingTop:theme.spacing(2),\r\n    borderRadius:'0'\r\n  },\r\n  padding:{\r\n    paddingBottom:theme.spacing(1),\r\n    color:theme.palette.primary.contrastText,\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light\r\n  },\r\n  stepper:{\r\n    backgroundColor:'transparent'\r\n  },\r\n  stepTitle:{\r\n    '& .MuiStepLabel-label':{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n  },\r\n  resetContainer:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    width:'500px'\r\n  },\r\n  rootLastStep:{\r\n    display:'flex',\r\n    justifyContent:'center'\r\n  }\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants,nuevaMaceta,etapa})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(tipoDeAccion==='Nueva Planta'){\r\n      if(activeStep===0){\r\n        return etapa?false:true\r\n      }\r\n    }\r\n    else if(tipoDeAccion==='Nuevo Aditivo'){\r\n      if(activeStep===0){\r\n        return false\r\n      }\r\n    }\r\n    else{\r\n      if(activeStep===0){\r\n        return selectedPlants.length?false:true\r\n      }\r\n      else if(activeStep===1){\r\n        if(tipoDeAccion==='Poda'){\r\n          return tipoDePoda?false:true\r\n        }\r\n        else if(tipoDeAccion==='Transplante'){\r\n          return nuevaMaceta?false:true\r\n        }\r\n        else{\r\n          return tipoDeRiego?false:true\r\n        }\r\n      }\r\n      else if(activeStep===2){\r\n          return cantidadDeAgua?false:true\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n    <Grow in={true}\r\n      {...(true ? { timeout: 1500 } : {})}>\r\n        <div>\r\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\r\n            {steps.map((step, index) => (\r\n              step?\r\n                <Step key={step.title}>\r\n                  <Paper elevation={3} className={classes.paperSecondary}>\r\n                    <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\r\n                  </Paper>\r\n                  <StepContent>\r\n                    <Paper elevation={6} className={classes.padding}>\r\n                        <Typography>{step.content}</Typography>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={classes.button}\r\n                            >\r\n                                Atras\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.buttonPrimary}\r\n                                disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                            >\r\n                                {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                      </Paper>\r\n                    </StepContent>\r\n                </Step>\r\n                :\r\n                null\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length && (\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n              <div className={classes.rootLastStep}>\r\n                <Paper square elevation={6} className={classes.resetContainer}>\r\n                    {resumenAccion}\r\n                    <BotoneraConfirmacionAccion\r\n                        accion={tipoDeAccion}\r\n                        handleBack={handleBack}\r\n                        confirmarAccion={confirmarAccion}\r\n                    />\r\n                </Paper>\r\n              </div>\r\n            </Grow>\r\n          )}\r\n        </div>\r\n      </Grow>\r\n    </Paper>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {Layout} from './Layout'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n        <Layout history={this.props.history} page='Riego' user={this.props.user}>\r\n            <StepperAccion \r\n                step1='Plantas'\r\n                step2='Tipo De Riego'\r\n                step3='Cantidad de agua y aditivos'\r\n                selectedPlants={selectedPlants}\r\n                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                tipoDeRiego={this.state.tipoDeRiego}\r\n                confirmarAccion={this.confirmarAccion}\r\n                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                tipoDeAccion='Riego'\r\n                steps={[\r\n                        {\r\n                        title:'Plantas',\r\n                        content:(\r\n                            <ElegirPlantaAccion\r\n                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                plantas={this.state.plantas}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Tipo De Riego',\r\n                        content:(\r\n                            <ElegirTipoDeRiego\r\n                                tipoDeRiego={this.state.tipoDeRiego}    \r\n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Cantidad De Agua y Aditivos',\r\n                        content:(\r\n                            <FormularioAccion\r\n                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                    tipoDeRiego={this.state.tipoDeRiego}\r\n                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                    cambiarAditivo={this.cambiarAditivo}\r\n                                    adivito='Fertlizante'\r\n                                    aditivos={this.props.aditivos}\r\n                                    aditivosUsados={this.state.aditivos}\r\n                                    eliminarAditivo={this.eliminarAditivo}\r\n                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                    expanded={this.state.expanded}\r\n                                />\r\n                        )},\r\n                ]}\r\n            />\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Fumigacion' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100\">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Fumigacion'\r\n                                steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Tipo De Riego',\r\n                                    content:(\r\n                                        <ElegirTipoDeRiego\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Cantidad De Agua y Aditivos',\r\n                                    content:(\r\n                                        <FormularioAccion\r\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                            cambiarAditivo={this.cambiarAditivo}\r\n                                            aditivo='Insecticida'\r\n                                            aditivos={this.props.aditivos}\r\n                                            aditivosUsados={this.state.aditivos}\r\n                                            eliminarAditivo={this.eliminarAditivo}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{Fragment} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n    },\r\n    paperDark: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText,\r\n        borderRadius:'0'\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    addButton:{\r\n        marginBottom:theme.spacing(1),\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    deleteText:{\r\n        color:theme.palette.error.main\r\n    }\r\n}));\r\n\r\n\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleChange = panel => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <div className=\"container mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <Link to={{\r\n                            pathname:'/Nuevo-Aditivo',\r\n                            props:{\r\n                                tipoDeAditivo:title\r\n                            }\r\n                        }}>\r\n                            <Button \r\n                                variant='text' \r\n                                className={classes.addButton} \r\n                                startIcon={<AddOutlined/>}\r\n                                >\r\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {aditivos?\r\n                    aditivos.map((aditivo,i)=>(\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <Grow in={true}\r\n                            {...(true ? { timeout: 1500 } : {})}>\r\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\r\n                                <Paper elevation={4} className={classes.paperDark}>\r\n                                    <ExpansionPanelSummary\r\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id=\"panel1bh-header\"\r\n                                    >\r\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                </Paper>\r\n                                <Paper elevation={6} className={classes.paperMain}>\r\n                                    <ExpansionPanelDetails>\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row mb-2\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Descripcion\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col text-left\">\r\n                                                    <Typography variant='body2'>\r\n                                                        {aditivo.descripcion}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Dosificaciones\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                    <Typography  variant ='h6'>\r\n                                                            {tipoDeAplicacion}\r\n                                                    </Typography>\r\n                                                    <List>\r\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\r\n                                                            </ListItem> \r\n                                                        ))}\r\n                                                    </List>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                            <div className=\"row my-2 justify-content-around\">\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                    >   \r\n                                                        <EditOutlined />\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption'  gutterBottom>\r\n                                                        Editar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={e=>{eliminarAditivo(i)}}\r\n                                                    >\r\n                                                        <DeleteOutline className={classes.deleteButton}/>\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption' className={classes.deleteText} gutterBottom>\r\n                                                        Eliminar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ExpansionPanelDetails>\r\n                                    </Paper>\r\n                            </ExpansionPanel>\r\n                        </Grow>\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                    :\r\n                    <Typography>Aun no hay ningun Aditivo</Typography>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\r\nimport {TableAditivos} from './TableAditivos'\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paperMain: {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    paperDark: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    borderRadius:'0'\r\n    },\r\n    tabs:{\r\n        \"&.MuiTabs-scroller\":{\r\n            '&.MuiTabs-indicator':{\r\n                color: '#fff'\r\n            }\r\n        },\r\n    },\r\n    tab:{\r\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\r\n            color: '#fff',\r\n        }\r\n    },\r\n  }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [value, setValue] = useState(0);\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container-fluid overflow-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 px-0\">\r\n                    <Paper className={classes.paperDark}>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(e,value)=>{\r\n                                setValue(value)\r\n                            }}\r\n                            className={classes.tabs}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\r\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Aplicables=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page='Aditivos' user={props.user}>\r\n            <Paper elevation={3} className={classes.root}>\r\n                <TabAditivos user={props.user} fertilizantes={props.fertilizantes} insecticidas={props.insecticidas}/>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user.uid,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport {Paper,makeStyles,Typography} from '@material-ui/core'\r\nimport './styles/loading.css'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n        height:'100vh',\r\n        widht:'100%'\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText,\r\n    }\r\n}))\r\nexport const PantallaDeCarga =()=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className='row'>\r\n                <div className='col-12 text-center'>\r\n                    <Typography variant='h2'className={classes.title}>Cargando</Typography>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center mt-4\">\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link,FormControlLabel,Checkbox} from '@material-ui/core'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiOutlinedInput-input':{\r\n        color:theme.palette.primary.contrastText,\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.primary.contrastText\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused':{\r\n        color:theme.palette.secondary.contrastText\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      color:theme.palette.primary.contrastText,\r\n      '&.MuiButton-outlined':{\r\n        border: `1px solid ${theme.palette.primary.contrastText}`\r\n      },\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText,\r\n      '& .MuiLink-underlineHover':{\r\n        textDecoration:'none',\r\n        color:theme.palette.primary.contrastText,\r\n      }\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    checkBox:{\r\n        color: theme.palette.primary.contrastText,\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    linkButtons:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    }\r\n  }));\r\nexport const FormSignIn = ({inputUser,setInputUser,inputPassword,setInputPassword,userError,passwordError,loading,logIn})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Inicia Sesion\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                color='primary'\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                error={userError}\r\n                helperText={userError?'Usuario No Encontrado':null}\r\n                name=\"email\"\r\n                value={inputUser}\r\n                onChange={e=>{setInputUser(e.target.value)}}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                variant=\"filled\"\r\n                color='primary'\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                value={inputPassword}\r\n                helperText={passwordError?'Contraseña incorrecta':null}\r\n                error={passwordError}\r\n                onChange={e=>{setInputPassword(e.target.value)}}\r\n                label=\"contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                />\r\n                <FormControlLabel\r\n                className={classes.checkBox}\r\n                control={<Checkbox value=\"remember\"  />}\r\n                label=\"Recuerdame\"\r\n                />\r\n                <Button\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={e=>{logIn()}}\r\n                >\r\n                Ingresar!\r\n                </Button>\r\n                <div className={classes.linkButtons}>\r\n                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                        Olvidaste tu contraseña?\r\n                    </Link>\r\n                    <Link variant=\"body2\">\r\n                        <LinkRouter to='/Login' className={classes.link}>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                        </LinkRouter>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/background.png'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Layout} from './Layout'\r\nimport {FormSignIn} from '../components/FormSignIn'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  \r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const logIn=async()=>{\r\n        setloading(true)\r\n        setUserError(undefined)\r\n        setPasswordError(undefined)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(()=>{\r\n          setloading(false)\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n          setloading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5}>\r\n              {!loading?\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <FormSignIn logIn={logIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword} userError={userError} passwordError={passwordError} />\r\n              </Paper>\r\n              :\r\n              <PantallaDeCarga/>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n}","import React,{useState} from 'react'\r\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link} from '@material-ui/core'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nimport {auth,database} from 'firebase'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiOutlinedInput-input':{\r\n        color:theme.palette.primary.contrastText,\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.primary.contrastText\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused':{\r\n        color:theme.palette.secondary.contrastText\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      color:theme.palette.primary.contrastText,\r\n      '&.MuiButton-outlined':{\r\n        border: `1px solid ${theme.palette.primary.contrastText}`\r\n      },\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n      color:theme.palette.primary.contrastText\r\n    }\r\n  }));\r\nexport const FormLogin=({setloading,history})=>{\r\n    const classes = useStyles()\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [inputNombre,setInputNombre]=useState(undefined)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [nombreError,setNombreError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n\r\n    const signIn=async()=>{\r\n      setloading(true)\r\n      await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n      .then(async e=>{\r\n          e.user.updateProfile({\r\n            displayName:inputNombre\r\n          })\r\n          await database().ref().child(e.user.uid).update({\r\n              horaDeInicio:'',\r\n              cicloLuminico:'',\r\n              periodo:''\r\n          })\r\n          history.push('/')\r\n          setloading(false)\r\n      })\r\n      .catch(error=>{\r\n        if(error.code==='auth/user-not-found'){\r\n          setUserError(error)\r\n        }\r\n        else{\r\n          setPasswordError(error)\r\n        }\r\n        setloading(false)\r\n      })\r\n  }\r\n    return(\r\n          <div className={classes.root}>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Registrate\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='primary'\r\n                    required\r\n                    fullWidth\r\n                    id=\"Nombre\"\r\n                    label=\"Nombre\"\r\n                    name=\"nombre\"\r\n                    value={inputNombre}\r\n                    onChange={e=>{setInputNombre(e.target.value)}}\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='primary'\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                />\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='secondary'\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  color='#fff'\r\n                  variant=\"outlined\"\r\n                  className={classes.submit}\r\n                  onClick={e=>{signIn()}}\r\n                >\r\n                Registrate!\r\n                </Button>\r\n                <Link variant=\"body2\">\r\n                      <LinkRouter to='/' className={classes.link}>\r\n                        Ya tienes una cuenta? Ingresa!\r\n                      </LinkRouter>\r\n                  </Link>\r\n            </form>\r\n            </div>\r\n          </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth, database} from 'firebase'\r\nimport foto from '../images/background.png'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {Layout} from './Layout'\r\nimport {FormLogin} from '../components/FormLogin'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [loading,setloading]=useState(false)\r\n\r\n    return (\r\n      <Layout>\r\n          <Grid container component=\"main\" className={classes.root}>\r\n              <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n                <img src={foto} alt=\"\" className={classes.img}/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} md={5}>\r\n                {!loading?\r\n                  <Paper elevation={3} className={classes.paper}>\r\n                    <FormLogin setloading={setloading} history={history}/>\r\n                  </Paper>\r\n                  :\r\n                  <PantallaDeCarga/>\r\n                }\r\n            </Grid>\r\n          </Grid>\r\n      </Layout>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ElegirTipoDePoda=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.tipoDePoda}\r\n                            className={classes.radio}\r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:moment().format('LLL'),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Poda' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100 \">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDePoda={this.state.tipoDePoda}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                                tipoDeAccion='Poda'\r\n                                steps={[\r\n                                {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                        />\r\n                                    )},\r\n                                {\r\n                                    title:'Tipo De Poda',\r\n                                    content:(\r\n                                        <ElegirTipoDePoda\r\n                                            handleChange={(nuevoTipoDePoda=>{\r\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                            })}\r\n                                            tipoDePoda={this.state.tipoDePoda}\r\n                                        />\r\n                                )}]\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React,{useState}from 'react'\r\nimport { Paper,ListItem,List,ListItemText,FormControl,InputLabel,Select,MenuItem,makeStyles,Switch,FormControlLabel,TextField,InputAdornment,Grow,Button, Typography } from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {database} from 'firebase'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    paper:{\r\n        marginTop:theme.spacing(1),\r\n        width:'500px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        padding:theme.spacing(1),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n    },\r\n    FormControl:{\r\n        marginTop:theme.spacing(2),\r\n    },\r\n    FormControlSwitch:{\r\n        marginLeft:'auto',\r\n        marginRight:'auto'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    inputCicloLuminico:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nexport const ListConfig =({switchValue,setSwitchValue,horaDeInicio,cambiarHoraDeInicio,periodo,cambiarPeriodo,cicloLuminico,cambiarCicloLuminico,plantas,user})=>{\r\n    const classes = useStyles()\r\n    let [errorCicloLuminico,setErrorCicloLuminico]= useState(undefined)\r\n    let [horaDeRespaldo,setHoraDeRespaldo]= useState(undefined)\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <FormControlLabel\r\n                    className={classes.FormControlSwitch}\r\n                    control={\r\n                        <Switch checked={switchValue} onChange={e=>{setSwitchValue(e.target.checked)}} value=\"switch\" />\r\n                    }\r\n                    label=\"Modo Oscuro\"\r\n                />\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Periodo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        readOnly={periodo&&true}\r\n                        id=\"select\"\r\n                        value={periodo}\r\n                        onChange={e=>{\r\n                            cambiarPeriodo(e.target.value)\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Hora De Inicio Del Ciclo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        id=\"select\"\r\n                        value={horaDeInicio}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">HS</InputAdornment>\r\n                        }\r\n                        onChange={e=>{\r\n                            cambiarHoraDeInicio(e.target.value)\r\n                        }}\r\n                    >\r\n                        {new Array(24).fill(undefined).map((hour,index)=>(\r\n                            <MenuItem value={index}>\r\n                                {index<10?`0${index}:00`:`${index}:00`}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Duracion Del Ciclo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        id=\"select\"\r\n                        value={cicloLuminico}\r\n                        error={errorCicloLuminico}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">HS</InputAdornment>\r\n                        }\r\n                        onChange={e=>{\r\n                            console.log(e.target.value)\r\n                            if(e.target.value<13&&periodo==='Vegetativo'){\r\n                                setErrorCicloLuminico('Si este es menor de 13 Hs el armario pasara al periodo de Floracion, se establecera la fecha de inicio de floracion de cada planta al dia de hoy')\r\n                                setHoraDeRespaldo(e.target.value)\r\n                            }\r\n                            if(e.target.value>=13&&periodo==='Floracion'){\r\n                                setErrorCicloLuminico('Si este es mayor de 13 Hs el armario pasara al periodo Vegetativo')\r\n                                setHoraDeRespaldo(e.target.value)\r\n                            }\r\n                            else{\r\n                                cambiarCicloLuminico(e.target.value)\r\n                            }\r\n                        }}\r\n                    >\r\n                        {new Array(25).fill(undefined).map((hour,index)=>(\r\n                            index&&\r\n                                <MenuItem value={index}>\r\n                                    {index}\r\n                                </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {errorCicloLuminico&&\r\n                <Grow in={true}>\r\n                <   Alert className={classes.alert} variant=\"filled\" severity=\"warning\">\r\n                        <Typography>\r\n                            Quiere cambiar el ciclo luminico a {horaDeRespaldo} HS?\r\n                        </Typography>\r\n                        {errorCicloLuminico}\r\n                        <Button\r\n                            variant='contained'\r\n                            onClick={e=>{\r\n                                const periodo = horaDeRespaldo>=13?'Vegetativo':'Floracion'\r\n                                cambiarCicloLuminico(horaDeRespaldo)\r\n                                cambiarPeriodo(periodo)\r\n                                if(periodo==='Floracion'){\r\n                                    {plantas&&\r\n                                        Object.keys(plantas).map(async key=>{\r\n                                            if(!plantas[key].inicioFloracion){\r\n                                                await database().ref().child(user).child('plantas').child(key).update({\r\n                                                    inicioFloracion:getFullDate()\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }\r\n                                setErrorCicloLuminico(undefined)\r\n                            }}>\r\n                            Continuar\r\n                        </Button>\r\n                    </Alert>\r\n                </Grow>\r\n                }\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nimport {ListConfig} from '../components/ListConfig'\r\nimport {database}from 'firebase'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space.around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Configuracion=(props)=>{\r\n    let [switchModoOscuro,setSwitchModoOscuro]= useState(localStorage.getItem('theme')==='dark'?true:false)\r\n    const setSwitchValue=value=>{\r\n        setSwitchModoOscuro(value)\r\n        if(!value){\r\n            props.setTheme('light')\r\n            localStorage.setItem('theme','light')\r\n        }\r\n        else{\r\n            props.setTheme('dark')\r\n            localStorage.setItem('theme','dark')\r\n        }\r\n    }\r\n    const cambiarHoraDeInicio=horaDeInicio=>{\r\n        database().ref().child(props.user).update({\r\n            horaDeInicio:horaDeInicio\r\n        })\r\n    }\r\n    const cambiarPeriodo=periodo=>{\r\n        database().ref().child(props.user).update({\r\n            periodo:periodo\r\n        })\r\n    }\r\n    const cambiarCicloLuminico=cicloLuminico=>{\r\n        database().ref().child(props.user).update({\r\n            cicloLuminico:cicloLuminico\r\n        })\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page='Configuracion' user={props.user}>\r\n            <Paper className={classes.root}>\r\n                <ListConfig\r\n                    user={props.user}\r\n                    switchValue={switchModoOscuro} \r\n                    setSwitchValue={setSwitchValue} \r\n                    horaDeInicio={props.horaDeInicio}\r\n                    cambiarHoraDeInicio={cambiarHoraDeInicio}\r\n                    periodo={props.periodo} \r\n                    cambiarPeriodo={cambiarPeriodo}\r\n                    cicloLuminico={props.cicloLuminico}\r\n                    cambiarCicloLuminico={cambiarCicloLuminico}\r\n                    plantas={props.plantas}\r\n                />\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas,\r\n    periodo:state.data.periodo,\r\n    horaDeInicio:state.data.horaDeInicio,\r\n    cicloLuminico:state.data.cicloLuminico\r\n})\r\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\r\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {Paper,makeStyles,Grow} from '@material-ui/core'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    root: {\r\n        width: 250,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardHeader:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\r\n    const classes= useStyles()\r\n    return(\r\n        <div className=\"col-auto\">\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={6} className={classes.paper}>\r\n                    <Card className=\"card\" >\r\n                        <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                        <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"col text-left\">\r\n                                        <h4 className=\"card-title text-white\">{nombre}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Overlay>\r\n                    </Card>\r\n                </Paper>\r\n            </Grow>\r\n        </div>\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Typography} from '@material-ui/core'\r\nimport {CardHistorial} from '../components/CardHistorial'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto',\r\n        paddingBottom:theme.spacing(2)\r\n    }\r\n}))\r\nconst Historial=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page={'Historial'} user={props.user}>\r\n            <Paper elevation={3} className={classes.root}>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row flex-nowrap\">\r\n                        {props.historial?\r\n                            Object.keys(props.historial).map(planta=>(\r\n                                <div className=\"col-auto mt-3\">\r\n                                    <Link className='text-white' to={{\r\n                                        pathname:'/Historial/Planta',\r\n                                        props:{\r\n                                            id:planta,\r\n                                        }\r\n                                    }}>\r\n                                        <CardHistorial cantidadDeGramos={props.historial[planta].cantidadDeGramos} nombre={props.historial[planta].nombre} fechaDeCorte={props.historial[planta].fechaDeCorte}/>\r\n                                    </Link>\r\n                                </div>\r\n                            )):\r\n                            <div className=\"col-auto\">\r\n                                <Typography>\r\n                                    No hay plantas en el historial\r\n                                </Typography>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    historial:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia,ListItemAvatar,Avatar,Grow} from '@material-ui/core'\r\nimport { PortableWifiOff, Height } from '@material-ui/icons';\r\nimport semilla from '../images/semilla.svg'\r\nimport vegetativo from '../images/vegetativo.svg'\r\nimport floracion from '../images/floracion.svg'\r\nimport maceta from '../images/maceta.svg'\r\nimport adn from '../images/adn.svg'\r\nimport balanza from '../images/balanza.svg'\r\nimport cosecha from '../images/cosecha.svg'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(1),\r\n        marginTop:theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        minWidth:'220px'\r\n    },\r\n    listText:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    itemList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflowX:'auto',\r\n        width:'100%'\r\n    },\r\n    avatar:{\r\n        padding:theme.spacing(1),\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n    }\r\n}))\r\n\r\nexport const DetallePlanta=(props)=>{\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    const classes = useStyles()\r\n            \r\n    return(\r\n        <div className={classes.itemList}>\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={adn} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Genetica' secondary={props.genetica}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={maceta} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Volumen Maceta' secondary={`${props.volumenMaceta} Lt`}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={semilla} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Inicio De Germinacion' secondary={props.nacimiento?props.nacimiento:'-'}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={vegetativo} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Inicio De Vegetativo' secondary={props.inicioVegetativo?props.inicioVegetativo:'-'}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={floracion} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Inicio De Floracion' secondary={props.inicioFloracion?props.inicioFloracion:'-'}/>\r\n                </Paper>\r\n            </Grow>\r\n            {props.fechaDeCorte &&\r\n                <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={cosecha} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Fecha De Corte' secondary={props.fechaDeCorte}/>\r\n                    </Paper>\r\n                </Grow>\r\n            }\r\n            {props.cantidadDeGramos &&\r\n                <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={balanza} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Cantidad Cosechada' secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\r\n                    </Paper>\r\n                </Grow>\r\n            }\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,makeStyles,Avatar,SvgIcon} from '@material-ui/core'\r\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\r\nimport {riegos} from '../images/riegos.svg'\r\nimport {transplante} from '../images/transplante.svg'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        alignItems:'start'\r\n    },\r\n    link:{\r\n        textDecoration:'none',\r\n        outline:'none',\r\n        margin:theme.spacing(1)\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    avatar:{\r\n        width:theme.spacing(5),\r\n        height:theme.spacing(5)\r\n    }\r\n}))\r\n\r\nexport const DetalleAcciones =({id,history})=>{\r\n    const classes= useStyles()\r\n    return(\r\n            <div className={classes.root}>\r\n                <Link\r\n                className={classes.link} \r\n                to={{ \r\n                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Timeline':'/Planta/Timeline',\r\n                    props:{\r\n                        id:id\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Timeline\r\n                    </Button>\r\n                </Link>\r\n                <Link\r\n                className={classes.link} \r\n                to={{ \r\n                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\r\n                    props:{\r\n                        id:id\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Riegos\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}\r\n                to={{ \r\n                    pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\r\n                    props:{\r\n                        id:id\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Podas\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}                 \r\n                to={{ \r\n                pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\r\n                props:{\r\n                    id:id\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Fumigaciones\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}                 \r\n                to={{ \r\n                pathname:history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Transplantes':'/Planta/Transplantes',\r\n                props:{\r\n                    id:id\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Transplantes\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n    )\r\n}","import React , {useState} from 'react'\r\nimport {makeStyles,IconButton,Typography,SvgIcon} from '@material-ui/core'\r\nimport {DeleteOutline,EditOutlined,NatureOutlined} from '@material-ui/icons'\r\nconst useStyles= makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        paddingBottom:theme.spacing(1)\r\n    },\r\n    editButton:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    editText:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    deleteText:{\r\n        color:theme.palette.error.main\r\n    },\r\n    cosecharButton:{\r\n        color:theme.palette.success.main\r\n    },\r\n    cosecharText:{\r\n        color:theme.palette.success.main\r\n    },\r\n}))\r\n\r\nexport const BotoneraConfiguracionPlanta =({inicioFloracion,cosecharPlanta,eliminarPlanta}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            {inicioFloracion &&\r\n                <div className='d-flex flex-column'>\r\n                    <IconButton\r\n                        variant=\"contained\"\r\n                        onClick={cosecharPlanta}\r\n                        className={classes.cosecharButton}\r\n                        >\r\n                        <NatureOutlined/>\r\n                    </IconButton>\r\n                    <Typography variant='caption' className={classes.cosecharText}>\r\n                        Cosechar\r\n                    </Typography>\r\n                </div>\r\n            }\r\n            <div className='d-flex flex-column'>\r\n                <IconButton\r\n                    variant=\"contained\"\r\n                    className={classes.editButton}\r\n                    >\r\n                    <EditOutlined/>\r\n                </IconButton>\r\n                <Typography variant='caption'className={classes.editText}>\r\n                    Editar\r\n                </Typography>\r\n            </div> \r\n            <div className='d-flex flex-column'>\r\n                <IconButton\r\n                    variant=\"contained\"\r\n                    className={classes.deleteButton}\r\n                    onClick={e=>{\r\n                        eliminarPlanta()\r\n                    }}\r\n                >\r\n                    <DeleteOutline/>\r\n                </IconButton>\r\n                <Typography variant='caption' className={classes.deleteText}>\r\n                Eliminar\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {makeStyles,Typography,ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails,TextField,InputAdornment,Button} from '@material-ui/core'\r\nimport {CheckCircle,ExpandMore} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        marginTop:theme.spacing(1)\r\n    },\r\n    expansionPanel:{\r\n        width:'50%'\r\n    },\r\n    ExpansionPanelDetails:{\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center'\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\nexport const InputCantidadCosechada = ({inputCantidad,setInputCantidad,guardarCantidadCosechada}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <ExpansionPanel className={classes.expansionPanel}>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\r\n                    <TextField id=\"outlined-basic\" \r\n                        value={inputCantidad}\r\n                        type='number'\r\n                        label=\"Cantidad Cosechada\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                gr\r\n                            </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        onChange={e=>{\r\n                            setInputCantidad(e.target.value)\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={e=>{\r\n                            guardarCantidadCosechada()\r\n                        }}\r\n                        endIcon={\r\n                            <CheckCircle/>\r\n                        }\r\n                        >\r\n                        Guardar \r\n                    </Button>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState}from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../components/DetallePlanta'\r\nimport {DetalleAcciones} from '../components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,GridListTile,CardMedia,Paper,GridList, Divider,Button,Grow} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\r\nimport {connect} from 'react-redux'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    buttonTextDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    paperPrimary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        width:'100%',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        '& .MuiGridListTile-root':{\r\n            width:'30% !important'\r\n        }\r\n    },\r\n    media: {\r\n        height:'100%'\r\n    },\r\n    rightPanel:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        height:'100%',\r\n        justifyContent:'space-between',\r\n        padding:theme.spacing(1),\r\n    },\r\n    rowBotonera:{\r\n        width:'100%',\r\n        flexGrow:'1',\r\n        display:'flex'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1),\r\n        '& .MuiAlert-message':{\r\n            width:'100%'\r\n        }\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst Planta =(props)=>{\r\n    const classes = useStyles()\r\n    let [inputCantidad, setInputCantidad]= useState(undefined)\r\n    let [iniciarVegetativo, setIniciarVegetativo]= useState(false)\r\n\r\n    const cosecharPlanta=async ()=>{\r\n        await database().ref().child(props.user).child('historial').child(props.location.props.id).update({\r\n            nombre:props.plantas[props.location.props.id].nombre?props.plantas[props.location.props.id].nombre:null,\r\n            nacimiento:props.plantas[props.location.props.id].nacimiento?props.plantas[props.location.props.id].nacimiento:null,\r\n            genetica:props.plantas[props.location.props.id].genetica?props.plantas[props.location.props.id].genetica:null,\r\n            inicioVegetativo:props.plantas[props.location.props.id].inicioVegetativo?props.plantas[props.location.props.id].inicioVegetativo:null,\r\n            inicioFloracion:props.plantas[props.location.props.id].inicioFloracion?props.plantas[props.location.props.id].inicioFloracion:null,\r\n            podas:props.plantas[props.location.props.id].podas?props.plantas[props.location.props.id].podas:null,\r\n            riegos:props.plantas[props.location.props.id].riegos?props.plantas[props.location.props.id].riegos:null,\r\n            fumigaciones:props.plantas[props.location.props.id].fumigaciones?props.plantas[props.location.props.id].fumigaciones:null,\r\n            transplantes:props.plantas[props.location.props.id].transplantes?props.plantas[props.location.props.id].transplantes:null,\r\n            fechaDeCorte:getFullDate()\r\n        })\r\n        props.history.replace({\r\n            pathname:'Historial/Planta',\r\n            props:{\r\n                id:props.location.props.id\r\n            }\r\n        })\r\n        await database().ref().child(props.user).child('plantas').child(props.location.props.id).remove()\r\n    }\r\n    const eliminarPlanta=async ()=>{\r\n        props.history.replace('/')\r\n        await database().ref().child(props.user).child('plantas').child(props.location.props.id).remove()\r\n    }\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    const comenzarVegetativo=async ()=>{\r\n        await database().ref().child(props.user).child('plantas').child(props.location.props.id).update({\r\n            inicioVegetativo:getFullDate()\r\n        })\r\n        setIniciarVegetativo(false)\r\n    }\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n                                {tileData.map(tile => (\r\n                                <GridListTile key={tile.img} className={classes.tile}>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={fotoPlanta}\r\n                                    />\r\n                                </GridListTile>\r\n                                ))}\r\n                            </GridList>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <DetallePlanta \r\n                                genetica={props.plantas[props.location.props.id].genetica}\r\n                                cantidadDeGramos={props.plantas[props.location.props.id].cantidadDeGramos}\r\n                                plantaDelHistorial={props.plantas[props.location.props.id].plantaDelHistorial}\r\n                                edad={props.plantas[props.location.props.id].edad}\r\n                                nacimiento={props.plantas[props.location.props.id].nacimiento}\r\n                                inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\r\n                                inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\r\n                                fechaDeCorte={props.plantas[props.location.props.id].fechaDeCorte}\r\n                                volumenMaceta={props.plantas[props.location.props.id].volumenMaceta}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row mt-2 justify-content-center\">\r\n                            {props.plantas[props.location.props.id].nacimiento && !props.plantas[props.location.props.id].inicioVegetativo &&\r\n                                <Button variant='contained' color='primary' onClick={e=>{setIniciarVegetativo(true)}}>\r\n                                    Iniciar periodo Vegetativo\r\n                                </Button>\r\n                            }\r\n                        </div>\r\n                        {iniciarVegetativo&&\r\n                            <Grow in={iniciarVegetativo}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                <Alert variant='filled' severity='warning' className={classes.alert}>\r\n                                    <AlertTitle>Iniciar Vegetativo?</AlertTitle>\r\n                                    Si continua se guardara el dia de la fecha como el inicio del ciclo Vegetativo\r\n                                    <Button variant='text' color='warning' onClick={e=>{comenzarVegetativo()}}>\r\n                                        Continuar\r\n                                    </Button>\r\n                                </Alert>\r\n                            </Grow>\r\n                        }\r\n                        <div className=\"row\">\r\n                            <DetalleAcciones\r\n                                history={props.history}\r\n                                id={props.location.props.id}\r\n                            />\r\n                        </div>\r\n                        <Divider/>\r\n                        <div className=\"row\">\r\n                            {!props.plantas[props.location.props.id].plantaDelHistorial &&\r\n                                <div className={classes.rowBotonera}>\r\n                                    <BotoneraConfiguracionPlanta\r\n                                        inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\r\n                                        cosecharPlanta={cosecharPlanta}\r\n                                        eliminarPlanta={eliminarPlanta}\r\n                                        nacimiento={props.location.props.nacimiento}\r\n                                        inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\r\n                                        comenzarVegetativo={comenzarVegetativo}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <Divider/>\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(Planta)","import React,{useState}from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../components/DetallePlanta'\r\nimport {DetalleAcciones} from '../components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,GridListTile,CardMedia,Paper,GridList, Divider,Button,Grow} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\r\nimport {connect} from 'react-redux'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    buttonTextDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    paperPrimary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        width:'100%',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        '& .MuiGridListTile-root':{\r\n            width:'30% !important'\r\n        }\r\n    },\r\n    media: {\r\n        height:'100%'\r\n    },\r\n    rightPanel:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        height:'100%',\r\n        justifyContent:'space-between',\r\n        padding:theme.spacing(1),\r\n    },\r\n    rowBotonera:{\r\n        width:'100%',\r\n        flexGrow:'1',\r\n        display:'flex'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1),\r\n        '& .MuiAlert-message':{\r\n            width:'100%'\r\n        }\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst PlantaHistorial =(props)=>{\r\n    const classes = useStyles()\r\n    let [inputCantidad, setInputCantidad]= useState(undefined)\r\n    let [iniciarVegetativo, setIniciarVegetativo]= useState(false)\r\n    const guardarCantidadCosechada=async ()=>{\r\n        await database().ref().child(props.user).child('historial').child(props.location.props.id).update({\r\n            cantidadDeGramos:inputCantidad+' gr'\r\n        })\r\n    }\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n                                {tileData.map(tile => (\r\n                                <GridListTile key={tile.img} className={classes.tile}>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={fotoPlanta}\r\n                                    />\r\n                                </GridListTile>\r\n                                ))}\r\n                            </GridList>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <DetallePlanta \r\n                                genetica={props.plantas[props.location.props.id].genetica}\r\n                                cantidadDeGramos={props.plantas[props.location.props.id].cantidadDeGramos}\r\n                                plantaDelHistorial={props.plantas[props.location.props.id].plantaDelHistorial}\r\n                                edad={props.plantas[props.location.props.id].edad}\r\n                                nacimiento={props.plantas[props.location.props.id].nacimiento}\r\n                                inicioVegetativo={props.plantas[props.location.props.id].inicioVegetativo}\r\n                                inicioFloracion={props.plantas[props.location.props.id].inicioFloracion}\r\n                                fechaDeCorte={props.plantas[props.location.props.id].fechaDeCorte}\r\n                                volumenMaceta={props.plantas[props.location.props.id].volumenMaceta}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {!props.plantas[props.location.props.id].cantidadDeGramos &&\r\n                                <InputCantidadCosechada inputCantidad={inputCantidad} setInputCantidad={setInputCantidad} guardarCantidadCosechada={guardarCantidadCosechada} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <DetalleAcciones\r\n                                history={props.history}\r\n                                id={props.location.props.id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorial)","import React , {useState,useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor:theme.palette.primary.main,\r\n        borderRadius:'0'\r\n    },\r\n    edit:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    delete:{\r\n        color:theme.palette.error.main\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.secondary.contrastText,\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    listItemText:{\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText\r\n        }\r\n    }\r\n  }));\r\nexport const AccionDetallada=(props)=>{\r\n    const classes= useStyles()\r\n    let [show,setShow] = useState(false)\r\n    \r\n    const eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(true)\r\n        }, 100);\r\n    })\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-10 offset-1\">\r\n                <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\r\n                        <Paper elevation={4} className={classes.paperDark}>\r\n                            <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                            >\r\n                                <Typography className={classes.heading}>{props.tipoDeAccion}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                        </Paper>\r\n                        <Paper elevation={4} >\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"container\">\r\n                                    {props.accion.agua &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.agua} L. De Agua \r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.tipoDeRiego &&\r\n                                        <div className=\"row my-2\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.tipoDePoda &&\r\n                                        <div className=\"col text-left\">\r\n                                            <Typography variant='h5'>\r\n                                                Poda {props.accion.tipoDePoda}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.volumenMaceta &&\r\n                                        <div className=\"col text-left\">\r\n                                            <Typography variant='h5'>\r\n                                                Nuevo Volumen {props.accion.volumenMaceta} Lt\r\n                                            </Typography>\r\n                                        </div>\r\n                                    }\r\n                                    <Divider/>\r\n                                    {props.tipoDeAccion!=='podas' && props.tipoDeAccion!=='transplantes' && \r\n                                        <div className=\"row my-2\">\r\n                                            {props.accion.aditivos?\r\n                                                <>\r\n                                                    <div className=\"col-12 text-left\">\r\n                                                        <Typography variant='h5'>\r\n                                                            Aditivos Usados\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                    <List>\r\n                                                        {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\r\n                                                            <>\r\n                                                                <ListItem>\r\n                                                                    <ListItemText\r\n                                                                        className={classes.listItemText}\r\n                                                                        primary={aditivo}\r\n                                                                        secondary={props.accion.aditivos[aditivo]+' ml'} \r\n                                                                    />\r\n                                                                </ListItem>\r\n                                                            </>\r\n                                                        ))}\r\n                                                    </List>\r\n                                                </>\r\n                                                :\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography>\r\n                                                        No se utilizaron Aditivos\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                    <Divider/>\r\n                                    {!props.plantaDelHistorial &&\r\n                                        <div className=\"row my-2 justify-content-around\">\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                >   \r\n                                                        <EditOutlined />\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' gutterBottom>\r\n                                                    Editar\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={e=>{eliminarAccion()}}\r\n                                                >\r\n                                                        <DeleteOutline className={classes.delete}/>\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' className={classes.delete} gutterBottom>\r\n                                                    Eliminar\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </Paper>\r\n                    </ExpansionPanel>\r\n                </Grow>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {makeStyles,Paper} from '@material-ui/core';\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaRiegos =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Riegos'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.plantas[props.location.props.id].riegos?\r\n                                <Timeline lineColor={'#ddd'}>\r\n                                        {Object.keys(props.plantas[props.location.props.id].riegos).reverse().map((id,i)=>(\r\n                                            <TimelineItem\r\n                                            dateText=\"10/04/2009\"\r\n                                            dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                                        >   \r\n                                             <AccionDetallada \r\n                                                handleChange={handleChange} \r\n                                                index={i} \r\n                                                expanded={expanded} \r\n                                                plantaDelHistorial={false}\r\n                                                user={props.user} \r\n                                                accion={props.plantas[props.location.props.id].riegos[id]} \r\n                                                tipoDeAccion='riegos' \r\n                                                idPlanta={props.location.props.id} \r\n                                                id={id} \r\n                                                id={id}\r\n                                            />\r\n                                        </TimelineItem>\r\n                                        ))}\r\n                                </Timeline>\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Riego')\r\n                                                }}>Riegala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaRiegos)\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaFumigaciones =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Fumigaciones'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].fumigaciones?\r\n                                Object.keys(props.plantas[props.location.props.id].fumigaciones).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        plantaDelHistorial={false} \r\n                                        expanded={expanded} \r\n                                        user={props.user}\r\n                                        index={i} \r\n                                        accion={props.plantas[props.location.props.id].fumigaciones[id]} \r\n                                        tipoDeAccion='fumigaciones' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}/>\r\n                                    ))\r\n                                    :\r\n                                    <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Insecticida')\r\n                                                }}>Fumigala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaFumigaciones)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaTransplantes =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Transplantes'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].transplantes?\r\n                                Object.keys(props.plantas[props.location.props.id].transplantes).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        expanded={expanded} \r\n                                        plantaDelHistorial={false} \r\n                                        user={props.user} \r\n                                        accion={props.plantas[props.location.props.id].transplantes[id]} \r\n                                        tipoDeAccion='transplantes' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}\r\n                                    />\r\n                                ))\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Transplante')\r\n                                                }}>Transplatala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaTransplantes)","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n})) \r\nconst PlantaPodas =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Podas'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.plantas[props.location.props.id].podas?\r\n                            Object.keys(props.plantas[props.location.props.id].podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada \r\n                                    user={props.user} \r\n                                    index={i}  \r\n                                    plantaDelHistorial={false} \r\n                                    expanded={expanded} \r\n                                    handleChange={handleChange} \r\n                                    accion={props.plantas[props.location.props.id].podas[id]} \r\n                                    tipoDePoda={props.plantas[props.location.props.id].podas[id].tipoDePoda}\r\n                                    tipoDeAccion='podas' \r\n                                    idPlanta={props.location.props.id} \r\n                                    id={id} \r\n                                    key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                {!props.location.props.plantaDelHistorial &&\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>        \r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaPodas)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Typography} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    paper:{\r\n        padding:theme.spacing(1)\r\n    }\r\n})) \r\nconst PlantaTimeLine =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n    let [arrayAcciones,setArrayAcciones]= useState([])\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    const convertToArray=(acciones=[],tipoDeAccion)=>{\r\n        let aux = []\r\n        Object.keys(acciones).map(key=>{\r\n            aux.push({accion:acciones[key],tipoDeAccion:tipoDeAccion,id:key})\r\n        })\r\n        return aux\r\n    }\r\n    const obtenerArray=()=>{\r\n        if(props.location.props){\r\n            let aux =[]\r\n            const arrayRiegos= convertToArray(props.plantas[props.location.props.id].riegos,'Riego')\r\n            const arrayFumigaciones= convertToArray(props.plantas[props.location.props.id].fumigaciones,'Fumigacion')\r\n            const arrayPodas= convertToArray(props.plantas[props.location.props.id].podas,'Poda')\r\n            const arrayTransplantes= convertToArray(props.plantas[props.location.props.id].transplantes,'Transplante')\r\n            arrayRiegos.map(riego=>{\r\n                aux.push(riego)\r\n            })\r\n            arrayFumigaciones.map(fumigacion=>{\r\n                aux.push(fumigacion)\r\n            })\r\n            arrayPodas.map(poda=>{\r\n                aux.push(poda)\r\n            })\r\n            arrayTransplantes.map(transplante=>{\r\n                aux.push(transplante)\r\n            })\r\n            return aux.sort(function compare(a, b) {\r\n                if (a.id < b.id) {\r\n                  return -1;\r\n                }\r\n                if (a.id > b.id) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              }).reverse()\r\n        }\r\n    }\r\n    const array = obtenerArray()\r\n    return(\r\n        props.location.props?\r\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Timeline'} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <Timeline lineColor={'#fff'}>\r\n                        {array.map((accion,i)=>(\r\n                            <TimelineItem\r\n                                dateText={accion.accion.fecha}\r\n                                dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                            >   \r\n                                <AccionDetallada \r\n                                    handleChange={handleChange} \r\n                                    index={i} \r\n                                    expanded={expanded} \r\n                                    plantaDelHistorial={false}\r\n                                    user={props.user} \r\n                                    accion={accion.accion} \r\n                                    tipoDeAccion={accion.tipoDeAccion} \r\n                                    idPlanta={props.location.props.id} \r\n                                    id={accion.id} \r\n                                />\r\n                            </TimelineItem>\r\n                        ))}\r\n                    </Timeline>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.plantas\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaTimeLine)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper,Typography} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nimport { Timeline, TimelineItem }  from 'vertical-timeline-component-for-react';\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    paper:{\r\n        padding:theme.spacing(1)\r\n    }\r\n})) \r\nconst PlantaHistorialTimeLine =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n    let [arrayAcciones,setArrayAcciones]= useState([])\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    const convertToArray=(acciones=[],tipoDeAccion)=>{\r\n        let aux = []\r\n        Object.keys(acciones).map(key=>{\r\n            aux.push({accion:acciones[key],tipoDeAccion:tipoDeAccion,id:key})\r\n        })\r\n        return aux\r\n    }\r\n    const obtenerArray=()=>{\r\n        if(props.location.props){\r\n            let aux =[]\r\n            const arrayRiegos= convertToArray(props.plantas[props.location.props.id].riegos,'Riego')\r\n            const arrayFumigaciones= convertToArray(props.plantas[props.location.props.id].fumigaciones,'Fumigacion')\r\n            const arrayPodas= convertToArray(props.plantas[props.location.props.id].podas,'Poda')\r\n            const arrayTransplantes= convertToArray(props.plantas[props.location.props.id].transplantes,'Transplante')\r\n            arrayRiegos.map(riego=>{\r\n                aux.push(riego)\r\n            })\r\n            arrayFumigaciones.map(fumigacion=>{\r\n                aux.push(fumigacion)\r\n            })\r\n            arrayPodas.map(poda=>{\r\n                aux.push(poda)\r\n            })\r\n            arrayTransplantes.map(transplante=>{\r\n                aux.push(transplante)\r\n            })\r\n            return aux.sort(function compare(a, b) {\r\n                if (a.id < b.id) {\r\n                  return -1;\r\n                }\r\n                if (a.id > b.id) {\r\n                  return 1;\r\n                }\r\n                return 0;\r\n              }).reverse()\r\n        }\r\n    }\r\n    const array = obtenerArray()\r\n    return(\r\n        props.location.props?\r\n        <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Timeline'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <Timeline lineColor={'#fff'}>\r\n                        {array.map((accion,i)=>(\r\n                            <TimelineItem\r\n                                dateText={accion.accion.fecha}\r\n                                dateInnerStyle={{ background: '#00796b', color: '#fff' }}\r\n                            >   \r\n                                <AccionDetallada \r\n                                    handleChange={handleChange} \r\n                                    index={i} \r\n                                    expanded={expanded} \r\n                                    plantaDelHistorial={true}\r\n                                    user={props.user} \r\n                                    accion={accion.accion} \r\n                                    tipoDeAccion={accion.tipoDeAccion} \r\n                                    idPlanta={props.location.props.id} \r\n                                    id={accion.id} \r\n                                />\r\n                            </TimelineItem>\r\n                        ))}\r\n                    </Timeline>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialTimeLine)","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {makeStyles,Paper} from '@material-ui/core';\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaHistorialRiegos =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Riegos'}  plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].riegos?\r\n                                Object.keys(props.plantas[props.location.props.id].riegos).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        expanded={expanded} \r\n                                        plantaDelHistorial={true}\r\n                                        user={props.user} \r\n                                        accion={props.plantas[props.location.props.id].riegos[id]} \r\n                                        tipoDeAccion='riegos' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        id={id}\r\n                                    />\r\n                                ))\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Riego')\r\n                                                }}>Riegala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialRiegos)\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaHistorialFumigaciones =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Fumigaciones'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].fumigaciones?\r\n                                Object.keys(props.plantas[props.location.props.id].fumigaciones).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        plantaDelHistorial={true} \r\n                                        expanded={expanded} \r\n                                        user={props.user}\r\n                                        index={i} \r\n                                        accion={props.plantas[props.location.props.id].fumigaciones[id]} \r\n                                        tipoDeAccion='fumigaciones' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}/>\r\n                                    ))\r\n                                    :\r\n                                    <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Insecticida')\r\n                                                }}>Fumigala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialFumigaciones)\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nconst PlantaHistorialTransplantes =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Transplantes'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.plantas[props.location.props.id].transplantes?\r\n                                Object.keys(props.plantas[props.location.props.id].transplantes).reverse().map((id,i)=>(\r\n                                    <AccionDetallada \r\n                                        handleChange={handleChange} \r\n                                        index={i} \r\n                                        expanded={expanded} \r\n                                        plantaDelHistorial={true} \r\n                                        user={props.user} \r\n                                        accion={props.plantas[props.location.props.id].transplantes[id]} \r\n                                        tipoDeAccion='transplantes' \r\n                                        idPlanta={props.location.props.id} \r\n                                        id={id} \r\n                                        key={id}\r\n                                    />\r\n                                ))\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Transplante')\r\n                                                }}>Transplatala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialTransplantes)","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n})) \r\nconst PlantaHistorialPodas =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.plantas[props.location.props.id].nombre+'/Podas'} plantaDelHistorial={true} plantaId={props.location.props.id} user={props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.plantas[props.location.props.id].podas?\r\n                            Object.keys(props.plantas[props.location.props.id].podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada \r\n                                    user={props.user} \r\n                                    index={i}  \r\n                                    plantaDelHistorial={true} \r\n                                    expanded={expanded} \r\n                                    handleChange={handleChange} \r\n                                    accion={props.plantas[props.location.props.id].podas[id]} \r\n                                    tipoDePoda={props.plantas[props.location.props.id].podas[id].tipoDePoda}\r\n                                    tipoDeAccion='podas' \r\n                                    idPlanta={props.location.props.id} \r\n                                    id={id} \r\n                                    key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                {!props.location.props.plantaDelHistorial &&\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>        \r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    plantas:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(PlantaHistorialPodas)\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport const NotFound = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>la pagina no se encuentra disponible</h1>\r\n            <Link to='/'>\r\n                Vuelve al Home\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles,InputAdornment} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    },\r\n    textLight:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\n\r\nexport const ElegirNuevaMaceta=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.nuevoVolumen}\r\n                            className={classes.radio}\r\n                            color='primary'\r\n                            type='number'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    Lt\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect } from 'react-redux'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nimport {ElegirPlantaAccion} from '../components/ElegirPlantaAccion'\r\nimport {ElegirNuevaMaceta} from '../components/ElegirNuevaMaceta'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\n class Transplante extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n        nuevaMaceta:undefined,\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.transplantar()\r\n        this.props.history.push('/')\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    setNuevaMaceta=(nuevoVolumen)=>{\r\n        this.setState({nuevaMaceta:nuevoVolumen})\r\n    }\r\n    transplantar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarTransplanteDB(planta.id,this.state.nuevaMaceta)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarTransplanteDB= async (idPlanta,nuevoVolumen)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('transplantes').push({\r\n            volumenMaceta:nuevoVolumen,\r\n            fecha:moment().format('LLL'),\r\n        })\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).update({\r\n            volumenMaceta:nuevoVolumen,\r\n        })\r\n    }\r\n    render(){\r\n    let selectedPlants=[]\r\n    if(this.state.plantas){\r\n        this.state.plantas.map(planta=>(\r\n            planta.selected?\r\n                selectedPlants.push(planta.nombre)\r\n                :\r\n                null\r\n        ))\r\n    }\r\n        return(\r\n        <Layout history={this.props.history} page='Transplante' user={this.props.user}>\r\n            <div className=\"container-fluid overflow-auto h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-12 px-0\">\r\n                        <StepperAccion \r\n                            step1='Plantas'\r\n                            step2='Nuevo Volumen de tierra'\r\n                            selectedPlants={selectedPlants}\r\n                            confirmarAccion={this.confirmarAccion}\r\n                            nuevaMaceta={this.state.nuevaMaceta}\r\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} nuevaMaceta={this.state.nuevaMaceta}/>}\r\n                            tipoDeAccion='Transplante'\r\n                            steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {\r\n                                    title:'Nuevo Volumen de tierra',\r\n                                    content:(\r\n                                        <ElegirNuevaMaceta\r\n                                            handleChange={this.setNuevaMaceta}\r\n                                            nuevoVolumen={this.state.nuevaMaceta}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n        )\r\n    }\r\n }\r\n const mapStateToProps=state=>({\r\n     user:state.user.uid,\r\n     plantas:state.data.plantas,\r\n\r\n })\r\n export default connect(mapStateToProps,null)(Transplante)","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        width: 120,\r\n    },\r\n    input:{\r\n        marginTop:theme.spacing(1),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    inputWrapper:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\n\r\n\r\nexport const FormCaracteristicasNuevaPlanta =({nombre,setNombre,genetica,setGenetica,volumenMaceta,setVolumenMaceta,etapa,setInicioGerminacion,getFullDate,setEtapa})=>{\r\n    \r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <form className={classes.form}>\r\n                <TextField label=\"Nombre\" className={classes.input} value={nombre} onChange={e=>{setNombre(e.target.value)}}/>\r\n                <TextField label=\"Genetica\"  className={classes.input} value={genetica} onChange={e=>{setGenetica(e.target.value)}}/>\r\n                <TextField \r\n                    label=\"Volumen De Maceta\" \r\n                    className={classes.formControl}\r\n                    value={volumenMaceta} \r\n                    type='number'  \r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            Lt\r\n                        </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={e=>{setVolumenMaceta(e.target.value)}}/>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\r\n                    <Select\r\n                        labelId=\"etapa-select-label\"\r\n                        id=\"etapa-select\"\r\n                        value={etapa}\r\n                        onChange={e=>{\r\n                            const etapa = e.target.value\r\n                            if(etapa==='Vegetativo'){\r\n                                setInicioGerminacion(getFullDate())\r\n                                setEtapa(e.target.value)\r\n                            }\r\n                            else{\r\n                                setInicioGerminacion(undefined)\r\n                                setEtapa(e.target.value)}\r\n                            }\r\n                        }\r\n                    >\r\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(2),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    input:{\r\n        marginTop:theme.spacing(1),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    inputWrapper:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        marginTop:theme.spacing(3)\r\n    }\r\n}))\r\nexport const FormEtapaNuevaPlanta =({getFullDate,periodoArmario,inicioGerminacion,setInicioGerminacion,inicioVegetativo,setInicioVegetativo,inicioFloracion,setInicioFloracion,etapa})=>{\r\n    const classes = useStyles()\r\n    const date = getFullDate()\r\n    const renderInputs=()=>{\r\n        switch (etapa) {\r\n            case 'Vegetativo':\r\n                if(periodoArmario===etapa ){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                            <Alert variant='outlined' severity=\"warning\">\r\n                                <AlertTitle>Si ingresa esta planta al armario comenzara su periodo de floracion</AlertTitle>\r\n                            </Alert>\r\n                            <div className={classes.inputWrapper}> \r\n                                <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n                break;\r\n            case 'Floracion':\r\n                if(periodoArmario===etapa){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\r\n                            <TextField label=\"Incio Floracion\" value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <Alert variant='outlined' severity=\"error\">\r\n                            <AlertTitle>No es recomendable introducir una planta en periodo de floracion en un armario con periodo Vegetativo</AlertTitle>\r\n                        </Alert>\r\n                    )\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n            <form className={classes.form}>\r\n                {renderInputs()}\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport {FormCaracteristicasNuevaPlanta} from '../components/FormCaracteristicasNuevaPlanta'\r\nimport {FormEtapaNuevaPlanta} from '../components/FormEtapaNuevaPlanta'\r\nimport addFile from '../images/addFile.svg'\r\nimport {makeStyles, Paper} from '@material-ui/core'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nimport {ResumenNuevaPlanta} from '../components/ResumenNuevaPlanta'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst  NuevaPlanta=(props)=>{\r\n    const classes = useStyles()\r\n    let [nombre,setNombre]=useState(undefined)\r\n    let [genetica,setGenetica]=useState(undefined)\r\n    let [etapa,setEtapa]=useState(undefined)\r\n    let [volumenMaceta,setVolumenMaceta]= useState(undefined)\r\n    let [inicioGerminacion,setInicioGerminacion]= useState(getFullDate())\r\n    let [inicioVegetativo,setInicioVegetativo]= useState(undefined)\r\n    let [inicioFloracion,setInicioFloracion]= useState(undefined)\r\n    \r\n    const guardarNuevaPlantaDB= async ()=>{\r\n        console.log(props.periodo==='Floracion'?'fecha':'nofecha')\r\n        await database().ref().child(props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica?genetica:'Desconocida',\r\n            volumenMaceta:volumenMaceta?volumenMaceta:null,\r\n            nacimiento:inicioGerminacion?inicioGerminacion:null,\r\n            inicioVegetativo:inicioVegetativo?inicioVegetativo:null,\r\n            inicioFloracion:props.periodo==='Floracion'?getFullDate():null\r\n        })\r\n        props.history.replace('/')\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Nueva Planta' user={props.user}>\r\n            <StepperAccion\r\n                tipoDeAccion='Nueva Planta'\r\n                confirmarAccion={guardarNuevaPlantaDB}\r\n                etapa={etapa}\r\n                steps={[\r\n                    {\r\n                        title:'Caracteristicas',\r\n                        content:(\r\n                            <FormCaracteristicasNuevaPlanta \r\n                                nombre={nombre} \r\n                                genetica={genetica} \r\n                                etapa={etapa}\r\n                                setNombre={setNombre}\r\n                                setGenetica={setGenetica} \r\n                                setEtapa={setEtapa}\r\n                                volumenMaceta={volumenMaceta}\r\n                                setVolumenMaceta={setVolumenMaceta}\r\n                                periodoArmario={props.periodo}\r\n                                getFullDate={getFullDate}\r\n                                setInicioGerminacion={setInicioGerminacion}\r\n                            />\r\n                        )\r\n                    },\r\n                    {\r\n                        title:'Inicio de Etapas',\r\n                        content:(\r\n                            <FormEtapaNuevaPlanta\r\n                                inicioGerminacion={inicioGerminacion}\r\n                                inicioVegetativo={inicioVegetativo}\r\n                                inicioFloracion={inicioFloracion}\r\n                                setInicioGerminacion={setInicioGerminacion}\r\n                                setInicioVegetativo={setInicioVegetativo}\r\n                                setInicioFloracion={setInicioFloracion}\r\n                                etapa={etapa}\r\n                                getFullDate={getFullDate}\r\n                                periodoArmario={props.periodo}\r\n                            />\r\n                        )\r\n                    },\r\n                ]}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    periodo:state.data.periodo\r\n})\r\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  root:{\r\n      margin:'0'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    color:theme.palette.secondary.contrastText,\r\n    padding: theme.spacing(1)\r\n},\r\ncontainerPlantas:{\r\n    textAlign:'left',\r\n    paddingLeft:theme.spacing(2),\r\n    paddingTop:theme.spacing(2)\r\n},\r\nlistItemText:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    '& .MuiTypography-colorTextSecondary':{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    },\r\n},\r\ntitle:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n}\r\n}));\r\n\r\nexport const ResumenNuevaPlanta=({})=>{\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText className={classes.listItemText} primary='Tipo De Poda' />    \r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);\r\n}","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    firstPaper:{\r\n        width:'300px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop:theme.spacing(1),\r\n        padding:theme.spacing(4),\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(1),\r\n        width:'80%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivoCaracteristicas = ({updateState}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.form}>\r\n                <TextField label=\"Nombre\"  onChange={e=>{\r\n                    updateState(e.target.value,'nombre')\r\n                }}/>\r\n                <TextField label=\"Marca\"  onChange={e=>{\r\n                    updateState(e.target.value,'marca')\r\n                }}/>\r\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\r\n                    updateState(e.target.value,'descripcion')\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        paddingTop:theme.spacing(2)\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1)\r\n    },\r\n    firstPaper:{\r\n        width:'300px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop:theme.spacing(1),\r\n        padding:theme.spacing(4),\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(1),\r\n        width:'80%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivoDosificaciones = ({updateState}) =>{\r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    const classes = useStyles()\r\n    return(\r\n        <div className='container-fluid'>\r\n            <Button\r\n                variant='outlined'\r\n                color='#fff'\r\n                className={classes.button}\r\n                startIcon={<AddOutlined/>}\r\n                onClick={e=>{\r\n                    setCantidadDeDosis(cantidadDeDosis+=1)\r\n                }}\r\n            >\r\n                Agregar otra dosis\r\n            </Button>\r\n            <div className='row flex-nowrap overflow-auto'>\r\n                {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                    <form className='col-auto d-flex flex-column'>\r\n                        <TextField label=\"Etapa\"  color='#fff' placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                            updateState(e.target.value,'etapa','dosis'+i)\r\n                        }}/>\r\n                        <TextField label=\"Cantidad\" type='number' color='#fff' onChange={e=>{\r\n                            updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                        }}/>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                color='#fff'\r\n                                onChange={e=>{\r\n                                    updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'1'}>gr/L</MenuItem>\r\n                                <MenuItem value={'2'}>ml/L</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                color='#fff'\r\n                                id=\"demo-simple-select\"\r\n                                onChange={e=>{\r\n                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'Tierra'}>Tierra</MenuItem>\r\n                                <MenuItem value={'Foliar'}>Foliar</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport addFile from '../images/addFile.svg'\r\nimport { FormNuevoAditivoCaracteristicas } from '../components/FormNuevoAditivoCaracteristicas'\r\nimport { FormNuevoAditivoDosificaciones } from '../components/FormNuevoAditivoDosificaciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\n\r\n\r\nconst NuevoAditivo=(props)=>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const classes = useStyles()\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos =[]\r\n        if(props.location.props.tipoDeAditivo==='Fertilizantes'){\r\n            if(props.fertilizantes){\r\n                newAditivos=props.fertilizantes\r\n            } \r\n        }\r\n        else{\r\n            if(props.insecticidas){\r\n                newAditivos=props.insecticidas\r\n            }\r\n        }\r\n        newAditivos.push(newAditivo)\r\n        switch (props.location.props.tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(props.user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                props.history.goBack()\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(props.user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                props.history.goBack()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n\r\n    if(!props.location.props){\r\n        return(\r\n            <Redirect to='Aplicables'/>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Layout page='Nuevo Aditivo' user={props.user} history={props.history}>\r\n                <StepperAccion\r\n                confirmarAccion={agregarAditivo}\r\n                tipoDeAccion='Nuevo Aditivo'\r\n                steps={[\r\n                    {\r\n                        title:'Caracteristicas',\r\n                        content:(\r\n                            <FormNuevoAditivoCaracteristicas\r\n                                updateState={updateState}\r\n                            />\r\n                        )\r\n                    },\r\n                    {\r\n                        title:'Dosificaciones',\r\n                        content:(\r\n                            <FormNuevoAditivoDosificaciones\r\n                                updateState={updateState} \r\n                            />\r\n                        )\r\n                    },\r\n                    ]}\r\n                />\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    fertilizantes:state.data.fertilizantes,\r\n    insecticidas:state.data.insecticidas\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoAditivo)","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\r\nimport Configuracion from './Pages/Configuracion';\r\nimport Historial from './Pages/Historial';\r\nimport Planta from './Pages/Planta'\r\nimport PlantaHistorial from './Pages/PlantaHistorial'\r\nimport PlantaRiegos from './Pages/PlantaRiegos'\r\nimport PlantaFumigaciones from './Pages/PlantaFumigaciones'\r\nimport PlantaTransplantes from './Pages/PlantaTransplantes'\r\nimport PlantaPodas from './Pages/PlantaPodas'\r\nimport PlantaTimeLine from './Pages/PlantaTimeLine'\r\nimport PlantaHistorialTimeLine from './Pages/PlantaHistorialTimeLine'\r\nimport PlantaHistorialRiegos from './Pages/PlantaHistorialRiegos'\r\nimport PlantaHistorialFumigaciones from './Pages/PlantaHistorialFumigaciones'\r\nimport PlantaHistorialTransplantes from './Pages/PlantaHistorialTransplantes'\r\nimport PlantaHistorialPodas from './Pages/PlantaHistorialPodas'\r\nimport {NotFound} from './Pages/NotFound'\r\nimport Transplante from './Pages/Transplante'\r\nimport NuevaPlanta from './Pages/NuevaPlanta'\r\nimport NuevoAditivo from './Pages/NuevoAditivo'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true,\r\n    theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'light'\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n    const theme = localStorage.getItem('theme')\r\n    console.log(theme)\r\n    if(!theme){\r\n        localStorage.setItem('theme','light')\r\n    }\r\n  }\r\n  \r\nsetTheme=theme=>{\r\n  console.log(theme)\r\n  this.setState({theme:theme})\r\n}\r\n  render(){\r\n    const themeProvider = createMuiTheme({\r\n      palette: {\r\n          white:'#fff',\r\n          primary: {\r\n          light: '#48a999',\r\n          main: '#00796b',\r\n          dark: '#004c40',\r\n          contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n          light: '#4f5b62',\r\n          main: '#263238',\r\n          dark: '#000a12',\r\n          contrastText: '#000',\r\n          },\r\n          danger:'#c62828',\r\n          type:this.state.theme\r\n      },\r\n  });\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <ThemeProvider theme={themeProvider}>\r\n              <PantallaDeCarga/>\r\n          </ThemeProvider>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n              <Provider store={this.state.store}>\r\n                <HashRouter>\r\n                  <Switch>\r\n                    <Route exact path='/' component={Armario}/>\r\n                    <Route exact path='/Riego' component={Riego}/>\r\n                    <Route exact path='/Poda' component={Poda}/>\r\n                    <Route exact path='/Transplante' component={Transplante}/>\r\n                    <Route exact path='/Insecticida' component={Insecticida}/>\r\n                    <Route exact path='/Aplicables' component={Aplicables}/>\r\n                    <Route exact path='/Configuracion' render={(props) => <Configuracion {...props} setTheme={this.setTheme} />}/>\r\n                    <Route exact path='/Historial' component={Historial}/>\r\n                    <Route exact path='/Planta' component={Planta}/>\r\n                    <Route exact path='/Historial/Planta' component={PlantaHistorial}/>\r\n                    <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\r\n                    <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\r\n                    <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\r\n                    <Route exact path='/Planta/Timeline' component={PlantaTimeLine}/>\r\n                    <Route exact path='/Planta/Podas' component={PlantaPodas}/>\r\n                    <Route exact path='/Planta/Transplantes' component={PlantaTransplantes}/>\r\n                    <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                    <Route exact path='/Historial/Planta/Riegos' component={PlantaHistorialRiegos}/>\r\n                    <Route exact path='/Historial/Planta/Timeline' component={PlantaHistorialTimeLine}/>\r\n                    <Route exact path='/Historial/Planta/Podas' component={PlantaHistorialPodas}/>\r\n                    <Route exact path='/Historial/Planta/Transplantes' component={PlantaHistorialTransplantes}/>\r\n                    <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaHistorialFumigaciones}/>\r\n                    <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n                  </Switch>\r\n                </HashRouter>\r\n              </Provider>\r\n            </ThemeProvider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={SignInPage}/>\r\n                <Route exact path='/Login' component={LogInPage}/>\r\n                <Route  component={NotFound}/>\r\n              </Switch>\r\n            </HashRouter>\r\n          </ThemeProvider>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}