{"version":3,"sources":["images/sea of green.jpg","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alerts/AlertPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","App.js","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","Pages/Planta.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","DetallePlanta","Row","className","Col","xs","span","offset","sm","md","Image","src","fotoPlanta","alt","roundedCircle","Container","Table","striped","hover","variant","this","props","genetica","edad","nacimiento","moment","diff","inicioVegetativo","inicioFloracion","Component","DetalleAcciones","to","pathname","user","idPlanta","riegos","nombrePlanta","icon","faTint","podas","faCut","fumigaciones","faBug","AlertNavBar","alertPlanta","faArrowLeft","onClick","e","title","faTimes","onClose","BreadcrumbPlanta","item","return","nombre","AlertPlanta","subirArchivo","a","storage","ref","id","file","document","getElementById","files","put","then","console","log","alertRiegos","alertPodas","alertFumigaciones","type","alertEliminarPlanta","alertCambiarCiclo","AccionDetallada","eliminarAccion","firebase","child","tipoDeAccion","remove","state","show","componentDidMount","setTimeout","setState","Grow","in","timeout","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","AlertEliminarPlanta","tpe","eliminarPlanta","AlertCambiarCiclo","onclose","Overlay","styled","div","Img","img","TarjetaPlanta","undefined","confirmAlert","customUI","database","Paper","elevation","AlertNuevaPlanta","faCheckCircle","value","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","push","format","alertNuevaPlanta","plantas","history","Button","color","faPlusCircle","connect","data","FechaYHora","setInterval","BarraDeLuz","activo","faltante","transcurrido","lamparaEncendida","descanso","actualizarEstado","calcularTranscurrido","horaDeInicio","horaDeFinal","cicloLuminico","actualizarCicloLuminico","slice","calcularFaltante","actualizarBarraDeProgreso","elements","calcularEstadoDeLampara","style","width","calcularEstadoDeBarra","hour","time","add","hours","parseInt","minutes","hora","cambiarEstadoDeLampara","indexOf","interval","clearInterval","periodo","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","signOut","auth","faCogs","closeNavbar","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","Layout","page","children","classes","useState","menuOpened","setMenuOpened","AppBar","position","Toolbar","IconButton","edge","goBack","aria-label","ArrowBackRounded","AccountCircle","Typography","Menu","Drawer","anchor","open","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","primary","Divider","Armario","selectedTab","AlertCambiarInicio","update","horas","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","selectEmpty","marginTop","alert","alignItems","ElegirPlantaAccion","seleccionarPlanta","length","FormGroup","row","planta","FormControlLabel","control","Checkbox","selected","onChange","label","Alert","severity","ElegirTipoDeRiego","cambiarTipoDeRiego","RadioGroup","target","Radio","labelPlacement","BotoneraConfirmacionAccion","handleBack","confirmarAccion","faCheck","size","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","marginBottom","ResumenAccion","Grid","container","justify","CardContent","gutterBottom","parseFloat","toFixed","height","flexDirection","justifyContent","actionsContainer","resetContainer","padding","StepperAccion","steps","resumenAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","lg","defaultActiveKey","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","heading","typography","pxToRem","secondaryHeading","palette","text","secondary","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","TabPanel","other","component","hidden","aria-labelledby","Box","p","store","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","overflow","image","backgroundColor","grey","objectFit","paper","avatar","main","form","submit","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","foto","Avatar","noValidate","required","fullWidth","helperText","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","Planta","location","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.632badd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nclass DetallePlanta extends Component{\r\n    render(){\r\n        return(\r\n            <Row className=\"mt-4 mb-4 align-items-center\">\r\n                <Col xs={{span:8,offset:2}} sm={{span:6,offset:3}} md={{span:4,offset:0}} className=\"text-center mb-2\">\r\n                    <Image src={fotoPlanta} className='w-100' alt=\"\" roundedCircle/>\r\n                </Col>\r\n                <Col md={8} className=\"align-self-center\">\r\n                    <Container className=\"container\">\r\n                        <Table striped hover variant='dark' >\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Genetica</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{this.props.genetica}</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Edad</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{this.props.edad} Dias</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Fecha de Germinacion</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{this.props.nacimiento} ({moment().diff(moment(this.props.nacimiento),'days')} Dias)</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Inicio de Vegetativo</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{\r\n                                            this.props.inicioVegetativo?\r\n                                                `${this.props.inicioVegetativo} (${moment().diff(moment(this.props.inicioVegetativo),'days')} Dias)`\r\n                                                :\r\n                                                '--/--/----'\r\n                                            }</h6>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <h6 className=''>Inicio de Floracion</h6>\r\n                                    </td>\r\n                                    <td>\r\n                                        <h6 className='text-right '>{\r\n                                            this.props.inicioFloracion?\r\n                                            `${this.props.inicioFloracion}  (${moment().diff(moment(this.props.inicioFloracion),'days')} Dias)`\r\n                                            :\r\n                                            '--/--/----'\r\n                                        }</h6>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Container>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default DetallePlanta","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nclass DetalleAcciones extends Component{\r\n    render(){\r\n        return(\r\n            <Row className=\"pt-2 pb-2 botonera justify-content-center \">\r\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                <Link to={{ \r\n                        pathname:'/Planta/Riegos',\r\n                        props:{\r\n                            user:this.props.user,\r\n                            idPlanta:this.props.idPlanta,\r\n                            riegos:this.props.riegos,\r\n                            nombrePlanta:this.props.nombrePlanta\r\n                    }}}>\r\n                        <FontAwesomeIcon icon={faTint} className='alert-icon mb-2' />\r\n                        <small className='alert-icon-text text-white'>Riegos</small>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                <Link to={{ \r\n                        pathname:'/Planta/Podas',\r\n                        props:{\r\n                            user:this.props.user,\r\n                            idPlanta:this.props.idPlanta,\r\n                            podas:this.props.podas,\r\n                            nombrePlanta:this.props.nombrePlanta\r\n                    }}}>\r\n                        <FontAwesomeIcon icon={faCut} className='alert-icon mb-2' />\r\n                        <small className='alert-icon-text text-white'>Podas</small>\r\n                    </Link>\r\n                </Col>\r\n                <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\r\n                    <Link to={{ \r\n                        pathname:'/Planta/Fumigaciones',\r\n                        props:{\r\n                            user:this.props.user,\r\n                            idPlanta:this.props.idPlanta,\r\n                            fumigaciones:this.props.fumigaciones,\r\n                            nombrePlanta:this.props.nombrePlanta\r\n                    }}}>\r\n                        <FontAwesomeIcon icon={faBug} className='alert-icon mb-2' />\r\n                        <small className='alert-icon-text text-white'>Fumigaciones</small>\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\nexport default DetalleAcciones","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNavBar extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row align-items-center mb-2\">\r\n                <div className=\"col-auto mr-auto\">\r\n                    {this.props.alertPlanta?\r\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\r\n                            this.props.alertPlanta()\r\n                        }} className='alert-icon'/>\r\n                        :\r\n                        null\r\n                    }\r\n                </div>\r\n                <div className=\"col-auto text-center text-light\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"col-auto ml-auto\">\r\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\r\n                        this.props.onClose()\r\n                    }}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNavBar","import React , {Component} from 'react'\r\n\r\nclass BreadcrumbPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='breadcrumb bg-light text-dark mb-0'>\r\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\r\n                    this.props.return()\r\n                }}>\r\n                    {this.props.nombre}\r\n                </div>\r\n                {this.props.item?\r\n                    <div className=\"breadcrumb-item active\">\r\n                        {this.props.item}\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\r\nimport DetallePlanta from '../alert-components/DetallePlanta'\r\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {storage} from 'firebase'\r\nclass AlertPlanta extends Component{\r\n    subirArchivo= async ()=>{\r\n        const ref = await storage().ref(this.props.id)\r\n        const file = document.getElementById('input').files[0]\r\n        //file.name=this.props.id+file.name.slice(file.name.indexOf('.'))\r\n        ref.put(file).then(e=>{\r\n            console.log('Archivo subido Correctamente')\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta overflow-auto\">\r\n                <AlertNavBar \r\n                    alertPlanta={this.props.alertPlanta} \r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre}/>}\r\n                />\r\n                <DetallePlanta \r\n                    genetica={this.props.genetica}\r\n                    edad={this.props.edad}\r\n                    nacimiento={this.props.nacimiento}\r\n                    inicioVegetativo={this.props.inicioVegetativo}\r\n                    inicioFloracion={this.props.inicioFloracion}\r\n                />\r\n                <DetalleAcciones\r\n                    alertRiegos={this.props.alertRiegos}\r\n                    alertPodas={this.props.alertPodas}\r\n                    alertFumigaciones={this.props.alertFumigaciones}\r\n                />\r\n                <div className=\"row mt-4 justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <div className=\"btn-group\">\r\n                            <button type='button' className='btn btn-danger mr-4'onClick={this.props.alertEliminarPlanta} >Eliminar Planta</button>\r\n                            <button type='button' className='btn btn-outline-light'onClick={this.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertPlanta","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nimport {Grow} from '@material-ui/core'\r\nclass AccionDetallada extends Component{\r\n    eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(this.props.user).child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\r\n    }\r\n    state={\r\n        show:false\r\n    }\r\n    componentDidMount=()=>{\r\n        setTimeout(() => {\r\n            this.setState({show:true})\r\n        }, 100);\r\n    }\r\n    render(){\r\n        return(\r\n            <Grow in={this.state.show} \r\n            {...(this.state.show ? { timeout: 1500 } : {})}>\r\n                <Card>\r\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            {this.props.tipoDeAccion==='podas'?\r\n                            <div className='container-fluid'>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\r\n                                    </div>\r\n                                    <div className=\"col-auto ml-auto\">\r\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    {this.props.tipoDePoda?\r\n                                        <div className='col'>\r\n                                            <hr/>\r\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                                :\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\r\n                                        </div>\r\n                                        <div className=\"col-auto ml-auto\">\r\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\r\n                                        </div>\r\n                                        <div className=\"col-auto\">\r\n                                            <h5>\r\n                                                <div className=\"badge badge-pill badge-light\">\r\n                                                    {this.props.accion.tipoDeRiego}\r\n                                                </div>\r\n                                            </h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.props.accion.aditivos?\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <FontAwesomeIcon icon={faSortDown}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        :\r\n                                        null\r\n                                    }\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </Accordion.Toggle>\r\n                    {this.props.accion.aditivos?\r\n                        <Accordion.Collapse eventKey={this.props.index}>\r\n                            <Card.Body>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\r\n                                                <div className=\"col-auto\" key={aditivo+i}>\r\n                                                    <span className='badge badge-pill badge-dark'>\r\n                                                        <div className=\"col-auto\">\r\n                                                            {aditivo}\r\n                                                        </div>\r\n                                                        <div className=\"col-auto\">\r\n                                                            {this.props.accion.aditivos[aditivo]} ml\r\n                                                        </div>\r\n                                                    </span>\r\n                                                </div>\r\n                                            ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                        :\r\n                        null\r\n                    }\r\n                </Card>\r\n            </Grow>\r\n        )\r\n    }\r\n}\r\nexport default AccionDetallada","import React , {Component} from 'react'\r\n\r\nclass AlertEliminarPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                            this.props.eliminarPlanta()\r\n                            this.props.onClose()\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport { Accordion } from 'react-bootstrap'\r\nclass AlertPodas extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertPlanta}\r\n                    onClose={this.props.onClose}\r\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\r\n                />\r\n                <div className=\"container-fluid submodalIn\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {this.props.podas?\r\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                            ))\r\n                            :\r\n                            <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            this.props.onClose()\r\n                                            this.props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertPodas","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nclass AlertRiego extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid submodalIn\">\r\n                <Accordion defaultActiveKey='0'>\r\n                    {this.props.riegos?\r\n                        Object.keys(this.props.riegos).reverse().map((id,i)=>(\r\n                            <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\r\n                        ))\r\n                        :\r\n                        <>\r\n                            <div className=\"row justify-content-center mt-4\">\r\n                                <div className=\"col-auto\">\r\n                                    <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row justify-content-center mt-4\">\r\n                                <div className=\"col-auto\">\r\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                        this.props.onClose()\r\n                                        this.props.history.push('/Riego')\r\n                                    }}>Riegala Ahora!</button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                </Accordion>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertRiego","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\n\r\nclass AlertCambiarCiclo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar \r\n                    alertPlanta={this.props.alertPlanta} \r\n                    onClose={this.props.onclose} \r\n                />\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\r\n                        }}>Si, Eliminar</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarCiclo","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/alertPlanta.css'\r\nimport AlertPlanta from '../alerts/AlertPlanta'\r\nimport AlertPodas from '../alerts/AlertPodas'\r\nimport AlertRiego from '../alerts/AlertRiego'\r\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\r\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nimport {Link} from 'react-router-dom'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Grow} from '@material-ui/core' \r\nclass TarjetaPlanta extends Component{\r\n    state={\r\n        edad:undefined\r\n    }\r\n    alertEliminarPlanta=()=>confirmAlert({\r\n        customUI : ({onClose}) =>{\r\n            return(\r\n                <div className=\"custom-ui\">\r\n                    <AlertEliminarPlanta\r\n                        user={this.props.user}\r\n                        nombre={this.props.nombre}\r\n                        eliminarPlanta={this.eliminarPlanta}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    alertCambiarCiclo=()=>confirmAlert({\r\n        customUI : ({onClose}) =>{\r\n            return(\r\n                <div className=\"custom-ui\">\r\n                    <AlertCambiarCiclo\r\n                        user={this.props.user}\r\n                        alertPlanta={this.alertPlanta}\r\n                        onClose={onClose}\r\n                        nombre={this.props.nombre}\r\n                    />\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    alertPlanta=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui submodalOut'>\r\n                    <AlertPlanta\r\n                        {...this.props}\r\n                        onClose={onClose}\r\n                        alertEliminarPlanta={this.alertEliminarPlanta}\r\n                        alertCambiarCiclo={this.alertCambiarCiclo}\r\n                        alertPodas={this.alertPodas}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    componentDidMount(){\r\n        this.setState({\r\n            edad:moment().diff(moment(this.props.nacimiento),'days')\r\n        })\r\n    }\r\n    eliminarPlanta=async ()=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(this.props.id).remove()\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"col-auto\">\r\n                <Grow in={true}\r\n                    {...(true ? { timeout: 1500 } : {})}>\r\n                    <Paper elevation={6}>\r\n                        <Link className='text-white' to={{\r\n                            pathname:'/Planta',\r\n                            props:{\r\n                                ...this.props,\r\n                            }\r\n                        }}>\r\n                            <Card className=\"card bg-light\" >\r\n                                <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                                <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-left\">\r\n                                                <h4 className=\"card-title\">{this.props.nombre}</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col text-left\">\r\n                                                <h6 className=\"card-subtitle mb-2 text-white\">{this.state.edad} dias</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Overlay>\r\n                            </Card>\r\n                        </Link>\r\n                    </Paper>\r\n                </Grow>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default TarjetaPlanta","import React , {Component} from 'react'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertNuevaPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n            <div className=\"row\">\r\n                <div className=\"col text-center\">\r\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-auto form-group\">\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                Nombre\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" className='form-control' id='inputNombre' />\r\n                    </div>\r\n                    <div className=\"form-group input-group\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">\r\n                                Genetica\r\n                            </span>\r\n                        </div>\r\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon \r\n                        icon={faCheckCircle} \r\n                        className=\"continueIcon alert-icon\" \r\n                        onClick={e=>{\r\n                            const nombre = document.getElementById('inputNombre').value\r\n                            const genetica = document.getElementById('inputGenetica').value\r\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\r\n                            this.props.onClose()\r\n                        }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon \r\n                        icon={faTimesCircle} \r\n                        onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}\r\n                        className='cancelIcon alert-icon'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\r\nimport Planta from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\r\nimport {Button} from '@material-ui/core'\r\nclass CarouselPlantas extends Component{\r\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\r\n        await database().ref().child(this.props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica,\r\n            nacimiento:moment().format('L')\r\n        })\r\n    }\r\n    alertNuevaPlanta=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui submodalOut'>\r\n                    <AlertNuevaPlanta\r\n                        onClose={onClose}\r\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\r\n                    {this.props.plantas?\r\n                        Object.keys(this.props.plantas).map(key=>(\r\n                            <Planta\r\n                                user={this.props.user}\r\n                                nacimiento={this.props.plantas[key].nacimiento} \r\n                                genetica={this.props.plantas[key].genetica}\r\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \r\n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \r\n                                podas={this.props.plantas[key].podas} \r\n                                riegos={this.props.plantas[key].riegos}\r\n                                fumigaciones={this.props.plantas[key].fumigaciones}\r\n                                nombre={this.props.plantas[key].nombre}\r\n                                id={key}\r\n                                key={key}\r\n                                history={this.props.history}\r\n                            />\r\n                        ))\r\n                        :\r\n                        <div className=\"col-12 text-center\">\r\n                            <h2 className='text-white'>Aun No hay plantas</h2>\r\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.alertNuevaPlanta}>\r\n                                Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\r\n                            </Button>\r\n                        </div>\r\n                    }\r\n                    <div className=\"col-3\">\r\n                        <FontAwesomeIcon icon={faPlusCircle} className='alert-icon' onClick={this.alertNuevaPlanta}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\n\r\nclass FechaYHora extends Component{\r\n    state={\r\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\r\n    }\r\n    componentDidMount(){\r\n        setInterval(() => {\r\n            this.setState({\r\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\r\n            })\r\n        }, 1000);\r\n    }\r\n    render(){\r\n        return(\r\n            \r\n            <h1>{this.state.fecha}</h1>\r\n        )\r\n    }\r\n}\r\nexport default FechaYHora","import React, {Component} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport FechaYHora from '../components/FechaYHora'\r\n\r\n\r\n\r\nclass BarraDeLuz extends Component{\r\n    \r\n    state={\r\n        activo:0,\r\n        faltante:undefined,\r\n        transcurrido:undefined,\r\n        lamparaEncendida:undefined,\r\n        descanso:false\r\n    }\r\n    actualizarEstado =(lamparaEncendida)=>{\r\n        let transcurrido = this.calcularTranscurrido(lamparaEncendida)\r\n        if(this.props.horaDeInicio>=this.props.horaDeFinal){\r\n            console.log(moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\r\n        }\r\n        else{\r\n            console.log(-moment(this.props.horaDeInicio,'h').diff(moment(),'h'))\r\n        }\r\n        const cicloLuminico = this.actualizarCicloLuminico()\r\n        if(transcurrido.slice(0,2)>cicloLuminico){\r\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\r\n            this.setState({\r\n                descanso:true\r\n            })\r\n        }\r\n        else{\r\n            this.setState({\r\n                descanso:false\r\n            })\r\n        }\r\n        this.setState({\r\n            cicloLuminico: cicloLuminico,\r\n            transcurrido: transcurrido,\r\n            faltante:this.calcularFaltante()\r\n        })\r\n        return [transcurrido,cicloLuminico]\r\n    }\r\n    actualizarBarraDeProgreso=()=>{\r\n        const elements=this.actualizarEstado(this.calcularEstadoDeLampara())\r\n        const barra = document.getElementById('barraLuz')\r\n        barra.style.width=`${this.calcularEstadoDeBarra(elements[0],elements[1])}%`\r\n    }\r\n    calcularEstadoDeLampara=()=>{\r\n        const hour = moment().format('LT').slice(0,2)\r\n        console.log()\r\n        if(hour>=this.props.horaDeInicio && hour < this.props.horaDeFinal){\r\n            return true\r\n        }\r\n        else{\r\n            return false\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.actualizarBarraDeProgreso()\r\n        const interval = setInterval(() => {\r\n            this.actualizarBarraDeProgreso()\r\n        }, 1000);\r\n        this.setState({\r\n            interval: interval\r\n        })\r\n    }\r\n    componentWillUnmount(){\r\n        clearInterval(this.state.interval)\r\n    }\r\n    actualizarCicloLuminico(){\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            return moment(this.props.horaDeFinal,'h').add(1,'days').diff(moment(this.props.horaDeInicio,'h'),'h')\r\n            \r\n        }\r\n        else{\r\n            return moment(this.props.horaDeFinal,'h').diff(moment(this.props.horaDeInicio,'h'),'h')\r\n        }\r\n    } \r\n    calcularFaltante=()=>{\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = moment().diff(moment(this.props.horaDeInicio,'h'),'m')\r\n                :\r\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\r\n        }\r\n        else{\r\n            //const dif = this.props.horaDeInicio-this.props.horaDeFinal\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = -moment().diff(moment(this.props.horaDeInicio,'h'),'m')\r\n                :\r\n                time = moment().diff(moment(this.props.horaDeFinal,'h'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\r\n        }\r\n    }\r\n    calcularTranscurrido=(lamparaEncendida)=>{\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = moment().diff(moment(this.props.hora,'h'),'m')\r\n                :\r\n                time = -moment().diff(moment(this.props.horaDeFinal,'h'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\r\n        }\r\n        else{\r\n            let time = undefined\r\n            this.state.descanso?\r\n                time = moment().diff(moment(this.props.horaDeInicio,'h').add(1,'days'),'m')\r\n                :\r\n                time = moment().diff(moment(this.props.horaDeFinal,'h').add(1,'days'),'m')\r\n            const hours = parseInt(-time/60)\r\n            const minutes = -time%60\r\n            console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\r\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\r\n    }\r\n}\r\n    cambiarEstadoDeLampara=()=>{\r\n        this.setState({\r\n            lamparaEncendida:!this.state.lamparaEncendida\r\n        })\r\n    }\r\n    calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\r\n        if(this.props.horaDeFinal<=this.props.horaDeInicio){\r\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\r\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\r\n            return minutos/(cicloLuminico*60)*100\r\n            \r\n        }\r\n        else{\r\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\r\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\r\n            return minutos/(cicloLuminico*60)*100\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <FechaYHora/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row mt-4 mb-4\">\r\n                    <div className=\"col text-center\">\r\n                        <h3>Periodo {this.props.periodo}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        <h3>Ciclo Luminico {this.state.cicloLuminico} Hs ({this.props.horaDeInicio}:00 - {this.props.horaDeFinal}:00)</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col text-center\">\r\n                        Transcurrido (Hs) {this.state.transcurrido}\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        Faltante (Hs) {this.state.faltante}\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {this.state.descanso?\r\n                        <div className=\"col text-center\">\r\n                            <span className='badge badge-pill p-3 badge-dark'>\r\n                                Descansando...\r\n                            </span>\r\n                        </div>\r\n                        :\r\n                        <div className=\"col text-center\">\r\n                            <span className='badge badge-pill p-3 badge-success'>\r\n                                Creciendo...\r\n                            </span>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-10 offset-1\">\r\n                        <div className=\"progress\">\r\n                            <div className={this.state.descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        horaDeFinal:state.data.horaDeFinal,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(BarraDeLuz)","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nclass AlertConfiguracionArmario extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    onClose={this.props.onClose}\r\n                    title={'Configuracion Del Armario'}\r\n                />\r\n                <div className=\"row mt-2\">\r\n                    <div className=\"col-6 offset-3\">\r\n                    <table className=\"table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td className='text-white'>Periodo</td>\r\n                                    <td className='text-right text-white'>\r\n                                        <select name=\"\" id=\"\">\r\n                                            <option value=\"\">\r\n                                                {this.props.periodo}\r\n                                            </option>\r\n                                            <option value=\"\">\r\n                                                Germinacion\r\n                                            </option>\r\n                                            <option value=\"\">\r\n                                                Floracion\r\n                                            </option>\r\n                                        </select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\r\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\r\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarPeriodo()\r\n                        }}>Cambiar Periodo</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarInicio()\r\n                        }}>Cambiar Hora de Inicio</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-success' onClick={e=>{\r\n                            this.props.alertCambiarFinal()\r\n                        }}>Cambiar Hora de Final</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertBotoneraConfirmacion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row justify-content-around\">\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                        this.props.cambiarHora()\r\n                        this.props.alertConfiguracion()\r\n                    }}/>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                        this.props.alertConfiguracion()\r\n                    }} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertBotoneraConfirmacion","import React from 'react'\r\n\r\nconst InputCambiarHorario = ()=>{\r\n    return(\r\n        <div className=\"row justify-content-center mt-4\">\r\n            <div className=\"col-2\">\r\n                <div className=\"input-group form-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                            Hora\r\n                        </span>\r\n                    </div>\r\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-2 \">\r\n                <div className=\"input-group\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <span className=\"input-group-text\">\r\n                            Minutos\r\n                        </span>\r\n                    </div>\r\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default InputCambiarHorario","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\r\nclass AlertCambiarFinal extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Hora de Final Del Ciclo'\r\n                />\r\n                <InputCambiarHorario/>\r\n                <AlertBotoneraConfirmacion\r\n                    cambiarHora={this.props.cambiarHoraDeFinal}\r\n                    alertConfiguracion={this.props.alertConfiguracion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarFinal","import React , {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\r\nclass AlertCambiarFinal extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Hora de Final Del Ciclo'\r\n                />\r\n                <InputCambiarHorario/>\r\n                <AlertBotoneraConfirmacion\r\n                    cambiarHora={this.props.cambiarHoraDeInicio}\r\n                    alertConfiguracion={this.props.alertConfiguracion}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarFinal","import React, {Component} from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\r\nclass AlertCambiarPeriodo extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta\">\r\n                <AlertNavBar\r\n                    alertPlanta={this.props.alertConfiguracion}\r\n                    onClose={this.props.onClose}\r\n                    title='Cambiar Periodo del Armario'\r\n                />\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Germinacion')\r\n                        }}>Germinacion</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Vegetativo')\r\n                        }}>Vegetativo</button>\r\n                    </div>\r\n                    <div className=\"col text-center\">\r\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\r\n                            this.props.cambiarStatePeriodo('Floracion')\r\n                        }}>Floracion</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-around\">\r\n                    <div className=\"col-auto\">\r\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\r\n                            this.props.cambioDePeriodo()\r\n                            this.props.alertConfiguracion()\r\n                        }}/>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\r\n                            this.props.alertConfiguracion()\r\n                        }} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\r\n\r\nexport const MenuButton = styled.div`\r\n    cursor:pointer;\r\n    font-size:2.5rem\r\n`","import styled, {keyframes,css} from 'styled-components'\r\n\r\n\r\nconst slideLeftKeyframes = keyframes`\r\n    from{\r\n        right:-25%;\r\n        background-color:rgb(34,153,84,0);\r\n    }\r\n    to{\r\n        right:0%;\r\n        background-color:rgb(34,153,84,0.98);\r\n    }\r\n`\r\nconst slideLeft = css`\r\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\r\n    z-index:1\r\n`\r\n\r\nexport const Navbar=styled.nav`\r\n    ${slideLeft};\r\n    position:absolute;\r\n    top:0;\r\n    right:-25%;\r\n    height:100%;\r\n    width:25%;\r\n`\r\nexport const Hr = styled.hr`\r\n    border-top:1px solid white\r\n`","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst AccionesRapidas=()=>{\r\n        return(\r\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\r\n                <div className=\"col-auto text-center\">\r\n                    <small>Acciones</small>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Riego'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Poda'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-auto form-group\">\r\n                    <Link to='/Insecticida'>\r\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\nexport default AccionesRapidas","import React, {Component} from 'react'\r\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\r\nimport AccionesRapidas from '../components/AccionesRapidas'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button} from 'react-bootstrap'\r\nimport {auth} from 'firebase'\r\nimport {Redirect} from 'react-router-dom'\r\nclass Navbar extends Component{\r\n    signOut=async ()=>{\r\n        await auth().signOut()\r\n        return <Redirect to='/'/>\r\n    }\r\n    render(){\r\n        return(\r\n            <Nav>\r\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col text-left\">\r\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\r\n                                this.props.alertConfiguracion()\r\n                            }}/>\r\n                        </div>\r\n                        <div className=\"col text-right\">\r\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\r\n                        </div>\r\n                    </div>\r\n                    <Hr/>\r\n                    {this.props.plantas?\r\n                        <AccionesRapidas/>\r\n                        :\r\n                        null\r\n                    }\r\n                    <Hr/>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <Link to='/Aplicables'>\r\n                                <button type='button' className='btn btn-light'>Aditivos</button>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            <Link to='/Deficiencias-Carencias'>\r\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto ml-auto mr-auto\">\r\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\r\n                                Cerrar Sesion\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        plantas:state.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Navbar)","import React , {useState} from 'react'\r\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\nimport {auth} from 'firebase'\r\nimport {AppBar,Toolbar,IconButton,Typography,Menu} from '@material-ui/core'\r\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined} from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\nexport const Layout=({page,children,history})=>{\r\n    const classes = useStyles();\r\n    let [menuOpened,setMenuOpened]=useState(false)\r\n    let [selectedTabs,setSelectedTabs]=useState('recents')\r\n        return(\r\n            <div className=\"App d-flex flex-column justify-content-start\">\r\n                 <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                        {page!=='Armario'?\r\n                            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                                history.goBack()\r\n                            }} color=\"inherit\" aria-label=\"menu\">\r\n                                <ArrowBackRounded />\r\n                            </IconButton>\r\n                            :\r\n                            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                                \r\n                            }} color=\"inherit\" aria-label=\"menu\">\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        }\r\n                        <Typography variant=\"h6\" className={classes.title} >\r\n                            {page}\r\n                        </Typography>\r\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                            setMenuOpened(true)\r\n                        }} color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Drawer anchor=\"right\" open={menuOpened} onClose={e=>{setMenuOpened(false)}}>\r\n                        <div className=\"container d-flex flex-column h-100 justify-content-between\">\r\n                            <div>\r\n                                <List>\r\n                                    <Link to='/' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Armario'} >\r\n                                            <ListItemIcon><HomeOutlined/></ListItemIcon>\r\n                                            <ListItemText primary={'Armario'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='Riego' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Regar'} >\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                                            <ListItemText primary={'Regar'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='Poda' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Podar'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                                            <ListItemText primary={'Podar'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='Insecticida' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Fumigar'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                            <ListItemText primary={'Fumigar'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                            </div>\r\n                            <div>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Aplicables' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Aditivos'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                            <ListItemText primary={'Aditivos'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Aditivos' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Carencias y Excesos'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                                            <ListItemText primary={'Carencias y Excesos'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <Link to='/Configuracion' className='outline-none text-dark'>\r\n                                        <ListItem button key={'Configuracion'}>\r\n                                            <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                                            <ListItemText primary={'Configuracion'} />\r\n                                        </ListItem>\r\n                                    </Link>\r\n                                </List>\r\n                                <Divider />\r\n                                <List>\r\n                                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                                            await auth().signOut()\r\n                                        }}>\r\n                                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                                        <ListItemText primary={'Cerrar Sesion'} />\r\n                                    </ListItem>\r\n                                </List>\r\n                            </div>\r\n                        </div>\r\n                    </Drawer>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n/*\r\n                            <BottomNavigation value={this.state.selectedTab} onChange={(e,value)=>{\r\n                                this.setState({selectedTab:value})\r\n                                if(value==='recents'){\r\n                                    this.props.history.push('/')\r\n                                }\r\n                                else if(value==='favorites'){\r\n                                    this.props.history.push('/Riego')\r\n                                }\r\n                                else if(value==='nearby'){\r\n                                    this.props.history.push('/Aplicables')\r\n                                }\r\n                            }}>\r\n                                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n                                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n                                <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n                                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\r\n                            </BottomNavigation>\r\n\r\n*/","import React , {Component} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport BarraDeLuz from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database} from 'firebase'\r\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\r\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\r\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\r\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\r\nimport {MenuButton} from './styles/ArmarioStyle'\r\nimport Navbar from '../components/Navbar'\r\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Layout} from './Layout'\r\nimport {Paper }from '@material-ui/core'\r\n\r\nclass Armario extends Component{\r\n    state={\r\n        nuevoPeriodo:undefined,\r\n        menuOpened:false,\r\n        selectedTab:'recents'\r\n    }\r\n    alertCambiarPeriodo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarPeriodo\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        nuevoPeriodo={this.state.nuevoPeriodo}\r\n                        cambiarStatePeriodo={nuevoPeriodo=>{\r\n                            this.setState({\r\n                                nuevoPeriodo:nuevoPeriodo\r\n                            })\r\n                        }}\r\n                        cambioDePeriodo={this.cambioDePeriodo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertCambiarInicio=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarInicio\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertCambiarFinal=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertCambiarFinal\r\n                        onClose={onClose}\r\n                        alertConfiguracion={this.alertConfiguracion}\r\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    alertConfiguracion=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertConfiguracionArmario\r\n                        periodo={this.props.periodo}\r\n                        horaDeFinal={this.props.horaDeFinal}\r\n                        horaDeInicio={this.props.horaDeInicio}\r\n                        onClose={onClose}\r\n                        alertCambiarFinal={this.alertCambiarFinal}\r\n                        alertCambiarInicio={this.alertCambiarInicio}\r\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    cambioDePeriodo=async()=>{\r\n        await database().ref().child(this.props.user).update({\r\n            periodo:this.state.nuevoPeriodo\r\n        })\r\n    }\r\n    cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(this.props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page=\"Armario\">\r\n                    <div className=\"container-fluid d-flex flex-column justify-content-around h-100\">\r\n                        <div className='row'>\r\n                            <div className='col'>\r\n                                <BarraDeLuz/>            \r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <CarouselPlantas history={this.props.history}/>\r\n                        </div>\r\n                    </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.hora,\r\n        horaDeFinal:state.data.horaDeFinal,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\r\nclass AlertConfirmarAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.accionfn()\r\n                            this.props.onClose()\r\n                            this.props.history.goBack()\r\n                        }}>Confirmar</button>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\r\n                            this.props.onClose()\r\n                        }}>Cancelar</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\r\nclass NavBarAccion extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"row mt-4\">\r\n                <div className=\"col-2 text-left offset-1\">\r\n                    <Link to=\"/\">\r\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-6 text-center\">\r\n                    <h1 className='text-white'>{this.props.title}</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default NavBarAccion\r\n","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\nimport {Alert} from '@material-ui/lab/'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    }\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas.length?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox color='default' checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                    />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        <div className=\"col-12\">\r\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    return(\r\n        <Row>\r\n            <div className=\"cola-auto ml-auto mr-auto\">\r\n                <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                    <FormControlLabel\r\n                        value=\"top\"\r\n                        control={<Radio\r\n                            value=\"Tierra\" \r\n                            name=\"Tierra\"\r\n                            color='default'\r\n                        />}\r\n                        label='Tierra'\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                    <FormControlLabel\r\n                        value=\"top\"\r\n                        control={<Radio\r\n                            value=\"Foliar\"\r\n                            name=\"Foliar\"\r\n                            color='default'\r\n                        />}\r\n                        label=\"Foliar\"\r\n                        labelPlacement=\"top\"\r\n                    />\r\n                </RadioGroup>\r\n            </div>\r\n        </Row>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button} from '@material-ui/core'\r\nclass BotoneraConfirmacionAccion extends Component {\r\n    render(){\r\n        return(\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <Button\r\n                        onClick={this.props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Atras\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            e=>{\r\n                                this.props.confirmarAccion(this.props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                        Guardar {this.props.accion}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    }\r\n  }));\r\n  /*\r\n  <ExpansionPanelSummary\r\n                    expandIcon={<ExpandMoreIcon />}\r\n                    aria-controls=\"panel1bh-content\"\r\n                    id=\"panel1bh-header\"\r\n                >    \r\n                    <Typography>\r\n                        Cantidad de Agua y Aditivos\r\n                    </Typography>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            {props.cantidadDeAgua?\r\n                                <Typography>\r\n                                    {props.cantidadDeAgua} L\r\n                                </Typography>\r\n                                :\r\n                                null\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-auto\">\r\n                            {props.aditivosUsados?\r\n                                <Typography className=\"col-auto\">\r\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\r\n                                        const cantidad = props.aditivosUsados[aditivo]\r\n                                        return(\r\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\r\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\r\n                                            </span>\r\n                                        )\r\n                                    })}\r\n                                </Typography>\r\n                                :\r\n                                null}\r\n                        </div>\r\n                    </div>\r\n                </ExpansionPanelSummary>*/\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <p className='text-dark'>Aditivos (ml)</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos?\r\n                                        props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        :\r\n                                        <div className=\"col-12\">\r\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Paper } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  return (\r\n    <Grid item xs={12}>\r\n        <Grid container justify=\"space-around\" className='mb-2' >\r\n            <Grid item>     \r\n                <Paper elevation={3}>\r\n                    <Card className={classes.card} variant=\"outlined\">\r\n                        <CardContent>\r\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                Plantas Seleccionadas\r\n                            </Typography>\r\n                            {plantas.map(planta => (\r\n                                planta.selected?\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        <strong>{planta.nombre}</strong>\r\n                                    </Typography>\r\n                                    :\r\n                                    null\r\n                            ))}\r\n                        </CardContent>\r\n                    </Card>\r\n                </Paper>\r\n            </Grid>\r\n            {tipoDeRiego?\r\n                <>  \r\n                    <Grid item>      \r\n                        <Paper elevation={3}>\r\n                            <Card className={classes.card} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Tipo De Riego\r\n                                    </Typography>\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            <strong>{tipoDeRiego}</strong>\r\n                                        </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>      \r\n                        <Paper elevation={3}>\r\n                            <Card className={classes.card} variant=\"outlined\">\r\n                                <CardContent>\r\n                                    <Typography className={classes.pos} color=\"textSecondary\">\r\n                                        <strong>{cantidadDeAgua} L de agua</strong>\r\n                                    </Typography>\r\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                        Aditivos usados\r\n                                    </Typography>\r\n                                    {aditivos?\r\n                                        Object.keys(aditivos).map(aditivo=>{\r\n                                            const dosis= aditivos[aditivo]\r\n                                            return(\r\n                                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                                    <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\r\n                                                </Typography>\r\n                                            )\r\n                                        })\r\n                                        :\r\n                                        <Typography className={classes.pos} color=\"textSecondary\">\r\n                                            <strong>-</strong>\r\n                                        </Typography>\r\n                                    }\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Paper>\r\n                    </Grid>\r\n                </>\r\n                :\r\n                <Grid item>      \r\n                    <Paper elevation={3}>\r\n                        <Card className={classes.card} variant=\"outlined\">\r\n                            <CardContent>\r\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n                                    Tipo De Poda\r\n                                </Typography>\r\n                                <Typography className={classes.pos} color=\"textSecondary\">\r\n                                    <strong>{tipoDePoda}</strong>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Paper>\r\n                </Grid>\r\n            }\r\n        </Grid>\r\n    </Grid>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    height:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'center',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(activeStep===0){\r\n      return selectedPlants.length?false:true\r\n    }\r\n    else if(activeStep===1){\r\n      if(tipoDeAccion==='Poda'){\r\n        return tipoDePoda?false:true\r\n      }\r\n      else{\r\n        return tipoDeRiego?false:true\r\n      }\r\n    }\r\n    else if(activeStep===2){\r\n        return cantidadDeAgua?false:true\r\n    }\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={activeStep} elevation={3} orientation=\"vertical\">\r\n        {steps.map((step, index) => (\r\n            step?\r\n                <Step key={step.title}>\r\n                    <StepLabel>{step.title}</StepLabel>\r\n                <StepContent>\r\n                    <Typography>{step.content}</Typography>\r\n                    <div className={classes.actionsContainer}>\r\n                        <div>\r\n                        <Button\r\n                            disabled={activeStep === 0}\r\n                            onClick={handleBack}\r\n                            className={classes.button}\r\n                        >\r\n                            Atras\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={handleNext}\r\n                            className={classes.button}\r\n                            disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                        >\r\n                            {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                        </Button>\r\n                        </div>\r\n                    </div>\r\n                    </StepContent>\r\n                </Step>\r\n                :\r\n                null\r\n        ))}\r\n      </Stepper>\r\n      {activeStep === steps.length && (\r\n        <Paper square elevation={6} className={classes.resetContainer}>\r\n            {resumenAccion}\r\n            <BotoneraConfirmacionAccion\r\n                accion={tipoDeAccion}\r\n                handleBack={handleBack}\r\n                confirmarAccion={confirmarAccion}\r\n            />\r\n        </Paper>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {Layout} from './Layout'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Riego'>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                    <StepperAccion \r\n                        step1='Plantas'\r\n                        step2='Tipo De Riego'\r\n                        step3='Cantidad de agua y aditivos'\r\n                        selectedPlants={selectedPlants}\r\n                        cantidadDeAgua={this.state.cantidadDeAgua}\r\n                        tipoDeRiego={this.state.tipoDeRiego}\r\n                        confirmarAccion={this.confirmarAccion}\r\n                        resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                        tipoDeAccion='Riego'\r\n                        steps={[\r\n                                {\r\n                                title:'Plantas',\r\n                                content:(\r\n                                    <ElegirPlantaAccion\r\n                                        seleccionarPlanta={this.seleccionarPlanta}\r\n                                        plantas={this.state.plantas}\r\n                                        setExpansionExpanded={this.setExpansionExpanded}\r\n                                        expanded={this.state.expanded}\r\n                                    />\r\n                                )},\r\n                                {title:'Tipo De Riego',\r\n                                content:(\r\n                                    <ElegirTipoDeRiego\r\n                                        tipoDeRiego={this.state.tipoDeRiego}    \r\n                                        cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                        setExpansionExpanded={this.setExpansionExpanded}\r\n                                        expanded={this.state.expanded}\r\n                                    />\r\n                                )},\r\n                                {title:'Cantidad De Agua y Aditivos',\r\n                                content:(\r\n                                    <FormularioAccion\r\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                            cambiarAditivo={this.cambiarAditivo}\r\n                                            adivito='Fertlizante'\r\n                                            aditivos={this.props.aditivos}\r\n                                            aditivosUsados={this.state.aditivos}\r\n                                            eliminarAditivo={this.eliminarAditivo}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                )},\r\n                        ]}\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\r\nimport NavBarAccion from '../components/NavBarAccion';\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Fumigacion'>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n                        <StepperAccion \r\n                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                            tipoDeRiego={this.state.tipoDeRiego}\r\n                            confirmarAccion={this.confirmarAccion}\r\n                            selectedPlants={selectedPlants}\r\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                            tipoDeAccion='Fumigacion'\r\n                            steps={[\r\n                                {\r\n                                title:'Plantas',\r\n                                content:(\r\n                                    <ElegirPlantaAccion\r\n                                        seleccionarPlanta={this.seleccionarPlanta}\r\n                                        plantas={this.state.plantas}\r\n                                        setExpansionExpanded={this.setExpansionExpanded}\r\n                                        expanded={this.state.expanded}\r\n                                    />\r\n                                )},\r\n                                {title:'Tipo De Riego',\r\n                                content:(\r\n                                    <ElegirTipoDeRiego\r\n                                        tipoDeRiego={this.state.tipoDeRiego}\r\n                                        cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                        setExpansionExpanded={this.setExpansionExpanded}\r\n                                        expanded={this.state.expanded}\r\n                                    />\r\n                                )},\r\n                                {title:'Cantidad De Agua y Aditivos',\r\n                                content:(\r\n                                    <FormularioAccion\r\n                                        eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                        tipoDeRiego={this.state.tipoDeRiego}\r\n                                        cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                        cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                        cambiarAditivo={this.cambiarAditivo}\r\n                                        aditivo='Insecticida'\r\n                                        aditivos={this.props.aditivos}\r\n                                        aditivosUsados={this.state.aditivos}\r\n                                        eliminarAditivo={this.eliminarAditivo}\r\n                                        setExpansionExpanded={this.setExpansionExpanded}\r\n                                        expanded={this.state.expanded}\r\n                                    />\r\n                                )},\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    let dosisList = []\r\n    if(aditivo){\r\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\r\n            setCantidadDeDosis(cantidadDeDosis+=1)\r\n            if(tipoDeRiego==='Foliar'){\r\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\r\n                    dosisList.push({\r\n                        nombre:dosificacion,\r\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\r\n                    })\r\n                    return null\r\n                })\r\n            }\r\n            else{\r\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\r\n                    dosisList.push({\r\n                        nombre:dosificacion,\r\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\r\n                    })\r\n                    return null\r\n                })\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    return(\r\n        <Form className='d-flex align-items-center mb-3'>\r\n            {console.log(cantidadDeDosis)}\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\r\n                        <Accordion defaultActiveKey='0'>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h4 className='text-white'>Caracteristicas</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row mt-2\">\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Nombre\r\n                                                    </Form.Label>\r\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\r\n                                                        updateState(e.target.value,'nombre')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-auto ml-auto mr-auto\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Marca\r\n                                                    </Form.Label>\r\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\r\n                                                        updateState(e.target.value,'marca')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                            <div className=\"col-12\">\r\n                                                <Form.Group>\r\n                                                    <Form.Label className='text-dark'>\r\n                                                        Descripcion\r\n                                                    </Form.Label>\r\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\r\n                                                        updateState(e.target.value,'descripcion')\r\n                                                    }}/>\r\n                                                </Form.Group>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                            <Card>\r\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <h4 className='text-white'>Dosificacion</h4>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </Accordion.Toggle>\r\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\r\n                                        <Form>\r\n                                            <Container>\r\n                                                <Row className='flex-nowrap overflow-auto'>\r\n                                                {dosisList.length?\r\n                                                    dosisList.map((vacio,i)=>(\r\n                                                        <div className=\"col-auto\">\r\n                                                            <Form.Group >\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Etapa\r\n                                                                </Form.Label>\r\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\r\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\r\n                                                                }}/>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Cantidad\r\n                                                                </Form.Label>\r\n                                                                <InputGroup>\r\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\r\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                                                                    }}/>\r\n                                                                    <InputGroup.Prepend>\r\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\r\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                                                        }}>\r\n                                                                            <option value='1' selected>ml/L</option>\r\n                                                                            <option value=\"2\">gr/L</option>\r\n                                                                        </Form.Control>\r\n                                                                    </InputGroup.Prepend>\r\n                                                                </InputGroup>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Tipo de riego\r\n                                                                </Form.Label>\r\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\r\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                                                }}>\r\n                                                                    <option>-</option>\r\n                                                                    <option value='Foliar'>Foliar</option>\r\n                                                                    <option value=\"Tierra\">Tierra</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    ))\r\n                                                    :\r\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                                                        <div className=\"col-auto\">\r\n                                                            <Form.Group >\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Etapa\r\n                                                                </Form.Label>\r\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\r\n                                                                }}/>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Cantidad\r\n                                                                </Form.Label>\r\n                                                                <InputGroup>\r\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\r\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                                                                    }}/>\r\n                                                                    <InputGroup.Prepend>\r\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\r\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                                                        }}>\r\n                                                                            <option value='1' selected>ml/L</option>\r\n                                                                            <option value=\"2\">gr/L</option>\r\n                                                                        </Form.Control>\r\n                                                                    </InputGroup.Prepend>\r\n                                                                </InputGroup>\r\n                                                                <Form.Label className='text-dark'>\r\n                                                                    Tipo de riego\r\n                                                                </Form.Label>\r\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\r\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                                                }}>\r\n                                                                    <option>-</option>\r\n                                                                    <option value='Foliar'>Foliar</option>\r\n                                                                    <option value=\"Tierra\">Tierra</option>\r\n                                                                </Form.Control>\r\n                                                            </Form.Group>\r\n                                                        </div>\r\n                                                    ))\r\n                                                }\r\n                                                    <div className=\"col-auto align-self-center\">\r\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\r\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\r\n                                                        }}/>\r\n                                                    </div>\r\n                                                </Row>\r\n                                            </Container>\r\n                                        </Form>\r\n                                </Accordion.Collapse>\r\n                            </Card>\r\n                        </Accordion>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Form>\r\n    )\r\n}","import React ,{useState}from 'react'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\r\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\r\nimport {database} from 'firebase'\r\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos=aditivos\r\n        newAditivos.push(newAditivo)\r\n        switch (tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        console.log(valor)\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\r\n            <AlertNavBar\r\n                onClose={onClose}\r\n                title={tipoDeAditivo}\r\n            />\r\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\r\n                updateState(valor,nombre,dosis)\r\n            }}/>\r\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\r\n        </div>\r\n    )\r\n}","import React,{Fragment} from 'react'\r\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const alertNuevoAditivo=()=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n            return (\r\n                <div className='custom-ui'>\r\n                    <AlertNuevoAditivo\r\n                        user={user}\r\n                        aditivos={aditivos}\r\n                        tipoDeAditivo={title}\r\n                        onClose={onClose}\r\n                        aditivo={aditivo}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n    })\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleChange = panel => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <div className=\"container mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                            <Button variant='outline-dark my-2' onClick={e=>{\r\n                                    alertNuevoAditivo()\r\n                                }}>\r\n                                Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\r\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\r\n                            </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                            {aditivos?\r\n                                aditivos.map((aditivo,i)=>(\r\n                                    <Paper elevation={4}>\r\n                                        <ExpansionPanel expanded={expanded === 'panel'+i} onChange={handleChange('panel'+i)}>\r\n                                            <ExpansionPanelSummary\r\n                                            expandIcon={<ExpandMoreIcon />}\r\n                                            aria-controls=\"panel1bh-content\"\r\n                                            id=\"panel1bh-header\"\r\n                                            >\r\n                                                <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\r\n                                            </ExpansionPanelSummary>\r\n                                            <ExpansionPanelDetails>\r\n                                                <div className=\"container\">\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 text-center\">\r\n                                                            <strong>\r\n                                                                Descripcion\r\n                                                            </strong>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col text-left\">\r\n                                                            <small>\r\n                                                                {aditivo.descripcion}\r\n                                                            </small>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <hr/>\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col-12 text-center\">\r\n                                                            <strong>\r\n                                                                Dosificacion\r\n                                                            </strong>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                            <div className=\"row mb-2 mt-2\">\r\n                                                                <div className=\"col-auto mr-auto\">\r\n                                                                    <span className='badge badge-pill badge-dark'>\r\n                                                                        {tipoDeAplicacion}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            <hr/>\r\n                                                            </div>\r\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                                <div className=\"row\" key={'dosis'+k}>\r\n                                                                    <div className=\"col-auto mr-auto\">\r\n                                                                        {aplicacion}\r\n                                                                    </div>\r\n                                                                    <div className=\"col-auto ml-auto\">\r\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                        </Fragment>\r\n                                                    ))}\r\n                                                    <div className=\"row mt-4\">\r\n                                                        <div className=\"col-auto ml-auto mr-auto\">\r\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\r\n                                                                alertEditarAditivo(aditivo)\r\n                                                            }}>\r\n                                                                Editar aditivo\r\n                                                            </button>\r\n                                                        </div>\r\n                                                        <div className=\"col-auto ml-auto mr-auto\">\r\n                                                            <button type='button' className='btn btn-outline-danger' onClick={e=>{\r\n                                                                eliminarAditivo(i)\r\n                                                            }}>\r\n                                                                Eliminar aditivo\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </ExpansionPanelDetails>\r\n                                        </ExpansionPanel>\r\n                                    </Paper>\r\n                                ))\r\n                                :\r\n                                <h1>Agrega {title}</h1>\r\n                            }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\r\nimport {TableAditivos} from './TableAditivos'\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [value, setValue] = useState(0);\r\n    return(\r\n        <Paper square elevation={2}>\r\n            <Paper>\r\n                <Tabs\r\n                    value={value}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={(e,value)=>{\r\n                        setValue(value)\r\n                    }}\r\n                    aria-label=\"disabled tabs example\"\r\n                >\r\n                    <Tab label=\"Fertilizantes\" />\r\n                    <Tab label=\"Insecticidas\" />\r\n                </Tabs>\r\n            </Paper>\r\n            <TabPanel value={value} index={0}>\r\n                <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n            </TabPanel>\r\n        </Paper>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport Layout from './Pages/Layout'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\r\nimport { Configuracion } from './Pages/Configuracion';\r\nimport {Planta} from './Pages/Planta'\r\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\r\nimport {PlantaPodas} from './Pages/PlantaPodas'\r\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true\r\n  }\r\n  cambiarPeriodo(nuevoPeriodo){\r\n    this.setState({\r\n      periodo:nuevoPeriodo\r\n    })\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user.uid,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <PantallaDeCarga/>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <Provider store={this.state.store}>\r\n              <HashRouter>\r\n                <Switch>\r\n                  <Route exact path='/' component={Armario}/>\r\n                  <Route exact path='/Riego' component={Riego}/>\r\n                  <Route exact path='/Poda' component={Poda}/>\r\n                  <Route exact path='/Insecticida' component={Insecticida}/>\r\n                  <Route exact path='/Aplicables' component={Aplicables}/>\r\n                  <Route exact path='/Configuracion' component={Configuracion}/>\r\n                  <Route exact path='/Planta' component={Planta}/>\r\n                  <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\r\n                  <Route exact path='/Planta/Podas' component={PlantaPodas}/>\r\n                  <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n                </Switch>\r\n              </HashRouter>\r\n        </Provider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <HashRouter>\r\n            <Switch>\r\n              <Route exact path='/' component={SignInPage}/>\r\n              <Route exact path='/Login' component={LogInPage}/>\r\n            </Switch>\r\n          </HashRouter>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './Layout'\r\nclass Aplicables extends Component{\r\n    render(){\r\n        return(\r\n            <Layout history={this.props.history} page='Aditivos'>\r\n                <div className=\"container-fluid d-flex flex-column justify-content-start h-100 px-0 position-fixed zindex-fixed\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport './styles/loading.css'\r\nclass PantallaDeCarga extends Component{\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-12 text-center'>\r\n                        <h1>Cargando</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center mt-4\">\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <h2>\r\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default PantallaDeCarga","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport PantallaDeCarga from './PantallaDeCarga'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const login=async()=>{\r\n        setloading(true)\r\n        setUserError(undefined)\r\n        setPasswordError(undefined)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Inicia Sesion\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    error={userError}\r\n                    helperText={userError?'Usuario No Encontrado':null}\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                    autoFocus\r\n                    />\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    helperText={passwordError?'Contraseña incorrecta':null}\r\n                    error={passwordError}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    />\r\n                    <FormControlLabel\r\n                    control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                    label=\"Recuerdame\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{login()}}\r\n                    >\r\n                    Ingresar!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link href=\"#\" variant=\"body2\">\r\n                        Olvidaste tu contraseña?\r\n                        </Link>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Link variant=\"body2\">\r\n                          <LinkRouter to='/Login'>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                          </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth, database} from 'firebase'\r\nimport foto from '../images/sea of green.jpg'\r\nimport PantallaDeCarga from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const signin=async()=>{\r\n        setloading(true)\r\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(async e=>{\r\n            await database().ref().child(e.user.uid).update({\r\n                horaDeInicio:0,\r\n                horaDeFinal:0,\r\n                periodo:'Vegetativo'\r\n            })\r\n            history.push('/')\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n        })\r\n        setloading(false)\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n              {loading?\r\n                <div className={classes.paper}>\r\n                    <Typography>\r\n                      <PantallaDeCarga/>\r\n                    </Typography>\r\n                </div>\r\n                :\r\n                <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                      <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component=\"h1\" variant=\"h5\">\r\n                      Registrate\r\n                  </Typography>\r\n                  <form className={classes.form} noValidate>\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                    autoFocus\r\n                    />\r\n                    <TextField\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    />\r\n                    <Button\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={e=>{signin()}}\r\n                    >\r\n                    Registrate!\r\n                    </Button>\r\n                    <Grid container>\r\n                    <Grid item xs>\r\n                        <Link variant=\"body2\">\r\n                            <LinkRouter to='/'>\r\n                                Ya tienes una cuenta? Ingresa!\r\n                            </LinkRouter>\r\n                        </Link>\r\n                    </Grid>\r\n                    </Grid>\r\n                    <Box mt={5}>\r\n                    </Box>\r\n                </form>\r\n                </div>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {TextField} from '@material-ui/core'\r\nclass ElegirTipoDePoda extends Component{\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={this.props.tipoDePoda} \r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    this.props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ElegirTipoDePoda","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport NavBarAccion from '../components/NavBarAccion'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:moment().format('LLL'),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Poda'>\r\n                <div className=\"container-fluid accion\">\r\n                    <div className=\"row\">\r\n\r\n                        <StepperAccion \r\n                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                            tipoDePoda={this.state.tipoDePoda}\r\n                            confirmarAccion={this.confirmarAccion}\r\n                            selectedPlants={selectedPlants}\r\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                            tipoDeAccion='Poda'\r\n                            steps={[\r\n                            {\r\n                                title:'Plantas',\r\n                                content:(\r\n                                    <ElegirPlantaAccion\r\n                                        seleccionarPlanta={this.seleccionarPlanta}\r\n                                        plantas={this.state.plantas}\r\n                                    />\r\n                                )},\r\n                            {\r\n                                title:'Tipo De Poda',\r\n                                content:(\r\n                                    <ElegirTipoDePoda\r\n                                        handleChange={(nuevoTipoDePoda=>{\r\n                                            this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                        })}\r\n                                        tipoDePoda={this.state.tipoDePoda}\r\n                                    />\r\n                            )}]\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React from 'react'\r\nimport {Layout} from './Layout'\r\nexport const Configuracion =({history})=>{\r\n    return(\r\n        <Layout history={history} page='Configuracion'>\r\n            <div className=\"container-fluid accion\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        Configuracion\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}","import React from 'react'\r\nimport {Layout} from './Layout'\r\nimport DetallePlanta from '../alert-components/DetallePlanta'\r\nimport DetalleAcciones from '../alert-components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nexport const Planta =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre}>\r\n                <div className=\"container-fluid accion\">\r\n                    <DetallePlanta \r\n                        genetica={props.location.props.genetica}\r\n                        edad={props.location.props.edad}\r\n                        nacimiento={props.location.props.nacimiento}\r\n                        inicioVegetativo={props.location.props.inicioVegetativo}\r\n                        inicioFloracion={props.location.props.inicioFloracion}\r\n                    />\r\n                    <DetalleAcciones\r\n                        user={props.location.props.user}\r\n                        nombrePlanta={props.location.props.nombre}\r\n                        riegos={props.location.props.riegos}\r\n                        podas={props.location.props.podas}\r\n                        fumigaciones={props.location.props.fumigaciones}\r\n                        alertRiegos={props.location.props.alertRiegos}\r\n                        alertPodas={props.location.props.alertPodas}\r\n                        alertFumigaciones={props.location.props.alertFumigaciones}\r\n                    />\r\n                    <div className=\"row mt-4 justify-content-center\">\r\n                        <div className=\"col-auto\">\r\n                            <div className=\"btn-group\">\r\n                                <button type='button' className='btn btn-danger mr-4'onClick={props.location.props.alertEliminarPlanta} >Eliminar Planta</button>\r\n                                <button type='button' className='btn btn-outline-light'onClick={props.location.props.alertCambiarCiclo} >Cambiar Ciclo</button>                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaRiegos =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombrePlanta+'/Riegos'}>\r\n                <div className=\"container-fluid overflow-auto pt-4\">\r\n                    <Accordion defaultActiveKey='0'>\r\n                        {props.location.props.riegos?\r\n                            Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Riego')\r\n                                        }}>Riegala Ahora!</button>\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        }\r\n                    </Accordion>\r\n                </div>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaPodas =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombrePlanta+'/Podas'}>\r\n                <div className=\"container-fluid alert\">\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        <Accordion defaultActiveKey='0'>\r\n                            {props.location.props.podas?\r\n                                Object.keys(props.location.props.podas).reverse().map((id,i)=>(\r\n                                    <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Poda')\r\n                                            }}>Podala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </Accordion>\r\n                    </div>\r\n                </div>        \r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {Component} from 'react'\r\nimport AccionDetallada from '../alert-components/AccionDetallada'\r\nimport AlertNavBar from '../alert-components/AlertNavBar'\r\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nexport const PlantaFumigaciones =(props)=>{\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombrePlanta+'/Fumigaciones'}>\r\n                <div className=\"container-fluid alert\">\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        <Accordion defaultActiveKey='0'>\r\n                            {props.location.props.fumigaciones?\r\n                                Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\r\n                                    <AccionDetallada user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\r\n                                    ))\r\n                                    :\r\n                                    <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                props.history.push('/Insecticida')\r\n                                            }}>Fumigala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                        </Accordion>\r\n                    </div>\r\n                </div>        \r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}