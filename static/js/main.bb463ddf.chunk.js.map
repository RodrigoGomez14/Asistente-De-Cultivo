{"version":3,"sources":["alert-components/AlertNavBar.jsx","alert-components/BreadcrumbPlanta.jsx","alert-components/AccionDetallada.jsx","alerts/AlertPodas.jsx","alerts/AlertRiego.jsx","alerts/AlertEliminarPlanta.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","Pages/Planta.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","serviceWorker.js","index.js","images/apple cookies.jpg","images/sea of green.jpg"],"names":["AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Component","BreadcrumbPlanta","item","return","nombre","AccionDetallada","eliminarAccion","a","firebase","ref","child","user","idPlanta","tipoDeAccion","id","remove","state","show","componentDidMount","setTimeout","setState","Grow","in","timeout","Card","Accordion","Toggle","as","Header","eventKey","index","accion","fecha","tipoDePoda","agua","tipoDeRiego","aditivos","faSortDown","Collapse","Body","Object","keys","map","aditivo","i","key","Overlay","styled","div","Img","img","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","main","padding","spacing","TarjetaPlanta","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","Paper","elevation","to","pathname","src","fotoPlanta","alt","AlertNuevaPlanta","type","faCheckCircle","document","getElementById","value","genetica","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","database","push","format","alertNuevaPlanta","confirmAlert","customUI","Typography","plantas","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","history","Button","variant","color","faPlusCircle","IconButton","AddCircleOutline","connect","data","FechaYHora","setInterval","marginTop","text","contrastText","BarraDeLuz","faltante","transcurrido","descanso","cicloLuminico","periodo","horaDeInicio","horaDeFinal","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","signOut","auth","faCogs","closeNavbar","root","flexGrow","menuButton","marginRight","drawer","maxWidth","height","light","appBar","dark","Layout","page","children","planta","menuOpened","setMenuOpened","redirect","setRedirect","AppBar","position","Toolbar","edge","location","replace","goBack","aria-label","ArrowBackRounded","AccountCircle","Menu","Drawer","anchor","open","CardMedia","component","image","foto","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","Divider","faTint","faCut","faBug","Armario","selectedTab","AlertCambiarInicio","update","horas","parseInt","hora","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","width","selectEmpty","alert","alignItems","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","FormControlLabel","control","Checkbox","selected","onChange","label","Alert","severity","ElegirTipoDeRiego","cambiarTipoDeRiego","RadioGroup","target","Radio","labelPlacement","BotoneraConfirmacionAccion","handleBack","confirmarAccion","faCheck","size","td","th","FormularioAccion","Container","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","marginBottom","ResumenAccion","Grid","xs","container","justify","CardContent","gutterBottom","parseFloat","slice","indexOf","toFixed","flexDirection","justifyContent","actionsContainer","resetContainer","paperSecondary","paddingBottom","paddingTop","StepperAccion","steps","resumenAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","Step","StepLabel","stepTitle","StepContent","content","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","console","log","md","lg","defaultActiveKey","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","heading","typography","pxToRem","secondaryHeading","secondary","paperMain","paperDark","expansionPanel","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","expandIcon","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","overflow","grey","objectFit","avatar","form","borderColor","submit","border","background","link","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","Avatar","noValidate","required","fullWidth","helperText","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","then","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","flexWrap","gridList","titleBar","listRoot","listItem","DetallePlanta","tileData","GridList","cols","tile","GridListTile","store","DetalleAcciones","startIcon","Planta","ButtonGroup","DeleteOutline","alertEliminarPlanta","EditOutlined","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createMuiTheme","white","danger","App","onAuthStateChanged","on","snapshot","val","createStore","ThemeProvider","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.bb463ddf.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nimport {Grow} from '@material-ui/core'\nclass AccionDetallada extends Component{\n    eliminarAccion= async()=>{\n        await firebase.database().ref().child(this.props.user).child('plantas').child(this.props.idPlanta).child(this.props.tipoDeAccion).child(this.props.id).remove()\n    }\n    state={\n        show:false\n    }\n    componentDidMount=()=>{\n        setTimeout(() => {\n            this.setState({show:true})\n        }, 100);\n    }\n    render(){\n        return(\n            <Grow in={this.state.show} \n            {...(this.state.show ? { timeout: 1500 } : {})}>\n                <Card>\n                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey={this.props.index}>\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            {this.props.tipoDeAccion==='podas'?\n                            <div className='container-fluid'>\n                                <div className=\"row\">\n                                    <div className=\"col-auto\">\n                                        <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                    </div>\n                                    <div className=\"col-auto ml-auto\">\n                                        <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {this.props.tipoDePoda?\n                                        <div className='col'>\n                                            <hr/>\n                                            <h5 className='text-light'>{this.props.tipoDePoda}</h5>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            </div>\n                                :\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.fecha}</h5>\n                                        </div>\n                                        <div className=\"col-auto ml-auto\">\n                                            <FontAwesomeIcon icon={faTimes} onClick={e=>{this.eliminarAccion()}}/>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-auto\">\n                                            <h5 className='text-light'>{this.props.accion.agua} L de agua</h5>\n                                        </div>\n                                        <div className=\"col-auto\">\n                                            <h5>\n                                                <div className=\"badge badge-pill badge-light\">\n                                                    {this.props.accion.tipoDeRiego}\n                                                </div>\n                                            </h5>\n                                        </div>\n                                    </div>\n                                    {this.props.accion.aditivos?\n                                        <div className=\"row\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <FontAwesomeIcon icon={faSortDown}/>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                </div>\n                            }\n                        </div>\n                    </div>\n                </Accordion.Toggle>\n                    {this.props.accion.aditivos?\n                        <Accordion.Collapse eventKey={this.props.index}>\n                            <Card.Body>\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                            {Object.keys(this.props.accion.aditivos).map((aditivo,i)=>(\n                                                <div className=\"col-auto\" key={aditivo+i}>\n                                                    <span className='badge badge-pill badge-dark'>\n                                                        <div className=\"col-auto\">\n                                                            {aditivo}\n                                                        </div>\n                                                        <div className=\"col-auto\">\n                                                            {this.props.accion.aditivos[aditivo]} ml\n                                                        </div>\n                                                    </span>\n                                                </div>\n                                            ))}\n                                    </div>\n                                </div>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                        :\n                        null\n                    }\n                </Card>\n            </Grow>\n        )\n    }\n}\nexport default AccionDetallada","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport { Accordion } from 'react-bootstrap'\nclass AlertPodas extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertPlanta}\n                    onClose={this.props.onClose}\n                    title={<BreadcrumbPlanta nombre={this.props.nombre} item='Podas' return={this.props.alertPlanta}/>}\n                />\n                <div className=\"container-fluid submodalIn\">\n                    <Accordion defaultActiveKey='0'>\n                        {this.props.podas?\n                            Object.keys(this.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.podas[id]} tipoDePoda={this.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            this.props.onClose()\n                                            this.props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertPodas","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nclass AlertRiego extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid submodalIn\">\n                <Accordion defaultActiveKey='0'>\n                    {this.props.riegos?\n                        Object.keys(this.props.riegos).reverse().map((id,i)=>(\n                            <AccionDetallada user={this.props.user} index={i} alert={this.props.alert} accion={this.props.riegos[id]} tipoDeAccion='riegos' idPlanta={this.props.idPlanta} id={id} key={id}/>\n                        ))\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                </div>\n                            </div>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                        this.props.onClose()\n                                        this.props.history.push('/Riego')\n                                    }}>Riegala Ahora!</button>\n                                </div>\n                            </div>\n                        </>\n                    }\n                </Accordion>\n            </div>\n        )\n    }\n}\nexport default AlertRiego","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {useState,useEffect} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertPodas from '../alerts/AlertPodas'\nimport AlertRiego from '../alerts/AlertRiego'\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nimport {Grow} from '@material-ui/core' \nimport {makeStyles} from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor:theme.palette.primary.main,\n      padding:theme.spacing(1)\n    },\n  }));\n\nexport const TarjetaPlanta=(props)=>{\n    let [edad,setEdad]=useState(undefined)\n    const alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        user={props.user}\n                        nombre={props.nombre}\n                        eliminarPlanta={eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    const alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        user={props.user}\n                        onClose={onClose}\n                        nombre={props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    useEffect(()=>{\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\n    })\n    const eliminarPlanta=async ()=>{\n        await database().ref().child(props.user).child('plantas').child(props.id).remove()\n    }\n    const classes = useStyles()\n    return(\n        <div className=\"col-auto\">\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={6} className={classes.paper}>\n                    <Link className='text-white' to={{\n                        pathname:'/Planta',\n                        props:{\n                            ...props,\n                        }\n                    }}>\n                        <Card className=\"card\" >\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Overlay>\n                        </Card>\n                    </Link>\n                </Paper>\n            </Grow>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport {TarjetaPlanta} from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nimport {Button,Typography,Grow,IconButton} from '@material-ui/core'\nimport {AddCircleOutline} from '@material-ui/icons'\n\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child(this.props.user).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container h-100 mt-2 mb-2 justify-content-center d-flex flex-column \">\n                <div className=\"row mb-3\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <Typography>\n                                Plantas Dentro Del Armario\n                            </Typography>\n                        </Grow>\n                    </div>\n                </div>\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <TarjetaPlanta\n                                user={this.props.user}\n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <div className=\"col-12 text-center\">\n                            <h2 className='text-white'>Aun No hay plantas</h2>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.alertNuevaPlanta}>\n                                Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\n                            </Button>\n                        </div>\n                    }\n                    <div className=\"col-3\">\n                        <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                            <IconButton onClick={this.alertNuevaPlanta} color='primary' >\n                                <AddCircleOutline />\n                            </IconButton>\n                        </Grow>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {Component} from 'react'\nimport moment from 'moment'\nimport {Typography} from '@material-ui/core'\n\nclass FechaYHora extends Component{\n    state={\n        fecha:`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n    }\n    componentDidMount(){\n        setInterval(() => {\n            this.setState({\n                fecha: `${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`\n            })\n        }, 1000);\n    }\n    render(){\n        return(\n            <h3>{this.state.fecha}</h3>\n        )\n    }\n}\nexport default FechaYHora","import React, {useEffect,useState} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport FechaYHora from '../components/FechaYHora'\nimport './styles/table.css'\nimport {Paper,Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grow}from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop:theme.spacing(3),\n        padding:theme.spacing(2),\n        backgroundColor: theme.palette.primary.main,\n    },\n    text:{\n        color: theme.palette.primary.contrastText\n    }\n}));\n\nexport const BarraDeLuz=(props)=>{\n    let [activo,setActivo]=useState(0)\n    let [faltante,setFaltante]=useState(undefined)\n    let [transcurrido,setTranscurrido]=useState(undefined)\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\n    let [descanso,setDesanso]=useState(undefined)\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\n    let [intervalo,setIntervalo]=useState(undefined)\n    \n    const actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = calcularTranscurrido(lamparaEncendida)\n        if(props.horaDeInicio>=props.horaDeFinal){\n            //console.log(moment(props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            //console.log(-moment(props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            setDesanso(true)\n        }\n        else{\n            setDesanso(false)\n        }\n        setTranscurrido(transcurrido)\n        setFaltante(calcularFaltante())\n        setCicloLuminico(cicloLuminico)\n        return [transcurrido,cicloLuminico]\n    }\n    const actualizarBarraDeProgreso=()=>{\n        const elements=actualizarEstado(calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    const calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        if(hour>=props.horaDeInicio && hour < props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n   /* useEffect(()=>{\n        actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            actualizarBarraDeProgreso()\n        }, 1000);\n        setIntervalo(interval)\n    })\n    useEffect(()=>{\n        clearInterval(intervalo)\n    })*/\n    const actualizarCicloLuminico=()=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            return moment(props.horaDeFinal,'h').add(1,'days').diff(moment(props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(props.horaDeFinal,'h').diff(moment(props.horaDeInicio,'h'),'h')\n        }\n    } \n    const calcularFaltante=()=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            //const dif = props.horaDeInicio-props.horaDeFinal\n            let time = undefined\n            descanso?\n                time = moment().diff(moment(props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = props.horaDeInicio-props.horaDeFinal\n            let time = undefined\n            descanso?\n                time = -moment().diff(moment(props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    const calcularTranscurrido=(lamparaEncendida)=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            let time = undefined\n            descanso?\n                time = moment().diff(moment(props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            descanso?\n                time = moment().diff(moment(props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    const cambiarEstadoDeLampara=()=>{\n        setLampraEncendida(!lamparaEncendida)\n    }\n    const calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    const classes = useStyles()\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8 offset-md-2\">\n                    <Grow in={true}\n                    {...(true ? { timeout: 1500 } : {})}>\n                        <Paper elevation={3} className={classes.paper}>\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-auto ml-auto mr-auto\">\n                                        <FechaYHora/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>Periodo {props.periodo}</Typography>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>Ciclo Luminico {cicloLuminico} Hs ({props.horaDeInicio}:00 - {props.horaDeFinal}:00)</Typography>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>\n                                            Transcurrido (Hs) {transcurrido}\n                                        </Typography>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>\n                                            Faltante (Hs) {faltante}\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {descanso?\n                                        <div className=\"col text-center\">\n                                            <span className='badge badge-pill p-3 badge-dark'>\n                                                <Typography>\n                                                    Descansando...\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                        :\n                                        <div className=\"col text-center\">\n                                            <span className='badge badge-pill p-3 badge-success'>\n                                                <Typography>\n                                                    Creciendo...\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"row mt-4\">\n                                    <div className=\"col-10 offset-1\">\n                                        <div className=\"progress\">\n                                            <div className={descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Paper>\n                    </Grow>\n                </div>\n            </div>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    cursor:pointer;\n    font-size:2.5rem\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport {auth} from 'firebase'\nimport {Redirect} from 'react-router-dom'\nclass Navbar extends Component{\n    signOut=async ()=>{\n        await auth().signOut()\n        return <Redirect to='/'/>\n    }\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\n                                Cerrar Sesion\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {useState} from 'react'\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\nimport {auth} from 'firebase'\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport foto from '../images/sea of green.jpg'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawer:{\n        maxWidth:'350px',\n        height:'100%',\n        backgroundColor: theme.palette.primary.light\n    },\n    appBar:{\n        backgroundColor:theme.palette.primary.dark,\n        color:theme.palette.primary.contrastText\n    }\n  }));\nexport const Layout=({page,children,history,planta})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n    let [redirect,setRedirect]=useState(false)\n    if(redirect){\n        return(\n            <Redirect to={{\n                pathname:'/Planta',\n                props:{...planta}\n            }}/>\n        )\n    }\n    return(\n        <div className=\"App d-flex flex-column justify-content-start\">\n                <AppBar className={classes.appBar} position=\"static\" >\n                    <Toolbar>\n                    {page!=='Armario'?\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                            if(!planta){\n                                if(history.location.pathname==='/Planta'){\n                                    history.replace('/')\n                                }\n                                else{\n                                    history.goBack()\n                                }\n                            }\n                            else{\n                                setRedirect(true)\n                            }\n                        }} color=\"inherit\" aria-label=\"menu\">\n                            <ArrowBackRounded />\n                        </IconButton>\n                        :\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                            \n                        }} color=\"inherit\" aria-label=\"menu\">\n                            <AccountCircle />\n                        </IconButton>\n                    }\n                    <Typography variant=\"h6\" className={classes.title} >\n                        {page}\n                    </Typography>\n                    <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                        setMenuOpened(true)\n                    }} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\n                    <div className={classes.drawer}>\n                        <Card>\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"Sea Of Green\"\n                                image={foto}\n                                title=\"Sea Of Green\"\n                            />\n                        </Card>\n                            <List>\n                                <Link to='/' className='outline-none text-dark'>\n                                    <ListItem button key={'Armario'} >\n                                        <ListItemIcon><HomeOutlined/></ListItemIcon>\n                                        <ListItemText primary={'Armario'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <Link to='/Riego' className='outline-none text-dark'>\n                                    <ListItem button key={'Regar'} >\n                                        <ListItemIcon><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                                        <ListItemText primary={'Regar'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <Link to='/Poda' className='outline-none text-dark'>\n                                    <ListItem button key={'Podar'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                                        <ListItemText primary={'Podar'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <Link to='/Insecticida' className='outline-none text-dark'>\n                                    <ListItem button key={'Fumigar'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Fumigar'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <Link to='/Aplicables' className='outline-none text-dark'>\n                                    <ListItem button key={'Aditivos'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Aditivos'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <Link to='/Aditivos' className='outline-none text-dark'>\n                                    <ListItem button key={'Carencias y Excesos'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText primary={'Carencias y Excesos'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <Link to='/Configuracion' className='outline-none text-dark'>\n                                    <ListItem button key={'Configuracion'}>\n                                        <ListItemIcon><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                                        <ListItemText primary={'Configuracion'} />\n                                    </ListItem>\n                                </Link>\n                                <Divider />\n                                <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                                        await auth().signOut()\n                                    }}>\n                                    <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                                    <ListItemText primary={'Cerrar Sesion'} />\n                                </ListItem>\n                            </List>\n                    </div>\n                </Drawer>\n                {children}\n        </div>\n    )\n}\n/*\n                            <BottomNavigation value={this.state.selectedTab} onChange={(e,value)=>{\n                                this.setState({selectedTab:value})\n                                if(value==='recents'){\n                                    this.props.history.push('/')\n                                }\n                                else if(value==='favorites'){\n                                    this.props.history.push('/Riego')\n                                }\n                                else if(value==='nearby'){\n                                    this.props.history.push('/Aplicables')\n                                }\n                            }}>\n                                <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\n                                <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\n                                <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\n                                <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\n                            </BottomNavigation>\n\n*/","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport {BarraDeLuz} from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Layout} from './Layout'\n\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false,\n        selectedTab:'recents'\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().child(this.props.user).update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    render(){\n        return(\n            <Layout history={this.props.history} page=\"Armario\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <BarraDeLuz periodo={this.props.periodo} horaDeInicio={this.props.horaDeInicio} horaDeFinal={this.props.horaDeFinal}/>      \n                    </div>\n                </div>\n                <CarouselPlantas history={this.props.history}/>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.hora,\n        horaDeFinal:state.data.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                    />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    return(\n        <Row>\n            <div className=\"cola-auto ml-auto mr-auto\">\n                <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                    <FormControlLabel\n                        value=\"top\"\n                        control={<Radio\n                            value=\"Tierra\" \n                            name=\"Tierra\"\n                            color='primary'\n                        />}\n                        label='Tierra'\n                        labelPlacement=\"top\"\n                    />\n                    <FormControlLabel\n                        value=\"top\"\n                        control={<Radio\n                            value=\"Foliar\"\n                            name=\"Foliar\"\n                            color='primary'\n                        />}\n                        label=\"Foliar\"\n                        labelPlacement=\"top\"\n                    />\n                </RadioGroup>\n            </div>\n        </Row>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button} from '@material-ui/core'\nclass BotoneraConfirmacionAccion extends Component {\n    render(){\n        return(\n            <div className=\"row mb-2\">\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <Button\n                        onClick={this.props.handleBack}\n                        className='mr-2'\n                    >\n                        Atras\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={\n                            e=>{\n                                this.props.confirmarAccion(this.props.accion)\n                            }\n                        }\n                    >\n                        <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                        Guardar {this.props.accion}\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}\nexport default BotoneraConfirmacionAccion","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n  }));\n  /*\n  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >    \n                    <Typography>\n                        Cantidad de Agua y Aditivos\n                    </Typography>\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            {props.cantidadDeAgua?\n                                <Typography>\n                                    {props.cantidadDeAgua} L\n                                </Typography>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className=\"col-auto\">\n                            {props.aditivosUsados?\n                                <Typography className=\"col-auto\">\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\n                                        const cantidad = props.aditivosUsados[aditivo]\n                                        return(\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\n                                            </span>\n                                        )\n                                    })}\n                                </Typography>\n                                :\n                                null}\n                        </div>\n                    </div>\n                </ExpansionPanelSummary>*/\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <p className='text-dark'>Aditivos (ml)</p>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  return (\n    <Grid item xs={12}>\n        <Grid container justify=\"space-around\" className='mb-2' >\n            <Grid item>     \n                <Paper elevation={3}>\n                    <Card className={classes.card} variant=\"outlined\">\n                        <CardContent>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Plantas Seleccionadas\n                            </Typography>\n                            {plantas.map(planta => (\n                                planta.selected?\n                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                        <strong>{planta.nombre}</strong>\n                                    </Typography>\n                                    :\n                                    null\n                            ))}\n                        </CardContent>\n                    </Card>\n                </Paper>\n            </Grid>\n            {tipoDeRiego?\n                <>  \n                    <Grid item>      \n                        <Paper elevation={3}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                        Tipo De Riego\n                                    </Typography>\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong>{tipoDeRiego}</strong>\n                                        </Typography>\n                                </CardContent>\n                            </Card>\n                        </Paper>\n                    </Grid>\n                    <Grid item>      \n                        <Paper elevation={3}>\n                            <Card className={classes.card} variant=\"outlined\">\n                                <CardContent>\n                                    <Typography className={classes.pos} color=\"textSecondary\">\n                                        <strong>{cantidadDeAgua} L de agua</strong>\n                                    </Typography>\n                                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                        Aditivos usados\n                                    </Typography>\n                                    {aditivos?\n                                        Object.keys(aditivos).map(aditivo=>{\n                                            const dosis= aditivos[aditivo]\n                                            return(\n                                                <Typography className={classes.pos} color=\"textSecondary\">\n                                                    <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\n                                                </Typography>\n                                            )\n                                        })\n                                        :\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong>-</strong>\n                                        </Typography>\n                                    }\n                                </CardContent>\n                            </Card>\n                        </Paper>\n                    </Grid>\n                </>\n                :\n                <Grid item>      \n                    <Paper elevation={3}>\n                        <Card className={classes.card} variant=\"outlined\">\n                            <CardContent>\n                                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                    Tipo De Poda\n                                </Typography>\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    <strong>{tipoDePoda}</strong>\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n    </Grid>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport BotoneraConfirmacionAccion from './BotoneraConfirmacionAccion'\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  paperSecondary:{\n    paddingBottom:theme.spacing(2),\n    paddingTop:theme.spacing(2),\n    backgroundColor:theme.palette.primary.dark,\n  },\n  padding:{\n    paddingBottom:theme.spacing(1)\n  },\n  '.MuiStepLabel-label':{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===0){\n      return selectedPlants.length?false:true\n    }\n    else if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    else if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <Grow in={true}\n      {...(true ? { timeout: 1500 } : {})}>\n      <div className={classes.root}>\n          <Stepper activeStep={activeStep} elevation={3} orientation=\"vertical\">\n            {steps.map((step, index) => (\n              step?\n                    <Step key={step.title}>\n                      <Paper elevation={3} className={classes.paperSecondary}>\n                        <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\n                      </Paper>\n                    <StepContent>\n                      <Paper elevation={6} className={classes.padding}>\n                          <Typography>{step.content}</Typography>\n                          <div className={classes.actionsContainer}>\n                              <div>\n                              <Button\n                                  disabled={activeStep === 0}\n                                  onClick={handleBack}\n                                  className={classes.button}\n                              >\n                                  Atras\n                              </Button>\n                              <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  onClick={handleNext}\n                                  className={classes.button}\n                                  disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                              >\n                                  {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                              </Button>\n                              </div>\n                          </div>\n                      </Paper>\n                        </StepContent>\n                    </Step>\n                    :\n                    null\n            ))}\n          </Stepper>\n          {activeStep === steps.length && (\n            <Paper square elevation={6} className={classes.resetContainer}>\n                {resumenAccion}\n                <BotoneraConfirmacionAccion\n                    accion={tipoDeAccion}\n                    handleBack={handleBack}\n                    confirmarAccion={confirmarAccion}\n                />\n            </Paper>\n          )}\n      </div>\n    </Grow>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Riego'>\n                <div className=\"container-fluid accion h-100\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6 offset-md-3\">\n                            <StepperAccion \n                                step1='Plantas'\n                                step2='Tipo De Riego'\n                                step3='Cantidad de agua y aditivos'\n                                selectedPlants={selectedPlants}\n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Riego'\n                                steps={[\n                                        {\n                                        title:'Plantas',\n                                        content:(\n                                            <ElegirPlantaAccion\n                                                seleccionarPlanta={this.seleccionarPlanta}\n                                                plantas={this.state.plantas}\n                                                setExpansionExpanded={this.setExpansionExpanded}\n                                                expanded={this.state.expanded}\n                                            />\n                                        )},\n                                        {title:'Tipo De Riego',\n                                        content:(\n                                            <ElegirTipoDeRiego\n                                                tipoDeRiego={this.state.tipoDeRiego}    \n                                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                                setExpansionExpanded={this.setExpansionExpanded}\n                                                expanded={this.state.expanded}\n                                            />\n                                        )},\n                                        {title:'Cantidad De Agua y Aditivos',\n                                        content:(\n                                            <FormularioAccion\n                                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                                    tipoDeRiego={this.state.tipoDeRiego}\n                                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                                    cantidadDeAgua={this.state.cantidadDeAgua}\n                                                    cambiarAditivo={this.cambiarAditivo}\n                                                    adivito='Fertlizante'\n                                                    aditivos={this.props.aditivos}\n                                                    aditivosUsados={this.state.aditivos}\n                                                    eliminarAditivo={this.eliminarAditivo}\n                                                    setExpansionExpanded={this.setExpansionExpanded}\n                                                    expanded={this.state.expanded}\n                                                />\n                                        )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6 offset-md-3\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Fumigacion'\n                                steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Tipo De Riego',\n                                    content:(\n                                        <ElegirTipoDeRiego\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Cantidad De Agua y Aditivos',\n                                    content:(\n                                        <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            aditivo='Insecticida'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            setCantidadDeDosis(cantidadDeDosis+=1)\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            {console.log(cantidadDeDosis)}\n            <Container fluid>\n                <Row>\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\n                        <Accordion defaultActiveKey='0'>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Caracteristicas</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\n                                    <div className=\"container\">\n                                        <div className=\"row mt-2\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Nombre\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                                        updateState(e.target.value,'nombre')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Marca\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                                        updateState(e.target.value,'marca')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Descripcion\n                                                    </Form.Label>\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                                        updateState(e.target.value,'descripcion')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Dosificacion</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\n                                        <Form>\n                                            <Container>\n                                                <Row className='flex-nowrap overflow-auto'>\n                                                {dosisList.length?\n                                                    dosisList.map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                    :\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                }\n                                                    <div className=\"col-auto align-self-center\">\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\n                                                        }}/>\n                                                    </div>\n                                                </Row>\n                                            </Container>\n                                        </Form>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor: theme.palette.secondary.light,\n        color:theme.palette.secondary.contrastText\n    },\n    paperDark: {\n        backgroundColor: theme.palette.secondary.main,\n        color:theme.palette.secondary.contrastText\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    }\n  }));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant='outline-light mb-2' onClick={e=>{\n                                    alertNuevoAditivo()\n                                }}>\n                                Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\n                            </Button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                            {aditivos?\n                                aditivos.map((aditivo,i)=>(\n                                    <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\n                                        <Paper elevation={4} className={classes.paperDark}>\n                                            <ExpansionPanelSummary\n                                            expandIcon={<ExpandMoreIcon />}\n                                            aria-controls=\"panel1bh-content\"\n                                            id=\"panel1bh-header\"\n                                            >\n                                                <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                            </ExpansionPanelSummary>\n                                        </Paper>\n                                        <Paper elevation={4} className={classes.paperMain}>\n                                            <ExpansionPanelDetails>\n                                                <div className=\"container\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Descripcion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"row\">\n                                                        <div className=\"col text-left\">\n                                                            <small>\n                                                                {aditivo.descripcion}\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                    <hr/>\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 text-center\">\n                                                            <strong>\n                                                                Dosificacion\n                                                            </strong>\n                                                        </div>\n                                                    </div>\n                                                    {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                        <Fragment key={'tipoDeAplicacion'+j}>\n                                                            <div className=\"row mb-2 mt-2\">\n                                                                <div className=\"col-auto mr-auto\">\n                                                                    <span className='badge badge-pill badge-dark'>\n                                                                        {tipoDeAplicacion}\n                                                                    </span>\n                                                                </div>\n                                                            <hr/>\n                                                            </div>\n                                                            {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                                <div className=\"row\" key={'dosis'+k}>\n                                                                    <div className=\"col-auto mr-auto\">\n                                                                        {aplicacion}\n                                                                    </div>\n                                                                    <div className=\"col-auto ml-auto\">\n                                                                        {aditivo.dosis[tipoDeAplicacion][aplicacion]}\n                                                                    </div>\n                                                                </div>\n                                                            ))}\n                                                        </Fragment>\n                                                    ))}\n                                                    <div className=\"row mt-4\">\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-dark' onClick={e=>{\n                                                                alertEditarAditivo(aditivo)\n                                                            }}>\n                                                                Editar aditivo\n                                                            </button>\n                                                        </div>\n                                                        <div className=\"col-auto ml-auto mr-auto\">\n                                                            <button type='button' className='btn btn-danger' onClick={e=>{\n                                                                eliminarAditivo(i)\n                                                            }}>\n                                                                Eliminar aditivo\n                                                            </button>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </ExpansionPanelDetails>\n                                            </Paper>\n                                        </ExpansionPanel>\n                                ))\n                                :\n                                <h1>Agrega {title}</h1>\n                            }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nimport { makeStyles,Theme } from '@material-ui/core/styles';\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paperMain: {\n      backgroundColor: theme.palette.primary.light,\n    },\n    paperDark: {\n    backgroundColor: theme.palette.primary.dark,\n    },\n    tabs:{\n        \"&.MuiTabs-scroller\":{\n            '&.MuiTabs-indicator':{\n                color: '#fff'\n            }\n        },\n    },\n    tab:{\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\n            color: '#fff',\n        }\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    const classes = useStyles()\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-6 offset-md-3\">\n                    <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                        <Paper square elevation={2} className={classes.paperMain}>\n                            <Paper className={classes.paperDark}>\n                                <Tabs\n                                    value={value}\n                                    indicatorColor=\"primary\"\n                                    textColor=\"primary\"\n                                    onChange={(e,value)=>{\n                                        setValue(value)\n                                    }}\n                                    className={classes.tabs}\n                                    aria-label=\"disabled tabs example\"\n                                >\n                                    <Tab label=\"Fertilizantes\" className={classes.tab}/>\n                                    <Tab label=\"Insecticidas\" className={classes.tab}/>\n                                </Tabs>\n                            </Paper>\n                            <TabPanel value={value} index={0}>\n                                <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n                            </TabPanel>\n                            <TabPanel value={value} index={1}>\n                                <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n                            </TabPanel>\n                        </Paper>\n                    </Grow>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nclass Aplicables extends Component{\n    render(){\n        return(\n            <Layout history={this.props.history} page='Aditivos'>\n                <div className=\"container-fluid overflow-auto\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-12 text-center'>\n                        <h1>Cargando</h1>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport PantallaDeCarga from './PantallaDeCarga'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const login=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Inicia Sesion\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    error={userError}\n                    helperText={userError?'Usuario No Encontrado':null}\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    helperText={passwordError?'Contraseña incorrecta':null}\n                    error={passwordError}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                    />\n                    <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"secondary\" />}\n                    label=\"Recuerdame\"\n                    />\n                    <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e=>{login()}}\n                    >\n                    Ingresar!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\" className={classes.link}>\n                        Olvidaste tu contraseña?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link variant=\"body2\">\n                          <LinkRouter to='/Login' className={classes.link}>\n                            {\"No tienes una cuenta? Registrate!\"}\n                          </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport PantallaDeCarga from './PantallaDeCarga'\nimport {Link as LinkRouter} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const signin=async()=>{\n        setloading(true)\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n        .then(async e=>{\n            await database().ref().child(e.user.uid).update({\n                horaDeInicio:0,\n                horaDeFinal:0,\n                periodo:'Vegetativo'\n            })\n            history.push('/')\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography>\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Registrate\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      value={inputUser}\n                      onChange={e=>{setInputUser(e.target.value)}}\n                      autoFocus\n                    />\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      value={inputPassword}\n                      onChange={e=>{setInputPassword(e.target.value)}}\n                      label=\"contraseña\"\n                      type=\"password\"\n                      id=\"password\"\n                    />\n                    <Button\n                    fullWidth\n                    color='#fff'\n                    variant=\"outlined\"\n                    className={classes.submit}\n                    onClick={e=>{signin()}}\n                    >\n                    Registrate!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link>\n                            <LinkRouter to='/' className={classes.link}>\n                                Ya tienes una cuenta? Ingresa!\n                            </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {TextField} from '@material-ui/core'\nclass ElegirTipoDePoda extends Component{\n    render(){\n        return(\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={this.props.tipoDePoda} \n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    this.props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        )\n    }\n}\n\nexport default ElegirTipoDePoda","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport ElegirTipoDePoda from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda'>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                        <div className=\"col-12 col-md-6 offset-md-3\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDePoda={this.state.tipoDePoda}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                                tipoDeAccion='Poda'\n                                steps={[\n                                {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                        />\n                                    )},\n                                {\n                                    title:'Tipo De Poda',\n                                    content:(\n                                        <ElegirTipoDePoda\n                                            handleChange={(nuevoTipoDePoda=>{\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                            })}\n                                            tipoDePoda={this.state.tipoDePoda}\n                                        />\n                                )}]\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React from 'react'\nimport {Layout} from './Layout'\nexport const Configuracion =({history})=>{\n    return(\n        <Layout history={history} page='Configuracion'>\n            <div className=\"container-fluid accion\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        Configuracion\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport {List, ListItem,ListItemText,Paper, Divider} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n    },\n    listItem:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    paper:{\n        backgroundColor:theme.palette.primary.main\n    }\n}))\n\nexport const DetallePlanta=(props)=>{\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    const classes = useStyles()\n    return(\n        <>\n            <Col xs={12}>\n                <GridList className={classes.gridList} cols={2.5}>\n                    {tileData.map(tile => (\n                    <GridListTile key={tile.img}>\n                        <img src={tile.img}  />\n                    </GridListTile>\n                    ))}\n                </GridList>\n            </Col>\n            <div className='col-12 col-sm-8 col-md-6 col-lg-3 mt-2'>\n                <div className={classes.listRoot}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <List component='nav'>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Genetica\" secondary={props.genetica}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Edad\" secondary={props.edad}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Germinacion\" secondary={`${props.nacimiento} (${moment().diff(moment(props.nacimiento),'days')} Dias)`}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Vegetativo\" secondary={`${props.inicioVegetativo} (${moment().diff(moment(props.inicioVegetativo),'days')} Dias)`}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Floracion\" secondary={`${props.inicioFloracion} (${moment().diff(moment(props.inicioFloracion),'days')} Dias)`}/>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                </div>\n            </div>\n        </>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {Button} from '@material-ui/core'\nexport const DetalleAcciones =(props)=>{\n    return(\n        <div className=\"col\">\n            <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n                <Link to={{ \n                    pathname:'/Planta/Riegos',\n                    props:{\n                        ...props\n                }}}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<FontAwesomeIcon icon={faTint}/>}\n                        >Riegos\n                        </Button>\n                </Link>\n            </Col>\n            <Col xs={'auto'} className=\"align-self-center mt-1 mb-1 d-flex\">\n            <Link to={{ \n                pathname:'/Planta/Podas',\n                props:{\n                    ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        startIcon={<FontAwesomeIcon icon={faCut}/>}\n                    >Podas\n                    </Button>\n                </Link>\n            </Col>\n            <Col xs={\"auto\"}className=\"align-self-center mt-1 mb-1 d-flex\">\n                <Link to={{ \n                    pathname:'/Planta/Fumigaciones',\n                    props:{\n                        ...props\n                    }}}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            startIcon={<FontAwesomeIcon icon={faBug}/>}\n                        >Fumigaciones\n                        </Button>\n                </Link>\n            </Col>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\nimport { Configuracion } from './Pages/Configuracion';\nimport {Planta} from './Pages/Planta'\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\nimport {PlantaPodas} from './Pages/PlantaPodas'\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\nimport { createMuiTheme, ThemeProvider, hexToRgb } from '@material-ui/core/styles';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nconst theme = createMuiTheme({\n  palette: {\n    white:'#fff',\n    primary: {\n      light: '#48a999',\n      main: '#00796b',\n      dark: '#004c40',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#718792',\n      main: '#455a64',\n      dark: '#1c313a',\n      contrastText: '#fff',\n    },\n    danger:'#c62828'\n  },\n});\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user.uid,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <PantallaDeCarga/>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <ThemeProvider theme={theme}>\n            <Provider store={this.state.store}>\n              <HashRouter>\n                <Switch>\n                  <Route exact path='/' component={Armario}/>\n                  <Route exact path='/Riego' component={Riego}/>\n                  <Route exact path='/Poda' component={Poda}/>\n                  <Route exact path='/Insecticida' component={Insecticida}/>\n                  <Route exact path='/Aplicables' component={Aplicables}/>\n                  <Route exact path='/Configuracion' component={Configuracion}/>\n                  <Route exact path='/Planta' component={Planta}/>\n                  <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\n                  <Route exact path='/Planta/Podas' component={PlantaPodas}/>\n                  <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                </Switch>\n              </HashRouter>\n            </Provider>\n          </ThemeProvider>\n        )\n      }\n      else{\n        return (\n          <ThemeProvider theme={theme}>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={SignInPage}/>\n                <Route exact path='/Login' component={LogInPage}/>\n              </Switch>\n            </HashRouter>\n          </ThemeProvider>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\nimport {Button,ButtonGroup,makeStyles,Typography} from '@material-ui/core'\n\nexport const Planta =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre}>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                        <DetallePlanta \n                            genetica={props.location.props.genetica}\n                            edad={props.location.props.edad}\n                            nacimiento={props.location.props.nacimiento}\n                            inicioVegetativo={props.location.props.inicioVegetativo}\n                            inicioFloracion={props.location.props.inicioFloracion}\n                        />\n                        <DetalleAcciones\n                            {...props.location.props}\n                        />\n                    </div>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Typography>\n                            <ButtonGroup>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    startIcon={<DeleteOutline/>}\n                                    onClick={props.location.props.alertEliminarPlanta}\n                                    >Cosechar Planta!\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    startIcon={<EditOutlined/>}\n                                    onClick={props.location.props.alertEliminarPlanta}\n                                    >Editar Planta\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    startIcon={<DeleteOutline/>}\n                                    onClick={props.location.props.alertEliminarPlanta}\n                                    >Eliminar Planta\n                                </Button>\n                            </ButtonGroup>\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaRiegos =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    <Accordion defaultActiveKey='0'>\n                        {props.location.props.riegos?\n                            Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Riego')\n                                        }}>Riegala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaPodas =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    <Accordion defaultActiveKey='0'>\n                        {props.location.props.podas?\n                            Object.keys(props.location.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user} index={i}  accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>        \n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\nimport AccionDetallada from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaFumigaciones =(props)=>{\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    <Accordion defaultActiveKey='0'>\n                        {props.location.props.fumigaciones?\n                            Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.idPlanta} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Insecticida')\n                                        }}>Fumigala Ahora!</button>\n                                    </div>\n                                </div>\n                            </>\n                        }\n                    </Accordion>\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";"],"sourceRoot":""}