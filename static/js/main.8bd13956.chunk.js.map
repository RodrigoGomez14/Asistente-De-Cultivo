{"version":3,"sources":["images/background.png","images/addFile.svg","images/periodo.svg","images/sea of green.png","images/semilla.svg","images/vegetativo.svg","images/floracion.svg","images/maceta.svg","images/adn.svg","images/balanza.svg","images/cosecha.svg","images/riegos.svg","images/transplante.svg","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/TarjetaArmario.jsx","components/BarraDeLuz.jsx","components/Navbar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","components/FormLogin.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","components/ListConfig.jsx","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","components/DetallePlanta.jsx","components/DetalleAcciones.jsx","components/BotoneraConfiguracionPlanta.jsx","components/InputCantidadCosechada.jsx","Pages/Planta.jsx","components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","Pages/NotFound.jsx","components/ElegirNuevaMaceta.jsx","Pages/Transplante.jsx","components/FormCaracteristicasNuevaPlanta.jsx","components/FormEtapaNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","components/ResumenNuevaPlanta.jsx","components/FormNuevoAditivoCaracteristicas.jsx","components/FormNuevoAditivoDosificaciones.jsx","Pages/NuevoAditivo.jsx","App.js","Pages/PlantaTransplantes.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","dark","padding","spacing","TarjetaPlanta","props","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","className","Grow","in","timeout","Paper","elevation","to","pathname","src","fotoPlanta","alt","nombre","carousel","display","flexWrap","overflow","textLight","color","contrastText","connect","state","user","uid","plantas","data","Typography","variant","Object","keys","map","key","genetica","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","transplantes","volumenMaceta","id","history","IconButton","AddCircleOutline","Button","endIcon","text","FechaYHora","format","fecha","setFecha","setInterval","main","flexGrow","marginTop","marginLeft","marginRight","flexDirection","alignItems","minWidth","listText","itemList","fleWrap","width","paperMain","type","secondary","borderRadius","avatar","height","TarjetaArmario","periodo","horaDeInicio","cicloLuminico","convertirHora","hora","Avatar","periodoImg","ListItemText","root","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","minutoDeInicio","minutoFinal","actualizarEstadoDeLampara","console","log","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","actualizarBarraDeEstado","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","menuButton","title","danger","error","NavBar","page","planta","setRedirect","setMenuOpened","React","anchorEl","Boolean","AppBar","position","Toolbar","edge","onClick","e","location","replace","goBack","aria-label","ArrowBackRounded","size","Menu","maxWidth","icon","MenuDrawer","menuOpened","image","Drawer","anchor","open","onClose","CardMedia","component","List","ListItem","button","ListItemIcon","HomeOutlined","faTint","faCut","faBug","NatureOutlined","faCogs","a","auth","signOut","faTimes","drawer","app","minHeight","maxHeight","textAlign","justifyContent","fontSize","Layout","children","redirect","foto","paddingBottom","CheckboxPlanta","this","checked","handleClick","llave","Component","formControl","margin","selectEmpty","alert","light","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","i","FormControlLabel","control","Checkbox","selected","onChange","value","label","Alert","severity","AlertTitle","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","pos","containerPlantas","paddingLeft","paddingTop","listItemText","ResumenAccion","tipoDePoda","nuevaMaceta","Divider","parseFloat","slice","indexOf","toFixed","resetContainer","paperSecondary","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","etapa","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","rootLastStep","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","database","ref","child","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","heading","typography","pxToRem","secondaryHeading","paperDark","expansionPanel","textShadow","buttonText","expandIcon","addButton","TableAditivos","splice","update","setExpanded","tipoDeAditivo","startIcon","AddOutlined","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","marca","ExpansionPanelDetails","descripcion","tipoDeAplicacion","j","aplicacion","k","EditOutlined","gutterBottom","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","widht","PantallaDeCarga","faCannabis","form","borderColor","submit","border","background","link","textDecoration","checkBox","linkButtons","FormSignIn","inputUser","setInputUser","inputPassword","setInputPassword","userError","passwordError","logIn","loading","LockOutlined","noValidate","required","fullWidth","helperText","autoFocus","Link","href","grey","objectFit","SignInPage","setloading","setUserError","setPasswordError","signInWithEmailAndPassword","then","catch","code","Grid","container","item","xs","md","FormLogin","inputNombre","setInputNombre","signIn","createUserWithEmailAndPassword","updateProfile","displayName","LogInPage","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","FormControlSwitch","textField","inputCicloLuminico","ListConfig","switchValue","setSwitchValue","cambiarHoraDeInicio","cambiarPeriodo","cambiarCicloLuminico","errorCicloLuminico","setErrorCicloLuminico","horaDeRespaldo","setHoraDeRespaldo","Switch","readOnly","startAdornment","InputAdornment","Array","fill","hour","localStorage","getItem","switchModoOscuro","setSwitchModoOscuro","setTheme","setItem","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","CardHeader","subheader","historial","plantaDelHistorial","overflowX","DetallePlanta","adn","maceta","semilla","vegetativo","floracion","cosecha","balanza","outline","DetalleAcciones","editButton","deleteButton","editText","deleteText","cosecharButton","success","cosecharText","BotoneraConfiguracionPlanta","cosecharPlanta","eliminarPlanta","InputCantidadCosechada","inputCantidad","setInputCantidad","guardarCantidadCosechada","InputProps","CheckCircle","buttonDanger","buttonTextDanger","backdrop","zIndex","paperPrimary","gridList","transform","rightPanel","rowBotonera","Planta","remove","tileData","GridList","cols","tile","GridListTile","edit","delete","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","NotFound","ElegirNuevaMaceta","nuevoVolumen","Transplante","transplantar","setNuevaMaceta","guardarTransplanteDB","input","inputWrapper","FormCaracteristicasNuevaPlanta","setNombre","setGenetica","setVolumenMaceta","setInicioGerminacion","getFullDate","setEtapa","FormEtapaNuevaPlanta","periodoArmario","inicioGerminacion","setInicioVegetativo","setInicioFloracion","placeholder","renderInputs","year","getFullYear","month","getMonth","days","getDate","guardarNuevaPlantaDB","firstPaper","secondPaper","dosisList","FormNuevoAditivoCaracteristicas","updateState","multiline","FormNuevoAditivoDosificaciones","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","vacio","store","inputs","setInputs","setDosis","agregarAditivo","ClasificarDosis","Foliar","newAditivo","Tierra","valor","indexDosis","newDosis","tipoDeDosis","PlantaTransplantes","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","themeProvider","createMuiTheme","white","ThemeProvider","exact","path","Armario","Aplicables","render","Historial","NuevaPlanta","NuevoAditivo","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8bd13956.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.c43b7cc7.png\";","module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/periodo.12365d7e.svg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.837d7016.png\";","module.exports = __webpack_public_path__ + \"static/media/semilla.985d2882.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetativo.62b8c74e.svg\";","module.exports = __webpack_public_path__ + \"static/media/floracion.9ef8fb5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/maceta.547ce152.svg\";","module.exports = __webpack_public_path__ + \"static/media/adn.2312614b.svg\";","module.exports = __webpack_public_path__ + \"static/media/balanza.86ee14b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosecha.0baa34b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/riegos.daab22d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/transplante.e7b5eb30.svg\";","import styled from 'styled-components'\r\n\r\nexport const Overlay=styled.div`\r\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\r\n`\r\nexport const Img = styled.img`\r\n    height:200px;\r\n    width:auto\r\n`\r\nexport const Card = styled.div`\r\n    cursor: pointer;\r\n`","import React, {useState,useEffect} from 'react'\r\nimport moment from 'moment'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {database} from 'firebase'\r\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\r\nimport {Link} from 'react-router-dom'\r\nimport {Paper} from '@material-ui/core'\r\nimport {Grow} from '@material-ui/core' \r\nimport {makeStyles} from '@material-ui/core'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      backgroundColor:theme.palette.primary.dark,\r\n      padding:theme.spacing(1)\r\n    },\r\n  }));\r\n\r\nexport const TarjetaPlanta=(props)=>{\r\n    let [edad,setEdad]=useState(undefined)\r\n    useEffect(()=>{\r\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\r\n    })\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"col-auto\">\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={6} className={classes.paper}>\r\n                    <Link className='text-white' to={{\r\n                        pathname:'/Planta',\r\n                        props:{\r\n                            ...props\r\n                        }\r\n                    }}>\r\n                        <Card className=\"card\" >\r\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\r\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col text-left\">\r\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Overlay>\r\n                        </Card>\r\n                    </Link>\r\n                </Paper>\r\n            </Grow>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {TarjetaPlanta} from './TarjetaPlanta'\r\nimport {connect} from 'react-redux'\r\nimport {confirmAlert} from 'react-confirm-alert'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './styles/alertPlanta.css'\r\nimport '../Pages/styles/Accion.css'\r\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\r\nimport moment from 'moment'\r\nimport {database} from 'firebase'\r\nimport {Button,Typography,Grow,IconButton,makeStyles} from '@material-ui/core'\r\nimport {AddCircleOutline} from '@material-ui/icons'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme=>({\r\n    carousel:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto'\r\n    },\r\n    textLight:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nconst CarouselPlantas=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container\">\r\n            {props.plantas?\r\n                <>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center\">\r\n                            <Grow in={true}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                <Typography variant='h5' className={classes.textLight}>\r\n                                    Plantas Dentro Del Armario\r\n                                </Typography>\r\n                            </Grow>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-3\">\r\n                        <div className={classes.carousel}>\r\n                            {Object.keys(props.plantas).map(key=>(\r\n                                <TarjetaPlanta\r\n                                    user={props.user}\r\n                                    nacimiento={props.plantas[key].nacimiento} \r\n                                    genetica={props.plantas[key].genetica}\r\n                                    inicioVegetativo={props.plantas[key].inicioVegetativo} \r\n                                    inicioFloracion={props.plantas[key].inicioFloracion} \r\n                                    podas={props.plantas[key].podas} \r\n                                    riegos={props.plantas[key].riegos}\r\n                                    fumigaciones={props.plantas[key].fumigaciones}\r\n                                    transplantes={props.plantas[key].transplantes}\r\n                                    volumenMaceta={props.plantas[key].volumenMaceta}\r\n                                    nombre={props.plantas[key].nombre}\r\n                                    id={key}\r\n                                    key={key}\r\n                                    history={props.history}\r\n                                />\r\n                            ))}\r\n                            <div className=\"col-auto align-self-center\">\r\n                                <Grow in={true}\r\n                                {...(true ? { timeout: 1500 } : {})}>\r\n                                    <Link to='/Nueva-Planta'>\r\n                                        <IconButton\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                        >\r\n                                            <AddCircleOutline />\r\n                                        </IconButton>\r\n                                    </Link>\r\n                                </Grow>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                <div className=\"row mb-3\">\r\n                    <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                        <div className=\"col-12 text-center\">\r\n                            <Typography  variant='h6' className={classes.textLight}>No hay plantas</Typography>\r\n                            <Link to='/Nueva-Planta'>\r\n                                <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutline/>}>\r\n                                    Agrega una!\r\n                                </Button>\r\n                            </Link>\r\n                        </div>\r\n                    </Grow>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\r\nimport moment from 'moment'\r\nimport {Typography,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const  FechaYHora=()=>{\r\n    const classes = useStyles()\r\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\r\n    useEffect(() => {\r\n        setInterval(() => {\r\n            setFecha(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\r\n        }, 1000);\r\n    });\r\n    return(\r\n        <Typography variant='h4' className={classes.text}>{fecha}</Typography>\r\n    )\r\n}","import React from 'react'\r\nimport {Paper,List,ListItem,ListItemText,makeStyles,Grow,Avatar} from '@material-ui/core'\r\nimport periodoImg from '../images/periodo.svg'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(1),\r\n        flexGrow:'1',\r\n        marginTop:theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        minWidth:'220px'\r\n    },\r\n    listText:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    itemList:{\r\n        display:'flex',\r\n        fleWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginTop:theme.spacing(2)\r\n    },\r\n    paperMain:{\r\n        display:'flex',\r\n        width:'100%',\r\n        padding:theme.spacing(1),\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    },\r\n    avatar:{\r\n        padding:theme.spacing(1),\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n    }\r\n}))\r\nexport const TarjetaArmario = ({periodo,horaDeInicio,cicloLuminico})=>{\r\n    const convertirHora=hora=>{\r\n        return hora<10?`0${hora}:00 Hs`:`${hora}:00 Hs`\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n            <div className={classes.itemList}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={periodoImg} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Periodo' secondary={periodo}/>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <ListItemText className={classes.listText} primary='Ciclo Luminico' secondary={convertirHora(cicloLuminico)}/>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <ListItemText className={classes.listText} primary='Hora De Inicio' secondary={convertirHora(horaDeInicio)}/>\r\n                </Paper>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <ListItemText className={classes.listText} primary='Hora De Final' secondary={convertirHora(horaDeInicio+cicloLuminico)}/>\r\n                </Paper>\r\n            </div>\r\n        </Grow>\r\n    )\r\n}","import React, {useEffect,useState} from 'react'\r\nimport moment from 'moment'\r\nimport {connect} from 'react-redux'\r\nimport {FechaYHora} from '../components/FechaYHora'\r\nimport './styles/table.css'\r\nimport {Paper,Typography} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grow}from '@material-ui/core'\r\nimport {TarjetaArmario} from '../components/TarjetaArmario'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root:{\r\n        width:'100%',\r\n        padding:theme.spacing(2),  \r\n    },\r\n    text:{\r\n        color: theme.palette.primary.contrastText\r\n    }\r\n}));\r\n\r\nexport const BarraDeLuz=(props)=>{\r\n    let [activo,setActivo]=useState(0)\r\n    let [faltante,setFaltante]=useState(undefined)\r\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\r\n    let [transcurrido,setTranscurrido]=useState(undefined)\r\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\r\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\r\n    let [intervalo,setIntervalo]=useState(undefined)\r\n\r\n    const getMinutes=(moment)=>{\r\n        const date = new Date()\r\n        const minutes= date.getMinutes()+date.getHours()*60\r\n        return minutes\r\n    }\r\n    const actualizarEstadoDeLampara=(minutes)=>{\r\n        let minutoDeInicio = props.horaDeInicio*60\r\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\r\n        if(minutoFinal>1440){\r\n            if(minutes<minutoDeInicio){\r\n                minutoFinal=minutoFinal-1440\r\n                if(minutes<minutoFinal){\r\n                    setLampraEncendida(true)\r\n                }\r\n                else{\r\n                    setLampraEncendida(false)\r\n                }\r\n            }\r\n            else{\r\n                setLampraEncendida(true)\r\n            }\r\n        }\r\n        else{\r\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\r\n                setLampraEncendida(true)\r\n            }\r\n            else{\r\n                setLampraEncendida(false)\r\n            }\r\n        }\r\n    }\r\n    const actualizarTranscurrido=minutes=>{\r\n\r\n        let minutoDeInicio = props.horaDeInicio*60\r\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\r\n        if(minutoFinal>1440){\r\n            if(minutes<minutoDeInicio){\r\n                minutoFinal=minutoFinal-1440\r\n                if(minutes<minutoFinal){\r\n                    console.log(minutes+(1440-minutoDeInicio))\r\n                }\r\n                else{\r\n                    console.log(minutes-minutoFinal)\r\n                }\r\n            }\r\n            else{\r\n                console.log(minutes-minutoDeInicio)\r\n            }\r\n        }\r\n        else{\r\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\r\n                console.log(minutes-minutoDeInicio)\r\n            }\r\n            else{\r\n                console.log(minutoFinal-minutes)\r\n            }\r\n        }\r\n\r\n\r\n        if(lamparaEncendida){\r\n            setTranscurrido(minutes-(props.horaDeInicio*60))\r\n            console.log(minutes-(props.horaDeInicio*60))\r\n        }\r\n        else{\r\n            if(props.horaDeInicio+props.cicloLuminico>24){\r\n                setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico-24)*60))\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n    }\r\n    const actualizarFaltante=minutes=>{\r\n        if(lamparaEncendida){\r\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\r\n            setFaltante(diferencia)\r\n        }\r\n        else{\r\n            if(props.horaDeInicio+props.cicloLuminico>24){\r\n                const diferencia = ((props.horaDeInicio)*60)-minutes\r\n                setFaltante(diferencia)\r\n            }\r\n            else{\r\n\r\n            }\r\n        }\r\n    }\r\n    const actualizarBarraDeEstado=()=>{\r\n        const barra = document.getElementById('barraLuz')\r\n        if(lamparaEncendida){\r\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n        else{\r\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\r\n            console.log(porcentaje)\r\n            barra.style.width=porcentaje+'%'\r\n        }\r\n    }\r\n    useEffect(()=>{\r\n        const minutes= getMinutes()\r\n        actualizarEstadoDeLampara(minutes)\r\n        actualizarTranscurrido(minutes)\r\n        actualizarFaltante(minutes)\r\n        actualizarBarraDeEstado()\r\n    })\r\n    const calcularHoraFinal=()=>{\r\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\r\n        if(horaDeFinal>24){\r\n            horaDeFinal=horaDeFinal-24\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00 +1`\r\n        }\r\n        else{\r\n            if(horaDeFinal<10){\r\n                horaDeFinal='0'+horaDeFinal\r\n            }\r\n            return `${horaDeFinal}:00`\r\n        }\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Grow in={true}\r\n        {...(true ? { timeout: 1500 } : {})}>\r\n            <div className={classes.root}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-auto ml-auto mr-auto\">\r\n                            <FechaYHora/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {!lamparaEncendida?\r\n                            <div className=\"col text-center\">\r\n                                <Typography variant='h4' className={classes.text}>\r\n                                    Descansando...\r\n                                </Typography>\r\n                            </div>\r\n                            :\r\n                            <div className=\"col text-center\">\r\n                                <Typography variant ='h4' className={classes.text}>\r\n                                    Creciendo...\r\n                                </Typography>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"row mt-4\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"progress\">\r\n                                <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <TarjetaArmario periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Grow>\r\n    )\r\n}","import React , {useState}from 'react'\r\nimport {makeStyles, Hidden} from '@material-ui/core'\r\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel,Avatar,Menu,MenuItem} from '@material-ui/core'\r\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nimport {auth} from 'firebase'\r\nimport {connect} from 'react-redux'\r\nconst useStyles = makeStyles( theme=>({\r\n    appBar:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    avatar:{\r\n        color: theme.palette.primary.contrastText,\r\n        backgroundColor: theme.palette.primary.dark,\r\n    },\r\n    danger:{\r\n        color:theme.palette.error.main\r\n    }\r\n}))\r\n\r\nexport const NavBar = ({page,planta,history,setRedirect,setMenuOpened}) =>{\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const handleMenu = event => {\r\n        setAnchorEl(event.currentTarget);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n    return(\r\n        <AppBar className={classes.appBar} position=\"static\" >\r\n            <Toolbar>\r\n            {page!=='Armario'&&\r\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                    if(!planta){\r\n                        if(history.location.pathname==='/Planta'){\r\n                            history.replace('/')\r\n                        }\r\n                        else{\r\n                            history.goBack()\r\n                        }\r\n                    }\r\n                    else{\r\n                        setRedirect(true)\r\n                    }\r\n                }} color=\"inherit\" aria-label=\"menu\">\r\n                    <ArrowBackRounded />\r\n                </IconButton>\r\n            }\r\n            <Typography variant=\"h6\" className={classes.title} >\r\n                {page}\r\n            </Typography>\r\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\r\n                setMenuOpened(true)\r\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\r\n                <MenuIcon />\r\n            </IconButton>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react'\r\nimport {auth} from 'firebase'\r\nimport {Card,CardMedia,} from '@material-ui/core'\r\nimport {HomeOutlined,NatureOutlined} from '@material-ui/icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug , faCogs, faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    paper:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main\r\n    },\r\n    icon:{\r\n        color:\r\n            theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n}))\r\nexport const MenuDrawer = ({menuOpened,setMenuOpened,image,history})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\r\n            <Paper className={classes.paper} elevation={6}>\r\n                <Card>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"Sea Of Green\"\r\n                        image={image}\r\n                        title=\"Sea Of Green\"\r\n                    />\r\n                </Card>\r\n                <List>\r\n                    <Link to='/' className='outline-none text-dark'>\r\n                        <ListItem button key={'Armario'} >\r\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Armario'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Riego' className='outline-none text-dark'>\r\n                        <ListItem button key={'Regar'} >\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Regar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Poda' className='outline-none text-dark'>\r\n                        <ListItem button key={'Podar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Podar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Insecticida' className='outline-none text-dark'>\r\n                        <ListItem button key={'Fumigar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Transplante' className='outline-none text-dark'>\r\n                        <ListItem button key={'Transplantar'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Transplantar'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aplicables' className='outline-none text-dark'>\r\n                        <ListItem button key={'Aditivos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Historial' className='outline-none text-dark'>\r\n                        <ListItem button key={'Historial'}>\r\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Aditivos' className='outline-none text-dark'>\r\n                        <ListItem button key={'Carencias y Excesos'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link to='/Configuracion' className='outline-none text-dark'>\r\n                        <ListItem button key={'Configuracion'}>\r\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\r\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\r\n                            await auth().signOut()\r\n                            history.replace('/')\r\n                        }}>\r\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\r\n                        <ListItemText primary={'Cerrar Sesion'} />\r\n                    </ListItem>\r\n                </List>\r\n            </Paper>\r\n        </Drawer>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {Paper} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router-dom'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\nimport {NavBar} from '../components/Navbar'\r\nimport {MenuDrawer} from '../components/MenuDrawer'\r\nimport foto from '../images/sea of green.png'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    drawer:{\r\n        maxWidth:'300px',\r\n        height:'100%',\r\n    },\r\n    icon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    text:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    app:{\r\n        minHeight: '100vh',\r\n        height: '100vh',\r\n        maxHeight:'100vh',\r\n        display: 'flex',\r\n        textAlign: 'center',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        justifyContent: 'start',\r\n        fontSize: 'calc(10px + 2vmin)',\r\n        color: 'white',\r\n    }\r\n}));\r\n\r\n\r\nexport const Layout=({page,children,history,planta,user})=>{\r\n    const classes = useStyles();\r\n    let [menuOpened,setMenuOpened]=useState(false)\r\n    let [selectedTabs,setSelectedTabs]=useState('recents')\r\n    let [redirect,setRedirect]=useState(false)\r\n    if(redirect){\r\n        return(\r\n            <Redirect to={{\r\n                pathname:'/Planta',\r\n                props:{...planta}\r\n            }}/>\r\n        )\r\n    }\r\n    return(\r\n        <Paper className={classes.app}>\r\n            {user &&\r\n            <>\r\n                <NavBar page={page} planta={planta} history={history}  setRedirect={setRedirect} setMenuOpened={setMenuOpened}/>\r\n                <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened} image={foto} history={history}/>\r\n            </>\r\n            }\r\n            {children}\r\n        </Paper>\r\n    )\r\n}","import React , {Component,useState} from 'react'\r\nimport CarouselPlantas from '../components/CarouselPlantas'\r\nimport {BarraDeLuz} from '../components/BarraDeLuz'\r\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport '../components/styles/alertPlanta.css'\r\nimport './styles/Accion.css'\r\nimport {connect} from 'react-redux'\r\nimport  {database} from 'firebase'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport { Redirect } from 'react-router';\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto',\r\n        paddingBottom:theme.spacing(2)\r\n    }\r\n}))\r\nconst Armario=(props)=>{\r\n    const classes = useStyles()\r\n    const cambiarHoraDeInicio=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(props.user).update({\r\n            horaDeInicio: parseInt(horas)\r\n        })\r\n    }\r\n    const cambiarHoraDeFinal=async ()=>{\r\n        const horas = document.getElementById('inputHoras').value\r\n        //const minutos = document.getElementById('inputMinutos').value\r\n        await database().ref().child(props.user).update({\r\n            horaDeFinal: parseInt(horas)\r\n        })\r\n    }\r\n    if(!props.periodo||!props.horaDeInicio||!props.cicloLuminico){\r\n        return(\r\n            <Redirect to='/Configuracion'/>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Layout history={props.history} page=\"Armario\" user={props.user}>\r\n                <Paper className={classes.root}>\r\n                    <BarraDeLuz periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico}/>\r\n                    <CarouselPlantas history={props.history}/>\r\n                </Paper>\r\n            </Layout>\r\n        )   \r\n    }\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        periodo:state.data.periodo,\r\n        horaDeInicio:state.data.horaDeInicio,\r\n        cicloLuminico:state.data.cicloLuminico,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nclass CheckboxPlanta extends Component{\r\n    render(){\r\n        return(\r\n            <div className='col text-center'>\r\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\r\n                    {this.props.plantas[this.props.llave].nombre}\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        plantas:state.plantas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component,useState} from 'react'\r\nimport CheckboxPlanta from './CheckboxPlanta'\r\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab/'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    formControl:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}));\r\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <div className=\"container pt-4\">\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        {plantas.length?\r\n                        <FormGroup row>\r\n                            {plantas.map((planta,i)=>(\r\n                                <FormControlLabel\r\n                                className={classes.formControl}\r\n                                control={\r\n                                    <Checkbox color='primary'  checked={planta.selected} onChange={e=>{\r\n                                        seleccionarPlanta(i)}}\r\n                                    value={planta.nombre} />\r\n                                }\r\n                                label={planta.nombre}\r\n                                />\r\n                            ))}\r\n                        </FormGroup>\r\n                        :\r\n                        <div className=\"col-12\">\r\n                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Plantas En el Armario - <Link to='/Nueva-Planta'>Agrega una ahora!</Link> </AlertTitle> </Alert>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport './styles/accion-card.css'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}))\r\n\r\n\r\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <div className=\"col-auto ml-auto mr-auto\">\r\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\r\n                        <FormControlLabel\r\n                            className={classes.radio}\r\n                            value=\"top\"\r\n                            control={<Radio\r\n                                value=\"Tierra\" \r\n                                name=\"Tierra\"\r\n                                color='primary'\r\n                            />}\r\n                            label='Tierra'\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                        <FormControlLabel\r\n                            value=\"top\"\r\n                            className={classes.radio}\r\n                            control={<Radio\r\n                                value=\"Foliar\"\r\n                                name=\"Foliar\"\r\n                                color='primary'\r\n                            />}\r\n                            label=\"Foliar\"\r\n                            labelPlacement=\"top\"\r\n                        />\r\n                    </RadioGroup>\r\n                </div>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\r\nimport {Button,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    buttonPrimary:{\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport const BotoneraConfirmacionAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n            <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        className={classes.button}\r\n                        onClick={props.handleBack}\r\n                        className='mr-2'\r\n                    >\r\n                        Volver\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                        onClick={\r\n                            e=>{\r\n                                props.confirmarAccion(props.accion)\r\n                            }\r\n                        }\r\n                    >\r\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\r\n                    Guardar {props.accion}\r\n                </Button>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import styled from 'styled-components'\r\n\r\nexport const Td = styled.td`\r\n    padding: 0.50rem !important;\r\n    vertical-align:middle !important\r\n`\r\nexport const Th = styled.th`\r\n    padding:0.50rem !important;\r\n    vertical-align:middle !important\r\n`","import React , {Component,Fragment,useRef} from 'react'\r\nimport {Row,Col,Form,Container} from 'react-bootstrap'\r\nimport {PopOver} from './Popover'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport {Alert,AlertTitle} from '@material-ui/lab';\r\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {Link} from 'react-router-dom'\r\nconst useStyles = makeStyles(theme => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n      width:\"100% !important\"\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    alert:{\r\n        alignItems:'center',\r\n    },\r\n    title:{\r\n        color: theme.palette.primary.contrastText,\r\n        marginTop:theme.spacing(1)\r\n    }\r\n  }));\r\nexport const FormularioAccion=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Row>\r\n            <Col sm={{span:8,offset:2}}>\r\n                <Container fluid className='pt-4'>\r\n                    <Form>  \r\n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\r\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\r\n                                props.cambiarLitrosDeAgua(e.target.value)\r\n                                if(!e.target.value){\r\n                                    props.eliminarListaDeAditivos()\r\n                                }\r\n                            }}/>\r\n                        </Form.Row>\r\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-auto\">\r\n                                    <Typography variant='h6' className={classes.title}>Aditivos (ml)</Typography>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"container\">\r\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\r\n                                    {props.aditivos?\r\n                                        props.aditivos.map((aditivo,i)=>(\r\n                                        aditivo.dosis[props.tipoDeRiego]?\r\n                                            <Fragment key={'input'+i}>  \r\n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\r\n                                                    <FormControl className={classes.formControl} >\r\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\r\n                                                            {aditivo.nombre}\r\n                                                        </InputLabel>\r\n                                                        <Select\r\n                                                            labelId=\"demo-simple-select-helper-label\"\r\n                                                            id=\"demo-simple-select-helper\"\r\n                                                            disabled={!props.cantidadDeAgua}\r\n                                                            onChange={e=>{\r\n                                                                if(e.target.value){\r\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\r\n                                                                }\r\n                                                                else{\r\n                                                                    props.eliminarAditivo([aditivo.nombre])\r\n                                                                }\r\n                                                            }}\r\n                                                        >\r\n                                                        <MenuItem value=''>-</MenuItem>\r\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\r\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\r\n                                                                ))}\r\n                                                        </Select>\r\n                                                    </FormControl>\r\n                                                </div>\r\n                                            </Fragment>\r\n                                            :\r\n                                            null\r\n                                        ))\r\n                                        :\r\n                                        <div className=\"col-12\">\r\n                                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </AlertTitle> </Alert>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </Form.Row>\r\n                    </Form>\r\n                </Container>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  root:{\r\n      margin:'0'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    color:theme.palette.secondary.contrastText,\r\n    padding: theme.spacing(1)\r\n},\r\ncontainerPlantas:{\r\n    textAlign:'left',\r\n    paddingLeft:theme.spacing(2),\r\n    paddingTop:theme.spacing(2)\r\n},\r\nlistItemText:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    '& .MuiTypography-colorTextSecondary':{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    },\r\n},\r\ntitle:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n}\r\n}));\r\n\r\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda,nuevaMaceta})=>{\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n            {tipoDePoda &&\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Tipo De Poda' secondary={tipoDePoda}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            {nuevaMaceta &&  \r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Nuevo Volumen De Maceta' secondary={`${nuevaMaceta} Lt`}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            {tipoDeRiego&&cantidadDeAgua&&\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText}  primary='Tipo De Riego' secondary={tipoDeRiego}/>    \r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText className={classes.listItemText} primary='Cantidad De Agua' secondary={`${cantidadDeAgua} Lt`}/>    \r\n                    </ListItem>\r\n                </List>\r\n            }\r\n            <Divider/>\r\n            <div className={classes.containerPlantas}>\r\n                <Typography className={classes.title} variant='h6'>\r\n                    Plantas Seleccionadas\r\n                </Typography>\r\n                <List>\r\n                    {plantas.map(planta => (\r\n                        planta.selected &&\r\n                        <ListItem>\r\n                            <ListItemText className={classes.listItemText} primary={planta.nombre}/>    \r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </div>\r\n            <Divider/>\r\n            {tipoDeRiego &&\r\n                <div className={classes.containerPlantas}>\r\n                    <Typography className={classes.title} variant='h6'>\r\n                        Aditivos Usados\r\n                    </Typography>\r\n                    <List>\r\n                        {aditivos?\r\n                            Object.keys(aditivos).map(aditivo=>{\r\n                                const dosis= aditivos[aditivo]\r\n                                return(\r\n                                    <ListItem>\r\n                                        <ListItemText className={classes.listItemText} primary={aditivo} secondary={`${parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} ${dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}`}/>    \r\n                                    </ListItem>\r\n                                )\r\n                            })\r\n                            :\r\n                            <ListItem>\r\n                                <ListItemText className={classes.listItemText} primary='-'/>    \r\n                            </ListItem>\r\n                        }\r\n                    </List>\r\n                </div>\r\n            }\r\n    </div>\r\n);\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport StepContent from '@material-ui/core/StepContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root:{\r\n    height:'100%',\r\n    width:'100%',\r\n    display:'flex',\r\n    flexDirection:'column',\r\n    justifyContent:'space.around',\r\n    overflow:'auto',\r\n    borderRadius:'0',\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText\r\n    \r\n  },\r\n  buttonPrimary:{\r\n    marginTop: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  actionsContainer: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  resetContainer: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  paperSecondary:{\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.primary.dark:theme.palette.primary.main,\r\n    paddingBottom:theme.spacing(2),\r\n    paddingTop:theme.spacing(2),\r\n    borderRadius:'0'\r\n  },\r\n  padding:{\r\n    paddingBottom:theme.spacing(1),\r\n    color:theme.palette.primary.contrastText,\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light\r\n  },\r\n  stepper:{\r\n    backgroundColor:'transparent'\r\n  },\r\n  stepTitle:{\r\n    '& .MuiStepLabel-label':{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n  },\r\n  resetContainer:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    width:'500px'\r\n  },\r\n  rootLastStep:{\r\n    display:'flex',\r\n    justifyContent:'center'\r\n  }\r\n}));\r\n\r\n\r\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants,nuevaMaceta,etapa})=>{\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const handleNext = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\r\n    if(tipoDeAccion==='Nueva Planta'){\r\n      if(activeStep===0){\r\n        return etapa?false:true\r\n      }\r\n    }\r\n    else if(tipoDeAccion==='Nuevo Aditivo'){\r\n      if(activeStep===0){\r\n        return false\r\n      }\r\n    }\r\n    else{\r\n      if(activeStep===0){\r\n        return selectedPlants.length?false:true\r\n      }\r\n      else if(activeStep===1){\r\n        if(tipoDeAccion==='Poda'){\r\n          return tipoDePoda?false:true\r\n        }\r\n        else if(tipoDeAccion==='Transplante'){\r\n          return nuevaMaceta?false:true\r\n        }\r\n        else{\r\n          return tipoDeRiego?false:true\r\n        }\r\n      }\r\n      else if(activeStep===2){\r\n          return cantidadDeAgua?false:true\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n    <Grow in={true}\r\n      {...(true ? { timeout: 1500 } : {})}>\r\n        <div>\r\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\r\n            {steps.map((step, index) => (\r\n              step?\r\n                <Step key={step.title}>\r\n                  <Paper elevation={3} className={classes.paperSecondary}>\r\n                    <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\r\n                  </Paper>\r\n                  <StepContent>\r\n                    <Paper elevation={6} className={classes.padding}>\r\n                        <Typography>{step.content}</Typography>\r\n                        <div className={classes.actionsContainer}>\r\n                            <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={handleBack}\r\n                                className={classes.button}\r\n                            >\r\n                                Atras\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                onClick={handleNext}\r\n                                className={classes.buttonPrimary}\r\n                                disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\r\n                            >\r\n                                {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\r\n                            </Button>\r\n                            </div>\r\n                        </div>\r\n                      </Paper>\r\n                    </StepContent>\r\n                </Step>\r\n                :\r\n                null\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length && (\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n              <div className={classes.rootLastStep}>\r\n                <Paper square elevation={6} className={classes.resetContainer}>\r\n                    {resumenAccion}\r\n                    <BotoneraConfirmacionAccion\r\n                        accion={tipoDeAccion}\r\n                        handleBack={handleBack}\r\n                        confirmarAccion={confirmarAccion}\r\n                    />\r\n                </Paper>\r\n              </div>\r\n            </Grow>\r\n          )}\r\n        </div>\r\n      </Grow>\r\n    </Paper>\r\n  );\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {FormularioAccion} from '../components/FormularioAccion';\r\nimport {Accordion} from 'react-bootstrap'\r\nimport {Layout} from './Layout'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\n\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nclass Riego extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.regar()\r\n        this.props.history.push('/')\r\n    }\r\n    regar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\r\n        let fertilizantesFinal = {}\r\n        if(fertilizantes){\r\n            Object.keys(fertilizantes).map(fertilizante=>{\r\n                const dosis= fertilizantes[fertilizante]\r\n                fertilizantesFinal={\r\n                    ...fertilizantesFinal,\r\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\r\n            agua:agua,\r\n            tipoDeRiego:tipoDeRiego,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:fertilizantesFinal\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n        \r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n        <Layout history={this.props.history} page='Riego' user={this.props.user}>\r\n            <StepperAccion \r\n                step1='Plantas'\r\n                step2='Tipo De Riego'\r\n                step3='Cantidad de agua y aditivos'\r\n                selectedPlants={selectedPlants}\r\n                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                tipoDeRiego={this.state.tipoDeRiego}\r\n                confirmarAccion={this.confirmarAccion}\r\n                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                tipoDeAccion='Riego'\r\n                steps={[\r\n                        {\r\n                        title:'Plantas',\r\n                        content:(\r\n                            <ElegirPlantaAccion\r\n                                seleccionarPlanta={this.seleccionarPlanta}\r\n                                plantas={this.state.plantas}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Tipo De Riego',\r\n                        content:(\r\n                            <ElegirTipoDeRiego\r\n                                tipoDeRiego={this.state.tipoDeRiego}    \r\n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                setExpansionExpanded={this.setExpansionExpanded}\r\n                                expanded={this.state.expanded}\r\n                            />\r\n                        )},\r\n                        {title:'Cantidad De Agua y Aditivos',\r\n                        content:(\r\n                            <FormularioAccion\r\n                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                    tipoDeRiego={this.state.tipoDeRiego}\r\n                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                    cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                    cambiarAditivo={this.cambiarAditivo}\r\n                                    adivito='Fertlizante'\r\n                                    aditivos={this.props.aditivos}\r\n                                    aditivosUsados={this.state.aditivos}\r\n                                    eliminarAditivo={this.eliminarAditivo}\r\n                                    setExpansionExpanded={this.setExpansionExpanded}\r\n                                    expanded={this.state.expanded}\r\n                                />\r\n                        )},\r\n                ]}\r\n            />\r\n        </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.fertilizantes\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\r\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\r\nimport {FormularioAccion} from '../components/FormularioAccion'\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\nclass Insecticida extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas:[],\r\n        expanded:'panel1'\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.fumigar()\r\n        this.props.history.push('/')\r\n    }\r\n    fumigar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\r\n        let insecticidasFinal = {}\r\n        if(insecticidas){\r\n            Object.keys(insecticidas).map(insecticida=>{\r\n                const dosis= insecticidas[insecticida]\r\n                insecticidasFinal={\r\n                    ...insecticidasFinal,\r\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\r\n                }\r\n                return null\r\n            })\r\n        }\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\r\n            agua:agua,\r\n            cantidadDeAgua:cantidadDeAgua,\r\n            fecha:moment().format('LLL'),\r\n            aditivos:insecticidasFinal,\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\r\n        this.setState({\r\n            tipoDeRiego:tipoDeRiego\r\n        })\r\n    }\r\n    cambiarLitrosDeAgua=(litros)=>{\r\n        this.setState({\r\n            cantidadDeAgua:litros\r\n        })\r\n    }\r\n    cambiarAditivo=(fertilizante,cantidad)=>{\r\n        this.setState({\r\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\r\n        })\r\n    }\r\n    eliminarAditivo=(fertilizante)=>{\r\n        let newAditivos = this.state.aditivos\r\n        delete newAditivos[fertilizante]\r\n        if(Object.keys(newAditivos).length){\r\n            this.setState({aditivos:newAditivos})\r\n        }\r\n        else{\r\n            this.setState({aditivos:null})\r\n        }\r\n    }\r\n    eliminarListaDeAditivos=()=>{\r\n        this.setState({aditivos:undefined})\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Fumigacion' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100\">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDeRiego={this.state.tipoDeRiego}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\r\n                                tipoDeAccion='Fumigacion'\r\n                                steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Tipo De Riego',\r\n                                    content:(\r\n                                        <ElegirTipoDeRiego\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {title:'Cantidad De Agua y Aditivos',\r\n                                    content:(\r\n                                        <FormularioAccion\r\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\r\n                                            tipoDeRiego={this.state.tipoDeRiego}\r\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\r\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                            cambiarAditivo={this.cambiarAditivo}\r\n                                            aditivo='Insecticida'\r\n                                            aditivos={this.props.aditivos}\r\n                                            aditivosUsados={this.state.aditivos}\r\n                                            eliminarAditivo={this.eliminarAditivo}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                ]}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n        aditivos:state.data.insecticidas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{Fragment} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport './styles/table.css'\r\nimport {database} from 'firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        backgroundColor:theme.palette.secondary.light,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px white'\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    addButton:{\r\n        marginBottom:theme.spacing(1),\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n  }));\r\n\r\n\r\nexport const TableAditivos = ({title,aditivos,user}) =>{\r\n    const eliminarAditivo=async (id)=>{\r\n        let newAditivos = aditivos\r\n        newAditivos.splice(id,1)\r\n        switch (title) {\r\n            case \"Fertilizantes\":\r\n                await database().ref().child(user).update({\r\n                   fertilizantes:newAditivos\r\n                })\r\n                break;\r\n            case \"Insecticidas\":\r\n                await database().ref().child(user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleChange = panel => (event, isExpanded) => {\r\n      setExpanded(isExpanded ? panel : false);\r\n    };\r\n    return(\r\n        <div className='overflow-auto'>\r\n            <div className=\"container mb-2\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-auto ml-auto mr-auto\">\r\n                        <Link to={{\r\n                            pathname:'/Nuevo-Aditivo',\r\n                            props:{\r\n                                tipoDeAditivo:title\r\n                            }\r\n                        }}>\r\n                            <Button \r\n                                variant='text' \r\n                                className={classes.addButton} \r\n                                startIcon={<AddOutlined/>}\r\n                                >\r\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\r\n                            </Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                {aditivos?\r\n                    aditivos.map((aditivo,i)=>(\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                        <Grow in={true}\r\n                            {...(true ? { timeout: 1500 } : {})}>\r\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\r\n                                <Paper elevation={4} className={classes.paperDark}>\r\n                                    <ExpansionPanelSummary\r\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                                    aria-controls=\"panel1bh-content\"\r\n                                    id=\"panel1bh-header\"\r\n                                    >\r\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\r\n                                    </ExpansionPanelSummary>\r\n                                </Paper>\r\n                                <Paper elevation={6} className={classes.paperMain}>\r\n                                    <ExpansionPanelDetails>\r\n                                        <div className=\"container\">\r\n                                            <div className=\"row mb-2\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Descripcion\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col text-left\">\r\n                                                    <Typography variant='body2'>\r\n                                                        {aditivo.descripcion}\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            <hr/>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography variant='h5'>\r\n                                                        Dosificacion\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\r\n                                                <Fragment key={'tipoDeAplicacion'+j}>\r\n                                                    <Typography  variant ='h6'>\r\n                                                            {tipoDeAplicacion}\r\n                                                    </Typography>\r\n                                                    <List>\r\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\r\n                                                            <ListItem>\r\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\r\n                                                            </ListItem> \r\n                                                        ))}\r\n                                                    </List>\r\n                                                </Fragment>\r\n                                            ))}\r\n                                            <div className=\"row my-2 justify-content-around\">\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                    >   \r\n                                                        <EditOutlined className={classes.buttonText}/>\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\r\n                                                        Editar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                    <IconButton\r\n                                                        variant=\"contained\"\r\n                                                        color=\"inherit\"\r\n                                                        onClick={e=>{eliminarAditivo(i)}}\r\n                                                    >\r\n                                                        <DeleteOutline className={classes.buttonText}/>\r\n                                                    </IconButton>\r\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\r\n                                                        Eliminar\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </ExpansionPanelDetails>\r\n                                    </Paper>\r\n                            </ExpansionPanel>\r\n                        </Grow>\r\n                        </div>\r\n                    </div>\r\n                    ))\r\n                    :\r\n                    <Typography>Aun no hay ningun Aditivo</Typography>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\r\nimport {TableAditivos} from './TableAditivos'\r\nimport { makeStyles,Theme } from '@material-ui/core/styles';\r\nimport {Grow} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paperMain: {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    paperDark: {\r\n    backgroundColor: theme.palette.primary.light,\r\n    },\r\n    tabs:{\r\n        \"&.MuiTabs-scroller\":{\r\n            '&.MuiTabs-indicator':{\r\n                color: '#fff'\r\n            }\r\n        },\r\n    },\r\n    tab:{\r\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\r\n            color: '#fff',\r\n        }\r\n    },\r\n  }));\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <Typography\r\n        component=\"div\"\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`simple-tabpanel-${index}`}\r\n        aria-labelledby={`simple-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && <Box p={3}>{children}</Box>}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\r\n    const [value, setValue] = useState(0);\r\n    const classes = useStyles()\r\n    return(\r\n        <div className=\"container-fluid overflow-auto\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 px-0\">\r\n                    <Paper className={classes.paperDark}>\r\n                        <Tabs\r\n                            value={value}\r\n                            indicatorColor=\"primary\"\r\n                            textColor=\"primary\"\r\n                            onChange={(e,value)=>{\r\n                                setValue(value)\r\n                            }}\r\n                            className={classes.tabs}\r\n                            aria-label=\"disabled tabs example\"\r\n                        >\r\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\r\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\r\n                        </Tabs>\r\n                    </Paper>\r\n                    <TabPanel value={value} index={0}>\r\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react'\r\nimport { TabAditivos } from '../components/TabAditivos'\r\nimport { connect } from 'react-redux'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Aplicables=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page='Aditivos' user={props.user}>\r\n            <Paper elevation={3} className={classes.root}>\r\n                <TabAditivos user={props.user} fertilizantes={props.fertilizantes} insecticidas={props.insecticidas}/>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nconst mapStateToProps =(state)=>{\r\n    return{\r\n        user:state.user.uid,\r\n        fertilizantes:state.data.fertilizantes,\r\n        insecticidas:state.data.insecticidas\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\r\nimport {Paper,makeStyles,Typography} from '@material-ui/core'\r\nimport './styles/loading.css'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n        height:'100vh',\r\n        widht:'100%'\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText,\r\n    }\r\n}))\r\nexport const PantallaDeCarga =()=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className='row'>\r\n                <div className='col-12 text-center'>\r\n                    <Typography variant='h2'className={classes.title}>Cargando</Typography>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center mt-4\">\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"col-auto\">\r\n                    <h2>\r\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\r\n                    </h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link,FormControlLabel,Checkbox} from '@material-ui/core'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiOutlinedInput-input':{\r\n        color:theme.palette.primary.contrastText,\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.primary.contrastText\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused':{\r\n        color:theme.palette.secondary.contrastText\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      color:theme.palette.primary.contrastText,\r\n      '&.MuiButton-outlined':{\r\n        border: `1px solid ${theme.palette.primary.contrastText}`\r\n      },\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText,\r\n      '& .MuiLink-underlineHover':{\r\n        textDecoration:'none',\r\n        color:theme.palette.primary.contrastText,\r\n      }\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    checkBox:{\r\n        color: theme.palette.primary.contrastText,\r\n        '& .MuiIconButton-label':{\r\n            color: theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    linkButtons:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    }\r\n  }));\r\nexport const FormSignIn = ({inputUser,setInputUser,inputPassword,setInputPassword,userError,passwordError,loading,logIn})=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Inicia Sesion\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                variant=\"filled\"\r\n                margin=\"normal\"\r\n                color='primary'\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                error={userError}\r\n                helperText={userError?'Usuario No Encontrado':null}\r\n                name=\"email\"\r\n                value={inputUser}\r\n                onChange={e=>{setInputUser(e.target.value)}}\r\n                autoFocus\r\n                />\r\n                <TextField\r\n                variant=\"filled\"\r\n                color='primary'\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                value={inputPassword}\r\n                helperText={passwordError?'Contraseña incorrecta':null}\r\n                error={passwordError}\r\n                onChange={e=>{setInputPassword(e.target.value)}}\r\n                label=\"contraseña\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                />\r\n                <FormControlLabel\r\n                className={classes.checkBox}\r\n                control={<Checkbox value=\"remember\"  />}\r\n                label=\"Recuerdame\"\r\n                />\r\n                <Button\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={e=>{logIn()}}\r\n                >\r\n                Ingresar!\r\n                </Button>\r\n                <div className={classes.linkButtons}>\r\n                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\r\n                        Olvidaste tu contraseña?\r\n                    </Link>\r\n                    <Link variant=\"body2\">\r\n                        <LinkRouter to='/Login' className={classes.link}>\r\n                            {\"No tienes una cuenta? Registrate!\"}\r\n                        </LinkRouter>\r\n                    </Link>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth} from 'firebase'\r\nimport foto from '../images/background.png'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Layout} from './Layout'\r\nimport {FormSignIn} from '../components/FormSignIn'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  \r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const SignInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [loading,setloading]=useState(false)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n    \r\n\r\n    const logIn=async()=>{\r\n        setloading(true)\r\n        setUserError(undefined)\r\n        setPasswordError(undefined)\r\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\r\n        .then(()=>{\r\n          setloading(false)\r\n        })\r\n        .catch(error=>{\r\n          if(error.code==='auth/user-not-found'){\r\n            setUserError(error)\r\n          }\r\n          else{\r\n            setPasswordError(error)\r\n          }\r\n          setloading(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n      <Layout>\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n              <img src={foto} alt=\"\" className={classes.img}/>\r\n            </Grid>\r\n            <Grid item xs={12} sm={8} md={5}>\r\n              {!loading?\r\n              <Paper elevation={3} className={classes.paper}>\r\n                <FormSignIn logIn={logIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword} userError={userError} passwordError={passwordError} />\r\n              </Paper>\r\n              :\r\n              <PantallaDeCarga/>\r\n              }\r\n        </Grid>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n}","import React,{useState} from 'react'\r\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link} from '@material-ui/core'\r\nimport {LockOutlined} from '@material-ui/icons'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\r\nimport {auth,database} from 'firebase'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n      margin: theme.spacing(0, 4),\r\n      padding:theme.spacing(1),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.primary.contrastText\r\n    },\r\n    form: {\r\n      width: '100%', // Fix IE 11 issue.\r\n      marginTop: theme.spacing(1),\r\n      '& .MuiOutlinedInput-input':{\r\n        color:theme.palette.primary.contrastText,\r\n      },\r\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.primary.contrastText\r\n      },\r\n      '& .MuiFormLabel-root.Mui-focused':{\r\n        color:theme.palette.secondary.contrastText\r\n      },\r\n      '& .MuiOutlinedInput-notchedOutline':{\r\n        borderColor: theme.palette.secondary.dark,\r\n      },\r\n    },\r\n    submit: {\r\n      margin: theme.spacing(3, 0, 2),\r\n      color:theme.palette.primary.contrastText,\r\n      '&.MuiButton-outlined':{\r\n        border: `1px solid ${theme.palette.primary.contrastText}`\r\n      },\r\n    },\r\n    background:{\r\n      background:theme.palette.primary.main,\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    link:{\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    root:{\r\n        width:'100%',\r\n    },\r\n    title:{\r\n      color:theme.palette.primary.contrastText\r\n    }\r\n  }));\r\nexport const FormLogin=({setloading,history})=>{\r\n    const classes = useStyles()\r\n    let [inputUser,setInputUser]=useState(undefined)\r\n    let [inputNombre,setInputNombre]=useState(undefined)\r\n    let [inputPassword,setInputPassword]=useState(undefined)\r\n    let [userError,setUserError]=useState(undefined)\r\n    let [nombreError,setNombreError]=useState(undefined)\r\n    let [passwordError,setPasswordError]=useState(undefined)\r\n\r\n    const signIn=async()=>{\r\n      setloading(true)\r\n      await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\r\n      .then(async e=>{\r\n          e.user.updateProfile({\r\n            displayName:inputNombre\r\n          })\r\n          await database().ref().child(e.user.uid).update({\r\n              horaDeInicio:'',\r\n              cicloLuminico:'',\r\n              periodo:''\r\n          })\r\n          history.push('/')\r\n          setloading(false)\r\n      })\r\n      .catch(error=>{\r\n        if(error.code==='auth/user-not-found'){\r\n          setUserError(error)\r\n        }\r\n        else{\r\n          setPasswordError(error)\r\n        }\r\n        setloading(false)\r\n      })\r\n  }\r\n    return(\r\n          <div className={classes.root}>\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlined/>\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\r\n                    Registrate\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='primary'\r\n                    required\r\n                    fullWidth\r\n                    id=\"Nombre\"\r\n                    label=\"Nombre\"\r\n                    name=\"nombre\"\r\n                    value={inputNombre}\r\n                    onChange={e=>{setInputNombre(e.target.value)}}\r\n                    autoFocus\r\n                />\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='primary'\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    value={inputUser}\r\n                    onChange={e=>{setInputUser(e.target.value)}}\r\n                />\r\n                <TextField\r\n                    variant=\"filled\"\r\n                    margin=\"normal\"\r\n                    color='secondary'\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    value={inputPassword}\r\n                    onChange={e=>{setInputPassword(e.target.value)}}\r\n                    label=\"contraseña\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  color='#fff'\r\n                  variant=\"outlined\"\r\n                  className={classes.submit}\r\n                  onClick={e=>{signIn()}}\r\n                >\r\n                Registrate!\r\n                </Button>\r\n                <Link variant=\"body2\">\r\n                      <LinkRouter to='/' className={classes.link}>\r\n                        Ya tienes una cuenta? Ingresa!\r\n                      </LinkRouter>\r\n                  </Link>\r\n            </form>\r\n            </div>\r\n          </div>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {auth, database} from 'firebase'\r\nimport foto from '../images/background.png'\r\nimport {PantallaDeCarga} from './PantallaDeCarga'\r\nimport {Link as LinkRouter} from 'react-router-dom'\r\nimport {Layout} from './Layout'\r\nimport {FormLogin} from '../components/FormLogin'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100vh',\r\n    overflow:'auto'\r\n  },\r\n  image: {\r\n    backgroundColor:\r\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\r\n  },\r\n  img:{\r\n    objectFit:'cover',\r\n    width:\"100%\",\r\n    height:\"100%\"\r\n  },\r\n  paper: {\r\n    width:\"100%\",\r\n    height:\"100%\",\r\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main,\r\n    borderRadius:'0',\r\n    display:'flex',\r\n    alignItems:'center'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    '& .MuiOutlinedInput-input':{\r\n      color:theme.palette.primary.contrastText,\r\n    },\r\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.primary.contrastText\r\n    },\r\n    '& .MuiFormLabel-root.Mui-focused':{\r\n      color:theme.palette.secondary.contrastText\r\n    },\r\n    '& .MuiOutlinedInput-notchedOutline':{\r\n      borderColor: theme.palette.secondary.dark,\r\n    },\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    color:theme.palette.primary.contrastText,\r\n    '&.MuiButton-outlined':{\r\n      border: `1px solid ${theme.palette.primary.contrastText}`\r\n    },\r\n  },\r\n  background:{\r\n    background:theme.palette.primary.main,\r\n    color:theme.palette.primary.contrastText\r\n  },\r\n  link:{\r\n    color:theme.palette.primary.contrastText\r\n  }\r\n}));\r\n\r\n\r\nexport const LogInPage=({history})=> {\r\n    const classes = useStyles();\r\n    let [loading,setloading]=useState(false)\r\n\r\n    return (\r\n      <Layout>\r\n          <Grid container component=\"main\" className={classes.root}>\r\n              <Grid item xs={false} sm={4} md={7} className={classes.image}>\r\n                <img src={foto} alt=\"\" className={classes.img}/>\r\n              </Grid>\r\n              <Grid item xs={12} sm={8} md={5}>\r\n                {!loading?\r\n                  <Paper elevation={3} className={classes.paper}>\r\n                    <FormLogin setloading={setloading} history={history}/>\r\n                  </Paper>\r\n                  :\r\n                  <PantallaDeCarga/>\r\n                }\r\n            </Grid>\r\n          </Grid>\r\n      </Layout>\r\n    );\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    }\r\n}))\r\n\r\nexport const ElegirTipoDePoda=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.tipoDePoda}\r\n                            className={classes.radio}\r\n                            label=\"Tipo de poda\" \r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport {connect} from 'react-redux'\r\nimport './styles/Accion.css'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\r\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\r\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\r\nimport { StepperAccion } from '../components/StepperAccion';\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {Layout} from './Layout'\r\n\r\n\r\nclass Poda extends Component{\r\n    state={\r\n        plantas:undefined,\r\n        tipoDePoda:undefined,\r\n        plantas:[],\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.podar()\r\n        this.props.history.push('/')\r\n    }\r\n    podar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                console.log(planta)\r\n                this.guardarPodaBD(planta.id)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarPodaBD= async (idPlanta)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\r\n            fecha:moment().format('LLL'),\r\n            tipoDePoda:this.state.tipoDePoda\r\n        })\r\n    }\r\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\r\n        this.setState({\r\n            tipoDePoda:nuevoTipoDePoda\r\n        })\r\n    }\r\n    render(){\r\n        let selectedPlants=[]\r\n        if(this.state.plantas){\r\n            this.state.plantas.map(planta=>(\r\n                planta.selected?\r\n                    selectedPlants.push(planta.nombre)\r\n                    :\r\n                    null\r\n            ))\r\n        }\r\n        return(\r\n            <Layout history={this.props.history} page='Poda' user={this.props.user}>\r\n                <div className=\"container-fluid overflow-auto h-100 \">\r\n                    <div className=\"row h-100\">\r\n                        <div className=\"col-12 px-0\">\r\n                            <StepperAccion \r\n                                cantidadDeAgua={this.state.cantidadDeAgua}\r\n                                tipoDePoda={this.state.tipoDePoda}\r\n                                confirmarAccion={this.confirmarAccion}\r\n                                selectedPlants={selectedPlants}\r\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\r\n                                tipoDeAccion='Poda'\r\n                                steps={[\r\n                                {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                        />\r\n                                    )},\r\n                                {\r\n                                    title:'Tipo De Poda',\r\n                                    content:(\r\n                                        <ElegirTipoDePoda\r\n                                            handleChange={(nuevoTipoDePoda=>{\r\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\r\n                                            })}\r\n                                            tipoDePoda={this.state.tipoDePoda}\r\n                                        />\r\n                                )}]\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = state=>{\r\n    return{\r\n        user:state.user.uid,\r\n        plantas:state.data.plantas,\r\n    }\r\n}\r\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\r\n    return state\r\n}\r\nexport default reducer","import React,{useState}from 'react'\r\nimport { Paper,ListItem,List,ListItemText,FormControl,InputLabel,Select,MenuItem,makeStyles,Switch,FormControlLabel,TextField,InputAdornment,Grow,Button, Typography } from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\n\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    paper:{\r\n        marginTop:theme.spacing(1),\r\n        width:'300px',\r\n        background:theme.palette.primary.main,\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        padding:theme.spacing(1)\r\n    },\r\n    FormControlSwitch:{\r\n        marginLeft:'auto',\r\n        marginRight:'auto'\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    inputCicloLuminico:{\r\n        display:'flex',\r\n        flexDirection:'column'\r\n    },\r\n    alert:{\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\nexport const ListConfig =({switchValue,setSwitchValue,horaDeInicio,cambiarHoraDeInicio,periodo,cambiarPeriodo,cicloLuminico,cambiarCicloLuminico})=>{\r\n    const classes = useStyles()\r\n    let [errorCicloLuminico,setErrorCicloLuminico]= useState(undefined)\r\n    let [horaDeRespaldo,setHoraDeRespaldo]= useState(undefined)\r\n    return(\r\n        <div className={classes.root}>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <FormControlLabel\r\n                    className={classes.FormControlSwitch}\r\n                    control={\r\n                        <Switch checked={switchValue} onChange={e=>{setSwitchValue(e.target.checked)}} value=\"switch\" />\r\n                    }\r\n                    label=\"Modo Oscuro\"\r\n                />\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Periodo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        readOnly={periodo&&true}\r\n                        id=\"select\"\r\n                        value={periodo}\r\n                        onChange={e=>{\r\n                            cambiarPeriodo(e.target.value)\r\n                        }}\r\n                    >\r\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Hora De Inicio Del Ciclo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        id=\"select\"\r\n                        value={horaDeInicio}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">HS</InputAdornment>\r\n                        }\r\n                        onChange={e=>{\r\n                            cambiarHoraDeInicio(e.target.value)\r\n                        }}\r\n                    >\r\n                        {new Array(24).fill(undefined).map((hour,index)=>(\r\n                            <MenuItem value={index}>\r\n                                {index<10?`0${index}:00`:`${index}:00`}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                <FormControl className={classes.FormControl}>\r\n                    <InputLabel id=\"select-label\">Duracion Del Ciclo</InputLabel>\r\n                    <Select\r\n                        labelId=\"select-label\"\r\n                        id=\"select\"\r\n                        value={cicloLuminico}\r\n                        error={errorCicloLuminico}\r\n                        startAdornment={\r\n                            <InputAdornment position=\"start\">HS</InputAdornment>\r\n                        }\r\n                        onChange={e=>{\r\n                            console.log(e.target.value)\r\n                            if(e.target.value<13&&periodo==='Vegetativo'){\r\n                                setErrorCicloLuminico('Si este es menor de 13 Hs el armario pasara al periodo de Floracion')\r\n                                setHoraDeRespaldo(e.target.value)\r\n                            }\r\n                            if(e.target.value>=13&&periodo==='Floracion'){\r\n                                setErrorCicloLuminico('Si este es mayor de 13 Hs el armario pasara al periodo Vegetativo')\r\n                                setHoraDeRespaldo(e.target.value)\r\n                            }\r\n                            else{\r\n                                cambiarCicloLuminico(e.target.value)\r\n                            }\r\n                        }}\r\n                    >\r\n                        {new Array(25).fill(undefined).map((hour,index)=>(\r\n                            index&&\r\n                                <MenuItem value={index}>\r\n                                    {index}\r\n                                </MenuItem>\r\n                        ))}\r\n                    </Select>\r\n                </FormControl>\r\n                {errorCicloLuminico&&\r\n                <Grow in={true}>\r\n                <   Alert className={classes.alert} variant=\"filled\" severity=\"warning\">\r\n                        <Typography>\r\n                            Quiere cambiar el ciclo luminico a {horaDeRespaldo} HS?\r\n                        </Typography>\r\n                        {errorCicloLuminico}\r\n                        <Button\r\n                            variant='contained'\r\n                            onClick={e=>{\r\n                                cambiarCicloLuminico(horaDeRespaldo)\r\n                                cambiarPeriodo(horaDeRespaldo>=13?'Vegetativo':'Floracion')\r\n                                setErrorCicloLuminico(undefined)\r\n                            }}\r\n                        >\r\n                            Continuar\r\n                        </Button>\r\n                    </Alert>\r\n                </Grow>\r\n                }\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect} from 'react-redux'\r\nimport {ListConfig} from '../components/ListConfig'\r\nimport {database}from 'firebase'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space.around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Configuracion=(props)=>{\r\n    let [switchModoOscuro,setSwitchModoOscuro]= useState(localStorage.getItem('theme')==='dark'?true:false)\r\n    const setSwitchValue=value=>{\r\n        setSwitchModoOscuro(value)\r\n        if(!value){\r\n            props.setTheme('light')\r\n            localStorage.setItem('theme','light')\r\n        }\r\n        else{\r\n            props.setTheme('dark')\r\n            localStorage.setItem('theme','dark')\r\n        }\r\n    }\r\n    const cambiarHoraDeInicio=horaDeInicio=>{\r\n        database().ref().child(props.user).update({\r\n            horaDeInicio:horaDeInicio\r\n        })\r\n    }\r\n    const cambiarPeriodo=periodo=>{\r\n        database().ref().child(props.user).update({\r\n            periodo:periodo\r\n        })\r\n    }\r\n    const cambiarCicloLuminico=cicloLuminico=>{\r\n        database().ref().child(props.user).update({\r\n            cicloLuminico:cicloLuminico\r\n        })\r\n    }\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page='Configuracion' user={props.user}>\r\n            <Paper className={classes.root}>\r\n                <ListConfig \r\n                    switchValue={switchModoOscuro} \r\n                    setSwitchValue={setSwitchValue} \r\n                    horaDeInicio={props.horaDeInicio} \r\n                    cambiarHoraDeInicio={cambiarHoraDeInicio}\r\n                    periodo={props.periodo} \r\n                    cambiarPeriodo={cambiarPeriodo}\r\n                    cicloLuminico={props.cicloLuminico}\r\n                    cambiarCicloLuminico={cambiarCicloLuminico}\r\n                />\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps = state=>({\r\n    user:state.user.uid,\r\n    periodo:state.data.periodo,\r\n    horaDeInicio:state.data.horaDeInicio,\r\n    cicloLuminico:state.data.cicloLuminico\r\n})\r\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\r\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {Card,CardHeader,CardMedia,CardActions,makeStyles,IconButton} from '@material-ui/core'\r\nconst useStyles= makeStyles(theme=>({\r\n    root: {\r\n        width: 250,\r\n    },\r\n    media: {\r\n        height: 0,\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardHeader:{\r\n        backgroundColor:theme.palette.primary.dark,\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\r\n    const classes= useStyles()\r\n    return(\r\n        <Card className={classes.root}>\r\n            <CardHeader\r\n                className={classes.cardHeader}\r\n                title={nombre}\r\n                subheader={fechaDeCorte}\r\n            />\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={fotoPlanta}\r\n            />\r\n        </Card>\r\n    )\r\n}","import React,{Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,Typography} from '@material-ui/core'\r\nimport {CardHistorial} from '../components/CardHistorial'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst Historial=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Layout history={props.history} page={'Historial'} user={props.user}>\r\n            <Paper elevation={3} className={classes.root}>\r\n                <div className=\"container-fluid overflow-auto\">\r\n                    <div className=\"row justify-content-center\">\r\n                        {props.historial?\r\n                            Object.keys(props.historial).map(planta=>(\r\n                                <div className=\"col-auto mt-3\">\r\n                                    <Link className='text-white' to={{\r\n                                        pathname:'/Historial/Planta',\r\n                                        props:{\r\n                                            ...props.historial[planta],\r\n                                            user:props.user,\r\n                                            id:planta,\r\n                                            history:props.history,\r\n                                            plantaDelHistorial:true\r\n                                        }\r\n                                    }}>\r\n                                        <CardHistorial cantidadDeGramos={props.historial[planta].cantidadDeGramos} nombre={props.historial[planta].nombre} fechaDeCorte={props.historial[planta].fechaDeCorte}/>\r\n                                    </Link>\r\n                                </div>\r\n                            )):\r\n                            <div className=\"col-auto\">\r\n                                <Typography>\r\n                                    No hay plantas en el historial\r\n                                </Typography>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Paper>\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    historial:state.data.historial\r\n})\r\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport moment from 'moment'\r\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia,ListItemAvatar,Avatar,Grow} from '@material-ui/core'\r\nimport { PortableWifiOff, Height } from '@material-ui/icons';\r\nimport semilla from '../images/semilla.svg'\r\nimport vegetativo from '../images/vegetativo.svg'\r\nimport floracion from '../images/floracion.svg'\r\nimport maceta from '../images/maceta.svg'\r\nimport adn from '../images/adn.svg'\r\nimport balanza from '../images/balanza.svg'\r\nimport cosecha from '../images/cosecha.svg'\r\nconst useStyles = makeStyles(theme => ({\r\n    paper:{\r\n        backgroundColor:theme.palette.primary.main,\r\n        padding:theme.spacing(1),\r\n        marginTop:theme.spacing(2),\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        minWidth:'220px'\r\n    },\r\n    listText:{\r\n        color:theme.palette.primary.contrastText,\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText,\r\n        }\r\n    },\r\n    itemList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflowX:'auto',\r\n        width:'100%'\r\n    },\r\n    avatar:{\r\n        padding:theme.spacing(1),\r\n        width:theme.spacing(7),\r\n        height:theme.spacing(7)\r\n    }\r\n}))\r\n\r\nexport const DetallePlanta=(props)=>{\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    const classes = useStyles()\r\n            \r\n    return(\r\n        <div className={classes.itemList}>\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={adn} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Genetica' secondary={props.genetica}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={maceta} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Volumen Maceta' secondary={`${props.volumenMaceta} Lt`}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={semilla} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Fecha De Germinacion' secondary={props.nacimiento?props.nacimiento:'-'}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={vegetativo} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Fecha De Vegetativo' secondary={props.inicioVegetativo?props.inicioVegetativo:'-'}/>\r\n                </Paper>\r\n            </Grow>\r\n            <Grow in={true}\r\n            {...(true ? { timeout: 1500 } : {})}>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Avatar src={floracion} className={classes.avatar}/>\r\n                    <ListItemText className={classes.listText} primary='Fecha De Floracion' secondary={props.inicioFloracion?props.inicioFloracion:'-'}/>\r\n                </Paper>\r\n            </Grow>\r\n            {props.plantaDelHistorial && props.fechaDeCorte &&\r\n                <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={cosecha} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Fecha De Corte' secondary={props.fechaDeCorte}/>\r\n                    </Paper>\r\n                </Grow>\r\n            }\r\n            {props.plantaDelHistorial &&\r\n                <Grow in={true}\r\n                {...(true ? { timeout: 1500 } : {})}>\r\n                    <Paper elevation={3} className={classes.paper}>\r\n                        <Avatar src={balanza} className={classes.avatar}/>\r\n                        <ListItemText className={classes.listText} primary='Cantidad Cosechada' secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\r\n                    </Paper>\r\n                </Grow>\r\n            }\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {Button,makeStyles,Avatar,SvgIcon} from '@material-ui/core'\r\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\r\nimport {riegos} from '../images/riegos.svg'\r\nimport {transplante} from '../images/transplante.svg'\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'center',\r\n        alignItems:'start'\r\n    },\r\n    link:{\r\n        textDecoration:'none',\r\n        outline:'none',\r\n        margin:theme.spacing(1)\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    avatar:{\r\n        width:theme.spacing(5),\r\n        height:theme.spacing(5)\r\n    }\r\n}))\r\n\r\nexport const DetalleAcciones =(props)=>{\r\n    const classes= useStyles()\r\n    return(\r\n            <div className={classes.root}>\r\n                <Link\r\n                className={classes.link} \r\n                to={{ \r\n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\r\n                    props:{\r\n                        ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Riegos\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}\r\n                to={{ \r\n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\r\n                    props:{\r\n                        ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Podas\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}                 \r\n                to={{ \r\n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\r\n                props:{\r\n                    ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Fumigaciones\r\n                    </Button>\r\n                </Link>\r\n                <Link \r\n                className={classes.link}                 \r\n                to={{ \r\n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Transplantes':'/Planta/Transplantes',\r\n                props:{\r\n                    ...props\r\n                }}}>\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color='primary'\r\n                        className={classes.button}\r\n                    >\r\n                        Transplantes\r\n                    </Button>\r\n                </Link>\r\n            </div>\r\n    )\r\n}","import React , {useState} from 'react'\r\nimport {makeStyles,IconButton,Typography} from '@material-ui/core'\r\nimport {DeleteOutline,EditOutlined,NatureOutlined} from '@material-ui/icons'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        paddingBottom:theme.spacing(1)\r\n    },\r\n    editButton:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    deleteButton:{\r\n        color:theme.palette.error.main\r\n    },\r\n    editText:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    deleteText:{\r\n        color:theme.palette.error.main\r\n    },\r\n    cosecharButton:{\r\n        color:theme.palette.success.main\r\n    },\r\n    cosecharText:{\r\n        color:theme.palette.success.main\r\n    },\r\n}))\r\n\r\nexport const BotoneraConfiguracionPlanta =({inicioFloracion,cosecharPlanta,eliminarPlanta,}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            {inicioFloracion &&\r\n                <div className='d-flex flex-column'>\r\n                    <IconButton\r\n                        variant=\"contained\"\r\n                        onClick={cosecharPlanta}\r\n                        className={classes.cosecharButton}\r\n                        >\r\n                        <NatureOutlined/>\r\n                    </IconButton>\r\n                    <Typography variant='caption' className={classes.cosecharText}>\r\n                        Cosechar\r\n                    </Typography>\r\n                </div>\r\n            }\r\n            <div className='d-flex flex-column'>\r\n                <IconButton\r\n                    variant=\"contained\"\r\n                    className={classes.editButton}\r\n                    >\r\n                    <EditOutlined/>\r\n                </IconButton>\r\n                <Typography variant='caption'className={classes.editText}>\r\n                    Editar\r\n                </Typography>\r\n            </div> \r\n            <div className='d-flex flex-column'>\r\n                <IconButton\r\n                    variant=\"contained\"\r\n                    className={classes.deleteButton}\r\n                    onClick={e=>{\r\n                        eliminarPlanta()\r\n                    }}\r\n                >\r\n                    <DeleteOutline/>\r\n                </IconButton>\r\n                <Typography variant='caption' className={classes.deleteText}>\r\n                Eliminar\r\n                </Typography>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {makeStyles,Typography,ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails,TextField,InputAdornment,Button} from '@material-ui/core'\r\nimport {CheckCircle,ExpandMore} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    expansionPanel:{\r\n        width:'50%'\r\n    },\r\n    ExpansionPanelDetails:{\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        justifyContent:'center'\r\n    },\r\n}))\r\nexport const InputCantidadCosechada = ({inputCantidad,setInputCantidad,guardarCantidadCosechada}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <ExpansionPanel className={classes.expansionPanel}>\r\n                <ExpansionPanelSummary\r\n                expandIcon={<ExpandMore />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                >\r\n                    <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\r\n                </ExpansionPanelSummary>\r\n                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\r\n                    <TextField id=\"outlined-basic\" \r\n                        value={inputCantidad}\r\n                        type='number'\r\n                        label=\"Cantidad Cosechada\"\r\n                        InputProps={{\r\n                            startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                gr\r\n                            </InputAdornment>\r\n                            ),\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        onChange={e=>{\r\n                            setInputCantidad(e.target.value)\r\n                        }}\r\n                    />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"secondary\"\r\n                        onClick={e=>{\r\n                            guardarCantidadCosechada()\r\n                        }}\r\n                        endIcon={\r\n                            <CheckCircle/>\r\n                        }\r\n                        >\r\n                        Guardar \r\n                    </Button>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState}from 'react'\r\nimport {Layout} from './Layout'\r\nimport {DetallePlanta} from '../components/DetallePlanta'\r\nimport {DetalleAcciones} from '../components/DetalleAcciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,GridListTile,CardMedia,Paper,GridList, Divider} from '@material-ui/core'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\r\nimport fotoPlanta from '../images/apple cookies.jpg'\r\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\r\n\r\n\r\nconst useStyles=makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:'1px 1px 10px black'\r\n    },\r\n    buttonDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    buttonTextDanger:{\r\n        color:theme.palette.primary.contrastText,\r\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n    paperPrimary:{\r\n        width:'100%',\r\n        height:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        alignItems:'center'\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        width:'100%',\r\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n        '& .MuiGridListTile-root':{\r\n            width:'30% !important'\r\n        }\r\n    },\r\n    media: {\r\n        height:'100%'\r\n    },\r\n    rightPanel:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        height:'100%',\r\n        justifyContent:'space-between',\r\n        padding:theme.spacing(1),\r\n    },\r\n    rowBotonera:{\r\n        width:'100%',\r\n        flexGrow:'1',\r\n        display:'flex'\r\n    }\r\n}))\r\n\r\nexport const Planta =(props)=>{\r\n    const classes = useStyles()\r\n    let [inputCantidad, setInputCantidad]= useState(undefined)\r\n    const cosecharPlanta=async ()=>{\r\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\r\n            nombre:props.location.props.nombre?props.location.props.nombre:null,\r\n            nacimiento:props.location.props.nacimiento?props.location.props.nacimiento:null,\r\n            genetica:props.location.props.genetica?props.location.props.genetica:null,\r\n            inicioVegetativo:props.location.props.inicioVegetativo?props.location.props.inicioVegetativo:null,\r\n            inicioFloracion:props.location.props.inicioFloracion?props.location.props.inicioFloracion:null,\r\n            podas:props.location.props.podas?props.location.props.podas:null,\r\n            riegos:props.location.props.riegos?props.location.props.riegos:null,\r\n            fumigaciones:props.location.props.fumigaciones?props.location.props.fumigaciones:null,\r\n            fechaDeCorte:moment().format('LLL')\r\n        })\r\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\r\n        props.location.props.history.goBack()\r\n    }\r\n    const guardarCantidadCosechada=async ()=>{\r\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\r\n            cantidadDeGramos:inputCantidad+' gr'\r\n        })\r\n        props.location.props.history.goBack()\r\n    }\r\n    const eliminarPlanta=async ()=>{\r\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\r\n        props.location.props.history.replace('/')\r\n    }\r\n    const tileData=[\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        },{\r\n            img:fotoPlanta,\r\n        }\r\n        ,{\r\n            img:fotoPlanta,\r\n        },\r\n        {\r\n            img:fotoPlanta,\r\n        }\r\n    ]\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre} user={props.location.props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <GridList className={classes.gridList} cols={2.5}>\r\n                                {tileData.map(tile => (\r\n                                <GridListTile key={tile.img} className={classes.tile}>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        image={fotoPlanta}\r\n                                    />\r\n                                </GridListTile>\r\n                                ))}\r\n                            </GridList>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <DetallePlanta \r\n                                genetica={props.location.props.genetica}\r\n                                cantidadDeGramos={props.location.props.cantidadDeGramos}\r\n                                plantaDelHistorial={props.location.props.plantaDelHistorial}\r\n                                edad={props.location.props.edad}\r\n                                nacimiento={props.location.props.nacimiento}\r\n                                inicioVegetativo={props.location.props.inicioVegetativo}\r\n                                inicioFloracion={props.location.props.inicioFloracion}\r\n                                fechaDeCorte={props.location.props.fechaDeCorte}\r\n                                volumenMaceta={props.location.props.volumenMaceta}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            {props.location.props.plantaDelHistorial && !props.location.props.cantidadDeGramos &&\r\n                                <InputCantidadCosechada inputCantidad={inputCantidad} setInputCantidad={setInputCantidad} guardarCantidadCosechada={guardarCantidadCosechada} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <DetalleAcciones\r\n                                {...props.location.props}\r\n                            />\r\n                        </div>\r\n                        <Divider/>\r\n                        <div className=\"row\">\r\n                            {!props.location.props.plantaDelHistorial &&\r\n                                <div className={classes.rowBotonera}>\r\n                                    <BotoneraConfiguracionPlanta\r\n                                        inicioFloracion={props.location.props.inicioFloracion}\r\n                                        cosecharPlanta={cosecharPlanta}\r\n                                        eliminarPlanta={eliminarPlanta}\r\n                                    />\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <Divider/>\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\r\nimport * as firebase from 'firebase'\r\nimport {Accordion,Card} from 'react-bootstrap'\r\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\r\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color:theme.palette.primary.contrastText\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paperMain: {\r\n        backgroundColor: theme.palette.secondary.light,\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    paperDark: {\r\n        backgroundColor:theme.palette.primary.main,\r\n        borderRadius:'0'\r\n    },\r\n    edit:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    delete:{\r\n        color:theme.palette.error.main\r\n    },\r\n    expansionPanel:{\r\n        backgroundColor:'transparent'\r\n    },\r\n    button:{\r\n        color:theme.palette.primary.contrastText,\r\n    },\r\n    buttonText:{\r\n        color:theme.palette.secondary.contrastText,\r\n    },\r\n    expandIcon:{\r\n        color:theme.palette.primary.contrastText\r\n    },\r\n    listItemText:{\r\n        '& .MuiTypography-colorTextSecondary':{\r\n            color:theme.palette.primary.contrastText\r\n        }\r\n    }\r\n  }));\r\nexport const AccionDetallada=(props)=>{\r\n    const classes= useStyles()\r\n    let [show,setShow] = useState(false)\r\n    \r\n    const eliminarAccion= async()=>{\r\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\r\n    }\r\n    \r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setShow(true)\r\n        }, 100);\r\n    })\r\n    return(\r\n        <div className=\"row\">\r\n            <div className=\"col-10 offset-1\">\r\n                <Grow in={true}\r\n                        {...(true ? { timeout: 1500 } : {})}>\r\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\r\n                        <Paper elevation={4} className={classes.paperDark}>\r\n                            <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\r\n                            aria-controls=\"panel1bh-content\"\r\n                            id=\"panel1bh-header\"\r\n                            >\r\n                                <Typography className={classes.heading}>{props.accion.fecha}</Typography>\r\n                            </ExpansionPanelSummary>\r\n                        </Paper>\r\n                        <Paper elevation={4} className={classes.paperMain}>\r\n                            <ExpansionPanelDetails>\r\n                                <div className=\"container\">\r\n                                    {props.accion.agua &&\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.agua} L. De Agua \r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.tipoDeRiego &&\r\n                                        <div className=\"row my-2\">\r\n                                            <div className=\"col-12 text-center\">\r\n                                                <Typography variant='h5'>\r\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.tipoDePoda &&\r\n                                        <div className=\"col text-left\">\r\n                                            <Typography variant='h5'>\r\n                                                Poda {props.accion.tipoDePoda}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    }\r\n                                    {props.accion.volumenMaceta &&\r\n                                        <div className=\"col text-left\">\r\n                                            <Typography variant='h5'>\r\n                                                Nuevo Volumen {props.accion.volumenMaceta} Lt\r\n                                            </Typography>\r\n                                        </div>\r\n                                    }\r\n                                    <Divider/>\r\n                                    {props.tipoDeAccion!=='podas' && props.tipoDeAccion!=='transplantes' && \r\n                                        <div className=\"row my-2\">\r\n                                            {props.accion.aditivos?\r\n                                                <>\r\n                                                    <div className=\"col-12 text-left\">\r\n                                                        <Typography variant='h5'>\r\n                                                            Aditivos Usados\r\n                                                        </Typography>\r\n                                                    </div>\r\n                                                    <List>\r\n                                                        {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\r\n                                                            <>\r\n                                                                <ListItem>\r\n                                                                    <ListItemText\r\n                                                                        className={classes.listItemText}\r\n                                                                        primary={aditivo}\r\n                                                                        secondary={props.accion.aditivos[aditivo]+' ml'} \r\n                                                                    />\r\n                                                                </ListItem>\r\n                                                            </>\r\n                                                        ))}\r\n                                                    </List>\r\n                                                </>\r\n                                                :\r\n                                                <div className=\"col-12 text-center\">\r\n                                                    <Typography>\r\n                                                        No se utilizaron Aditivos\r\n                                                    </Typography>\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                    <Divider/>\r\n                                    {!props.plantaDelHistorial &&\r\n                                        <div className=\"row my-2 justify-content-around\">\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                >   \r\n                                                        <EditOutlined className={classes.edit}/>\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' className={classes.edit} gutterBottom>\r\n                                                    Editar\r\n                                                </Typography>\r\n                                            </div>\r\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                                <IconButton\r\n                                                    variant=\"contained\"\r\n                                                    color=\"inherit\"\r\n                                                    onClick={e=>{eliminarAccion()}}\r\n                                                >\r\n                                                        <DeleteOutline className={classes.delete}/>\r\n                                                </IconButton>\r\n                                                <Typography variant='caption' className={classes.delete} gutterBottom>\r\n                                                    Eliminar\r\n                                                </Typography>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </ExpansionPanelDetails>\r\n                        </Paper>\r\n                    </ExpansionPanel>\r\n                </Grow>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {makeStyles,Paper} from '@material-ui/core';\r\nimport {Layout} from './Layout'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nexport const PlantaRiegos =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props} user={props.location.props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.location.props.riegos?\r\n                                Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\r\n                                    <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Riego')\r\n                                                }}>Riegala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nexport const PlantaPodas =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props} user={props.location.props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                        {props.location.props.podas?\r\n                            Object.keys(props.location.props.podas).reverse().map((id,i)=>(\r\n                                <AccionDetallada user={props.location.props.user} index={i}  plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} handleChange={handleChange} accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                <div className=\"row justify-content-center mt-4\">\r\n                                    <div className=\"col-auto\">\r\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\r\n                                    </div>\r\n                                </div>\r\n                                {!props.location.props.plantaDelHistorial &&\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                            props.history.push('/Poda')\r\n                                        }}>Podala Ahora!</button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n                            </>\r\n                        }\r\n                    </div>        \r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React , {useState} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nexport const PlantaFumigaciones =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props} user={props.location.props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.location.props.fumigaciones?\r\n                                Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\r\n                                    <AccionDetallada handleChange={handleChange} index={i} plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                                    ))\r\n                                    :\r\n                                    <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Insecticida')\r\n                                                }}>Fumigala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nexport const NotFound = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>la pagina no se encuentra disponible</h1>\r\n            <Link to='/'>\r\n                Vuelve al Home\r\n            </Link>\r\n        </div>\r\n    )\r\n}","import React , {Component} from 'react'\r\nimport {Row,Col,Container} from 'react-bootstrap'\r\nimport {TextField,makeStyles,InputAdornment} from '@material-ui/core'\r\n\r\nconst useStyles= makeStyles(theme=>({\r\n    radio:{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        '& .MuiIconButton-label':{\r\n            color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n        }\r\n    },\r\n    textLight:{\r\n        color:theme.palette.primary.contrastText\r\n    }\r\n}))\r\n\r\nexport const ElegirNuevaMaceta=(props)=>{\r\n    const classes = useStyles()\r\n    return(\r\n        <Container className='pt-4'>\r\n            <Row>\r\n                <Col sm={{span:8,offset:2}}>\r\n                    <div className=\"row my-2 justify-content-center\">\r\n                        <div className=\"col-4\">\r\n                            <TextField id=\"outlined-basic\" \r\n                            value={props.nuevoVolumen}\r\n                            className={classes.radio}\r\n                            color='primary'\r\n                            type='number'\r\n                            InputProps={{\r\n                                startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    Lt\r\n                                </InputAdornment>\r\n                                ),\r\n                            }}\r\n                            variant=\"outlined\"\r\n                                onChange={e=>{\r\n                                    props.handleChange(e.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {Layout} from './Layout'\r\nimport {connect } from 'react-redux'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nimport {ElegirPlantaAccion} from '../components/ElegirPlantaAccion'\r\nimport {ElegirNuevaMaceta} from '../components/ElegirNuevaMaceta'\r\nimport {ResumenAccion} from '../components/ResumenAccion'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\n class Transplante extends Component{\r\n    state={\r\n        tipoDeRiego:undefined,\r\n        cantidadDeAgua:undefined,\r\n        plantas: [],\r\n        expanded:'panel1',\r\n        nuevaMaceta:undefined,\r\n    }\r\n    seleccionarPlanta=(index)=>{\r\n        let newSelectedPlants=this.state.plantas\r\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\r\n        this.setState({\r\n            plantas:newSelectedPlants\r\n        })\r\n    }\r\n    componentDidMount(){\r\n        let plantas=[]\r\n        if(this.props.plantas){\r\n            Object.keys(this.props.plantas).map(key=>(\r\n                plantas.push(\r\n                    {\r\n                    selected:false,\r\n                    nombre:this.props.plantas[key].nombre,\r\n                    id:key\r\n                    }\r\n                )\r\n            ))\r\n        }\r\n        this.setState({\r\n            plantas:plantas\r\n        })\r\n    }\r\n    confirmarAccion=()=>{\r\n        this.transplantar()\r\n        this.props.history.push('/')\r\n    }\r\n    setExpansionExpanded=(panel)=>{\r\n        this.setState({expanded:panel})\r\n    }\r\n    setNuevaMaceta=(nuevoVolumen)=>{\r\n        this.setState({nuevaMaceta:nuevoVolumen})\r\n    }\r\n    transplantar=()=>{\r\n        this.state.plantas.map(planta=>{\r\n            if(planta.selected){\r\n                this.guardarTransplanteDB(planta.id,this.state.nuevaMaceta)\r\n            }\r\n            return null\r\n        })\r\n    }\r\n    guardarTransplanteDB= async (idPlanta,nuevoVolumen)=>{\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('transplantes').push({\r\n            volumenMaceta:nuevoVolumen,\r\n            fecha:moment().format('LLL'),\r\n        })\r\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).update({\r\n            volumenMaceta:nuevoVolumen,\r\n        })\r\n    }\r\n    render(){\r\n    let selectedPlants=[]\r\n    if(this.state.plantas){\r\n        this.state.plantas.map(planta=>(\r\n            planta.selected?\r\n                selectedPlants.push(planta.nombre)\r\n                :\r\n                null\r\n        ))\r\n    }\r\n        return(\r\n        <Layout history={this.props.history} page='Transplante' user={this.props.user}>\r\n            <div className=\"container-fluid overflow-auto h-100\">\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-12 px-0\">\r\n                        <StepperAccion \r\n                            step1='Plantas'\r\n                            step2='Nuevo Volumen de tierra'\r\n                            selectedPlants={selectedPlants}\r\n                            confirmarAccion={this.confirmarAccion}\r\n                            nuevaMaceta={this.state.nuevaMaceta}\r\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} nuevaMaceta={this.state.nuevaMaceta}/>}\r\n                            tipoDeAccion='Transplante'\r\n                            steps={[\r\n                                    {\r\n                                    title:'Plantas',\r\n                                    content:(\r\n                                        <ElegirPlantaAccion\r\n                                            seleccionarPlanta={this.seleccionarPlanta}\r\n                                            plantas={this.state.plantas}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                                    {\r\n                                    title:'Nuevo Volumen de tierra',\r\n                                    content:(\r\n                                        <ElegirNuevaMaceta\r\n                                            handleChange={this.setNuevaMaceta}\r\n                                            nuevoVolumen={this.state.nuevaMaceta}\r\n                                            setExpansionExpanded={this.setExpansionExpanded}\r\n                                            expanded={this.state.expanded}\r\n                                        />\r\n                                    )},\r\n                            ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n        )\r\n    }\r\n }\r\n const mapStateToProps=state=>({\r\n     user:state.user.uid,\r\n     plantas:state.data.plantas,\r\n\r\n })\r\n export default connect(mapStateToProps,null)(Transplante)","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    input:{\r\n        marginTop:theme.spacing(1),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    inputWrapper:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        marginTop:theme.spacing(1)\r\n    }\r\n}))\r\n\r\n\r\nexport const FormCaracteristicasNuevaPlanta =({nombre,setNombre,genetica,setGenetica,volumenMaceta,setVolumenMaceta,etapa,setInicioGerminacion,getFullDate,setEtapa})=>{\r\n    \r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <form className={classes.form}>\r\n                <TextField label=\"Nombre\" className={classes.input} value={nombre} onChange={e=>{setNombre(e.target.value)}}/>\r\n                <TextField label=\"Genetica\"  className={classes.input} value={genetica} onChange={e=>{setGenetica(e.target.value)}}/>\r\n                <TextField \r\n                    label=\"Volumen De Maceta\" \r\n                    className={classes.input}\r\n                    value={volumenMaceta} \r\n                    type='number'  \r\n                    InputProps={{\r\n                        startAdornment: (\r\n                        <InputAdornment position=\"start\">\r\n                            Lt\r\n                        </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={e=>{setVolumenMaceta(e.target.value)}}/>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\r\n                    <Select\r\n                        labelId=\"etapa-select-label\"\r\n                        id=\"etapa-select\"\r\n                        value={etapa}\r\n                        onChange={e=>{\r\n                            const etapa = e.target.value\r\n                            if(etapa==='Vegetativo'){\r\n                                setInicioGerminacion(getFullDate())\r\n                                setEtapa(e.target.value)\r\n                            }\r\n                            else{\r\n                                setInicioGerminacion(undefined)\r\n                                setEtapa(e.target.value)}\r\n                            }\r\n                        }\r\n                    >\r\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\r\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button,InputAdornment} from '@material-ui/core'\r\nimport {Alert,AlertTitle} from '@material-ui/lab'\r\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(2),\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    input:{\r\n        marginTop:theme.spacing(1),\r\n        marginBottom:theme.spacing(1),\r\n    },\r\n    inputWrapper:{\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'space-around',\r\n        marginTop:theme.spacing(3)\r\n    }\r\n}))\r\nexport const FormEtapaNuevaPlanta =({getFullDate,periodoArmario,inicioGerminacion,setInicioGerminacion,inicioVegetativo,setInicioVegetativo,inicioFloracion,setInicioFloracion,etapa})=>{\r\n    const classes = useStyles()\r\n    const date = getFullDate()\r\n    const renderInputs=()=>{\r\n        switch (etapa) {\r\n            case 'Vegetativo':\r\n                if(periodoArmario===etapa ){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <>\r\n                            <Alert variant='outlined' severity=\"warning\">\r\n                                <AlertTitle>Si ingresa esta planta al armario comenzara su periodo de floracion</AlertTitle>\r\n                            </Alert>\r\n                            <div className={classes.inputWrapper}> \r\n                                <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                            </div>\r\n                        </>\r\n                    )\r\n                }\r\n                break;\r\n            case 'Floracion':\r\n                if(periodoArmario===etapa){\r\n                    return(\r\n                        <div className={classes.inputWrapper}>\r\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\r\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\r\n                            <TextField label=\"Incio Floracion\" value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\r\n                        </div>\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <Alert variant='outlined' severity=\"error\">\r\n                            <AlertTitle>No es recomendable introducir una planta en periodo de floracion en un armario con periodo Vegetativo</AlertTitle>\r\n                        </Alert>\r\n                    )\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return(\r\n        <div className={classes.root}>\r\n            <form className={classes.form}>\r\n                {renderInputs()}\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport {FormCaracteristicasNuevaPlanta} from '../components/FormCaracteristicasNuevaPlanta'\r\nimport {FormEtapaNuevaPlanta} from '../components/FormEtapaNuevaPlanta'\r\nimport addFile from '../images/addFile.svg'\r\nimport {makeStyles, Paper} from '@material-ui/core'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nimport {ResumenNuevaPlanta} from '../components/ResumenNuevaPlanta'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\nconst getFullDate=()=>{\r\n    const date = new Date\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth()+1\r\n    month = month<10?month=`0${month}`:month\r\n    const days = date.getDate()\r\n    return`${days}/${month}/${year}`\r\n}\r\nconst  NuevaPlanta=(props)=>{\r\n    const classes = useStyles()\r\n    let [nombre,setNombre]=useState(undefined)\r\n    let [genetica,setGenetica]=useState(undefined)\r\n    let [etapa,setEtapa]=useState(undefined)\r\n    let [volumenMaceta,setVolumenMaceta]= useState(undefined)\r\n    let [inicioGerminacion,setInicioGerminacion]= useState(getFullDate())\r\n    let [inicioVegetativo,setInicioVegetativo]= useState(undefined)\r\n    let [inicioFloracion,setInicioFloracion]= useState(undefined)\r\n    const guardarNuevaPlantaDB= async ()=>{\r\n        await database().ref().child(props.user).child('plantas').push({\r\n            nombre:nombre,\r\n            genetica:genetica?genetica:'Desconocida',\r\n            volumenMaceta:volumenMaceta?volumenMaceta:null,\r\n            nacimiento:inicioGerminacion?inicioGerminacion:null,\r\n            inicioVegetativo:inicioVegetativo?inicioVegetativo:null,\r\n            inicioFloracion:inicioFloracion?inicioFloracion:null\r\n        })\r\n        props.history.replace('/')\r\n    }\r\n    return(\r\n        <Layout history={props.history} page='Nueva Planta' user={props.user}>\r\n            <StepperAccion\r\n                tipoDeAccion='Nueva Planta'\r\n                confirmarAccion={guardarNuevaPlantaDB}\r\n                etapa={etapa}\r\n                steps={[\r\n                    {\r\n                        title:'Caracteristicas',\r\n                        content:(\r\n                            <FormCaracteristicasNuevaPlanta \r\n                                nombre={nombre} \r\n                                genetica={genetica} \r\n                                etapa={etapa}\r\n                                setNombre={setNombre}\r\n                                setGenetica={setGenetica} \r\n                                setEtapa={setEtapa}\r\n                                volumenMaceta={volumenMaceta}\r\n                                setVolumenMaceta={setVolumenMaceta}\r\n                                periodoArmario={props.periodo}\r\n                                getFullDate={getFullDate}\r\n                                setInicioGerminacion={setInicioGerminacion}\r\n                            />\r\n                        )\r\n                    },\r\n                    {\r\n                        title:'Inicio de Etapas',\r\n                        content:(\r\n                            <FormEtapaNuevaPlanta\r\n                                inicioGerminacion={inicioGerminacion}\r\n                                inicioVegetativo={inicioVegetativo}\r\n                                inicioFloracion={inicioFloracion}\r\n                                setInicioGerminacion={setInicioGerminacion}\r\n                                setInicioVegetativo={setInicioVegetativo}\r\n                                setInicioFloracion={setInicioFloracion}\r\n                                etapa={etapa}\r\n                                getFullDate={getFullDate}\r\n                                periodoArmario={props.periodo}\r\n                            />\r\n                        )\r\n                    },\r\n                ]}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    periodo:state.data.periodo\r\n})\r\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles,Paper,List,ListItem,ListItemText } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  root:{\r\n      margin:'0'\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n    color:theme.palette.secondary.contrastText,\r\n  },\r\n  paper:{\r\n    backgroundColor:theme.palette.type==='dark'&&theme.palette.secondary.light,\r\n    color:theme.palette.secondary.contrastText,\r\n    padding: theme.spacing(1)\r\n},\r\ncontainerPlantas:{\r\n    textAlign:'left',\r\n    paddingLeft:theme.spacing(2),\r\n    paddingTop:theme.spacing(2)\r\n},\r\nlistItemText:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    '& .MuiTypography-colorTextSecondary':{\r\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n    },\r\n},\r\ntitle:{\r\n    color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.light,\r\n}\r\n}));\r\n\r\nexport const ResumenNuevaPlanta=({})=>{\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n        <List>\r\n            <ListItem>\r\n                <ListItemText className={classes.listItemText} primary='Tipo De Poda' />    \r\n            </ListItem>\r\n        </List>\r\n    </div>\r\n);\r\n}","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    firstPaper:{\r\n        width:'300px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop:theme.spacing(1),\r\n        padding:theme.spacing(4),\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(1),\r\n        width:'80%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivoCaracteristicas = ({updateState}) =>{\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.form}>\r\n                <TextField label=\"Nombre\"  onChange={e=>{\r\n                    updateState(e.target.value,'nombre')\r\n                }}/>\r\n                <TextField label=\"Marca\"  onChange={e=>{\r\n                    updateState(e.target.value,'marca')\r\n                }}/>\r\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\r\n                    updateState(e.target.value,'descripcion')\r\n                }}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\r\nimport {AddOutlined} from '@material-ui/icons'\r\nimport {database} from 'firebase'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center',\r\n        paddingTop:theme.spacing(2)\r\n    },\r\n    form:{\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginLeft:theme.spacing(1),\r\n        marginRight:theme.spacing(1)\r\n    },\r\n    firstPaper:{\r\n        width:'300px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        marginTop:theme.spacing(1),\r\n        padding:theme.spacing(4),\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    secondPaper:{\r\n        padding:theme.spacing(4),\r\n        marginTop:theme.spacing(1),\r\n        width:'80%',\r\n        backgroundColor:theme.palette.primary.main\r\n    },\r\n    dosisList:{\r\n        display:'flex',\r\n        flexWrap:'nowrap',\r\n        overflow:'auto',\r\n        width:'100%',\r\n        marginBottom:theme.spacing(1)\r\n    },\r\n    button:{\r\n        marginTop:theme.spacing(2),\r\n        marginBottom:theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport const FormNuevoAditivoDosificaciones = ({updateState}) =>{\r\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\r\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\r\n    const classes = useStyles()\r\n    return(\r\n        <div className={classes.root}>\r\n            <Button\r\n                variant='outlined'\r\n                color='#fff'\r\n                startIcon={<AddOutlined/>}\r\n                onClick={e=>{\r\n                    setCantidadDeDosis(cantidadDeDosis+=1)\r\n                }}\r\n            >\r\n                Agregar otra dosis\r\n            </Button>\r\n            <div className={classes.dosisList}>\r\n                {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\r\n                    <form className={classes.form}>\r\n                        <TextField label=\"Etapa\"  color='#fff' placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\r\n                            updateState(e.target.value,'etapa','dosis'+i)\r\n                        }}/>\r\n                        <TextField label=\"Cantidad\" type='number' color='#fff' onChange={e=>{\r\n                            updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\r\n                        }}/>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                id=\"demo-simple-select\"\r\n                                color='#fff'\r\n                                onChange={e=>{\r\n                                    updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'1'}>gr/L</MenuItem>\r\n                                <MenuItem value={'2'}>ml/L</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-label\"\r\n                                color='#fff'\r\n                                id=\"demo-simple-select\"\r\n                                onChange={e=>{\r\n                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\r\n                                }}\r\n                            >\r\n                                <MenuItem value={'Tierra'}>Tierra</MenuItem>\r\n                                <MenuItem value={'Foliar'}>Foliar</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useState} from 'react'\r\nimport {Layout} from './Layout'\r\nimport { connect } from 'react-redux'\r\nimport {database} from 'firebase'\r\nimport moment from 'moment'\r\nimport addFile from '../images/addFile.svg'\r\nimport { FormNuevoAditivoCaracteristicas } from '../components/FormNuevoAditivoCaracteristicas'\r\nimport { FormNuevoAditivoDosificaciones } from '../components/FormNuevoAditivoDosificaciones'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nimport {StepperAccion} from '../components/StepperAccion'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'space-around',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0'\r\n    }\r\n}))\r\n\r\n\r\nconst NuevoAditivo=(props)=>{\r\n    const [inputs,setInputs] = useState({})\r\n    const [dosis,setDosis] = useState({})\r\n    const classes = useStyles()\r\n    const agregarAditivo= async ()=>{\r\n        const {Riego,Foliar}=ClasificarDosis()\r\n        const newAditivo= {\r\n            nombre:inputs.nombre,\r\n            marca:inputs.marca,\r\n            descripcion:inputs.descripcion,\r\n            dosis:{\r\n                Tierra:Riego,\r\n                Foliar:Foliar\r\n            }\r\n        }\r\n        let newAditivos =[]\r\n        if(props.location.props.tipoDeAditivo==='Fertilizantes'){\r\n            if(props.fertilizantes){\r\n                newAditivos=props.fertilizantes\r\n            } \r\n        }\r\n        else{\r\n            if(props.insecticidas){\r\n                newAditivos=props.insecticidas\r\n            }\r\n        }\r\n        newAditivos.push(newAditivo)\r\n        switch (props.location.props.tipoDeAditivo) {\r\n            case 'Fertilizantes':\r\n                await database().ref().child(props.user).update({\r\n                    fertilizantes:newAditivos\r\n                })\r\n                props.history.goBack()\r\n                break;\r\n            case 'Insecticidas':\r\n                await database().ref().child(props.user).update({\r\n                    insecticidas:newAditivos\r\n                })\r\n                props.history.goBack()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const updateState=(valor,nombre,indexDosis)=>{\r\n        if(indexDosis){\r\n            setDosis({\r\n                ...dosis,\r\n                [indexDosis]:{\r\n                    ...dosis[indexDosis],\r\n                    [nombre]:valor\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            setInputs({\r\n                ...inputs,\r\n                [nombre]:valor\r\n            })\r\n        }\r\n    }\r\n    const ClasificarDosis = ()=>{\r\n        let Riego={}\r\n        let Foliar={}\r\n        Object.keys(dosis).map(newDosis=>{\r\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\r\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\r\n                Foliar={\r\n                    ...Foliar,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n            else{\r\n                Riego={\r\n                    ...Riego,\r\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\r\n                }\r\n            }\r\n        })\r\n        return{Riego,Foliar}\r\n    }\r\n\r\n    if(!props.location.props){\r\n        return(\r\n            <Redirect to='Aplicables'/>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <Layout page='Nuevo Aditivo' user={props.user} history={props.history}>\r\n                <StepperAccion\r\n                confirmarAccion={agregarAditivo}\r\n                tipoDeAccion='Nuevo Aditivo'\r\n                steps={[\r\n                    {\r\n                        title:'Caracteristicas',\r\n                        content:(\r\n                            <FormNuevoAditivoCaracteristicas\r\n                                updateState={updateState}\r\n                            />\r\n                        )\r\n                    },\r\n                    {\r\n                        title:'Dosificaciones',\r\n                        content:(\r\n                            <FormNuevoAditivoDosificaciones\r\n                                updateState={updateState} \r\n                            />\r\n                        )\r\n                    },\r\n                    ]}\r\n                />\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps=state=>({\r\n    user:state.user.uid,\r\n    fertilizantes:state.data.fertilizantes,\r\n    insecticidas:state.data.insecticidas\r\n})\r\nexport default connect(mapStateToProps,null)(NuevoAditivo)","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './components/styles/home.css'\r\nimport {HashRouter,Route,Switch} from 'react-router-dom'\r\nimport Armario from './Pages/Armario'\r\nimport Riego from './Pages/Riego'\r\nimport Insecticida from './Pages/Insecticida'\r\nimport Aplicables from './Pages/Aplicables'\r\nimport {SignInPage} from './Pages/SignIn'\r\nimport {LogInPage} from './Pages/Login'\r\nimport Poda from './Pages/Poda'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducers'\r\nimport {createStore} from 'redux'\r\nimport * as firebase from 'firebase'\r\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\r\nimport Configuracion from './Pages/Configuracion';\r\nimport Historial from './Pages/Historial';\r\nimport {Planta} from './Pages/Planta'\r\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\r\nimport {PlantaPodas} from './Pages/PlantaPodas'\r\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\r\nimport {NotFound} from './Pages/NotFound'\r\nimport Transplante from './Pages/Transplante'\r\nimport NuevaPlanta from './Pages/NuevaPlanta'\r\nimport NuevoAditivo from './Pages/NuevoAditivo'\r\nimport {PlantaTransplantes} from './Pages/PlantaTransplantes'\r\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\r\n\r\nlet store \r\nlet data\r\nconst config = {\r\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\r\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\r\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\r\n  projectId: \"asistente-de-cultivo\",\r\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\r\n  messagingSenderId: \"89543318439\",\r\n  appId: \"1:89543318439:web:ad0692faa495a539\"\r\n}\r\nfirebase.initializeApp(config)\r\nclass App extends Component {\r\n  state={\r\n    loading:true,\r\n    theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'light'\r\n  }\r\n  async componentDidMount(){\r\n    firebase.auth().onAuthStateChanged(async user=>{\r\n      if(user){\r\n        const databaseRef = await firebase.database().ref().child(user.uid)\r\n        databaseRef.on('value', snapshot=>{\r\n          data= snapshot.val()\r\n          store=createStore(reducer, {user:user,data:data})\r\n          this.setState({store,user:user,loading:false})\r\n        })\r\n      }\r\n      else{\r\n        this.setState({user:null,loading:false})\r\n      }\r\n    })\r\n    const theme = localStorage.getItem('theme')\r\n    console.log(theme)\r\n    if(!theme){\r\n        localStorage.setItem('theme','light')\r\n    }\r\n  }\r\n  \r\nsetTheme=theme=>{\r\n  console.log(theme)\r\n  this.setState({theme:theme})\r\n}\r\n  render(){\r\n    const themeProvider = createMuiTheme({\r\n      palette: {\r\n          white:'#fff',\r\n          primary: {\r\n          light: '#48a999',\r\n          main: '#00796b',\r\n          dark: '#004c40',\r\n          contrastText: '#fff',\r\n          },\r\n          secondary: {\r\n          light: '#4f5b62',\r\n          main: '#263238',\r\n          dark: '#000a12',\r\n          contrastText: '#000',\r\n          },\r\n          danger:'#c62828',\r\n          type:this.state.theme\r\n      },\r\n  });\r\n    if(this.state.loading){\r\n      return(\r\n        <div className=\"App justify-content-center\">\r\n          <ThemeProvider theme={themeProvider}>\r\n              <PantallaDeCarga/>\r\n          </ThemeProvider>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      if(this.state.user){\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n              <Provider store={this.state.store}>\r\n                <HashRouter>\r\n                  <Switch>\r\n                    <Route exact path='/' component={Armario}/>\r\n                    <Route exact path='/Riego' component={Riego}/>\r\n                    <Route exact path='/Poda' component={Poda}/>\r\n                    <Route exact path='/Transplante' component={Transplante}/>\r\n                    <Route exact path='/Insecticida' component={Insecticida}/>\r\n                    <Route exact path='/Aplicables' component={Aplicables}/>\r\n                    <Route exact path='/Configuracion' render={(props) => <Configuracion {...props} setTheme={this.setTheme} />}/>\r\n                    <Route exact path='/Historial' component={Historial}/>\r\n                    <Route exact path='/Planta' component={Planta}/>\r\n                    <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\r\n                    <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\r\n                    <Route exact path='/Historial/Planta' component={Planta}/>\r\n                    <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\r\n                    <Route exact path='/Planta/Podas' component={PlantaPodas}/>\r\n                    <Route exact path='/Planta/Transplantes' component={PlantaTransplantes}/>\r\n                    <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                    <Route exact path='/Historial/Planta/Riegos' component={PlantaRiegos}/>\r\n                    <Route exact path='/Historial/Planta/Podas' component={PlantaPodas}/>\r\n                    <Route exact path='/Historial/Planta/Transplantes' component={PlantaTransplantes}/>\r\n                    <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaFumigaciones}/>\r\n                    <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\r\n                  </Switch>\r\n                </HashRouter>\r\n              </Provider>\r\n            </ThemeProvider>\r\n        )\r\n      }\r\n      else{\r\n        return (\r\n          <ThemeProvider theme={themeProvider}>\r\n            <HashRouter>\r\n              <Switch>\r\n                <Route exact path='/' component={SignInPage}/>\r\n                <Route exact path='/Login' component={LogInPage}/>\r\n                <Route  component={NotFound}/>\r\n              </Switch>\r\n            </HashRouter>\r\n          </ThemeProvider>\r\n        )\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React , {useState,useEffect} from 'react'\r\nimport {AccionDetallada} from '../components/AccionDetallada'\r\nimport {Accordion} from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\nimport {Layout} from './Layout'\r\nimport {makeStyles,Paper} from '@material-ui/core'\r\nconst useStyles = makeStyles(theme=>({\r\n    root:{\r\n        height:'100%',\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        justifyContent:'flex-start',\r\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\r\n        borderRadius:'0',\r\n        overflow:'auto'\r\n    }\r\n}))\r\nexport const PlantaTransplantes =(props)=>{\r\n    let [expanded,setExpanded]= useState(false)\r\n\r\n    const handleChange = panel => (event, isExpanded) => {\r\n        setExpanded(isExpanded ? panel : false);\r\n    };\r\n    const classes = useStyles()\r\n    return(\r\n        props.location.props?\r\n            <Layout history={props.history} page={props.location.props.nombre+'/Transplantes'} planta={props.location.props} user={props.location.props.user}>\r\n                <Paper elevation={3} className={classes.root}>\r\n                    <div className=\"container-fluid overflow-auto pt-4\">\r\n                            {props.location.props.transplantes?\r\n                                Object.keys(props.location.props.transplantes).reverse().map((id,i)=>(\r\n                                    <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.transplantes[id]} tipoDeAccion='transplantes' idPlanta={props.location.props.id} id={id} key={id}/>\r\n                                ))\r\n                                :\r\n                                <>\r\n                                    <div className=\"row justify-content-center mt-4\">\r\n                                        <div className=\"col-auto\">\r\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\r\n                                        </div>\r\n                                    </div>\r\n                                    {!props.location.props.plantaDelHistorial &&\r\n                                        <div className=\"row justify-content-center mt-4\">\r\n                                            <div className=\"col-auto\">\r\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\r\n                                                    props.history.push('/Transplante')\r\n                                                }}>Transplatala Ahora!</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </>\r\n                            }\r\n                    </div>\r\n                </Paper>\r\n            </Layout>\r\n            :\r\n            <Redirect to='/'/>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <App />\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}