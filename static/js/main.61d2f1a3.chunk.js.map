{"version":3,"sources":["alerts/AlertEliminarPlanta.jsx","alert-components/AlertNavBar.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","alerts/AlertNuevaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/BarraDeLuz.jsx","alerts/AlertConfiguracionArmario.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alert-components/InputCambiarHorario.jsx","alerts/AlertCambiarFinal.jsx","alerts/AlertCambiarInicio.jsx","alerts/AlertCambiarPeriodo.jsx","Pages/styles/ArmarioStyle.jsx","components/styles/NavbarStyle.jsx","components/AccionesRapidas.jsx","components/Navbar.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/NavBarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","Pages/SignIn.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","Pages/Planta.jsx","alert-components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","alert-components/BreadcrumbPlanta.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","serviceWorker.js","index.js","images/apple cookies.jpg","images/sea of green.jpg"],"names":["Component","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","dark","padding","spacing","TarjetaPlanta","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","Grow","in","timeout","Paper","elevation","to","pathname","src","fotoPlanta","alt","nombre","AlertNuevaPlanta","type","id","faCheckCircle","document","getElementById","value","genetica","guardarNuevaPlantaDB","faTimesCircle","CarouselPlantas","a","database","ref","child","user","push","format","alertNuevaPlanta","confirmAlert","customUI","Typography","plantas","Object","keys","map","key","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","history","Button","variant","color","faPlusCircle","IconButton","size","AddCircleOutline","connect","state","data","text","contrastText","FechaYHora","fecha","setFecha","setInterval","marginTop","BarraDeLuz","faltante","transcurrido","descanso","cicloLuminico","periodo","horaDeInicio","horaDeFinal","role","aria-valuenow","aria-valuemin","aria-valuemax","AlertConfiguracionArmario","name","alertCambiarPeriodo","alertCambiarInicio","alertCambiarFinal","AlertBotoneraConfirmacion","cambiarHora","alertConfiguracion","InputCambiarHorario","autoFocus","min","max","AlertCambiarFinal","cambiarHoraDeFinal","cambiarHoraDeInicio","AlertCambiarPeriodo","nuevoPeriodo","cambiarStatePeriodo","cambioDePeriodo","slideLeftKeyframes","keyframes","slideLeft","css","Navbar","nav","Hr","hr","AccionesRapidas","signOut","auth","faCogs","closeNavbar","root","flexGrow","menuButton","marginRight","drawer","maxWidth","height","light","appBar","main","Layout","page","children","planta","menuOpened","setMenuOpened","redirect","setRedirect","AppBar","position","Toolbar","edge","location","replace","goBack","aria-label","ArrowBackRounded","AccountCircle","Menu","Drawer","anchor","open","CardMedia","component","image","foto","List","ListItem","button","ListItemIcon","HomeOutlined","ListItemText","faTint","faCut","faBug","NatureOutlined","Armario","selectedTab","setState","AlertCambiarInicio","update","horas","parseInt","hora","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","width","selectEmpty","alert","alignItems","checkbox","secondary","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","i","FormControlLabel","control","Checkbox","selected","onChange","label","Alert","severity","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","display","transform","fontSize","pos","background","ResumenAccion","tipoDePoda","Grid","item","xs","container","justify","gutterBottom","parseFloat","slice","indexOf","toFixed","flexDirection","justifyContent","resetContainer","paperSecondary","paddingBottom","paddingTop","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","regar","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","FormNuevoAditivo","updateState","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","dosisList","dosificacion","j","console","log","md","lg","Accordion","defaultActiveKey","Toggle","as","Header","eventKey","Collapse","Body","Group","Label","Control","rows","vacio","placeholder","defaultValue","InputGroup","Prepend","Array","fill","AlertNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","valor","indexDosis","heading","typography","pxToRem","secondaryHeading","paperMain","paperDark","expansionPanel","textShadow","buttonText","expandIcon","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","aplicacion","k","alertEditarAditivo","EditOutlined","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","Aplicables","PantallaDeCarga","faCannabis","overflow","grey","objectFit","avatar","form","borderColor","submit","border","link","SignInPage","inputUser","setInputUser","loading","setloading","inputPassword","setInputPassword","userError","setUserError","passwordError","setPasswordError","login","signInWithEmailAndPassword","catch","error","code","CssBaseline","Avatar","noValidate","required","fullWidth","helperText","Link","href","mt","LogInPage","signin","createUserWithEmailAndPassword","then","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","Configuracion","media","cardHeader","CardHistorial","fechaDeCorte","CardHeader","subheader","Historial","historial","plantaDelHistorial","flexWrap","gridList","titleBar","listRoot","backgroundImage","listItem","DetallePlanta","tileData","GridList","cols","tile","GridListTile","Divider","cantidadDeGramos","store","textDecoration","outline","DetalleAcciones","ButtonGroup","endIcon","InvertColorsOutlined","BugReportOutlined","buttonDanger","danger","buttonTextDanger","backdrop","zIndex","Planta","inputCantidad","setInputCantidad","cosecharPlanta","remove","guardarCantidadCosechada","CheckCircle","alertEliminarPlanta","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createMuiTheme","white","App","onAuthStateChanged","on","snapshot","val","createStore","ThemeProvider","exact","path","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.61d2f1a3.chunk.js","sourcesContent":["import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {useState,useEffect} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nimport {Grow} from '@material-ui/core' \nimport {makeStyles} from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor:theme.palette.primary.dark,\n      padding:theme.spacing(1)\n    },\n  }));\n\nexport const TarjetaPlanta=(props)=>{\n    let [edad,setEdad]=useState(undefined)\n    const alertEliminarPlanta=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertEliminarPlanta\n                        user={props.user}\n                        nombre={props.nombre}\n                        eliminarPlanta={eliminarPlanta}\n                        onClose={onClose}\n                    />\n                </div>\n            )\n        }\n    })\n    const alertCambiarCiclo=()=>confirmAlert({\n        customUI : ({onClose}) =>{\n            return(\n                <div className=\"custom-ui\">\n                    <AlertCambiarCiclo\n                        user={props.user}\n                        onClose={onClose}\n                        nombre={props.nombre}\n                    />\n                </div>\n            )\n        }\n    })\n    useEffect(()=>{\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\n    })\n    const eliminarPlanta=async ()=>{\n        await database().ref().child(props.user).child('plantas').child(props.id).remove()\n    }\n    const classes = useStyles()\n    return(\n        <div className=\"col-auto\">\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={6} className={classes.paper}>\n                    <Link className='text-white' to={{\n                        pathname:'/Planta',\n                        props:{\n                            ...props,\n                        }\n                    }}>\n                        <Card className=\"card\" >\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Overlay>\n                        </Card>\n                    </Link>\n                </Paper>\n            </Grow>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertNuevaPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n            <div className=\"row\">\n                <div className=\"col text-center\">\n                    <h1 className='text-white'>Agregar Una Nueva Planta al armario</h1>\n                </div>\n            </div>\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto form-group\">\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Nombre\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputNombre' />\n                    </div>\n                    <div className=\"form-group input-group\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Genetica\n                            </span>\n                        </div>\n                        <input type=\"text\" className='form-control' id='inputGenetica'/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faCheckCircle} \n                        className=\"continueIcon alert-icon\" \n                        onClick={e=>{\n                            const nombre = document.getElementById('inputNombre').value\n                            const genetica = document.getElementById('inputGenetica').value\n                            this.props.guardarNuevaPlantaDB(nombre,genetica)\n                            this.props.onClose()\n                        }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon \n                        icon={faTimesCircle} \n                        onClick={e=>{\n                            this.props.onClose()\n                        }}\n                        className='cancelIcon alert-icon'/>\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\nexport default AlertNuevaPlanta","import React, {Component} from 'react'\nimport {TarjetaPlanta} from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport AlertNuevaPlanta from '../alerts/AlertNuevaPlanta'\nimport {Button,Typography,Grow,IconButton} from '@material-ui/core'\nimport {AddCircleOutline} from '@material-ui/icons'\n\nclass CarouselPlantas extends Component{\n    guardarNuevaPlantaDB= async (nombre,genetica)=>{\n        await database().ref().child(this.props.user).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica,\n            nacimiento:moment().format('L')\n        })\n    }\n    alertNuevaPlanta=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui submodalOut'>\n                    <AlertNuevaPlanta\n                        onClose={onClose}\n                        guardarNuevaPlantaDB={this.guardarNuevaPlantaDB}\n                    />\n                </div>\n            );\n        }\n    })\n    render(){\n        return(\n            <div className=\"container h-100 mt-2 mb-2 justify-content-center d-flex flex-column \">\n                <div className=\"row mb-3\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <Typography>\n                                Plantas Dentro Del Armario\n                            </Typography>\n                        </Grow>\n                    </div>\n                </div>\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <TarjetaPlanta\n                                user={this.props.user}\n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <div className=\"col-12 text-center\">\n                            <h2 className='text-white'>Aun No hay plantas</h2>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.alertNuevaPlanta}>\n                                Agrega una! <FontAwesomeIcon icon={faPlusCircle} className='alert-icon ml-2'/>\n                            </Button>\n                        </div>\n                    }\n                    <div className=\"col-3\">\n                        <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                            <IconButton variant='container' size='large' onClick={this.alertNuevaPlanta} color='primary' >\n                                <AddCircleOutline />\n                            </IconButton>\n                        </Grow>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport {Typography,makeStyles} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    text:{\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const  FechaYHora=()=>{\n    const classes = useStyles()\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\n    useEffect(() => {\n        setInterval(() => {\n            setFecha(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\n        }, 1000);\n    });\n    return(\n        <Typography variant='h4' className={classes.text}>{fecha}</Typography>\n    )\n}","import React, {useEffect,useState} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {FechaYHora} from '../components/FechaYHora'\nimport './styles/table.css'\nimport {Paper,Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grow}from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop:theme.spacing(3),\n        padding:theme.spacing(2),\n        backgroundColor: theme.palette.primary.dark,\n    },\n    text:{\n        color: theme.palette.primary.contrastText\n    }\n}));\n\nexport const BarraDeLuz=(props)=>{\n    let [activo,setActivo]=useState(0)\n    let [faltante,setFaltante]=useState(undefined)\n    let [transcurrido,setTranscurrido]=useState(undefined)\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\n    let [descanso,setDesanso]=useState(undefined)\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\n    let [intervalo,setIntervalo]=useState(undefined)\n    \n    const actualizarEstado =(lamparaEncendida)=>{\n        let transcurrido = calcularTranscurrido(lamparaEncendida)\n        if(props.horaDeInicio>=props.horaDeFinal){\n            //console.log(moment(props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        else{\n            //console.log(-moment(props.horaDeInicio,'h').diff(moment(),'h'))\n        }\n        const cicloLuminico = actualizarCicloLuminico()\n        if(transcurrido.slice(0,2)>cicloLuminico){\n            transcurrido = transcurrido.slice(0,2)-cicloLuminico+transcurrido.slice(2)\n            setDesanso(true)\n        }\n        else{\n            setDesanso(false)\n        }\n        setTranscurrido(transcurrido)\n        setFaltante(calcularFaltante())\n        setCicloLuminico(cicloLuminico)\n        return [transcurrido,cicloLuminico]\n    }\n    const actualizarBarraDeProgreso=()=>{\n        const elements=actualizarEstado(calcularEstadoDeLampara())\n        const barra = document.getElementById('barraLuz')\n        barra.style.width=`${calcularEstadoDeBarra(elements[0],elements[1])}%`\n    }\n    const calcularEstadoDeLampara=()=>{\n        const hour = moment().format('LT').slice(0,2)\n        if(hour>=props.horaDeInicio && hour < props.horaDeFinal){\n            return true\n        }\n        else{\n            return false\n        }\n    }\n   /* useEffect(()=>{\n        actualizarBarraDeProgreso()\n        const interval = setInterval(() => {\n            actualizarBarraDeProgreso()\n        }, 1000);\n        setIntervalo(interval)\n    })\n    useEffect(()=>{\n        clearInterval(intervalo)\n    })*/\n    const actualizarCicloLuminico=()=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            return moment(props.horaDeFinal,'h').add(1,'days').diff(moment(props.horaDeInicio,'h'),'h')\n            \n        }\n        else{\n            return moment(props.horaDeFinal,'h').diff(moment(props.horaDeInicio,'h'),'h')\n        }\n    } \n    const calcularFaltante=()=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            //const dif = props.horaDeInicio-props.horaDeFinal\n            let time = undefined\n            descanso?\n                time = moment().diff(moment(props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            //const dif = props.horaDeInicio-props.horaDeFinal\n            let time = undefined\n            descanso?\n                time = -moment().diff(moment(props.horaDeInicio,'h'),'m')\n                :\n                time = moment().diff(moment(props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` faltante ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n        }\n    }\n    const calcularTranscurrido=(lamparaEncendida)=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            let time = undefined\n            descanso?\n                time = moment().diff(moment(props.hora,'h'),'m')\n                :\n                time = -moment().diff(moment(props.horaDeFinal,'h'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(`transcurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`\n        }\n        else{\n            let time = undefined\n            descanso?\n                time = moment().diff(moment(props.horaDeInicio,'h').add(1,'days'),'m')\n                :\n                time = moment().diff(moment(props.horaDeFinal,'h').add(1,'days'),'m')\n            const hours = parseInt(-time/60)\n            const minutes = -time%60\n            //console.log(` trasncurrido ${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes}`)\n            return `${hours<10? '0'+hours:hours}:${minutes<10? '0'+minutes:minutes} `\n    }\n}\n    const cambiarEstadoDeLampara=()=>{\n        setLampraEncendida(!lamparaEncendida)\n    }\n    const calcularEstadoDeBarra=(transcurrido, cicloLuminico)=>{\n        if(props.horaDeFinal<=props.horaDeInicio){\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n            \n        }\n        else{\n            const horas = parseInt(transcurrido.slice(0,transcurrido.indexOf(':')))\n            const minutos = horas*60 + parseInt(transcurrido.slice(transcurrido.indexOf(':')+1))\n            return minutos/(cicloLuminico*60)*100\n        }\n    }\n    const classes = useStyles()\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12 col-md-8 offset-md-2\">\n                    <Grow in={true}\n                    {...(true ? { timeout: 1500 } : {})}>\n                        <Paper elevation={3} className={classes.paper}>\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-auto ml-auto mr-auto\">\n                                        <FechaYHora/>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>Periodo {props.periodo}</Typography>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>Ciclo Luminico {cicloLuminico} Hs ({props.horaDeInicio}:00 - {props.horaDeFinal}:00)</Typography>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>\n                                            Transcurrido (Hs) {transcurrido}\n                                        </Typography>\n                                    </div>\n                                    <div className=\"col text-center\">\n                                        <Typography className={classes.text}>\n                                            Faltante (Hs) {faltante}\n                                        </Typography>\n                                    </div>\n                                </div>\n                                <div className=\"row\">\n                                    {descanso?\n                                        <div className=\"col text-center\">\n                                            <span className='badge badge-pill p-3 badge-dark'>\n                                                <Typography>\n                                                    Descansando...\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                        :\n                                        <div className=\"col text-center\">\n                                            <span className='badge badge-pill p-3 badge-success'>\n                                                <Typography>\n                                                    Creciendo...\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                    }\n                                </div>\n                                <div className=\"row mt-4\">\n                                    <div className=\"col-10 offset-1\">\n                                        <div className=\"progress\">\n                                            <div className={descanso?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </Paper>\n                    </Grow>\n                </div>\n            </div>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nclass AlertConfiguracionArmario extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    onClose={this.props.onClose}\n                    title={'Configuracion Del Armario'}\n                />\n                <div className=\"row mt-2\">\n                    <div className=\"col-6 offset-3\">\n                    <table className=\"table\">\n                            <tbody>\n                                <tr>\n                                    <td className='text-white'>Periodo</td>\n                                    <td className='text-right text-white'>\n                                        <select name=\"\" id=\"\">\n                                            <option value=\"\">\n                                                {this.props.periodo}\n                                            </option>\n                                            <option value=\"\">\n                                                Germinacion\n                                            </option>\n                                            <option value=\"\">\n                                                Floracion\n                                            </option>\n                                        </select>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora de Inicio del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeInicio} Hs</td>\n                                </tr>\n                                <tr>\n                                    <td className='text-white'>Hora del Final Del Ciclo</td>\n                                    <td className='text-right text-white'>{this.props.horaDeFinal} Hs</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarPeriodo()\n                        }}>Cambiar Periodo</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarInicio()\n                        }}>Cambiar Hora de Inicio</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-success' onClick={e=>{\n                            this.props.alertCambiarFinal()\n                        }}>Cambiar Hora de Final</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfiguracionArmario","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React from 'react'\n\nconst InputCambiarHorario = ()=>{\n    return(\n        <div className=\"row justify-content-center mt-4\">\n            <div className=\"col-2\">\n                <div className=\"input-group form-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Hora\n                        </span>\n                    </div>\n                    <input autoFocus type=\"number\" min='0' max='24' id=\"inputHoras\" className='form-control'/>\n                </div>\n            </div>\n            <div className=\"col-2 \">\n                <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                        <span className=\"input-group-text\">\n                            Minutos\n                        </span>\n                    </div>\n                    <input type=\"number\" min='0' max='60' id=\"inputMinutos\" className='form-control'/>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default InputCambiarHorario","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeFinal}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport InputCambiarHorario from '../alert-components/InputCambiarHorario'\nclass AlertCambiarFinal extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Hora de Final Del Ciclo'\n                />\n                <InputCambiarHorario/>\n                <AlertBotoneraConfirmacion\n                    cambiarHora={this.props.cambiarHoraDeInicio}\n                    alertConfiguracion={this.props.alertConfiguracion}\n                />\n            </div>\n        )\n    }\n}\nexport default AlertCambiarFinal","import React, {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle,faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertCambiarPeriodo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar\n                    alertPlanta={this.props.alertConfiguracion}\n                    onClose={this.props.onClose}\n                    title='Cambiar Periodo del Armario'\n                />\n                <div className=\"row mt-4\">\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Germinacion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Germinacion')\n                        }}>Germinacion</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Vegetativo'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Vegetativo')\n                        }}>Vegetativo</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type='button' className={this.props.nuevoPeriodo==='Floracion'?'btn btn-success':'btn btn-outline-success'} onClick={e=>{\n                            this.props.cambiarStatePeriodo('Floracion')\n                        }}>Floracion</button>\n                    </div>\n                </div>\n                <div className=\"row justify-content-around\">\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                            this.props.cambioDePeriodo()\n                            this.props.alertConfiguracion()\n                        }}/>\n                    </div>\n                    <div className=\"col-auto\">\n                        <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                            this.props.alertConfiguracion()\n                        }} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarPeriodo","import styled from 'styled-components'\n\nexport const MenuButton = styled.div`\n    cursor:pointer;\n    font-size:2.5rem\n`","import styled, {keyframes,css} from 'styled-components'\n\n\nconst slideLeftKeyframes = keyframes`\n    from{\n        right:-25%;\n        background-color:rgb(34,153,84,0);\n    }\n    to{\n        right:0%;\n        background-color:rgb(34,153,84,0.98);\n    }\n`\nconst slideLeft = css`\n    animation: 1s ${slideLeftKeyframes} ease-in-out both;\n    z-index:1\n`\n\nexport const Navbar=styled.nav`\n    ${slideLeft};\n    position:absolute;\n    top:0;\n    right:-25%;\n    height:100%;\n    width:25%;\n`\nexport const Hr = styled.hr`\n    border-top:1px solid white\n`","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nconst AccionesRapidas=()=>{\n        return(\n            <div className=\"row d-flex flex-column justify-content-center\" role='group'>\n                <div className=\"col-auto text-center\">\n                    <small>Acciones</small>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Riego'>\n                        <button type='button' className=\"btn btn-outline-light\">Regar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Poda'>\n                        <button type='button' className=\"btn btn-outline-light\">Podar</button>\n                    </Link>\n                </div>\n                <div className=\"col-auto form-group\">\n                    <Link to='/Insecticida'>\n                        <button type='button' className=\"btn btn-outline-light\">Fumigar</button>\n                    </Link>\n                </div>\n            </div>\n        )\n    }\nexport default AccionesRapidas","import React, {Component} from 'react'\nimport {Navbar as Nav,Hr} from './styles/NavbarStyle'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes,faCogs } from '@fortawesome/free-solid-svg-icons'\nimport AccionesRapidas from '../components/AccionesRapidas'\nimport {connect} from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button} from 'react-bootstrap'\nimport {auth} from 'firebase'\nimport {Redirect} from 'react-router-dom'\nclass Navbar extends Component{\n    signOut=async ()=>{\n        await auth().signOut()\n        return <Redirect to='/'/>\n    }\n    render(){\n        return(\n            <Nav>\n                <div className=\"container h-100 d-flex flex-column justify-content-around\">\n                    <div className=\"row\">\n                        <div className=\"col text-left\">\n                            <FontAwesomeIcon icon={faCogs} className='alert-icon' onClick={e=>{\n                                this.props.alertConfiguracion()\n                            }}/>\n                        </div>\n                        <div className=\"col text-right\">\n                            <FontAwesomeIcon icon={faTimes} className='alert-icon' onClick={e=>{this.props.closeNavbar()}}/>\n                        </div>\n                    </div>\n                    <Hr/>\n                    {this.props.plantas?\n                        <AccionesRapidas/>\n                        :\n                        null\n                    }\n                    <Hr/>\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-auto\">\n                            <Link to='/Aplicables'>\n                                <button type='button' className='btn btn-light'>Aditivos</button>\n                            </Link>\n                        </div>\n                        <div className=\"col-auto\">\n                            <Link to='/Deficiencias-Carencias'>\n                                <button type='button' className='btn btn-light'>Deficiencias y Carencias</button>\n                            </Link>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant=\"danger\" onClick={e=>{this.signOut()}}>\n                                Cerrar Sesion\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </Nav>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        plantas:state.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Navbar)","import React , {useState} from 'react'\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\nimport {auth} from 'firebase'\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport foto from '../images/sea of green.jpg'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawer:{\n        maxWidth:'300px',\n        height:'100%',\n        backgroundColor: theme.palette.primary.light,\n    },\n    appBar:{\n        backgroundColor:theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    icon:{\n        color:theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n  }));\nexport const Layout=({page,children,history,planta})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n    let [redirect,setRedirect]=useState(false)\n    if(redirect){\n        return(\n            <Redirect to={{\n                pathname:'/Planta',\n                props:{...planta}\n            }}/>\n        )\n    }\n    return(\n        <div className=\"App d-flex flex-column justify-content-start\">\n                <AppBar className={classes.appBar} position=\"static\" >\n                    <Toolbar>\n                    {page!=='Armario'?\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                            if(!planta){\n                                if(history.location.pathname==='/Planta'){\n                                    history.replace('/')\n                                }\n                                else{\n                                    history.goBack()\n                                }\n                            }\n                            else{\n                                setRedirect(true)\n                            }\n                        }} color=\"inherit\" aria-label=\"menu\">\n                            <ArrowBackRounded />\n                        </IconButton>\n                        :\n                        <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                            \n                        }} color=\"inherit\" aria-label=\"menu\">\n                            <AccountCircle />\n                        </IconButton>\n                    }\n                    <Typography variant=\"h6\" className={classes.title} >\n                        {page}\n                    </Typography>\n                    <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                        setMenuOpened(true)\n                    }} color=\"inherit\" aria-label=\"menu\" size='large'>\n                        <MenuIcon />\n                    </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\n                    <div className={classes.drawer}>\n                        <Card>\n                            <CardMedia\n                                component=\"img\"\n                                alt=\"Sea Of Green\"\n                                image={foto}\n                                title=\"Sea Of Green\"\n                            />\n                        </Card>\n                            <List>\n                                <Link to='/' className='outline-none text-dark'>\n                                    <ListItem button key={'Armario'} >\n                                        <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Armario'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Riego' className='outline-none text-dark'>\n                                    <ListItem button key={'Regar'} >\n                                        <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Regar'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Poda' className='outline-none text-dark'>\n                                    <ListItem button key={'Podar'}>\n                                        <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Podar'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Insecticida' className='outline-none text-dark'>\n                                    <ListItem button key={'Fumigar'}>\n                                        <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Fumigar'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Aplicables' className='outline-none text-dark'>\n                                    <ListItem button key={'Aditivos'}>\n                                        <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Aditivos'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Historial' className='outline-none text-dark'>\n                                    <ListItem button key={'Historial'}>\n                                        <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Aditivos' className='outline-none text-dark'>\n                                    <ListItem button key={'Carencias y Excesos'}>\n                                        <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\n                                    </ListItem>\n                                </Link>\n                                <Link to='/Configuracion' className='outline-none text-dark'>\n                                    <ListItem button key={'Configuracion'}>\n                                        <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                                        <ListItemText  className={classes.text} primary={'Configuracion'} />\n                                    </ListItem>\n                                </Link>\n                                <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                                        await auth().signOut()\n                                    }}>\n                                    <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                                    <ListItemText primary={'Cerrar Sesion'} />\n                                </ListItem>\n                            </List>\n                    </div>\n                </Drawer>\n                {children}\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport {BarraDeLuz} from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport AlertConfiguracionArmario from '../alerts/AlertConfiguracionArmario'\nimport AlertCambiarFinal from '../alerts/AlertCambiarFinal'\nimport AlertCambiarInicio from '../alerts/AlertCambiarInicio'\nimport AlertCambiarPeriodo from '../alerts/AlertCambiarPeriodo'\nimport {MenuButton} from './styles/ArmarioStyle'\nimport Navbar from '../components/Navbar'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Layout} from './Layout'\n\nclass Armario extends Component{\n    state={\n        nuevoPeriodo:undefined,\n        menuOpened:false,\n        selectedTab:'recents'\n    }\n    alertCambiarPeriodo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarPeriodo\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        nuevoPeriodo={this.state.nuevoPeriodo}\n                        cambiarStatePeriodo={nuevoPeriodo=>{\n                            this.setState({\n                                nuevoPeriodo:nuevoPeriodo\n                            })\n                        }}\n                        cambioDePeriodo={this.cambioDePeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarInicio=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarInicio\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeInicio={this.cambiarHoraDeInicio}\n                    />\n                </div>\n            );\n        }\n    })\n    alertCambiarFinal=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertCambiarFinal\n                        onClose={onClose}\n                        alertConfiguracion={this.alertConfiguracion}\n                        cambiarHoraDeFinal={this.cambiarHoraDeFinal}\n                    />\n                </div>\n            );\n        }\n    })\n    alertConfiguracion=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertConfiguracionArmario\n                        periodo={this.props.periodo}\n                        horaDeFinal={this.props.horaDeFinal}\n                        horaDeInicio={this.props.horaDeInicio}\n                        onClose={onClose}\n                        alertCambiarFinal={this.alertCambiarFinal}\n                        alertCambiarInicio={this.alertCambiarInicio}\n                        alertCambiarPeriodo={this.alertCambiarPeriodo}\n                    />\n                </div>\n            );\n        }\n    })\n    cambioDePeriodo=async()=>{\n        await database().ref().child(this.props.user).update({\n            periodo:this.state.nuevoPeriodo\n        })\n    }\n    cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(this.props.user).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    render(){\n        return(\n            <Layout history={this.props.history} page=\"Armario\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <BarraDeLuz periodo={this.props.periodo} horaDeInicio={this.props.horaDeInicio} horaDeFinal={this.props.horaDeFinal}/>      \n                    </div>\n                </div>\n                <CarouselPlantas history={this.props.history}/>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.hora,\n        horaDeFinal:state.data.horaDeFinal,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component} from 'react'\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass NavBarAccion extends Component{\n    render(){\n        return(\n            <div className=\"row mt-4\">\n                <div className=\"col-2 text-left offset-1\">\n                    <Link to=\"/\">\n                        <FontAwesomeIcon icon={faArrowLeft} className='icon backIcon'/>\n                    </Link>\n                </div>\n                <div className=\"col-6 text-center\">\n                    <h1 className='text-white'>{this.props.title}</h1>\n                </div>\n            </div>\n        )\n    }\n}\nexport default NavBarAccion\n","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    checkbox:{\n        '& .MuiIconButton-label':{\n            color: theme.palette.secondary.contrastText\n        }\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container pt-4\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' className={classes.checkbox} checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                    />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Plantas En el Armario - <Link to='/Aplicables'>Agrega una ahora!</Link> </div> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        '& .MuiIconButton-label':{\n            color: theme.palette.secondary.contrastText\n        }\n    }\n}))\n\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                        <FormControlLabel\n                            className={classes.radio}\n                            value=\"top\"\n                            control={<Radio\n                                value=\"Tierra\" \n                                name=\"Tierra\"\n                                color='primary'\n                            />}\n                            label='Tierra'\n                            labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                            value=\"top\"\n                            className={classes.radio}\n                            control={<Radio\n                                value=\"Foliar\"\n                                name=\"Foliar\"\n                                color='primary'\n                            />}\n                            label=\"Foliar\"\n                            labelPlacement=\"top\"\n                        />\n                    </RadioGroup>\n                </div>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button,makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginRight: theme.spacing(1),\n        backgroundColor:theme.palette.secondary.main,\n        color:theme.palette.secondary.contrastText,\n        '& :hover':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    buttonPrimary:{\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport const BotoneraConfirmacionAccion=(props)=>{\n    const classes = useStyles()\n    return(\n            <div className={classes.actionsContainer}>\n                <div>\n                    <Button\n                        className={classes.button}\n                        onClick={props.handleBack}\n                        className='mr-2'\n                    >\n                        Atras\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={\n                            e=>{\n                                props.confirmarAccion(props.accion)\n                            }\n                        }\n                    >\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                    Guardar {props.accion}\n                </Button>\n                </div>\n            </div>\n    )\n}","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from '@material-ui/lab/Alert';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n  }));\n  /*\n  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                >    \n                    <Typography>\n                        Cantidad de Agua y Aditivos\n                    </Typography>\n                    <div className=\"row\">\n                        <div className=\"col-12 text-center\">\n                            {props.cantidadDeAgua?\n                                <Typography>\n                                    {props.cantidadDeAgua} L\n                                </Typography>\n                                :\n                                null\n                            }\n                        </div>\n                        <div className=\"col-auto\">\n                            {props.aditivosUsados?\n                                <Typography className=\"col-auto\">\n                                    {Object.keys(props.aditivosUsados).map((aditivo,i)=>{\n                                        const cantidad = props.aditivosUsados[aditivo]\n                                        return(\n                                            <span className='badge badge-pill badge-light mr-2 p-2' key={'aditivo'+i}>\n                                                {aditivo} {parseFloat(cantidad.slice(0,cantidad.indexOf(' '))*props.cantidadDeAgua).toFixed(2)} ml\n                                            </span>\n                                        )\n                                    })}\n                                </Typography>\n                                :\n                                null}\n                        </div>\n                    </div>\n                </ExpansionPanelSummary>*/\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid className='pt-4'>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <p className='text-dark'>Aditivos (ml)</p>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" className={classes.alert}> <div>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </div> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme=>({\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    color:theme.palette.secondary.contrastText,\n  },\n  pos: {\n    marginBottom: 12,\n    color:theme.palette.secondary.contrastText,\n  },\n  paper:{\n      background:theme.palette.secondary.main,\n      color:theme.palette.secondary.contrastText,\n      padding: theme.spacing(1)\n  }\n}));\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda})=>{\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  return (\n    <Grid item xs={12}>\n        <Grid container justify=\"space-around\" alignItems='center' className='mb-2' >\n            <Grid item>     \n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Plantas Seleccionadas\n                    </Typography>\n                    {plantas.map(planta => (\n                        planta.selected?\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                <strong>{planta.nombre}</strong>\n                            </Typography>\n                            :\n                            null\n                    ))}\n                </Paper>\n            </Grid>\n            {tipoDeRiego?\n                <>  \n                    <Grid item>      \n                        <Paper elevation={6} className={classes.paper}>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Tipo De Riego\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                <strong>{tipoDeRiego}</strong>\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item>      \n                        <Paper elevation={6} className={classes.paper}>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                <strong>{cantidadDeAgua} L de agua</strong>\n                            </Typography>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Aditivos usados\n                            </Typography>\n                            {aditivos?\n                                Object.keys(aditivos).map(aditivo=>{\n                                    const dosis= aditivos[aditivo]\n                                    return(\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\n                                        </Typography>\n                                    )\n                                })\n                                :\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    <strong>-</strong>\n                                </Typography>\n                            }\n                        </Paper>\n                    </Grid>\n                </>\n                :\n                <Grid item>      \n                    <Paper elevation={6} className={classes.paper}>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Tipo De Poda\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                            <strong>{tipoDePoda}</strong>\n                        </Typography>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n    </Grid>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'center',\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  buttonPrimary:{\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    backgroundColor:theme.palette.secondary.main,\n    color:theme.palette.secondary.contrastText,\n    '& :hover':{\n      color:theme.palette.primary.contrastText,\n    }\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  paperSecondary:{\n    paddingBottom:theme.spacing(2),\n    paddingTop:theme.spacing(2),\n    backgroundColor:theme.palette.primary.dark,\n  },\n  padding:{\n    paddingBottom:theme.spacing(1),\n    backgroundColor:theme.palette.secondary.light,\n    color:theme.palette.secondary.contrastText\n  },\n  stepper:{\n    backgroundColor:'transparent'\n  },\n  stepTitle:{\n    '& .MuiStepLabel-label':{\n      color:theme.palette.primary.contrastText\n    },\n  },\n  resetContainer:{\n    background:'linear-gradient(transparent 15%, #000)',\n    height:'100%',\n    paddingTop:theme.spacing(1)\n  }\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===0){\n      return selectedPlants.length?false:true\n    }\n    else if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    else if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <Grow in={true}\n      {...(true ? { timeout: 1500 } : {})}>\n      <div className={classes.root}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\n            {steps.map((step, index) => (\n              step?\n                    <Step key={step.title}>\n                      <Paper elevation={3} className={classes.paperSecondary}>\n                        <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\n                      </Paper>\n                      <StepContent>\n                        <Paper elevation={6} className={classes.padding}>\n                            <Typography>{step.content}</Typography>\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Atras\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.buttonPrimary}\n                                    disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                                </Button>\n                                </div>\n                            </div>\n                          </Paper>\n                        </StepContent>\n                    </Step>\n                    :\n                    null\n            ))}\n          </Stepper>\n          {activeStep === steps.length && (\n            <Paper square elevation={6} className={classes.resetContainer}>\n                {resumenAccion}\n                <BotoneraConfirmacionAccion\n                    accion={tipoDeAccion}\n                    handleBack={handleBack}\n                    confirmarAccion={confirmarAccion}\n                />\n            </Paper>\n          )}\n      </div>\n    </Grow>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Riego'>\n                <div className=\"container-fluid overflow-auto h-100\">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                step1='Plantas'\n                                step2='Tipo De Riego'\n                                step3='Cantidad de agua y aditivos'\n                                selectedPlants={selectedPlants}\n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Riego'\n                                steps={[\n                                        {\n                                        title:'Plantas',\n                                        content:(\n                                            <ElegirPlantaAccion\n                                                seleccionarPlanta={this.seleccionarPlanta}\n                                                plantas={this.state.plantas}\n                                                setExpansionExpanded={this.setExpansionExpanded}\n                                                expanded={this.state.expanded}\n                                            />\n                                        )},\n                                        {title:'Tipo De Riego',\n                                        content:(\n                                            <ElegirTipoDeRiego\n                                                tipoDeRiego={this.state.tipoDeRiego}    \n                                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                                setExpansionExpanded={this.setExpansionExpanded}\n                                                expanded={this.state.expanded}\n                                            />\n                                        )},\n                                        {title:'Cantidad De Agua y Aditivos',\n                                        content:(\n                                            <FormularioAccion\n                                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                                    tipoDeRiego={this.state.tipoDeRiego}\n                                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                                    cantidadDeAgua={this.state.cantidadDeAgua}\n                                                    cambiarAditivo={this.cambiarAditivo}\n                                                    adivito='Fertlizante'\n                                                    aditivos={this.props.aditivos}\n                                                    aditivosUsados={this.state.aditivos}\n                                                    eliminarAditivo={this.eliminarAditivo}\n                                                    setExpansionExpanded={this.setExpansionExpanded}\n                                                    expanded={this.state.expanded}\n                                                />\n                                        )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion';\nimport NavBarAccion from '../components/NavBarAccion';\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion'>\n                <div className=\"container-fluid overflow-auto h-100\">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Fumigacion'\n                                steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Tipo De Riego',\n                                    content:(\n                                        <ElegirTipoDeRiego\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Cantidad De Agua y Aditivos',\n                                    content:(\n                                        <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            aditivo='Insecticida'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nexport const FormNuevoAditivo = ({updateState,aditivo}) =>{\n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    if(aditivo){\n        Object.keys(aditivo.dosis).map((tipoDeRiego,i)=>{\n            setCantidadDeDosis(cantidadDeDosis+=1)\n            if(tipoDeRiego==='Foliar'){\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion]\n                    })\n                    return null\n                })\n            }\n            else{\n                Object.keys(aditivo.dosis[tipoDeRiego]).map((dosificacion,j)=>{\n                    dosisList.push({\n                        nombre:dosificacion,\n                        cantidad:aditivo.dosis[tipoDeRiego][dosificacion],\n                    })\n                    return null\n                })\n            }\n            return null\n        })\n    }\n    return(\n        <Form className='d-flex align-items-center mb-3'>\n            {console.log(cantidadDeDosis)}\n            <Container fluid>\n                <Row>\n                    <Col xs={12} md={{span:10, offset:1}} lg={{span:8,offset:2}}>\n                        <Accordion defaultActiveKey='0'>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='0'>\n                                    <div className=\"container-fluid\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Caracteristicas</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} eventKey='0'>\n                                    <div className=\"container\">\n                                        <div className=\"row mt-2\">\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Nombre\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='nombre' onChange={e=>{\n                                                        updateState(e.target.value,'nombre')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-auto ml-auto mr-auto\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Marca\n                                                    </Form.Label>\n                                                    <Form.Control type=\"text\" id='marca'  onChange={e=>{\n                                                        updateState(e.target.value,'marca')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                            <div className=\"col-12\">\n                                                <Form.Group>\n                                                    <Form.Label className='text-dark'>\n                                                        Descripcion\n                                                    </Form.Label>\n                                                    <Form.Control as='textarea' rows='2' id='descripcion'  onChange={e=>{\n                                                        updateState(e.target.value,'descripcion')\n                                                    }}/>\n                                                </Form.Group>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Collapse>\n                            </Card>\n                            <Card>\n                                <Accordion.Toggle as={Card.Header} className='bg-dark text-light' eventKey='1'>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <h4 className='text-white'>Dosificacion</h4>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Accordion.Toggle>\n                                <Accordion.Collapse as={Card.Body} className='mt-2' eventKey='1'>\n                                        <Form>\n                                            <Container>\n                                                <Row className='flex-nowrap overflow-auto'>\n                                                {dosisList.length?\n                                                    dosisList.map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} defaultValue=\"formNuevoAditivo\" onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                    :\n                                                    new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                                                        <div className=\"col-auto\">\n                                                            <Form.Group >\n                                                                <Form.Label className='text-dark'>\n                                                                    Etapa\n                                                                </Form.Label>\n                                                                <Form.Control type='text' id={'etapa'+i} placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                                                    updateState(e.target.value,'etapa','dosis'+i)\n                                                                }}/>\n                                                                <Form.Label className='text-dark'>\n                                                                    Cantidad\n                                                                </Form.Label>\n                                                                <InputGroup>\n                                                                    <Form.Control type='number' id={'cantidad'+i} onChange={e=>{\n                                                                        updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                                                                    }}/>\n                                                                    <InputGroup.Prepend>\n                                                                        <Form.Control as='select' id={'tipoDeDosis'+i} onChange={e=>{\n                                                                            updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                                                        }}>\n                                                                            <option value='1' selected>ml/L</option>\n                                                                            <option value=\"2\">gr/L</option>\n                                                                        </Form.Control>\n                                                                    </InputGroup.Prepend>\n                                                                </InputGroup>\n                                                                <Form.Label className='text-dark'>\n                                                                    Tipo de riego\n                                                                </Form.Label>\n                                                                <Form.Control as='select' id={'tipoDeRiego'+i} onChange={e=>{\n                                                                    updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                                                }}>\n                                                                    <option>-</option>\n                                                                    <option value='Foliar'>Foliar</option>\n                                                                    <option value=\"Tierra\">Tierra</option>\n                                                                </Form.Control>\n                                                            </Form.Group>\n                                                        </div>\n                                                    ))\n                                                }\n                                                    <div className=\"col-auto align-self-center\">\n                                                        <FontAwesomeIcon icon={faPlusCircle} color='green' size=\"lg\" onClick={e=>{\n                                                            setCantidadDeDosis(cantidadDeDosis+=1)\n                                                        }}/>\n                                                    </div>\n                                                </Row>\n                                            </Container>\n                                        </Form>\n                                </Accordion.Collapse>\n                            </Card>\n                        </Accordion>\n                    </Col>\n                </Row>\n            </Container>\n        </Form>\n    )\n}","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport {Table,Accordion, Card,Button} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor: theme.palette.secondary.light,\n        color:theme.palette.secondary.contrastText\n    },\n    paperDark: {\n        backgroundColor: theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.secondary.contrastText,\n        textShadow:'1px 1px 10px white'\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    }\n  }));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const alertNuevoAditivo=()=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                    />\n                </div>\n            );\n        }\n    })\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                            <Button variant='outline-light mb-2' onClick={e=>{\n                                    alertNuevoAditivo()\n                                }}>\n                                Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                                <FontAwesomeIcon icon={faPlusCircle} className='ml-3'/>\n                            </Button>\n                    </div>\n                </div>\n                {aditivos?\n                    aditivos.map((aditivo,i)=>(\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\n                                <Paper elevation={4} className={classes.paperDark}>\n                                    <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                    >\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                    </ExpansionPanelSummary>\n                                </Paper>\n                                <Paper elevation={4} className={classes.paperMain}>\n                                    <ExpansionPanelDetails>\n                                        <div className=\"container\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <strong>\n                                                        Descripcion\n                                                    </strong>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-left\">\n                                                    <small>\n                                                        {aditivo.descripcion}\n                                                    </small>\n                                                </div>\n                                            </div>\n                                            <hr/>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <strong>\n                                                        Dosificacion\n                                                    </strong>\n                                                </div>\n                                            </div>\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                <Fragment key={'tipoDeAplicacion'+j}>\n                                                    <div className=\"row mb-2 mt-2\">\n                                                        <div className=\"col-auto mr-auto\">\n                                                            <span className='badge badge-pill badge-dark'>\n                                                                {tipoDeAplicacion}\n                                                            </span>\n                                                        </div>\n                                                    <hr/>\n                                                    </div>\n                                                    <List>\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                            <ListItem>\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\n                                                            </ListItem> \n                                                        ))}\n                                                    </List>\n                                                </Fragment>\n                                            ))}\n                                            <div className=\"row my-2 justify-content-around\">\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{alertEditarAditivo(aditivo)}}\n                                                    >   \n                                                        <EditOutlined className={classes.buttonText}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                        Editar\n                                                    </Typography>\n                                                </div>\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{eliminarAditivo(i)}}\n                                                    >\n                                                        <DeleteOutline className={classes.buttonText}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                        Eliminar\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ExpansionPanelDetails>\n                                    </Paper>\n                            </ExpansionPanel>\n                        </Grow>\n                        </div>\n                    </div>\n                    ))\n                    :\n                    <h1>Agrega {title}</h1>\n                }\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nimport { makeStyles,Theme } from '@material-ui/core/styles';\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paperMain: {\n      backgroundColor: 'transparent',\n    },\n    paperDark: {\n    backgroundColor: theme.palette.primary.light,\n    },\n    tabs:{\n        \"&.MuiTabs-scroller\":{\n            '&.MuiTabs-indicator':{\n                color: '#fff'\n            }\n        },\n    },\n    tab:{\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\n            color: '#fff',\n        }\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    const classes = useStyles()\n    return(\n        <div className=\"container-fluid overflow-auto\">\n            <div className=\"row\">\n                <div className=\"col-12 px-0\">\n                    <Paper className={classes.paperDark}>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={(e,value)=>{\n                                setValue(value)\n                            }}\n                            className={classes.tabs}\n                            aria-label=\"disabled tabs example\"\n                        >\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\n                        </Tabs>\n                    </Paper>\n                    <TabPanel value={value} index={0}>\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport NavBarAccion from '../components/NavBarAccion'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nclass Aplicables extends Component{\n    render(){\n        return(\n            <Layout history={this.props.history} page='Aditivos'>\n                <TabAditivos user={this.props.user} fertilizantes={this.props.fertilizantes} insecticidas={this.props.insecticidas}/>\n            </Layout>\n        )\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport './styles/loading.css'\nclass PantallaDeCarga extends Component{\n    render(){\n        return(\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-12 text-center'>\n                        <h1>Cargando</h1>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                        </h2>\n                    </div>\n                    <div className=\"col-auto\">\n                        <h2>\n                            <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                        </h2>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default PantallaDeCarga","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport PantallaDeCarga from './PantallaDeCarga'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const login=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography component=\"h1\" variant=\"h5\">\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Inicia Sesion\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    error={userError}\n                    helperText={userError?'Usuario No Encontrado':null}\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                    />\n                    <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    helperText={passwordError?'Contraseña incorrecta':null}\n                    error={passwordError}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                    />\n                    <FormControlLabel\n                    control={<Checkbox value=\"remember\" color=\"secondary\" />}\n                    label=\"Recuerdame\"\n                    />\n                    <Button\n                    fullWidth\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={e=>{login()}}\n                    >\n                    Ingresar!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link href=\"#\" variant=\"body2\" className={classes.link}>\n                        Olvidaste tu contraseña?\n                        </Link>\n                    </Grid>\n                    <Grid item>\n                        <Link variant=\"body2\">\n                          <LinkRouter to='/Login' className={classes.link}>\n                            {\"No tienes una cuenta? Registrate!\"}\n                          </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport PantallaDeCarga from './PantallaDeCarga'\nimport {Link as LinkRouter} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const signin=async()=>{\n        setloading(true)\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n        .then(async e=>{\n            await database().ref().child(e.user.uid).update({\n                horaDeInicio:0,\n                horaDeFinal:0,\n                periodo:'Vegetativo'\n            })\n            history.push('/')\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <CssBaseline />\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5} component={Paper} className={classes.background} elevation={6} square>\n              {loading?\n                <div className={classes.paper}>\n                    <Typography>\n                      <PantallaDeCarga/>\n                    </Typography>\n                </div>\n                :\n                <div className={classes.paper}>\n                  <Avatar className={classes.avatar}>\n                      <LockOutlinedIcon />\n                  </Avatar>\n                  <Typography component=\"h1\" variant=\"h5\">\n                      Registrate\n                  </Typography>\n                  <form className={classes.form} noValidate>\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      id=\"email\"\n                      label=\"Email\"\n                      name=\"email\"\n                      value={inputUser}\n                      onChange={e=>{setInputUser(e.target.value)}}\n                      autoFocus\n                    />\n                    <TextField\n                      variant=\"outlined\"\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      name=\"password\"\n                      value={inputPassword}\n                      onChange={e=>{setInputPassword(e.target.value)}}\n                      label=\"contraseña\"\n                      type=\"password\"\n                      id=\"password\"\n                    />\n                    <Button\n                    fullWidth\n                    color='#fff'\n                    variant=\"outlined\"\n                    className={classes.submit}\n                    onClick={e=>{signin()}}\n                    >\n                    Registrate!\n                    </Button>\n                    <Grid container>\n                    <Grid item xs>\n                        <Link>\n                            <LinkRouter to='/' className={classes.link}>\n                                Ya tienes una cuenta? Ingresa!\n                            </LinkRouter>\n                        </Link>\n                    </Grid>\n                    </Grid>\n                    <Box mt={5}>\n                    </Box>\n                </form>\n                </div>\n              }\n        </Grid>\n        </Grid>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        '& .MuiIconButton-label':{\n            color: theme.palette.secondary.contrastText\n        }\n    }\n}))\n\nexport const ElegirTipoDePoda=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.tipoDePoda}\n                            className={classes.radio}\n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport NavBarAccion from '../components/NavBarAccion'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda'>\n                <div className=\"container-fluid overflow-auto h-100 \">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDePoda={this.state.tipoDePoda}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                                tipoDeAccion='Poda'\n                                steps={[\n                                {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                        />\n                                    )},\n                                {\n                                    title:'Tipo De Poda',\n                                    content:(\n                                        <ElegirTipoDePoda\n                                            handleChange={(nuevoTipoDePoda=>{\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                            })}\n                                            tipoDePoda={this.state.tipoDePoda}\n                                        />\n                                )}]\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React from 'react'\nimport {Layout} from './Layout'\nexport const Configuracion =({history})=>{\n    return(\n        <Layout history={history} page='Configuracion'>\n            <div className=\"container-fluid accion\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        Configuracion\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n}","import React from 'react'\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {Card,CardHeader,CardMedia,CardActions,makeStyles,IconButton} from '@material-ui/core'\nconst useStyles= makeStyles(theme=>({\n    root: {\n        width: 250,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    cardHeader:{\n        backgroundColor:theme.palette.primary.dark,\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const CardHistorial=({nombre,fechaDeCorte})=>{\n    const classes= useStyles()\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={nombre}\n                subheader={fechaDeCorte}\n            />\n            <CardMedia\n                className={classes.media}\n                image={fotoPlanta}\n            />\n        </Card>\n    )\n}","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button,Typography} from '@material-ui/core'\nimport {CardHistorial} from '../components/CardHistorial'\nclass Historial extends Component{\n    render(){\n        return(\n            <Layout history={this.props.history} page={'Historial'}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        {this.props.historial?\n                            Object.keys(this.props.historial).map(planta=>(\n                                <div className=\"col-auto mt-3\">\n                                    <Link className='text-white' to={{\n                                        pathname:'/Historial/Planta',\n                                        props:{\n                                            ...this.props.historial[planta],\n                                            user:this.props.user,\n                                            id:planta,\n                                            history:this.props.history,\n                                            plantaDelHistorial:true\n                                        }\n                                    }}>\n                                        <CardHistorial nombre={this.props.historial[planta].nombre} fechaDeCorte={this.props.historial[planta].fechaDeCorte}/>\n                                    </Link>\n                                </div>\n                            )):\n                            <div className=\"col-auto\">\n                                <Typography>\n                                    No hay plantas en el historial\n                                </Typography>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    historial:state.data.historial\n})\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia} from '@material-ui/core'\nimport { PortableWifiOff } from '@material-ui/icons';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n        '& .MuiGridListTile-root':{\n            width:'30% !important'\n        }\n    },\n    title: {\n        color: theme.palette.primary.light,\n    },\n    titleBar: {\n        background:\n        'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n    },\n    listRoot: {\n        width: '100%',\n        maxWidth: 360,\n        backgroundImage:`url(${fotoPlanta})`,\n\n    },\n    listItem:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    paper:{\n        backgroundColor:theme.palette.primary.dark\n    },\n    media: {\n        height:'100%'\n    },\n}))\n\nexport const DetallePlanta=(props)=>{\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    const classes = useStyles()\n            \n    return(\n        <>\n            <Col xs={12} className='p-0'>\n                <GridList className={classes.gridList} cols={2.5}>\n                    {tileData.map(tile => (\n                    <GridListTile key={tile.img} className={classes.tile}>\n                        <CardMedia\n                            className={classes.media}\n                            image={fotoPlanta}\n                        />\n                    </GridListTile>\n                    ))}\n                </GridList>\n            </Col>\n            <div className='col-12 col-sm-8 col-md-6 col-lg-3 mt-2'>\n                <div className={classes.listRoot}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <List component='nav'>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Genetica\" secondary={props.genetica}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Edad\" secondary={props.edad}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Germinacion\" secondary={`${props.nacimiento} (${moment().diff(moment(props.nacimiento),'days')} Dias)`}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Vegetativo\" secondary={`${props.inicioVegetativo} (${moment().diff(moment(props.inicioVegetativo),'days')} Dias)`}/>\n                            </ListItem>\n                            <Divider/>\n                            <ListItem>\n                                <ListItemText className={classes.listItem} primary=\"Fecha De Floracion\" secondary={`${props.inicioFloracion} (${moment().diff(moment(props.inicioFloracion),'days')} Dias)`}/>\n                            </ListItem>\n                            {props.plantaDelHistorial && props.fechaDeCorte &&\n                            <>\n                                <Divider/>\n                                <ListItem>\n                                    <ListItemText className={classes.listItem} primary=\"Fecha de Corte\" secondary={`${props.fechaDeCorte}`}/>\n                                </ListItem>\n                            </>\n                            }\n                            {props.plantaDelHistorial && props.cantidadDeGramos &&\n                            <>\n                                <Divider/>\n                                <ListItem>\n                                    <ListItemText className={classes.listItem} primary=\"Cantidad Cosechada\" secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\n                                </ListItem>\n                            </>\n                            }\n                        </List>\n                    </Paper>\n                </div>\n            </div>\n        </>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {Button,makeStyles,ButtonGroup} from '@material-ui/core'\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\n\nconst useStyles=makeStyles(theme=>({\n    link:{\n        color:theme.palette.secondary.contrastText,\n        textDecoration:'none',\n        outline:'none'\n    }\n}))\n\nexport const DetalleAcciones =(props)=>{\n    const classes= useStyles()\n    return(\n        <div className=\"col text-center\">\n            {console.log(props.history.location.pathname)}\n            <ButtonGroup>\n                <Link\n                className={classes.link} \n                to={{ \n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\n                    props:{\n                        ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<InvertColorsOutlined/>}\n                    >\n                        Riegos\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}\n                to={{ \n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\n                    props:{\n                        ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<FontAwesomeIcon icon={faCut}/>}\n                    >\n                        Podas\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}                 \n                to={{ \n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\n                props:{\n                    ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        endIcon={<BugReportOutlined/>}\n                    >\n                        Fumigaciones\n                    </Button>\n                </Link>\n            </ButtonGroup>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport Layout from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport PantallaDeCarga from './Pages/PantallaDeCarga';\nimport { Configuracion } from './Pages/Configuracion';\nimport Historial from './Pages/Historial';\nimport {Planta} from './Pages/Planta'\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\nimport {PlantaPodas} from './Pages/PlantaPodas'\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\nimport { createMuiTheme, ThemeProvider, hexToRgb } from '@material-ui/core/styles';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nconst theme = createMuiTheme({\n  palette: {\n    white:'#fff',\n    primary: {\n      light: '#48a999',\n      main: '#00796b',\n      dark: '#004c40',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#519657',\n      main: '#81c784',\n      dark: '#b2fab4',\n      contrastText: '#000',\n    },\n    danger:'#c62828'\n  },\n});\nclass App extends Component {\n  state={\n    loading:true\n  }\n  cambiarPeriodo(nuevoPeriodo){\n    this.setState({\n      periodo:nuevoPeriodo\n    })\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user.uid,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n  }\n  render(){\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <PantallaDeCarga/>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <ThemeProvider theme={theme}>\n            <Provider store={this.state.store}>\n              <HashRouter>\n                <Switch>\n                  <Route exact path='/' component={Armario}/>\n                  <Route exact path='/Riego' component={Riego}/>\n                  <Route exact path='/Poda' component={Poda}/>\n                  <Route exact path='/Insecticida' component={Insecticida}/>\n                  <Route exact path='/Aplicables' component={Aplicables}/>\n                  <Route exact path='/Configuracion' component={Configuracion}/>\n                  <Route exact path='/Historial' component={Historial}/>\n                  <Route exact path='/Planta' component={Planta}/>\n                  <Route exact path='/Historial/Planta' component={Planta}/>\n                  <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\n                  <Route exact path='/Planta/Podas' component={PlantaPodas}/>\n                  <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                  <Route exact path='/Historial/Planta/Riegos' component={PlantaRiegos}/>\n                  <Route exact path='/Historial/Planta/Podas' component={PlantaPodas}/>\n                  <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                  <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                </Switch>\n              </HashRouter>\n            </Provider>\n          </ThemeProvider>\n        )\n      }\n      else{\n        return (\n          <ThemeProvider theme={theme}>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={SignInPage}/>\n                <Route exact path='/Login' component={LogInPage}/>\n              </Switch>\n            </HashRouter>\n          </ThemeProvider>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","import React,{useState}from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nimport {DeleteOutline, EditOutlined, CheckCircle,ExpandMore} from '@material-ui/icons'\nimport {IconButton,Button,ButtonGroup,makeStyles,TextField,Paper,ExpansionPanel,ExpansionPanelSummary,Typography,ExpansionPanelDetails} from '@material-ui/core'\nimport {database} from 'firebase'\nimport moment from 'moment'\n\nconst useStyles=makeStyles(theme=>({\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    buttonTextDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    ExpansionPanelDetails:{\n    flexDirection:'column',\n    alignItems:'center',\n    justifyContent:'center'\n    }\n}))\n\nexport const Planta =(props)=>{\n    const classes = useStyles()\n    let [collapseInputCantidad,setCollapseInputCantidad] = useState(false)\n    let [inputCantidad, setInputCantidad]= useState(undefined)\n    const cosecharPlanta=async ()=>{\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\n            nombre:props.location.props.nombre?props.location.props.nombre:null,\n            nacimiento:props.location.props.nacimiento?props.location.props.nacimiento:null,\n            genetica:props.location.props.genetica?props.location.props.genetica:null,\n            inicioVegetativo:props.location.props.inicioVegetativo?props.location.props.inicioVegetativo:null,\n            inicioFloracion:props.location.props.inicioFloracion?props.location.props.inicioFloracion:null,\n            podas:props.location.props.podas?props.location.props.podas:null,\n            riegos:props.location.props.riegos?props.location.props.riegos:null,\n            fumigaciones:props.location.props.fumigaciones?props.location.props.fumigaciones:null,\n            fechaDeCorte:moment().format('LLL')\n        })\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\n        props.location.props.history.goBack()\n    }\n    const guardarCantidadCosechada=async ()=>{\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\n            cantidadDeGramos:inputCantidad+' gr'\n        })\n        props.location.props.history.goBack()\n    }\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre}>\n                <div className=\"container-fluid accion\">\n                    <div className=\"row\">\n                        <DetallePlanta \n                            genetica={props.location.props.genetica}\n                            cantidadDeGramos={props.location.props.cantidadDeGramos}\n                            plantaDelHistorial={props.location.props.plantaDelHistorial}\n                            edad={props.location.props.edad}\n                            nacimiento={props.location.props.nacimiento}\n                            inicioVegetativo={props.location.props.inicioVegetativo}\n                            inicioFloracion={props.location.props.inicioFloracion}\n                            fechaDeCorte={props.location.props.fechaDeCorte}\n                        />\n                        <DetalleAcciones\n                            {...props.location.props}\n                        />\n                    </div>\n                    {props.location.props.plantaDelHistorial && !props.location.props.cantidadDeGramos &&\n                        <div className=\"row my-2 justify-content-center\">\n                            <div className=\"col-6 offset-3\">\n                                <ExpansionPanel>\n                                    <ExpansionPanelSummary\n                                    expandIcon={<ExpandMore />}\n                                    aria-controls=\"panel1a-content\"\n                                    id=\"panel1a-header\"\n                                    >\n                                        <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                                        <TextField id=\"outlined-basic\" \n                                            value={inputCantidad}\n                                            label=\"Cantidad Cosechada (gr)\" \n                                            variant=\"outlined\"\n                                            onChange={e=>{\n                                                setInputCantidad(e.target.value)\n                                            }}\n                                        />\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"secondary\"\n                                            onClick={e=>{\n                                                guardarCantidadCosechada()\n                                            }}\n                                            endIcon={\n                                                <CheckCircle/>\n                                            }\n                                            >\n                                            Guardar \n                                        </Button>\n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                            </div>\n                        </div>\n                    }\n                    {!props.location.props.plantaDelHistorial &&\n                        <div className=\"row my-2 justify-content-around\">\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={cosecharPlanta}\n                                endIcon={\n                                    <DeleteOutline/>\n                                }\n                                >\n                                Cosechar\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                onClick={props.location.props.alertEliminarPlanta}\n                                endIcon={\n                                    <EditOutlined/>\n                                }\n                            >   \n                                Editar\n                            </Button>                 \n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                endIcon={\n                                    <DeleteOutline/>\n                                }>\n                                    Eliminar\n                            </Button>\n                        </div>\n                    }\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      color:theme.palette.primary.contrastText\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor: theme.palette.secondary.light,\n        color:theme.palette.secondary.contrastText\n    },\n    paperDark: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.secondary.contrastText,\n        textShadow:'1px 1px 10px white'\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    }\n  }));\nexport const AccionDetallada=(props)=>{\n    const classes= useStyles()\n    let [show,setShow] = useState(false)\n    \n    const eliminarAccion= async()=>{\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\n    }\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setShow(true)\n        }, 100);\n    })\n    return(\n        <div className=\"row\">\n            <div className=\"col-10 offset-1\">\n                <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\n                        <Paper elevation={4} className={classes.paperDark}>\n                            <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                            >\n                                <Typography className={classes.heading}>{props.accion.fecha}</Typography>\n                            </ExpansionPanelSummary>\n                        </Paper>\n                        <Paper elevation={4} className={classes.paperMain}>\n                            <ExpansionPanelDetails>\n                                <div className=\"container\">\n                                    {props.accion.agua?\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.agua} L. De Agua \n                                                </Typography>\n                                            </div>\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                    <div className=\"row my-2\">\n                                        {props.accion.tipoDeRiego?\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\n                                                </Typography>\n                                            </div>\n                                            :\n                                            <div className=\"col text-left\">\n                                                <Typography variant='h5'>\n                                                    Poda {props.accion.tipoDePoda}\n                                                </Typography>\n                                            </div>\n                                        }\n                                    </div>\n                                    <Divider/>\n                                    {props.tipoDeAccion!=='podas'?\n                                        <div className=\"row my-2\">\n                                            <div className=\"col-12 text-left\">\n                                                <Typography variant='h5'>\n                                                    Aditivos Usados\n                                                </Typography>\n                                            </div>\n                                            {props.accion.aditivos?\n                                                <List>\n                                                    {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\n                                                        <>\n                                                            <Divider/>\n                                                            <ListItem>\n                                                                <ListItemText\n                                                                    primary={aditivo}\n                                                                    secondary={props.accion.aditivos[aditivo]+' ml'} \n                                                                />\n                                                            </ListItem>\n                                                        </>\n                                                    ))}\n                                                </List>\n                                                :\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography>\n                                                        No se utilizaron Aditivos\n                                                    </Typography>\n                                                </div>\n                                            }\n                                        </div>\n                                        :\n                                        null\n                                    }\n                                    <Divider/>\n                                    {!props.plantaDelHistorial &&\n                                        <div className=\"row my-2 justify-content-around\">\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                >   \n                                                        <EditOutlined className={classes.buttonText}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                    Editar\n                                                </Typography>\n                                            </div>\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                    onClick={e=>{eliminarAccion()}}\n                                                >\n                                                        <DeleteOutline className={classes.buttonText}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                    Eliminar\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </ExpansionPanelDetails>\n                        </Paper>\n                    </ExpansionPanel>\n                </Grow>\n            </div>\n        </div>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {makeStyles} from '@material-ui/core';\nimport {Layout} from './Layout'\n\nexport const PlantaRiegos =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.location.props.riegos?\n                            Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\n                                <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.id} id={id} key={id}/>\n                            ))\n                            :\n                            <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\n                                    </div>\n                                </div>\n                                {!props.location.props.plantaDelHistorial &&\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                props.history.push('/Riego')\n                                            }}>Riegala Ahora!</button>\n                                        </div>\n                                    </div>\n                                }\n                            </>\n                        }\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {useState} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaPodas =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                    {props.location.props.podas?\n                        Object.keys(props.location.props.podas).reverse().map((id,i)=>(\n                            <AccionDetallada user={props.location.props.user} index={i}  plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} handleChange={handleChange} accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.id} id={id} key={id}/>\n                        ))\n                        :\n                        <>\n                            <div className=\"row justify-content-center mt-4\">\n                                <div className=\"col-auto\">\n                                    <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\n                                </div>\n                            </div>\n                            {!props.location.props.plantaDelHistorial &&\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                    <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                    </div>\n                                </div>\n                            }\n                        </>\n                    }\n                </div>        \n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {useState} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nexport const PlantaFumigaciones =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props}>\n                <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.location.props.fumigaciones?\n                            Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\n                                <AccionDetallada handleChange={handleChange} index={i} plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                    </div>\n                                </div>\n                                {!props.location.props.plantaDelHistorial &&\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                props.history.push('/Insecticida')\n                                            }}>Fumigala Ahora!</button>\n                                        </div>\n                                    </div>\n                                }\n                            </>\n                        }\n                </div>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";"],"sourceRoot":""}