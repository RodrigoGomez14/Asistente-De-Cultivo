{"version":3,"sources":["images/sea of green.jpg","images/riegos.svg","images/addFile.svg","images/cannabis.jpg","images/semilla.svg","images/vegetativo.svg","images/floracion.svg","images/maceta.svg","images/adn.svg","images/balanza.svg","images/cosecha.svg","images/transplante.svg","alerts/AlertEliminarPlanta.jsx","alert-components/AlertNavBar.jsx","alerts/AlertCambiarCiclo.jsx","components/styles/TarjetaPlantaStyles.jsx","components/TarjetaPlanta.jsx","components/CarouselPlantas.jsx","components/FechaYHora.jsx","components/TarjetaArmario.jsx","components/BarraDeLuz.jsx","components/Navbar.jsx","components/MenuDrawer.jsx","Pages/Layout.jsx","Pages/Armario.jsx","components/CheckboxPlanta.jsx","alerts/AlertConfirmarAccion.jsx","components/ElegirPlantaAccion.jsx","components/ElegirTipoDeRiego.jsx","components/BotoneraConfirmacionAccion.jsx","components/styles/PopoverStyle.jsx","components/FormularioAccion.jsx","components/ResumenAccion.jsx","components/StepperAccion.jsx","Pages/Riego.jsx","Pages/Insecticida.jsx","alert-components/FormNuevoAditivo.jsx","alert-components/AlertBotoneraConfirmacion.jsx","alerts/AlertNuevoAditivo.jsx","components/TableAditivos.jsx","components/TabAditivos.jsx","Pages/Aplicables.jsx","Pages/PantallaDeCarga.jsx","components/FormSignIn.jsx","Pages/SignIn.jsx","components/FormLogin.jsx","Pages/Login.jsx","components/ElegirTipoDePoda.jsx","Pages/Poda.jsx","reducers/index.js","components/ListConfig.jsx","Pages/Configuracion.jsx","components/CardHistorial.jsx","Pages/Historial.jsx","alert-components/DetallePlanta.jsx","alert-components/DetalleAcciones.jsx","App.js","components/BotoneraConfiguracionPlanta.jsx","components/InputCantidadCosechada.jsx","Pages/Planta.jsx","alert-components/AccionDetallada.jsx","Pages/PlantaRiegos.jsx","alert-components/BreadcrumbPlanta.jsx","Pages/PlantaPodas.jsx","Pages/PlantaFumigaciones.jsx","Pages/NotFound.jsx","components/ElegirNuevaMaceta.jsx","Pages/Transplante.jsx","components/FormNuevaPlanta.jsx","Pages/NuevaPlanta.jsx","Pages/NuevoAditivo.jsx","Pages/PlantaTransplantes.jsx","serviceWorker.js","index.js","images/apple cookies.jpg"],"names":["module","exports","Component","AlertNavBar","className","this","props","alertPlanta","icon","faArrowLeft","onClick","e","title","faTimes","onClose","Overlay","styled","div","Img","img","Card","useStyles","makeStyles","theme","paper","backgroundColor","palette","primary","dark","padding","spacing","TarjetaPlanta","useState","undefined","edad","setEdad","useEffect","moment","diff","nacimiento","classes","Grow","in","timeout","Paper","elevation","to","pathname","src","fotoPlanta","alt","nombre","CarouselPlantas","Typography","plantas","Object","keys","map","key","user","genetica","inicioVegetativo","inicioFloracion","podas","riegos","fumigaciones","transplantes","volumenMaceta","id","history","variant","Button","color","endIcon","AddCircleOutline","IconButton","connect","state","data","text","contrastText","FechaYHora","format","fecha","setFecha","setInterval","flexGrow","marginLeft","marginRight","main","listText","itemList","display","justifyContent","width","marginTop","paperMain","type","secondary","borderRadius","TarjetaArmario","periodo","horaDeInicio","cicloLuminico","convertirHora","hora","ListItemText","root","BarraDeLuz","faltante","setFaltante","transcurrido","setTranscurrido","lamparaEncendida","setLampraEncendida","minutes","date","Date","getMinutes","getHours","minutoDeInicio","minutoFinal","actualizarEstadoDeLampara","console","log","actualizarTranscurrido","diferencia","actualizarFaltante","barra","document","getElementById","porcentaje","style","actualizarBarraDeEstado","role","aria-valuenow","aria-valuemin","aria-valuemax","appBar","menuButton","NavBar","page","planta","setRedirect","setMenuOpened","setTheme","AppBar","position","Toolbar","edge","location","replace","goBack","aria-label","ArrowBackRounded","AccountCircle","size","Menu","maxWidth","height","MenuDrawer","menuOpened","Drawer","anchor","open","CardMedia","component","image","foto","List","ListItem","button","ListItemIcon","HomeOutlined","faTint","faCut","faBug","NatureOutlined","faCogs","a","auth","signOut","drawer","app","minHeight","maxHeight","textAlign","flexDirection","alignItems","fontSize","Layout","children","redirect","CheckboxPlanta","checked","handleClick","llave","formControl","margin","minWidth","selectEmpty","alert","ElegirPlantaAccion","seleccionarPlanta","Row","Col","sm","span","offset","length","FormGroup","row","i","FormControlLabel","control","Checkbox","selected","onChange","value","label","Alert","severity","AlertTitle","radio","ElegirTipoDeRiego","tipoDeRiego","cambiarTipoDeRiego","Container","RadioGroup","name","target","Radio","labelPlacement","actionsContainer","marginBottom","buttonPrimary","BotoneraConfirmacionAccion","handleBack","confirmarAccion","accion","faCheck","td","th","FormularioAccion","fluid","Form","TextField","cantidadDeAgua","cambiarLitrosDeAgua","eliminarListaDeAditivos","aditivos","aditivo","dosis","FormControl","InputLabel","Select","labelId","disabled","cambiarAditivo","eliminarAditivo","MenuItem","card","bullet","transform","pos","background","ResumenAccion","tipoDePoda","nuevaMaceta","Grid","item","xs","container","justify","gutterBottom","parseFloat","slice","indexOf","toFixed","resetContainer","paperSecondary","paddingBottom","paddingTop","light","stepper","stepTitle","StepperAccion","steps","resumenAccion","tipoDeAccion","selectedPlants","React","activeStep","setActiveStep","handleNext","prevActiveStep","setDisabled","Stepper","orientation","step","index","Step","StepLabel","StepContent","content","square","Riego","expanded","newSelectedPlants","setState","regar","push","guardarRiegoBD","idPlanta","agua","fertilizantes","fertilizantesFinal","fertilizante","database","ref","child","litros","cantidad","newAditivos","setExpansionExpanded","panel","step1","step2","step3","adivito","aditivosUsados","Insecticida","fumigar","guardrarFumigacionDB","insecticidas","insecticidasFinal","insecticida","overflow","firstPaper","secondPaper","dosisList","flexWrap","form","FormNuevoAditivo","tipoDeAditivo","inputs","setInputs","setDosis","ClasificarDosis","Foliar","newDosis","tipoDeDosis","etapa","agregarAditivo","newAditivo","marca","descripcion","Tierra","update","updateState","valor","indexDosis","cantidadDeDosis","setCantidadDeDosis","exaplmesForInput","multiline","startIcon","AddOutlined","Array","fill","vacio","placeholder","AlertBotoneraConfirmacion","faCheckCircle","cambiarHora","alertConfiguracion","faTimesCircle","AlertNuevoAditivo","heading","typography","pxToRem","secondaryHeading","paperDark","expansionPanel","textShadow","buttonText","expandIcon","addButton","TableAditivos","splice","setExpanded","ExpansionPanel","event","isExpanded","ExpansionPanelSummary","aria-controls","ExpansionPanelDetails","tipoDeAplicacion","j","aplicacion","k","confirmAlert","customUI","alertEditarAditivo","EditOutlined","DeleteOutline","tabs","tab","TabPanel","other","hidden","aria-labelledby","Box","p","TabAditivos","setValue","Tabs","indicatorColor","textColor","Tab","widht","PantallaDeCarga","faCannabis","avatar","borderColor","submit","border","link","checkBox","linkButtons","FormSignIn","inputUser","setInputUser","inputPassword","setInputPassword","userError","passwordError","logIn","loading","Avatar","LockOutlined","noValidate","required","fullWidth","error","helperText","autoFocus","Link","href","grey","objectFit","SignInPage","setloading","setUserError","setPasswordError","signInWithEmailAndPassword","catch","code","md","FormLogin","signIn","LogInPage","createUserWithEmailAndPassword","then","uid","ElegirTipoDePoda","handleChange","Poda","podar","guardarPodaBD","cambiarTipoDePoda","nuevoTipoDePoda","reducer","action","FormControlSwitch","textField","inputCicloLuminico","ListConfig","switchValue","setSwitchValue","cambiarHoraDeInicio","cambiarPeriodo","cambiarCicloLuminico","errorCicloLuminico","setErrorCicloLuminico","horaDeRespaldo","setHoraDeRespaldo","Switch","readOnly","startAdornment","InputAdornment","hour","localStorage","getItem","switchModoOscuro","setSwitchModoOscuro","setItem","media","cardHeader","CardHistorial","fechaDeCorte","cantidadDeGramos","CardHeader","subheader","historial","plantaDelHistorial","DetallePlanta","adn","maceta","semilla","vegetativo","floracion","cosecha","balanza","store","textDecoration","outline","DetalleAcciones","transplante","editButton","deleteButton","editText","deleteText","cosecharButton","success","cosecharText","BotoneraConfiguracionPlanta","cosecharPlanta","eliminarPlanta","InputCantidadCosechada","inputCantidad","setInputCantidad","guardarCantidadCosechada","InputProps","CheckCircle","buttonDanger","danger","buttonTextDanger","backdrop","zIndex","paperPrimary","gridList","rightPanel","Planta","remove","tileData","GridList","cols","tile","GridListTile","AccionDetallada","setShow","eliminarAccion","firebase","setTimeout","Divider","PlantaRiegos","reverse","PlantaPodas","PlantaFumigaciones","NotFound","ElegirNuevaMaceta","nuevoVolumen","Transplante","transplantar","setNuevaMaceta","guardarTransplanteDB","FormNuevaPlanta","guardarNuevaPlantaDB","periodoArmario","getDate","year","getFullYear","month","getMonth","days","setNombre","setGenetica","setEtapa","inicioGerminacion","setInicioGerminacion","setInicioVegetativo","setInicioFloracion","renderInputsEtapa","CheckCircleOutlineOutlined","PlantaTransplantes","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","on","snapshot","val","createStore","themeProvider","createMuiTheme","white","ThemeProvider","exact","path","Armario","Aplicables","render","Historial","NuevaPlanta","NuevoAditivo","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.338ff531.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sea of green.4e28c360.jpg\";","module.exports = __webpack_public_path__ + \"static/media/riegos.daab22d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/addFile.84371f25.svg\";","module.exports = __webpack_public_path__ + \"static/media/cannabis.2512da42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/semilla.985d2882.svg\";","module.exports = __webpack_public_path__ + \"static/media/vegetativo.62b8c74e.svg\";","module.exports = __webpack_public_path__ + \"static/media/floracion.9ef8fb5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/maceta.547ce152.svg\";","module.exports = __webpack_public_path__ + \"static/media/adn.2312614b.svg\";","module.exports = __webpack_public_path__ + \"static/media/balanza.36f92367.svg\";","module.exports = __webpack_public_path__ + \"static/media/cosecha.0baa34b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/transplante.e7b5eb30.svg\";","import React , {Component} from 'react'\n\nclass AlertEliminarPlanta extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                            this.props.eliminarPlanta()\n                            this.props.onClose()\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertEliminarPlanta","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faArrowLeft} from '@fortawesome/free-solid-svg-icons'\nclass AlertNavBar extends Component{\n    render(){\n        return(\n            <div className=\"row align-items-center mb-2\">\n                <div className=\"col-auto mr-auto\">\n                    {this.props.alertPlanta?\n                        <FontAwesomeIcon icon={faArrowLeft} onClick={e=>{\n                            this.props.alertPlanta()\n                        }} className='alert-icon'/>\n                        :\n                        null\n                    }\n                </div>\n                <div className=\"col-auto text-center text-light\">\n                    {this.props.title}\n                </div>\n                <div className=\"col-auto ml-auto\">\n                    <FontAwesomeIcon icon={faTimes} className='alert-icon mr-4 alert-close-icon' onClick={e=>{\n                        this.props.onClose()\n                    }}/>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertNavBar","import React , {Component} from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\n\nclass AlertCambiarCiclo extends Component{\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta\">\n                <AlertNavBar \n                    alertPlanta={this.props.alertPlanta} \n                    onClose={this.props.onclose} \n                />\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <h2 className=\"text-white\">Esta seguro que desea eliminar {this.props.nombre} del armario?</h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col text-center\">\n                        <button tpe=\"button\" className='btn btn-danger' onClick={e=>{\n                        }}>Si, Eliminar</button>\n                    </div>\n                    <div className=\"col text-center\">\n                        <button type=\"button\" className=\"btn btn-secondary\" onClick={this.props.onClose}>\n                            Cancelar\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertCambiarCiclo","import styled from 'styled-components'\n\nexport const Overlay=styled.div`\n    background:linear-gradient(180deg,rgb(0,0,0,0),rgb(0,0,0,0),rgba(0,0,0,1));\n`\nexport const Img = styled.img`\n    height:200px;\n    width:auto\n`\nexport const Card = styled.div`\n    cursor: pointer;\n`","import React, {useState,useEffect} from 'react'\nimport moment from 'moment'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertEliminarPlanta from '../alerts/AlertEliminarPlanta'\nimport AlertCambiarCiclo from '../alerts/AlertCambiarCiclo';\nimport {database} from 'firebase'\nimport {Overlay,Img,Card} from './styles/TarjetaPlantaStyles'\nimport {Link} from 'react-router-dom'\nimport {Paper} from '@material-ui/core'\nimport {Grow} from '@material-ui/core' \nimport {makeStyles} from '@material-ui/core'\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      backgroundColor:theme.palette.primary.dark,\n      padding:theme.spacing(1)\n    },\n  }));\n\nexport const TarjetaPlanta=(props)=>{\n    let [edad,setEdad]=useState(undefined)\n    useEffect(()=>{\n        setEdad(moment().diff(moment(props.nacimiento),'days'))\n    })\n    const classes = useStyles()\n    return(\n        <div className=\"col-auto\">\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={6} className={classes.paper}>\n                    <Link className='text-white' to={{\n                        pathname:'/Planta',\n                        props:{\n                            ...props\n                        }\n                    }}>\n                        <Card className=\"card\" >\n                            <Img src={fotoPlanta} className=\"card-img-top\" alt=\"...\"/>\n                            <Overlay className=\"card-img-overlay d-flex flex-column justify-content-end pl-1 pb-1\">\n                                <div className=\"container-fluid\">\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h4 className=\"card-title\">{props.nombre}</h4>\n                                        </div>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col text-left\">\n                                            <h6 className=\"card-subtitle mb-2 text-white\">{edad} dias</h6>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Overlay>\n                        </Card>\n                    </Link>\n                </Paper>\n            </Grow>\n        </div>\n    )\n}","import React, {Component} from 'react'\nimport {TarjetaPlanta} from './TarjetaPlanta'\nimport {connect} from 'react-redux'\nimport {confirmAlert} from 'react-confirm-alert'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './styles/alertPlanta.css'\nimport '../Pages/styles/Accion.css'\nimport { faPlusCircle} from '@fortawesome/free-solid-svg-icons'\nimport moment from 'moment'\nimport {database} from 'firebase'\nimport {Button,Typography,Grow,IconButton} from '@material-ui/core'\nimport {AddCircleOutline} from '@material-ui/icons'\nimport {Link} from 'react-router-dom'\nclass CarouselPlantas extends Component{\n    render(){\n        return(\n            <div className=\"container\">\n                <div className=\"row mb-3\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <Typography>\n                                Plantas Dentro Del Armario\n                            </Typography>\n                        </Grow>\n                    </div>\n                </div>\n                <div className=\"row align-items-center justify-content-start flex-nowrap overflow-auto\">\n                    {this.props.plantas?\n                        Object.keys(this.props.plantas).map(key=>(\n                            <TarjetaPlanta\n                                user={this.props.user}\n                                nacimiento={this.props.plantas[key].nacimiento} \n                                genetica={this.props.plantas[key].genetica}\n                                inicioVegetativo={this.props.plantas[key].inicioVegetativo} \n                                inicioFloracion={this.props.plantas[key].inicioFloracion} \n                                podas={this.props.plantas[key].podas} \n                                riegos={this.props.plantas[key].riegos}\n                                fumigaciones={this.props.plantas[key].fumigaciones}\n                                transplantes={this.props.plantas[key].transplantes}\n                                volumenMaceta={this.props.plantas[key].volumenMaceta}\n                                nombre={this.props.plantas[key].nombre}\n                                id={key}\n                                key={key}\n                                history={this.props.history}\n                            />\n                        ))\n                        :\n                        <div className=\"col-12 text-center\">\n                            <Typography  variant='h5'>Aun No hay plantas</Typography>\n                            <Link to='/Nueva-Planta'>\n                                <Button variant=\"contained\" color=\"primary\" endIcon={<AddCircleOutline/>}>\n                                    Agrega una!\n                                </Button>\n                            </Link>\n                        </div>\n                    }\n                    <div className=\"col-auto\">\n                        <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                            <Link to='/Nueva-Planta'>\n                                <IconButton\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                >\n                                    <AddCircleOutline />\n                                </IconButton>\n                            </Link>\n                        </Grow>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(CarouselPlantas)","import React, {useEffect, useState} from 'react'\nimport moment from 'moment'\nimport {Typography,makeStyles} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    text:{\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const  FechaYHora=()=>{\n    const classes = useStyles()\n    let [fecha,setFecha] = useState(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\n    useEffect(() => {\n        setInterval(() => {\n            setFecha(`${moment().format('DD/MM/YYYY')} ${moment().format('LT')}`)\n        }, 1000);\n    });\n    return(\n        <Typography variant='h4' className={classes.text}>{fecha}</Typography>\n    )\n}","import React from 'react'\nimport {Paper,List,ListItem,ListItemText,makeStyles,Grow} from '@material-ui/core'\nconst useStyles=makeStyles(theme=>({\n    paper:{\n        flexGrow:'1',\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n        backgroundColor:theme.palette.primary.main,\n    },\n    listText:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    itemList:{\n        display:'flex',\n        justifyContent:'space-around',\n        width:'100%',\n        marginTop:theme.spacing(2)\n    },\n    paperMain:{\n        display:'flex',\n        width:'100%',\n        padding:theme.spacing(1),\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const TarjetaArmario = ({periodo,horaDeInicio,cicloLuminico})=>{\n    const convertirHora=hora=>{\n        return hora<10?`0${hora}:00 Hs`:`${hora}:00 Hs`\n    }\n    const classes = useStyles()\n    return(\n        <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n            <div className={classes.itemList}>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Periodo' secondary={periodo}/>\n                </Paper>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Ciclo Luminico' secondary={convertirHora(cicloLuminico)}/>\n                </Paper>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Hora De Inicio' secondary={convertirHora(horaDeInicio)}/>\n                </Paper>\n                <Paper elevation={3} className={classes.paper}>\n                    <ListItemText className={classes.listText} primary='Hora De Final' secondary={convertirHora(horaDeInicio+cicloLuminico)}/>\n                </Paper>\n            </div>\n        </Grow>\n    )\n}","import React, {useEffect,useState} from 'react'\nimport moment from 'moment'\nimport {connect} from 'react-redux'\nimport {FechaYHora} from '../components/FechaYHora'\nimport './styles/table.css'\nimport {Paper,Typography} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grow}from '@material-ui/core'\nimport {TarjetaArmario} from '../components/TarjetaArmario'\n\nconst useStyles = makeStyles(theme => ({\n    root:{\n        width:'100%',\n        padding:theme.spacing(2),  \n    },\n    text:{\n        color: theme.palette.primary.contrastText\n    }\n}));\n\nexport const BarraDeLuz=(props)=>{\n    let [activo,setActivo]=useState(0)\n    let [faltante,setFaltante]=useState(undefined)\n    let [horaDeFinal,setHoraDeFinal]=useState(undefined)\n    let [transcurrido,setTranscurrido]=useState(undefined)\n    let [lamparaEncendida,setLampraEncendida]=useState(undefined)\n    let [cicloLuminico,setCicloLuminico]=useState(undefined)\n    let [intervalo,setIntervalo]=useState(undefined)\n\n    const getMinutes=(moment)=>{\n        const date = new Date()\n        const minutes= date.getMinutes()+date.getHours()*60\n        return minutes\n    }\n    const actualizarEstadoDeLampara=(minutes)=>{\n        let minutoDeInicio = props.horaDeInicio*60\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\n        if(minutoFinal>1440){\n            if(minutes<minutoDeInicio){\n                minutoFinal=minutoFinal-1440\n                if(minutes<minutoFinal){\n                    setLampraEncendida(true)\n                }\n                else{\n                    setLampraEncendida(false)\n                }\n            }\n            else{\n                setLampraEncendida(true)\n            }\n        }\n        else{\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\n                setLampraEncendida(true)\n            }\n            else{\n                setLampraEncendida(false)\n            }\n        }\n    }\n    const actualizarTranscurrido=minutes=>{\n\n        let minutoDeInicio = props.horaDeInicio*60\n        let minutoFinal = minutoDeInicio+(props.cicloLuminico*60)\n        if(minutoFinal>1440){\n            if(minutes<minutoDeInicio){\n                minutoFinal=minutoFinal-1440\n                if(minutes<minutoFinal){\n                    console.log(minutes+(1440-minutoDeInicio))\n                }\n                else{\n                    console.log(minutes-minutoFinal)\n                }\n            }\n            else{\n                console.log(minutes-minutoDeInicio)\n            }\n        }\n        else{\n            if(minutoDeInicio < minutes && minutoFinal > minutes){\n                console.log(minutes-minutoDeInicio)\n            }\n            else{\n                console.log(minutoFinal-minutes)\n            }\n        }\n\n\n        if(lamparaEncendida){\n            setTranscurrido(minutes-(props.horaDeInicio*60))\n            console.log(minutes-(props.horaDeInicio*60))\n        }\n        else{\n            if(props.horaDeInicio+props.cicloLuminico>24){\n                setTranscurrido(minutes-((props.horaDeInicio+props.cicloLuminico-24)*60))\n            }\n            else{\n\n            }\n        }\n    }\n    const actualizarFaltante=minutes=>{\n        if(lamparaEncendida){\n            const diferencia = ((props.horaDeInicio+props.cicloLuminico)*60)-minutes\n            setFaltante(diferencia)\n        }\n        else{\n            if(props.horaDeInicio+props.cicloLuminico>24){\n                const diferencia = ((props.horaDeInicio)*60)-minutes\n                setFaltante(diferencia)\n            }\n            else{\n\n            }\n        }\n    }\n    const actualizarBarraDeEstado=()=>{\n        const barra = document.getElementById('barraLuz')\n        if(lamparaEncendida){\n            const porcentaje = (transcurrido*100)/(props.cicloLuminico*60)\n            barra.style.width=porcentaje+'%'\n        }\n        else{\n            const porcentaje = (faltante*100)/(props.cicloLuminico+props.horaDeInicio*60)\n            console.log(porcentaje)\n            barra.style.width=porcentaje+'%'\n        }\n    }\n    useEffect(()=>{\n        const minutes= getMinutes()\n        actualizarEstadoDeLampara(minutes)\n        actualizarTranscurrido(minutes)\n        actualizarFaltante(minutes)\n        actualizarBarraDeEstado()\n    })\n    const calcularHoraFinal=()=>{\n        let horaDeFinal = parseInt(props.horaDeInicio)+parseInt(props.cicloLuminico)\n        if(horaDeFinal>24){\n            horaDeFinal=horaDeFinal-24\n            if(horaDeFinal<10){\n                horaDeFinal='0'+horaDeFinal\n            }\n            return `${horaDeFinal}:00 +1`\n        }\n        else{\n            if(horaDeFinal<10){\n                horaDeFinal='0'+horaDeFinal\n            }\n            return `${horaDeFinal}:00`\n        }\n    }\n    const classes = useStyles()\n    return(\n        <Grow in={true}\n        {...(true ? { timeout: 1500 } : {})}>\n            <div className={classes.root}>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-auto ml-auto mr-auto\">\n                            <FechaYHora/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        {!lamparaEncendida?\n                            <div className=\"col text-center\">\n                                <Typography variant='h4' className={classes.text}>\n                                    Descansando...\n                                </Typography>\n                            </div>\n                            :\n                            <div className=\"col text-center\">\n                                <Typography variant ='h4' className={classes.text}>\n                                    Creciendo...\n                                </Typography>\n                            </div>\n                        }\n                    </div>\n                    <div className=\"row mt-4\">\n                        <div className=\"col-10 offset-1\">\n                            <div className=\"progress\">\n                                <div className={!lamparaEncendida?\"progress-bar progress-bar-animated progress-bar-striped bg-dark\": \"progress-bar progress-bar-animated progress-bar-striped bg-success\" } role=\"progressbar\" id='barraLuz' aria-valuenow=\"10\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <TarjetaArmario periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico} />\n                    </div>\n                </div>\n            </div>\n        </Grow>\n    )\n}","import React from 'react'\nimport {makeStyles, Hidden} from '@material-ui/core'\nimport {AppBar,Toolbar,IconButton,Typography,Card,CardMedia,Paper,Switch,FormControlLabel} from '@material-ui/core'\nimport {Menu as MenuIcon,ArrowBackRounded,AccountCircle,HomeOutlined,NatureOutlined} from '@material-ui/icons'\nconst useStyles = makeStyles( theme=>({\n    appBar:{\n        backgroundColor:theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }\n}))\n\nexport const NavBar = ({page,planta,history,setRedirect,theme,setTheme,setMenuOpened}) =>{\n    const classes = useStyles()\n    return(\n        <AppBar className={classes.appBar} position=\"static\" >\n            <Toolbar>\n            {page!=='Armario'?\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                    if(!planta){\n                        if(history.location.pathname==='/Planta'){\n                            history.replace('/')\n                        }\n                        else{\n                            history.goBack()\n                        }\n                    }\n                    else{\n                        setRedirect(true)\n                    }\n                }} color=\"inherit\" aria-label=\"menu\">\n                    <ArrowBackRounded />\n                </IconButton>\n                :\n                <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                    \n                }} color=\"inherit\" aria-label=\"menu\">\n                    <AccountCircle />\n                </IconButton>\n            }\n            <Typography variant=\"h6\" className={classes.title} >\n                {page}\n            </Typography>\n            <IconButton edge=\"end\" className={classes.menuButton} onClick={e=>{\n                setMenuOpened(true)\n            }} color=\"inherit\" aria-label=\"menu\" size='large'>\n                <MenuIcon />\n            </IconButton>\n            </Toolbar>\n        </AppBar>\n    )\n}","import React from 'react'\nimport foto from '../images/cannabis.jpg'\nimport {auth} from 'firebase'\nimport {Card,CardMedia,} from '@material-ui/core'\nimport {HomeOutlined,NatureOutlined} from '@material-ui/icons'\nimport {BottomNavigation,BottomNavigationAction} from '@material-ui/core'\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug , faCogs, faAlignRight, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport Paper from '@material-ui/core/Paper';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme=>({\n    paper:{\n        maxWidth:'300px',\n        height:'100%',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.main\n    },\n    icon:{\n        color:\n            theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n}))\nexport const MenuDrawer = ({menuOpened,setMenuOpened,})=>{\n    const classes = useStyles()\n    return(\n        <Drawer anchor=\"right\" open={menuOpened}  onClose={e=>{setMenuOpened(false)}}>\n            <Paper className={classes.paper} elevation={6}>\n                <Card>\n                    <CardMedia\n                        component=\"img\"\n                        alt=\"Sea Of Green\"\n                        image={foto}\n                        title=\"Sea Of Green\"\n                    />\n                </Card>\n                <List>\n                    <Link to='/' className='outline-none text-dark'>\n                        <ListItem button key={'Armario'} >\n                            <ListItemIcon className={classes.icon}><HomeOutlined/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Armario'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Riego' className='outline-none text-dark'>\n                        <ListItem button key={'Regar'} >\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faTint}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Regar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Poda' className='outline-none text-dark'>\n                        <ListItem button key={'Podar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCut}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Podar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Insecticida' className='outline-none text-dark'>\n                        <ListItem button key={'Fumigar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Fumigar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Transplante' className='outline-none text-dark'>\n                        <ListItem button key={'Transplantar'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Transplantar'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Aplicables' className='outline-none text-dark'>\n                        <ListItem button key={'Aditivos'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Aditivos'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Historial' className='outline-none text-dark'>\n                        <ListItem button key={'Historial'}>\n                            <ListItemIcon className={classes.icon}><NatureOutlined/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Historial De Cosechas'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Aditivos' className='outline-none text-dark'>\n                        <ListItem button key={'Carencias y Excesos'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faBug}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Carencias y Excesos'} />\n                        </ListItem>\n                    </Link>\n                    <Link to='/Configuracion' className='outline-none text-dark'>\n                        <ListItem button key={'Configuracion'}>\n                            <ListItemIcon className={classes.icon}><FontAwesomeIcon icon={faCogs}/></ListItemIcon>\n                            <ListItemText  className={classes.text} primary={'Configuracion'} />\n                        </ListItem>\n                    </Link>\n                    <ListItem button key={'Cerrar Sesion'} className='text-danger' onClick={async e=>{\n                            await auth().signOut()\n                        }}>\n                        <ListItemIcon><FontAwesomeIcon icon={faTimes} className='text-danger'/></ListItemIcon>\n                        <ListItemText primary={'Cerrar Sesion'} />\n                    </ListItem>\n                </List>\n            </Paper>\n        </Drawer>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {Paper} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\nimport {NavBar} from '../components/Navbar'\nimport {MenuDrawer} from '../components/MenuDrawer'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n    },\n    drawer:{\n        maxWidth:'300px',\n        height:'100%',\n    },\n    icon:{\n        color:theme.palette.primary.contrastText\n    },\n    text:{\n        color:theme.palette.primary.contrastText\n    },\n    app:{\n        minHeight: '100vh',\n        height: '100vh',\n        maxHeight:'100vh',\n        display: 'flex',\n        textAlign: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'start',\n        fontSize: 'calc(10px + 2vmin)',\n        color: 'white',\n    }\n}));\n\n\nexport const Layout=({page,children,history,planta,user})=>{\n    const classes = useStyles();\n    let [menuOpened,setMenuOpened]=useState(false)\n    let [selectedTabs,setSelectedTabs]=useState('recents')\n    let [redirect,setRedirect]=useState(false)\n    if(redirect){\n        return(\n            <Redirect to={{\n                pathname:'/Planta',\n                props:{...planta}\n            }}/>\n        )\n    }\n    return(\n        <Paper className={classes.app}>\n            {user &&\n            <>\n                <NavBar page={page} planta={planta} history={history}  setRedirect={setRedirect} setMenuOpened={setMenuOpened}/>\n                <MenuDrawer menuOpened={menuOpened} setMenuOpened={setMenuOpened}/>\n            </>\n            }\n            {children}\n        </Paper>\n    )\n}","import React , {Component,useState} from 'react'\nimport CarouselPlantas from '../components/CarouselPlantas'\nimport {BarraDeLuz} from '../components/BarraDeLuz'\n//import TemperaturaYHumedad from '../components/TemperaturaYHumedad'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport '../components/styles/alertPlanta.css'\nimport './styles/Accion.css'\nimport {connect} from 'react-redux'\nimport  {database} from 'firebase'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Armario=(props)=>{\n    const classes = useStyles()\n    const cambiarHoraDeInicio=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(props.user).update({\n            horaDeInicio: parseInt(horas)\n        })\n    }\n    const cambiarHoraDeFinal=async ()=>{\n        const horas = document.getElementById('inputHoras').value\n        //const minutos = document.getElementById('inputMinutos').value\n        await database().ref().child(props.user).update({\n            horaDeFinal: parseInt(horas)\n        })\n    }\n    return(\n        <Layout history={props.history} page=\"Armario\" user={props.user}>\n            <Paper className={classes.root}>\n                <BarraDeLuz periodo={props.periodo} horaDeInicio={props.horaDeInicio} cicloLuminico={props.cicloLuminico}/>\n                <CarouselPlantas history={props.history}/>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps = state =>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        periodo:state.data.periodo,\n        horaDeInicio:state.data.horaDeInicio,\n        cicloLuminico:state.data.cicloLuminico,\n    }\n}\nexport default connect(mapStateToProps,null)(Armario)","import React , {Component} from 'react'\nimport {connect} from 'react-redux'\nclass CheckboxPlanta extends Component{\n    render(){\n        return(\n            <div className='col text-center'>\n                <button type=\"button\" className={this.props.checked?'btn btn-success':'btn btn-outline-dark'} onClick={this.props.handleClick}>\n                    {this.props.plantas[this.props.llave].nombre}\n                </button>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        plantas:state.plantas\n    }\n}\nexport default connect(mapStateToProps,null)(CheckboxPlanta)","import React , {Component} from 'react'\nclass AlertConfirmarAccion extends Component {\n    render(){\n        return(\n            <div className=\"container-fluid alert alertPlanta h-100 d-flex flex-column justify-content-center\">\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <h2 className='text-white'>Confirmar {this.props.accion}?</h2>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.accionfn()\n                            this.props.onClose()\n                            this.props.history.goBack()\n                        }}>Confirmar</button>\n                    </div>\n                    <div className=\"col-auto\">\n                        <button type='button' className='btn btn-outline-light' onClick={e=>{\n                            this.props.onClose()\n                        }}>Cancelar</button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertConfirmarAccion","import React , {Component,useState} from 'react'\nimport CheckboxPlanta from './CheckboxPlanta'\nimport {Row,Col,Accordion,Card} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles,FormControlLabel,Checkbox,FormGroup} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab/'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n        width:\"100% !important\"\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    formControl:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}));\nexport const ElegirPlantaAccion=({plantas,seleccionarPlanta})=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <div className=\"container pt-4\">\n                    <div className=\"row my-2 justify-content-center\">\n                        {plantas.length?\n                        <FormGroup row>\n                            {plantas.map((planta,i)=>(\n                                <FormControlLabel\n                                className={classes.formControl}\n                                control={\n                                    <Checkbox color='primary'  checked={planta.selected} onChange={e=>{\n                                        seleccionarPlanta(i)}}\n                                    value={planta.nombre} />\n                                }\n                                label={planta.nombre}\n                                />\n                            ))}\n                        </FormGroup>\n                        :\n                        <div className=\"col-12\">\n                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Plantas En el Armario - <Link to='/Nueva-Planta'>Agrega una ahora!</Link> </AlertTitle> </Alert>\n                        </div>\n                        }\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    )\n}\nexport default ElegirPlantaAccion","import React, {useState} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport './styles/accion-card.css'\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}))\n\n\nexport const ElegirTipoDeRiego=({tipoDeRiego,cambiarTipoDeRiego})=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <div className=\"col-auto ml-auto mr-auto\">\n                    <RadioGroup aria-label=\"position\" name=\"position\" value={tipoDeRiego} onChange={e=>{cambiarTipoDeRiego(e.target.value)}} row>\n                        <FormControlLabel\n                            className={classes.radio}\n                            value=\"top\"\n                            control={<Radio\n                                value=\"Tierra\" \n                                name=\"Tierra\"\n                                color='primary'\n                            />}\n                            label='Tierra'\n                            labelPlacement=\"top\"\n                        />\n                        <FormControlLabel\n                            value=\"top\"\n                            className={classes.radio}\n                            control={<Radio\n                                value=\"Foliar\"\n                                name=\"Foliar\"\n                                color='primary'\n                            />}\n                            label=\"Foliar\"\n                            labelPlacement=\"top\"\n                        />\n                    </RadioGroup>\n                </div>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheck,faTimes} from '@fortawesome/free-solid-svg-icons'\nimport {Button,makeStyles} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n    },\n    buttonPrimary:{\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n}));\n\nexport const BotoneraConfirmacionAccion=(props)=>{\n    const classes = useStyles()\n    return(\n            <div className={classes.actionsContainer}>\n                <div>\n                    <Button\n                        className={classes.button}\n                        onClick={props.handleBack}\n                        className='mr-2'\n                    >\n                        Atras\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={\n                            e=>{\n                                props.confirmarAccion(props.accion)\n                            }\n                        }\n                    >\n                    <FontAwesomeIcon icon={faCheck} size='lg' className='mr-2'/>\n                    Guardar {props.accion}\n                </Button>\n                </div>\n            </div>\n    )\n}","import styled from 'styled-components'\n\nexport const Td = styled.td`\n    padding: 0.50rem !important;\n    vertical-align:middle !important\n`\nexport const Th = styled.th`\n    padding:0.50rem !important;\n    vertical-align:middle !important\n`","import React , {Component,Fragment,useRef} from 'react'\nimport {Row,Col,Form,Container} from 'react-bootstrap'\nimport {PopOver} from './Popover'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport {Alert,AlertTitle} from '@material-ui/lab';\nimport {FormControl,InputLabel,Select,MenuItem,makeStyles} from '@material-ui/core'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {Link} from 'react-router-dom'\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      width:\"100% !important\"\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    alert:{\n        alignItems:'center',\n    },\n    title:{\n        color: theme.palette.primary.contrastText,\n        marginTop:theme.spacing(1)\n    }\n  }));\nexport const FormularioAccion=(props)=>{\n    const classes = useStyles()\n    return(\n        <Row>\n            <Col sm={{span:8,offset:2}}>\n                <Container fluid className='pt-4'>\n                    <Form>  \n                        <Form.Row sm={{span:4,offset:4}} className='justify-content-center align-items-center'>\n                            <TextField id=\"outlined-basic\" type='number' value={props.cantidadDeAgua} label=\"Litros de Agua\" variant=\"outlined\" onChange={e=>{\n                                props.cambiarLitrosDeAgua(e.target.value)\n                                if(!e.target.value){\n                                    props.eliminarListaDeAditivos()\n                                }\n                            }}/>\n                        </Form.Row>\n                        <Form.Row className='justify-content-center align-items-center flex-column'>\n                            <div className=\"form-row\">\n                                <div className=\"col-auto\">\n                                    <Typography variant='h6' className={classes.title}>Aditivos (ml)</Typography>\n                                </div>\n                            </div>\n                            <div className=\"container\">\n                                <div className=\"form-row mt-4 justify-content-start w-80`\">\n                                    {props.aditivos?\n                                        props.aditivos.map((aditivo,i)=>(\n                                        aditivo.dosis[props.tipoDeRiego]?\n                                            <Fragment key={'input'+i}>  \n                                                <div className=\"form-group col-12 col-sm-6 cols-md-4\">\n                                                    <FormControl className={classes.formControl} >\n                                                        <InputLabel  id=\"emo-simple-select-helper-label\">\n                                                            {aditivo.nombre}\n                                                        </InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-helper-label\"\n                                                            id=\"demo-simple-select-helper\"\n                                                            disabled={!props.cantidadDeAgua}\n                                                            onChange={e=>{\n                                                                if(e.target.value){\n                                                                    props.cambiarAditivo([aditivo.nombre],e.target.value)\n                                                                }\n                                                                else{\n                                                                    props.eliminarAditivo([aditivo.nombre])\n                                                                }\n                                                            }}\n                                                        >\n                                                        <MenuItem value=''>-</MenuItem>\n                                                                {Object.keys(aditivo.dosis[props.tipoDeRiego]).map(key=>(\n                                                                    <MenuItem value={aditivo.dosis[props.tipoDeRiego][key]}>{aditivo.dosis[props.tipoDeRiego][key]} {key}</MenuItem>\n                                                                ))}\n                                                        </Select>\n                                                    </FormControl>\n                                                </div>\n                                            </Fragment>\n                                            :\n                                            null\n                                        ))\n                                        :\n                                        <div className=\"col-12\">\n                                            <Alert severity=\"warning\" variant='outlined' className={classes.alert}> <AlertTitle>No hay Aditivos disponibles - <Link to='/Aplicables'>Agrega uno ahora!</Link> </AlertTitle> </Alert>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                        </Form.Row>\n                    </Form>\n                </Container>\n            </Col>\n        </Row>\n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport { Paper } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme=>({\n  card: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n    color:theme.palette.secondary.contrastText,\n  },\n  pos: {\n    marginBottom: 12,\n    color:theme.palette.secondary.contrastText,\n  },\n  paper:{\n      background:theme.palette.secondary.main,\n      color:theme.palette.secondary.contrastText,\n      padding: theme.spacing(1)\n  }\n}));\n\nexport const ResumenAccion=({tipoDeRiego,plantas,aditivos,cantidadDeAgua,tipoDePoda,nuevaMaceta})=>{\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  return (\n    <Grid item xs={12}>\n        <Grid container justify=\"space-around\" alignItems='center' className='mb-2' >\n            <Grid item>     \n                <Paper elevation={3} className={classes.paper}>\n                    <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                        Plantas Seleccionadas\n                    </Typography>\n                    {plantas.map(planta => (\n                        planta.selected?\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                <strong>{planta.nombre}</strong>\n                            </Typography>\n                            :\n                            null\n                    ))}\n                </Paper>\n            </Grid>\n            {tipoDeRiego &&\n                <>  \n                    <Grid item>      \n                        <Paper elevation={6} className={classes.paper}>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Tipo De Riego\n                            </Typography>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                <strong>{tipoDeRiego}</strong>\n                            </Typography>\n                        </Paper>\n                    </Grid>\n                    <Grid item>      \n                        <Paper elevation={6} className={classes.paper}>\n                            <Typography className={classes.pos} color=\"textSecondary\">\n                                <strong>{cantidadDeAgua} L de agua</strong>\n                            </Typography>\n                            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                                Aditivos usados\n                            </Typography>\n                            {aditivos?\n                                Object.keys(aditivos).map(aditivo=>{\n                                    const dosis= aditivos[aditivo]\n                                    return(\n                                        <Typography className={classes.pos} color=\"textSecondary\">\n                                            <strong> {aditivo} {parseFloat(dosis.slice(0,dosis.indexOf(' '))*cantidadDeAgua).toFixed(2)} {dosis.slice(dosis.indexOf(' '),dosis.indexOf('/'))}</strong>\n                                        </Typography>\n                                    )\n                                })\n                                :\n                                <Typography className={classes.pos} color=\"textSecondary\">\n                                    <strong>-</strong>\n                                </Typography>\n                            }\n                        </Paper>\n                    </Grid>\n                </>\n            }\n            {tipoDePoda &&\n                <Grid item>      \n                    <Paper elevation={6} className={classes.paper}>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Tipo De Poda\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                            <strong>{tipoDePoda}</strong>\n                        </Typography>\n                    </Paper>\n                </Grid>\n            }\n            {nuevaMaceta &&\n                <Grid item>      \n                    <Paper elevation={6} className={classes.paper}>\n                        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                            Nuevo volumen de maceta\n                        </Typography>\n                        <Typography className={classes.pos} color=\"textSecondary\">\n                            <strong>{nuevaMaceta} Lt</strong>\n                        </Typography>\n                    </Paper>\n                </Grid>\n            }\n        </Grid>\n    </Grid>\n);\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport {BotoneraConfirmacionAccion} from './BotoneraConfirmacionAccion'\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n  root:{\n    height:'100%',\n    width:'100%',\n    display:'flex',\n    flexDirection:'column',\n    justifyContent:'space.around',\n    backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  buttonPrimary:{\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  actionsContainer: {\n    marginBottom: theme.spacing(2),\n  },\n  resetContainer: {\n    padding: theme.spacing(3),\n  },\n  paperSecondary:{\n    backgroundColor:theme.palette.type==='dark'?theme.palette.primary.dark:theme.palette.primary.main,\n    paddingBottom:theme.spacing(2),\n    paddingTop:theme.spacing(2),\n  },\n  padding:{\n    paddingBottom:theme.spacing(1),\n    color:theme.palette.primary.contrastText,\n    backgroundColor:theme.palette.secondary.light\n  },\n  stepper:{\n    backgroundColor:'transparent'\n  },\n  stepTitle:{\n    '& .MuiStepLabel-label':{\n      color:theme.palette.primary.contrastText\n    },\n  },\n  resetContainer:{\n    background:'linear-gradient(transparent 15%, #000)',\n    height:'100%',\n    paddingTop:theme.spacing(1)\n  }\n}));\n\n\nexport const  StepperAccion=({steps,cantidadDeAgua,tipoDeRiego,confirmarAccion,resumenAccion,tipoDeAccion,tipoDePoda,selectedPlants,nuevaMaceta})=>{\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const handleNext = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(prevActiveStep => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const setDisabled=(activeStep,tipoDeRiego,cantidadDeAgua)=>{\n    if(activeStep===0){\n      return selectedPlants.length?false:true\n    }\n    else if(activeStep===1){\n      if(tipoDeAccion==='Poda'){\n        return tipoDePoda?false:true\n      }\n      else if(tipoDeAccion==='Transplante'){\n        return nuevaMaceta?false:true\n      }\n      else{\n        return tipoDeRiego?false:true\n      }\n    }\n    else if(activeStep===2){\n        return cantidadDeAgua?false:true\n    }\n  }\n  return (\n    <Paper className={classes.root}>\n    <Grow in={true}\n      {...(true ? { timeout: 1500 } : {})}>\n        <div>\n          <Stepper activeStep={activeStep} orientation=\"vertical\" className={classes.stepper}>\n            {steps.map((step, index) => (\n              step?\n                    <Step key={step.title}>\n                      <Paper elevation={3} className={classes.paperSecondary}>\n                        <StepLabel className={classes.stepTitle}>{step.title}</StepLabel>\n                      </Paper>\n                      <StepContent>\n                        <Paper elevation={6} className={classes.padding}>\n                            <Typography>{step.content}</Typography>\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                <Button\n                                    disabled={activeStep === 0}\n                                    onClick={handleBack}\n                                    className={classes.button}\n                                >\n                                    Atras\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.buttonPrimary}\n                                    disabled={setDisabled(activeStep,tipoDeRiego,cantidadDeAgua)}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finalizar' : 'Siguiente'}\n                                </Button>\n                                </div>\n                            </div>\n                          </Paper>\n                        </StepContent>\n                    </Step>\n                    :\n                    null\n            ))}\n          </Stepper>\n          {activeStep === steps.length && (\n            <Paper square elevation={6} className={classes.resetContainer}>\n                {resumenAccion}\n                <BotoneraConfirmacionAccion\n                    accion={tipoDeAccion}\n                    handleBack={handleBack}\n                    confirmarAccion={confirmarAccion}\n                />\n            </Paper>\n          )}\n        </div>\n      </Grow>\n    </Paper>\n  );\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {FormularioAccion} from '../components/FormularioAccion';\nimport {Accordion} from 'react-bootstrap'\nimport {Layout} from './Layout'\nimport {ResumenAccion} from '../components/ResumenAccion'\n\nimport {StepperAccion} from '../components/StepperAccion'\nclass Riego extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.regar()\n        this.props.history.push('/')\n    }\n    regar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarRiegoBD(planta.id,this.state.cantidadDeAgua,this.state.tipoDeRiego,this.state.aditivos)\n            }\n            return null\n        })\n    }\n    guardarRiegoBD= async (idPlanta,agua,tipoDeRiego,fertilizantes)=>{\n        let fertilizantesFinal = {}\n        if(fertilizantes){\n            Object.keys(fertilizantes).map(fertilizante=>{\n                const dosis= fertilizantes[fertilizante]\n                fertilizantesFinal={\n                    ...fertilizantesFinal,\n                    [fertilizante]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('riegos').push({\n            agua:agua,\n            tipoDeRiego:tipoDeRiego,\n            fecha:moment().format('LLL'),\n            aditivos:fertilizantesFinal\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n        \n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n        <Layout history={this.props.history} page='Riego' user={this.props.user}>\n            <StepperAccion \n                step1='Plantas'\n                step2='Tipo De Riego'\n                step3='Cantidad de agua y aditivos'\n                selectedPlants={selectedPlants}\n                cantidadDeAgua={this.state.cantidadDeAgua}\n                tipoDeRiego={this.state.tipoDeRiego}\n                confirmarAccion={this.confirmarAccion}\n                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                tipoDeAccion='Riego'\n                steps={[\n                        {\n                        title:'Plantas',\n                        content:(\n                            <ElegirPlantaAccion\n                                seleccionarPlanta={this.seleccionarPlanta}\n                                plantas={this.state.plantas}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Tipo De Riego',\n                        content:(\n                            <ElegirTipoDeRiego\n                                tipoDeRiego={this.state.tipoDeRiego}    \n                                cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                setExpansionExpanded={this.setExpansionExpanded}\n                                expanded={this.state.expanded}\n                            />\n                        )},\n                        {title:'Cantidad De Agua y Aditivos',\n                        content:(\n                            <FormularioAccion\n                                    eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                    tipoDeRiego={this.state.tipoDeRiego}\n                                    cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                    cantidadDeAgua={this.state.cantidadDeAgua}\n                                    cambiarAditivo={this.cambiarAditivo}\n                                    adivito='Fertlizante'\n                                    aditivos={this.props.aditivos}\n                                    aditivosUsados={this.state.aditivos}\n                                    eliminarAditivo={this.eliminarAditivo}\n                                    setExpansionExpanded={this.setExpansionExpanded}\n                                    expanded={this.state.expanded}\n                                />\n                        )},\n                ]}\n            />\n        </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.fertilizantes\n    }\n}\nexport default connect(mapStateToProps,null)(Riego)","import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion'\nimport {ElegirTipoDeRiego} from '../components/ElegirTipoDeRiego';\nimport {FormularioAccion} from '../components/FormularioAccion'\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\nclass Insecticida extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas:[],\n        expanded:'panel1'\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.fumigar()\n        this.props.history.push('/')\n    }\n    fumigar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardrarFumigacionDB(planta.id,this.state.cantidadDeAgua,this.state.cantidadDeAgua,this.state.aditivos,this.state.tipoDeRiego)\n            }\n            return null\n        })\n    }\n    guardrarFumigacionDB= async (idPlanta,agua,cantidadDeAgua,insecticidas,tipoDeRiego)=>{\n        let insecticidasFinal = {}\n        if(insecticidas){\n            Object.keys(insecticidas).map(insecticida=>{\n                const dosis= insecticidas[insecticida]\n                insecticidasFinal={\n                    ...insecticidasFinal,\n                    [insecticida]:parseFloat(dosis.slice(0,dosis.indexOf(' '))*this.state.cantidadDeAgua).toFixed(2)\n                }\n                return null\n            })\n        }\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('fumigaciones').push({\n            agua:agua,\n            cantidadDeAgua:cantidadDeAgua,\n            fecha:moment().format('LLL'),\n            aditivos:insecticidasFinal,\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarTipoDeRiego=(tipoDeRiego)=>{\n        this.setState({\n            tipoDeRiego:tipoDeRiego\n        })\n    }\n    cambiarLitrosDeAgua=(litros)=>{\n        this.setState({\n            cantidadDeAgua:litros\n        })\n    }\n    cambiarAditivo=(fertilizante,cantidad)=>{\n        this.setState({\n            aditivos:{...this.state.aditivos,[fertilizante]:cantidad}\n        })\n    }\n    eliminarAditivo=(fertilizante)=>{\n        let newAditivos = this.state.aditivos\n        delete newAditivos[fertilizante]\n        if(Object.keys(newAditivos).length){\n            this.setState({aditivos:newAditivos})\n        }\n        else{\n            this.setState({aditivos:null})\n        }\n    }\n    eliminarListaDeAditivos=()=>{\n        this.setState({aditivos:undefined})\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Fumigacion' user={this.props.user}>\n                <div className=\"container-fluid overflow-auto h-100\">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDeRiego={this.state.tipoDeRiego}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDeRiego={this.state.tipoDeRiego} cantidadDeAgua={this.state.cantidadDeAgua} aditivos={this.state.aditivos}/>}\n                                tipoDeAccion='Fumigacion'\n                                steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Tipo De Riego',\n                                    content:(\n                                        <ElegirTipoDeRiego\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarTipoDeRiego={this.cambiarTipoDeRiego}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {title:'Cantidad De Agua y Aditivos',\n                                    content:(\n                                        <FormularioAccion\n                                            eliminarListaDeAditivos={this.eliminarListaDeAditivos}\n                                            tipoDeRiego={this.state.tipoDeRiego}\n                                            cambiarLitrosDeAgua={this.cambiarLitrosDeAgua}\n                                            cantidadDeAgua={this.state.cantidadDeAgua}\n                                            cambiarAditivo={this.cambiarAditivo}\n                                            aditivo='Insecticida'\n                                            aditivos={this.props.aditivos}\n                                            aditivosUsados={this.state.aditivos}\n                                            eliminarAditivo={this.eliminarAditivo}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                ]}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n        aditivos:state.data.insecticidas,\n    }\n}\nexport default connect(mapStateToProps,null)(Insecticida)","import React,{useState} from 'react'\nimport {Form,Row,Col,Container, Accordion, Card,InputGroup} from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport {TextField,Paper,makeStyles,Button,FormControl,InputLabel,Select,MenuItem,Typography} from '@material-ui/core'\nimport {AddOutlined} from '@material-ui/icons'\nimport {database} from 'firebase'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        alignItems:'center',\n        overflow:'auto'\n    },\n    firstPaper:{\n        width:'300px',\n        display:'flex',\n        flexDirection:'column',\n        marginTop:theme.spacing(1),\n        padding:theme.spacing(4),\n        backgroundColor:theme.palette.primary.main\n    },\n    secondPaper:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(1),\n        width:'80%',\n        backgroundColor:theme.palette.primary.main\n    },\n    dosisList:{\n        display:'flex',\n        flexWrap:'nowrap',\n        overflow:'auto',\n        width:'100%',\n        marginBottom:theme.spacing(1)\n    },\n    form:{\n        display:'flex',\n        minWidth:'200px',\n        margin:theme.spacing(1),\n        flexDirection:'column'\n    },\n    button:{\n        marginTop:theme.spacing(2),\n        marginBottom:theme.spacing(2),\n    }\n}))\n\nexport const FormNuevoAditivo = ({aditivos=[],tipoDeAditivo,user,history}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        console.log(tipoDeAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                history.goBack()\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                history.goBack()\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    \n    let [cantidadDeDosis,setCantidadDeDosis]=useState(1)\n    const exaplmesForInput=['Periodo Vegetativo','Cualquier Momento','Post Germinacion']\n    let dosisList = []\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <Paper elevation={4} className={classes.firstPaper}>\n                <Typography variant='h5'>\n                    Caracteristicas\n                </Typography>\n                <TextField label=\"Nombre\"  onChange={e=>{\n                    updateState(e.target.value,'nombre')\n                }}/>\n                <TextField label=\"Marca\"  onChange={e=>{\n                    updateState(e.target.value,'marca')\n                }}/>\n                <TextField label=\"Descripcion\"  multiline onChange={e=>{\n                    updateState(e.target.value,'descripcion')\n                }}/>\n            </Paper>\n            <Paper elevation={4} className={classes.secondPaper}>\n                <Typography variant='h5'>\n                    Dosificaciones\n                </Typography>\n                <Button\n                    variant='outlined'\n                    color='#fff'\n                    startIcon={<AddOutlined/>}\n                    onClick={e=>{\n                        setCantidadDeDosis(cantidadDeDosis+=1)\n                    }}\n                >\n                    Agregar otra dosis\n                </Button>\n                <div className={classes.dosisList}>\n                    {new Array(cantidadDeDosis).fill(undefined).map((vacio,i)=>(\n                        <form className={classes.form}>\n                            <TextField label=\"Etapa\"  color='#fff' placeholder={exaplmesForInput[i]?exaplmesForInput[i]:null} onChange={e=>{\n                                updateState(e.target.value,'etapa','dosis'+i)\n                            }}/>\n                            <TextField label=\"Cantidad\" color='#fff' onChange={e=>{\n                                updateState(parseFloat(e.target.value),'cantidad','dosis'+i)\n                            }}/>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Tipo De Dosificacion</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    id=\"demo-simple-select\"\n                                    color='#fff'\n                                    onChange={e=>{\n                                        updateState(e.target.value,'tipoDeDosis',\"dosis\"+i)\n                                    }}\n                                >\n                                    <MenuItem value={'1'}>gr/L</MenuItem>\n                                    <MenuItem value={'2'}>ml/L</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"demo-simple-select-label\">Tipo De Aplicacion</InputLabel>\n                                <Select\n                                    labelId=\"demo-simple-select-label\"\n                                    color='#fff'\n                                    id=\"demo-simple-select\"\n                                    onChange={e=>{\n                                        updateState(e.target.value,'tipoDeRiego','dosis'+i)\n                                    }}\n                                >\n                                    <MenuItem value={'Tierra'}>Tierra</MenuItem>\n                                    <MenuItem value={'Foliar'}>Foliar</MenuItem>\n                                </Select>\n                            </FormControl>\n                        </form>\n                    ))}\n                </div>\n            </Paper>\n            <Button\n                variant='contained'\n                color='primary'\n                className={classes.button}\n                onClick={e=>{\n                    agregarAditivo()\n                }}\n            >\n                Agregar {tipoDeAditivo}!\n            </Button>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle, faTimesCircle} from '@fortawesome/free-solid-svg-icons'\nclass AlertBotoneraConfirmacion extends Component{\n    render(){\n        return(\n            <div className=\"row justify-content-around\">\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faCheckCircle} className=\"alert-icon continueIcon\" onClick={e=>{\n                        this.props.cambiarHora()\n                        this.props.alertConfiguracion()\n                    }}/>\n                </div>\n                <div className=\"col-auto\">\n                    <FontAwesomeIcon icon={faTimesCircle} className='alert-icon cancelIcon' onClick={e=>{\n                        this.props.alertConfiguracion()\n                    }} />\n                </div>\n            </div>\n        )\n    }\n}\nexport default AlertBotoneraConfirmacion","import React ,{useState}from 'react'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport {FormNuevoAditivo} from '../alert-components/FormNuevoAditivo'\nimport AlertBotoneraConfirmacion from '../alert-components/AlertBotoneraConfirmacion'\nimport {database} from 'firebase'\nexport const AlertNuevoAditivo = ({tipoDeAditivo,onClose,aditivos=[],aditivo,user}) =>{\n    const [inputs,setInputs] = useState({})\n    const [dosis,setDosis] = useState({})\n    const ClasificarDosis = ()=>{\n        let Riego={}\n        let Foliar={}\n        Object.keys(dosis).map(newDosis=>{\n            let tipoDeDosis= dosis[newDosis].tipoDeDosis?'gr/L':'ml/L'\n            if(dosis[newDosis].tipoDeRiego==='Foliar'){\n                Foliar={\n                    ...Foliar,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n            else{\n                Riego={\n                    ...Riego,\n                    [dosis[newDosis].etapa]:`${dosis[newDosis].cantidad} ${tipoDeDosis}`\n                }\n            }\n        })\n        return{Riego,Foliar}\n    }\n    const agregarAditivo= async ()=>{\n        const {Riego,Foliar}=ClasificarDosis()\n        const newAditivo= {\n            nombre:inputs.nombre,\n            marca:inputs.marca,\n            descripcion:inputs.descripcion,\n            dosis:{\n                Tierra:Riego,\n                Foliar:Foliar\n            }\n        }\n        let newAditivos=aditivos\n        newAditivos.push(newAditivo)\n        switch (tipoDeAditivo) {\n            case 'Fertilizantes':\n                await database().ref().child(user).update({\n                    fertilizantes:newAditivos\n                })\n                break;\n            case 'Insecticidas':\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const updateState=(valor,nombre,indexDosis)=>{\n        console.log(valor)\n        if(indexDosis){\n            setDosis({\n                ...dosis,\n                [indexDosis]:{\n                    ...dosis[indexDosis],\n                    [nombre]:valor\n                }\n            })\n        }\n        else{\n            setInputs({\n                ...inputs,\n                [nombre]:valor\n            })\n        }\n    }\n    return(\n        <div className=\"container-fluid alert d-flex flex-column justify-content-between h-100 overflow-auto\">\n            <AlertNavBar\n                onClose={onClose}\n                title={tipoDeAditivo}\n            />\n            <FormNuevoAditivo aditivo={aditivo} updateState={(valor,nombre,dosis)=>{\n                updateState(valor,nombre,dosis)\n            }}/>\n            <AlertBotoneraConfirmacion cambiarHora={agregarAditivo} alertConfiguracion={onClose} />\n        </div>\n    )\n}","import React,{Fragment} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSortDown, faPlusCircle } from '@fortawesome/free-solid-svg-icons'\nimport { confirmAlert } from 'react-confirm-alert';\nimport {AlertNuevoAditivo} from '../alerts/AlertNuevoAditivo'\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport './styles/table.css'\nimport {database} from 'firebase'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined,AddOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,Grow, ListItemText,List,ListItem} from '@material-ui/core'\nimport {Link} from 'react-router-dom'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor:theme.palette.secondary.light,\n        color:theme.palette.primary.contrastText\n    },\n    paperDark: {\n        backgroundColor: theme.palette.primary.main,\n        color:theme.palette.primary.contrastText\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px white'\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    },\n    addButton:{\n        marginBottom:theme.spacing(1),\n        color:theme.palette.primary.contrastText\n    }\n  }));\n\n\nexport const TableAditivos = ({title,aditivos,user}) =>{\n    const alertEditarAditivo=(aditivo)=>confirmAlert({\n        customUI: ({ onClose }) => {\n            return (\n                <div className='custom-ui'>\n                    <AlertNuevoAditivo\n                        user={user}\n                        aditivos={aditivos}\n                        tipoDeAditivo={title}\n                        onClose={onClose}\n                        aditivo={aditivo}\n                    />\n                </div>\n            );\n        }\n    })\n    const eliminarAditivo=async (id)=>{\n        let newAditivos = aditivos\n        newAditivos.splice(id,1)\n        switch (title) {\n            case \"Fertilizantes\":\n                await database().ref().child(user).update({\n                   fertilizantes:newAditivos\n                })\n                break;\n            case \"Insecticidas\":\n                await database().ref().child(user).update({\n                    insecticidas:newAditivos\n                })\n                break;\n            default:\n                break;\n        }\n    }\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleChange = panel => (event, isExpanded) => {\n      setExpanded(isExpanded ? panel : false);\n    };\n    return(\n        <div className='overflow-auto'>\n            <div className=\"container mb-2\">\n                <div className=\"row\">\n                    <div className=\"col-auto ml-auto mr-auto\">\n                        <Link to={{\n                            pathname:'/Nuevo-Aditivo',\n                            props:{\n                                tipoDeAditivo:title\n                            }\n                        }}>\n                            <Button \n                                variant='text' \n                                className={classes.addButton} \n                                startIcon={<AddOutlined/>}\n                                >\n                                    Nuevo {title===\"Fertilizantes\"?'Fertilizante':\"Insecticida\"}\n                            </Button>\n                        </Link>\n                    </div>\n                </div>\n                {aditivos?\n                    aditivos.map((aditivo,i)=>(\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                        <Grow in={true}\n                            {...(true ? { timeout: 1500 } : {})}>\n                            <ExpansionPanel expanded={expanded === 'panel'+i} className={classes.expansionPanel}onChange={handleChange('panel'+i)}>\n                                <Paper elevation={4} className={classes.paperDark}>\n                                    <ExpansionPanelSummary\n                                    expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                                    aria-controls=\"panel1bh-content\"\n                                    id=\"panel1bh-header\"\n                                    >\n                                        <Typography className={classes.heading}>{aditivo.nombre} <span className='badge badge-pill badge-dark'>{aditivo.marca}</span></Typography>\n                                    </ExpansionPanelSummary>\n                                </Paper>\n                                <Paper elevation={6} className={classes.paperMain}>\n                                    <ExpansionPanelDetails>\n                                        <div className=\"container\">\n                                            <div className=\"row mb-2\">\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography variant='h5'>\n                                                        Descripcion\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <div className=\"row\">\n                                                <div className=\"col text-left\">\n                                                    <Typography variant='body2'>\n                                                        {aditivo.descripcion}\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            <hr/>\n                                            <div className=\"row\">\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography variant='h5'>\n                                                        Dosificacion\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                            {Object.keys(aditivo.dosis).map((tipoDeAplicacion,j)=>(\n                                                <Fragment key={'tipoDeAplicacion'+j}>\n                                                    <Typography  variant ='h6'>\n                                                            {tipoDeAplicacion}\n                                                    </Typography>\n                                                    <List>\n                                                        {Object.keys(aditivo.dosis[tipoDeAplicacion]).map((aplicacion,k)=>(\n                                                            <ListItem>\n                                                                <ListItemText primary={aplicacion} secondary={aditivo.dosis[tipoDeAplicacion][aplicacion]}/>\n                                                            </ListItem> \n                                                        ))}\n                                                    </List>\n                                                </Fragment>\n                                            ))}\n                                            <div className=\"row my-2 justify-content-around\">\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{alertEditarAditivo(aditivo)}}\n                                                    >   \n                                                        <EditOutlined className={classes.buttonText}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                        Editar\n                                                    </Typography>\n                                                </div>\n                                                <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                    <IconButton\n                                                        variant=\"contained\"\n                                                        color=\"inherit\"\n                                                        onClick={e=>{eliminarAditivo(i)}}\n                                                    >\n                                                        <DeleteOutline className={classes.buttonText}/>\n                                                    </IconButton>\n                                                    <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                        Eliminar\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </ExpansionPanelDetails>\n                                    </Paper>\n                            </ExpansionPanel>\n                        </Grow>\n                        </div>\n                    </div>\n                    ))\n                    :\n                    <Typography>Aun no hay ningun Aditivo</Typography>\n                }\n            </div>\n        </div>\n    )\n}","import React,{useState} from 'react'\nimport {Row,Col} from 'react-bootstrap'\nimport {Tabs,Tab,Paper,Typography,Box} from '@material-ui/core'\nimport {TableAditivos} from './TableAditivos'\nimport { makeStyles,Theme } from '@material-ui/core/styles';\nimport {Grow} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    paperMain: {\n      backgroundColor: 'transparent',\n    },\n    paperDark: {\n    backgroundColor: theme.palette.primary.light,\n    },\n    tabs:{\n        \"&.MuiTabs-scroller\":{\n            '&.MuiTabs-indicator':{\n                color: '#fff'\n            }\n        },\n    },\n    tab:{\n        \"&.MuiTab-textColorPrimary.Mui-selected\":{\n            color: '#fff',\n        }\n    },\n  }));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <Typography\n        component=\"div\"\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`simple-tabpanel-${index}`}\n        aria-labelledby={`simple-tab-${index}`}\n        {...other}\n      >\n        {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n    );\n  }\n\nexport const TabAditivos = ({fertilizantes,insecticidas,user}) =>{\n    const [value, setValue] = useState(0);\n    const classes = useStyles()\n    return(\n        <div className=\"container-fluid overflow-auto\">\n            <div className=\"row\">\n                <div className=\"col-12 px-0\">\n                    <Paper className={classes.paperDark}>\n                        <Tabs\n                            value={value}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={(e,value)=>{\n                                setValue(value)\n                            }}\n                            className={classes.tabs}\n                            aria-label=\"disabled tabs example\"\n                        >\n                            <Tab label=\"Fertilizantes\" className={classes.tab}/>\n                            <Tab label=\"Insecticidas\" className={classes.tab}/>\n                        </Tabs>\n                    </Paper>\n                    <TabPanel value={value} index={0}>\n                        <TableAditivos user={user} title='Fertilizantes' aditivos={fertilizantes}/>\n                    </TabPanel>\n                    <TabPanel value={value} index={1}>\n                        <TableAditivos user={user} title='Insecticidas' aditivos={insecticidas}/>\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, { Component } from 'react'\nimport { TabAditivos } from '../components/TabAditivos'\nimport { connect } from 'react-redux'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Aplicables=(props)=>{\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page='Aditivos' user={props.user}>\n            <Paper elevation={3} className={classes.root}>\n                <TabAditivos user={props.user} fertilizantes={props.fertilizantes} insecticidas={props.insecticidas}/>\n            </Paper>\n        </Layout>\n    )\n}\n\nconst mapStateToProps =(state)=>{\n    return{\n        user:state.user,\n        fertilizantes:state.data.fertilizantes,\n        insecticidas:state.data.insecticidas\n    }\n}\nexport default connect(mapStateToProps,null)(Aplicables)","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCannabis} from '@fortawesome/free-solid-svg-icons'\nimport {Paper,makeStyles,Typography} from '@material-ui/core'\nimport './styles/loading.css'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        display:'flex',\n        justifyContent:'center',\n        flexDirection:'column',\n        alignItems:'center',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        height:'100vh',\n        widht:'100%'\n    },\n    title:{\n        color:theme.palette.primary.contrastText,\n    }\n}))\nexport const PantallaDeCarga =()=>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <div className='row'>\n                <div className='col-12 text-center'>\n                    <Typography variant='h2'className={classes.title}>Cargando</Typography>\n                </div>\n            </div>\n            <div className=\"row justify-content-center mt-4\">\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon1'/>\n                    </h2>\n                </div>\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon2'/>\n                    </h2>\n                </div>\n                <div className=\"col-auto\">\n                    <h2>\n                        <FontAwesomeIcon icon={faCannabis} className='loading-icon' id='loading-icon3'/>\n                    </h2>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link,FormControlLabel,Checkbox} from '@material-ui/core'\nimport {LockOutlined} from '@material-ui/icons'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin: theme.spacing(8, 4),\n      padding:theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor:theme.palette.primary.main\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      '& .MuiOutlinedInput-input':{\n        color:theme.palette.primary.contrastText,\n      },\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.primary.contrastText\n      },\n      '& .MuiFormLabel-root.Mui-focused':{\n        color:theme.palette.secondary.contrastText\n      },\n      '& .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.secondary.dark,\n      },\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color:theme.palette.primary.contrastText,\n      '&.MuiButton-outlined':{\n        border: `1px solid ${theme.palette.primary.contrastText}`\n      },\n    },\n    background:{\n      background:theme.palette.primary.main,\n      color:theme.palette.primary.contrastText\n    },\n    link:{\n      color:theme.palette.primary.contrastText\n    },\n    root:{\n        width:'100%',\n    },\n    title:{\n        color:theme.palette.primary.contrastText\n    },\n    checkBox:{\n        color: theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText,\n        }\n    },\n    linkButtons:{\n        display:'flex',\n        flexDirection:'column'\n    }\n  }));\nexport const FormSignIn = ({inputUser,setInputUser,inputPassword,setInputPassword,userError,passwordError,loading,logIn})=>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                    Inicia Sesion\n                </Typography>\n                <form className={classes.form} noValidate>\n                <TextField\n                variant=\"filled\"\n                margin=\"normal\"\n                color='primary'\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email\"\n                error={userError}\n                helperText={userError?'Usuario No Encontrado':null}\n                name=\"email\"\n                value={inputUser}\n                onChange={e=>{setInputUser(e.target.value)}}\n                autoFocus\n                />\n                <TextField\n                variant=\"filled\"\n                color='primary'\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                value={inputPassword}\n                helperText={passwordError?'Contraseña incorrecta':null}\n                error={passwordError}\n                onChange={e=>{setInputPassword(e.target.value)}}\n                label=\"contraseña\"\n                type=\"password\"\n                id=\"password\"\n                />\n                <FormControlLabel\n                className={classes.checkBox}\n                control={<Checkbox value=\"remember\"  />}\n                label=\"Recuerdame\"\n                />\n                <Button\n                fullWidth\n                variant=\"outlined\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={e=>{logIn()}}\n                >\n                Ingresar!\n                </Button>\n                <div className={classes.linkButtons}>\n                    <Link href=\"#\" variant=\"body2\" className={classes.link}>\n                        Olvidaste tu contraseña?\n                    </Link>\n                    <Link variant=\"body2\">\n                        <LinkRouter to='/Login' className={classes.link}>\n                            {\"No tienes una cuenta? Registrate!\"}\n                        </LinkRouter>\n                    </Link>\n                </div>\n            </form>\n            </Paper>\n        </div>\n    )\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from './PantallaDeCarga'\nimport {Layout} from './Layout'\nimport {FormSignIn} from '../components/FormSignIn'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  \n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const SignInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const logIn=async()=>{\n        setloading(true)\n        setUserError(undefined)\n        setPasswordError(undefined)\n        await auth().signInWithEmailAndPassword(inputUser,inputPassword)\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n      <Layout>\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={7} className={classes.image}>\n              <img src={foto} alt=\"\" className={classes.img}/>\n            </Grid>\n            <Grid item xs={12} sm={8} md={5}>\n              loading?\n              <FormSignIn logIn={logIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword} userError={userError} passwordError={passwordError} />\n              :\n              <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                  <PantallaDeCarga/>\n                </Typography>\n            </div>\n        </Grid>\n        </Grid>\n      </Layout>\n    );\n}","import React from 'react'\nimport {Paper,Typography,Avatar,TextField,Grid,Button,makeStyles,Link} from '@material-ui/core'\nimport {LockOutlined} from '@material-ui/icons'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {PantallaDeCarga} from '../Pages/PantallaDeCarga'\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n      margin: theme.spacing(8, 4),\n      padding:theme.spacing(1),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      backgroundColor:theme.palette.primary.main\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.contrastText\n    },\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1),\n      '& .MuiOutlinedInput-input':{\n        color:theme.palette.primary.contrastText,\n      },\n      '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.primary.contrastText\n      },\n      '& .MuiFormLabel-root.Mui-focused':{\n        color:theme.palette.secondary.contrastText\n      },\n      '& .MuiOutlinedInput-notchedOutline':{\n        borderColor: theme.palette.secondary.dark,\n      },\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2),\n      color:theme.palette.primary.contrastText,\n      '&.MuiButton-outlined':{\n        border: `1px solid ${theme.palette.primary.contrastText}`\n      },\n    },\n    background:{\n      background:theme.palette.primary.main,\n      color:theme.palette.primary.contrastText\n    },\n    link:{\n      color:theme.palette.primary.contrastText\n    },\n    root:{\n        width:'100%',\n        height:'100%'\n    },\n    title:{\n      color:theme.palette.primary.contrastText\n    }\n  }));\nexport const FormLogin=({inputUser,setInputUser,inputPassword,setInputPassword,loading,signIn})=>{\n    const classes = useStyles()\n    return(\n        loading?\n          <div className={classes.paper}>\n              <Typography>\n                <PantallaDeCarga/>\n              </Typography>\n          </div>\n          :\n          <div className={classes.root}>\n            <Paper elevation={3} className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlined/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\" className={classes.title}>\n                    Registrate\n                </Typography>\n                <form className={classes.form} noValidate>\n                <TextField\n                    variant=\"filled\"\n                    margin=\"normal\"\n                    color='primary'\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    value={inputUser}\n                    onChange={e=>{setInputUser(e.target.value)}}\n                    autoFocus\n                />\n                <TextField\n                    variant=\"filled\"\n                    margin=\"normal\"\n                    color='secondary'\n                    required\n                    fullWidth\n                    name=\"password\"\n                    value={inputPassword}\n                    onChange={e=>{setInputPassword(e.target.value)}}\n                    label=\"contraseña\"\n                    type=\"password\"\n                    id=\"password\"\n                />\n                <Button\n                  fullWidth\n                  color='#fff'\n                  variant=\"outlined\"\n                  className={classes.submit}\n                  onClick={e=>{signIn()}}\n                >\n                Registrate!\n                </Button>\n                <Link variant=\"body2\">\n                      <LinkRouter to='/' className={classes.link}>\n                        Ya tienes una cuenta? Ingresa!\n                      </LinkRouter>\n                  </Link>\n            </form>\n            </Paper>\n          </div>\n    )\n}","import React,{useState} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {auth, database} from 'firebase'\nimport foto from '../images/sea of green.jpg'\nimport {PantallaDeCarga} from './PantallaDeCarga'\nimport {Link as LinkRouter} from 'react-router-dom'\nimport {Layout} from './Layout'\nimport {FormLogin} from '../components/FormLogin'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n    overflow:'auto'\n  },\n  image: {\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50]\n  },\n  img:{\n    objectFit:'cover',\n    width:\"100%\",\n    height:\"100%\"\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    padding:theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n    '& .MuiOutlinedInput-input':{\n      color:theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.primary.contrastText\n    },\n    '& .MuiFormLabel-root.Mui-focused':{\n      color:theme.palette.secondary.contrastText\n    },\n    '& .MuiOutlinedInput-notchedOutline':{\n      borderColor: theme.palette.secondary.dark,\n    },\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    color:theme.palette.primary.contrastText,\n    '&.MuiButton-outlined':{\n      border: `1px solid ${theme.palette.primary.contrastText}`\n    },\n  },\n  background:{\n    background:theme.palette.primary.main,\n    color:theme.palette.primary.contrastText\n  },\n  link:{\n    color:theme.palette.primary.contrastText\n  }\n}));\n\n\nexport const LogInPage=({history})=> {\n    const classes = useStyles();\n    let [inputUser,setInputUser]=useState(undefined)\n    let [loading,setloading]=useState(false)\n    let [inputPassword,setInputPassword]=useState(undefined)\n    let [userError,setUserError]=useState(undefined)\n    let [passwordError,setPasswordError]=useState(undefined)\n    \n\n    const signIn=async()=>{\n        setloading(true)\n        await auth().createUserWithEmailAndPassword(inputUser,inputPassword)\n        .then(async e=>{\n            await database().ref().child(e.user.uid).update({\n                horaDeInicio:0,\n                cicloLuminico:1,\n                periodo:'Vegetativo'\n            })\n            history.push('/')\n        })\n        .catch(error=>{\n          if(error.code==='auth/user-not-found'){\n            setUserError(error)\n          }\n          else{\n            setPasswordError(error)\n          }\n        })\n        setloading(false)\n    }\n\n    return (\n      <Layout>\n          <Grid container component=\"main\" className={classes.root}>\n              <Grid item xs={false} sm={4} md={7} className={classes.image}>\n                <img src={foto} alt=\"\" className={classes.img}/>\n              </Grid>\n              <Grid item xs={12} sm={8} md={5}>\n                loading?\n                <FormLogin signIn={signIn} inputUser={inputUser} setInputUser={setInputUser} inputPassword={inputPassword} setInputPassword={setInputPassword}/>\n                :\n                <div className={classes.paper}>\n                  <Typography component=\"h1\" variant=\"h5\">\n                    <PantallaDeCarga/>\n                  </Typography>\n              </div>\n            </Grid>\n          </Grid>\n      </Layout>\n    );\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}))\n\nexport const ElegirTipoDePoda=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.tipoDePoda}\n                            className={classes.radio}\n                            label=\"Tipo de poda\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport {connect} from 'react-redux'\nimport AlertConfirmarAccion from '../alerts/AlertConfirmarAccion'\nimport './styles/Accion.css'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport ElegirPlantaAccion from '../components/ElegirPlantaAccion';\nimport BotoneraConfirmacionAccion from '../components/BotoneraConfirmacionAccion';\nimport {ElegirTipoDePoda} from '../components/ElegirTipoDePoda';\nimport { StepperAccion } from '../components/StepperAccion';\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {Layout} from './Layout'\n\n\nclass Poda extends Component{\n    state={\n        plantas:undefined,\n        tipoDePoda:undefined,\n        plantas:[],\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.podar()\n        this.props.history.push('/')\n    }\n    podar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                console.log(planta)\n                this.guardarPodaBD(planta.id)\n            }\n            return null\n        })\n    }\n    guardarPodaBD= async (idPlanta)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('podas').push({\n            fecha:moment().format('LLL'),\n            tipoDePoda:this.state.tipoDePoda\n        })\n    }\n    cambiarTipoDePoda=(nuevoTipoDePoda)=>{\n        this.setState({\n            tipoDePoda:nuevoTipoDePoda\n        })\n    }\n    render(){\n        let selectedPlants=[]\n        if(this.state.plantas){\n            this.state.plantas.map(planta=>(\n                planta.selected?\n                    selectedPlants.push(planta.nombre)\n                    :\n                    null\n            ))\n        }\n        return(\n            <Layout history={this.props.history} page='Poda' user={this.props.user}>\n                <div className=\"container-fluid overflow-auto h-100 \">\n                    <div className=\"row h-100\">\n                        <div className=\"col-12 px-0\">\n                            <StepperAccion \n                                cantidadDeAgua={this.state.cantidadDeAgua}\n                                tipoDePoda={this.state.tipoDePoda}\n                                confirmarAccion={this.confirmarAccion}\n                                selectedPlants={selectedPlants}\n                                resumenAccion={<ResumenAccion plantas={this.state.plantas} tipoDePoda={this.state.tipoDePoda}/>}\n                                tipoDeAccion='Poda'\n                                steps={[\n                                {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                        />\n                                    )},\n                                {\n                                    title:'Tipo De Poda',\n                                    content:(\n                                        <ElegirTipoDePoda\n                                            handleChange={(nuevoTipoDePoda=>{\n                                                this.cambiarTipoDePoda(nuevoTipoDePoda)\n                                            })}\n                                            tipoDePoda={this.state.tipoDePoda}\n                                        />\n                                )}]\n                                }\n                            />\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps = state=>{\n    return{\n        user:state.user,\n        plantas:state.data.plantas,\n    }\n}\nexport default connect(mapStateToProps,null)(Poda)","const reducer = (state,action) =>{\n    return state\n}\nexport default reducer","import React,{useState}from 'react'\nimport { Paper,ListItem,List,ListItemText,FormControl,InputLabel,Select,MenuItem,makeStyles,Switch,FormControlLabel,TextField,InputAdornment,Grow,Button, Typography } from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\n\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    paper:{\n        marginTop:theme.spacing(1),\n        width:'300px',\n        background:theme.palette.primary.main,\n        display:'flex',\n        flexDirection:'column',\n        padding:theme.spacing(1)\n    },\n    FormControlSwitch:{\n        marginLeft:'auto',\n        marginRight:'auto'\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n    },\n    inputCicloLuminico:{\n        display:'flex',\n        flexDirection:'column'\n    },\n    alert:{\n        marginTop:theme.spacing(1)\n    }\n}))\nexport const ListConfig =({switchValue,setSwitchValue,horaDeInicio,cambiarHoraDeInicio,periodo,cambiarPeriodo,cicloLuminico,cambiarCicloLuminico})=>{\n    const classes = useStyles()\n    let [errorCicloLuminico,setErrorCicloLuminico]= useState(undefined)\n    let [horaDeRespaldo,setHoraDeRespaldo]= useState(undefined)\n    return(\n        <div className={classes.root}>\n            <Paper elevation={3} className={classes.paper}>\n                <FormControlLabel\n                    className={classes.FormControlSwitch}\n                    control={\n                        <Switch checked={switchValue} onChange={e=>{setSwitchValue(e.target.checked)}} value=\"switch\" />\n                    }\n                    label=\"Modo Oscuro\"\n                />\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Periodo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        readOnly={true}\n                        id=\"select\"\n                        value={periodo}\n                        onChange={e=>{\n                            cambiarPeriodo(e.target.value)\n                        }}\n                    >\n                        <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\n                        <MenuItem value={'Floracion'}>Floracion</MenuItem>\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Hora De Inicio Del Ciclo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"select\"\n                        value={horaDeInicio}\n                        startAdornment={\n                            <InputAdornment position=\"start\">HS</InputAdornment>\n                        }\n                        onChange={e=>{\n                            cambiarHoraDeInicio(e.target.value)\n                        }}\n                    >\n                        {new Array(24).fill(undefined).map((hour,index)=>(\n                            <MenuItem value={index}>\n                                {index<10?`0${index}:00`:`${index}:00`}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <FormControl className={classes.FormControl}>\n                    <InputLabel id=\"select-label\">Duracion Del Ciclo</InputLabel>\n                    <Select\n                        labelId=\"select-label\"\n                        id=\"select\"\n                        value={cicloLuminico}\n                        error={errorCicloLuminico}\n                        startAdornment={\n                            <InputAdornment position=\"start\">HS</InputAdornment>\n                        }\n                        onChange={e=>{\n                            console.log(e.target.value)\n                            if(e.target.value<13&&periodo==='Vegetativo'){\n                                setErrorCicloLuminico('Si este es menor de 13 Hs el armario pasara al periodo de Floracion')\n                                setHoraDeRespaldo(e.target.value)\n                            }\n                            if(e.target.value>=13&&periodo==='Floracion'){\n                                setErrorCicloLuminico('Si este es mayor de 13 Hs el armario pasara al periodo Vegetativo')\n                                setHoraDeRespaldo(e.target.value)\n                            }\n                            else{\n                                cambiarCicloLuminico(e.target.value)\n                            }\n                        }}\n                    >\n                        {new Array(25).fill(undefined).map((hour,index)=>(\n                            index&&\n                                <MenuItem value={index}>\n                                    {index}\n                                </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                {errorCicloLuminico&&\n                <Grow in={true}>\n                <   Alert className={classes.alert} variant=\"filled\" severity=\"warning\">\n                        <Typography>\n                            Quiere cambiar el ciclo luminico a {horaDeRespaldo} HS?\n                        </Typography>\n                        {errorCicloLuminico}\n                        <Button\n                            variant='contained'\n                            onClick={e=>{\n                                cambiarCicloLuminico(horaDeRespaldo)\n                                cambiarPeriodo(horaDeRespaldo>=13?'Vegetativo':'Floracion')\n                                setErrorCicloLuminico(undefined)\n                            }}\n                        >\n                            Continuar\n                        </Button>\n                    </Alert>\n                </Grow>\n                }\n            </Paper>\n        </div>\n    )\n}","import React, { useState } from 'react'\nimport {Layout} from './Layout'\nimport {connect} from 'react-redux'\nimport {ListConfig} from '../components/ListConfig'\nimport {database}from 'firebase'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space.around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Configuracion=(props)=>{\n    let [switchModoOscuro,setSwitchModoOscuro]= useState(localStorage.getItem('theme')==='dark'?true:false)\n    const setSwitchValue=value=>{\n        setSwitchModoOscuro(value)\n        if(!value){\n            props.setTheme('light')\n            localStorage.setItem('theme','light')\n        }\n        else{\n            props.setTheme('dark')\n            localStorage.setItem('theme','dark')\n        }\n    }\n    const cambiarHoraDeInicio=horaDeInicio=>{\n        database().ref().child(props.user).update({\n            horaDeInicio:horaDeInicio\n        })\n    }\n    const cambiarPeriodo=periodo=>{\n        database().ref().child(props.user).update({\n            periodo:periodo\n        })\n    }\n    const cambiarCicloLuminico=cicloLuminico=>{\n        database().ref().child(props.user).update({\n            cicloLuminico:cicloLuminico\n        })\n    }\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page='Configuracion' user={props.user}>\n            <Paper className={classes.root}>\n                <ListConfig \n                    switchValue={switchModoOscuro} \n                    setSwitchValue={setSwitchValue} \n                    horaDeInicio={props.horaDeInicio} \n                    cambiarHoraDeInicio={cambiarHoraDeInicio}\n                    periodo={props.periodo} \n                    cambiarPeriodo={cambiarPeriodo}\n                    cicloLuminico={props.cicloLuminico}\n                    cambiarCicloLuminico={cambiarCicloLuminico}\n                />\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps = state=>({\n    user:state.user,\n    periodo:state.data.periodo,\n    horaDeInicio:state.data.horaDeInicio,\n    cicloLuminico:state.data.cicloLuminico\n})\nexport default connect(mapStateToProps,null)(Configuracion)","import React from 'react'\nimport { AddCircleOutlineOutlined } from '@material-ui/icons'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {Card,CardHeader,CardMedia,CardActions,makeStyles,IconButton} from '@material-ui/core'\nconst useStyles= makeStyles(theme=>({\n    root: {\n        width: 250,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    cardHeader:{\n        backgroundColor:theme.palette.primary.dark,\n        color:theme.palette.primary.contrastText\n    }\n}))\nexport const CardHistorial=({nombre,fechaDeCorte,cantidadDeGramos})=>{\n    const classes= useStyles()\n    return(\n        <Card className={classes.root}>\n            <CardHeader\n                className={classes.cardHeader}\n                title={nombre}\n                subheader={fechaDeCorte}\n            />\n            <CardMedia\n                className={classes.media}\n                image={fotoPlanta}\n            />\n        </Card>\n    )\n}","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {Link} from 'react-router-dom'\nimport {Button,Typography} from '@material-ui/core'\nimport {CardHistorial} from '../components/CardHistorial'\nimport {makeStyles,Paper} from '@material-ui/core'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst Historial=(props)=>{\n    const classes = useStyles()\n    return(\n        <Layout history={props.history} page={'Historial'} user={props.user}>\n            <Paper elevation={3} className={classes.root}>\n                <div className=\"container-fluid overflow-auto\">\n                    <div className=\"row justify-content-center\">\n                        {props.historial?\n                            Object.keys(props.historial).map(planta=>(\n                                <div className=\"col-auto mt-3\">\n                                    <Link className='text-white' to={{\n                                        pathname:'/Historial/Planta',\n                                        props:{\n                                            ...props.historial[planta],\n                                            user:props.user,\n                                            id:planta,\n                                            history:props.history,\n                                            plantaDelHistorial:true\n                                        }\n                                    }}>\n                                        <CardHistorial cantidadDeGramos={props.historial[planta].cantidadDeGramos} nombre={props.historial[planta].nombre} fechaDeCorte={props.historial[planta].fechaDeCorte}/>\n                                    </Link>\n                                </div>\n                            )):\n                            <div className=\"col-auto\">\n                                <Typography>\n                                    No hay plantas en el historial\n                                </Typography>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    historial:state.data.historial\n})\nexport default connect(mapStateToProps,null)(Historial)","import React , {Component} from 'react'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport moment from 'moment'\nimport {Table,Row,Col,Container,Image} from 'react-bootstrap'\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport {List, ListItem,ListItemText,Paper, Divider,CardMedia,ListItemAvatar,Avatar,Grow} from '@material-ui/core'\nimport { PortableWifiOff, Height } from '@material-ui/icons';\nimport semilla from '../images/semilla.svg'\nimport vegetativo from '../images/vegetativo.svg'\nimport floracion from '../images/floracion.svg'\nimport maceta from '../images/maceta.svg'\nimport adn from '../images/adn.svg'\nimport balanza from '../images/balanza.svg'\nimport cosecha from '../images/cosecha.svg'\nconst useStyles = makeStyles(theme => ({\n    paper:{\n        backgroundColor:theme.palette.primary.main,\n        padding:theme.spacing(1),\n        flexGrow:'1',\n        marginTop:theme.spacing(2),\n        marginLeft:theme.spacing(1),\n        marginRight:theme.spacing(1),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center',\n        maxWidth:'220px'\n    },\n    listText:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiTypography-colorTextSecondary':{\n            color:theme.palette.primary.contrastText,\n        }\n    },\n    itemList:{\n        display:'flex',\n        justifyContent:'space-around',\n        width:'100%'\n    },\n    avatar:{\n        padding:theme.spacing(1),\n        width:theme.spacing(7),\n        height:theme.spacing(7)\n    }\n}))\n\nexport const DetallePlanta=(props)=>{\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    const classes = useStyles()\n            \n    return(\n        <div className={classes.itemList}>\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={adn} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Genetica' secondary={props.genetica}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={maceta} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Volumen Maceta' secondary={`${props.volumenMaceta} Lt`}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={semilla} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Fecha De Germinacion' secondary={props.nacimiento?props.nacimiento:'-'}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={vegetativo} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Fecha De Vegetativo' secondary={props.inicioVegetativo?props.inicioVegetativo:'-'}/>\n                </Paper>\n            </Grow>\n            <Grow in={true}\n            {...(true ? { timeout: 1500 } : {})}>\n                <Paper elevation={3} className={classes.paper}>\n                    <Avatar src={floracion} className={classes.avatar}/>\n                    <ListItemText className={classes.listText} primary='Fecha De Floracion' secondary={props.inicioFloracion?props.inicioFloracion:'-'}/>\n                </Paper>\n            </Grow>\n            {props.plantaDelHistorial && props.fechaDeCorte &&\n                <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={cosecha} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Fecha De Corte' secondary={props.fechaDeCorte}/>\n                    </Paper>\n                </Grow>\n            }\n            {props.plantaDelHistorial &&\n                <Grow in={true}\n                {...(true ? { timeout: 1500 } : {})}>\n                    <Paper elevation={3} className={classes.paper}>\n                        <Avatar src={balanza} className={classes.avatar}/>\n                        <ListItemText className={classes.listText} primary='Cantidad Cosechada' secondary={`${props.cantidadDeGramos?props.cantidadDeGramos:'-'}`}/>\n                    </Paper>\n                </Grow>\n            }\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTint, faCut , faBug} from '@fortawesome/free-solid-svg-icons'\nimport {Row,Col} from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\nimport {Button,makeStyles,Avatar,SvgIcon} from '@material-ui/core'\nimport {BugReportOutlined,InvertColorsOutlined} from '@material-ui/icons'\nimport {riegos} from '../images/riegos.svg'\nimport {transplante} from '../images/transplante.svg'\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    link:{\n        textDecoration:'none',\n        outline:'none',\n        margin:theme.spacing(1)\n    },\n    button:{\n        backgroundColor:theme.palette.primary.main\n    },\n    avatar:{\n        width:theme.spacing(5),\n        height:theme.spacing(5)\n    }\n}))\n\nexport const DetalleAcciones =(props)=>{\n    const classes= useStyles()\n    return(\n            <div className={classes.root}>\n                <Link\n                className={classes.link} \n                to={{ \n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Riegos':'/Planta/Riegos',\n                    props:{\n                        ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        endIcon={\n                            <Avatar src={riegos} className={classes.avatar}/>\n                        }\n                    >\n                        Riegos\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}\n                to={{ \n                    pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Podas':'/Planta/Podas',\n                    props:{\n                        ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                    >\n                        Podas\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}                 \n                to={{ \n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Fumigaciones':'/Planta/Fumigaciones',\n                props:{\n                    ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        endIcon={\n                            <Avatar src={riegos} className={classes.avatar}/>\n                        }\n                    >\n                        Fumigaciones\n                    </Button>\n                </Link>\n                <Link \n                className={classes.link}                 \n                to={{ \n                pathname:props.history.location.pathname==='/Historial/Planta'?'/Historial/Planta/Transplantes':'/Planta/Transplantes',\n                props:{\n                    ...props\n                }}}>\n                    <Button\n                        variant=\"contained\"\n                        className={classes.button}\n                        endIcon={\n                            <Avatar src={transplante} className={classes.avatar}/>\n                        }>\n                        Transplantes\n                    </Button>\n                </Link>\n            </div>\n    )\n}","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './components/styles/home.css'\nimport {HashRouter,Route,Switch,Redirect} from 'react-router-dom'\nimport Armario from './Pages/Armario'\nimport {Layout} from './Pages/Layout'\nimport Riego from './Pages/Riego'\nimport Insecticida from './Pages/Insecticida'\nimport Aplicables from './Pages/Aplicables'\nimport {SignInPage} from './Pages/SignIn'\nimport {LogInPage} from './Pages/Login'\nimport Poda from './Pages/Poda'\nimport {Provider} from 'react-redux'\nimport reducer from './reducers'\nimport {createStore} from 'redux'\nimport * as firebase from 'firebase'\nimport {PantallaDeCarga} from './Pages/PantallaDeCarga';\nimport Configuracion from './Pages/Configuracion';\nimport Historial from './Pages/Historial';\nimport {Planta} from './Pages/Planta'\nimport {PlantaRiegos} from './Pages/PlantaRiegos'\nimport {PlantaPodas} from './Pages/PlantaPodas'\nimport {PlantaFumigaciones} from './Pages/PlantaFumigaciones'\nimport {NotFound} from './Pages/NotFound'\nimport Transplante from './Pages/Transplante'\nimport NuevaPlanta from './Pages/NuevaPlanta'\nimport NuevoAditivo from './Pages/NuevoAditivo'\nimport {PlantaTransplantes} from './Pages/PlantaTransplantes'\nimport { createMuiTheme,ThemeProvider } from '@material-ui/core/styles';\n\nlet store \nlet data\nconst config = {\n  apiKey: \"AIzaSyCeZGOm5SWYvdx-0etcSR4Z82MipUFPakc\",\n  authDomain: \"asistente-de-cultivo.firebaseapp.com\",\n  databaseURL: \"https://asistente-de-cultivo.firebaseio.com\",\n  projectId: \"asistente-de-cultivo\",\n  storageBucket: \"asistente-de-cultivo.appspot.com\",\n  messagingSenderId: \"89543318439\",\n  appId: \"1:89543318439:web:ad0692faa495a539\"\n}\nfirebase.initializeApp(config)\nclass App extends Component {\n  state={\n    loading:true,\n    theme:localStorage.getItem('theme')?localStorage.getItem('theme'):'light'\n  }\n  async componentDidMount(){\n    firebase.auth().onAuthStateChanged(async user=>{\n      if(user){\n        const databaseRef = await firebase.database().ref().child(user.uid)\n        databaseRef.on('value', snapshot=>{\n          data= snapshot.val()\n          store=createStore(reducer, {user:user.uid,data:data})\n          this.setState({store,user:user,loading:false})\n        })\n      }\n      else{\n        this.setState({user:null,loading:false})\n      }\n    })\n    const theme = localStorage.getItem('theme')\n    console.log(theme)\n    if(!theme){\n        localStorage.setItem('theme','light')\n    }\n  }\n  \nsetTheme=theme=>{\n  console.log(theme)\n  this.setState({theme:theme})\n}\n  render(){\n    const themeProvider = createMuiTheme({\n      palette: {\n          white:'#fff',\n          primary: {\n          light: '#48a999',\n          main: '#00796b',\n          dark: '#004c40',\n          contrastText: '#fff',\n          },\n          secondary: {\n          light: '#4f5b62',\n          main: '#263238',\n          dark: '#000a12',\n          contrastText: '#000',\n          },\n          danger:'#c62828',\n          type:this.state.theme\n      },\n  });\n    if(this.state.loading){\n      return(\n        <div className=\"App justify-content-center\">\n          <ThemeProvider theme={themeProvider}>\n              <PantallaDeCarga/>\n          </ThemeProvider>\n        </div>\n      )\n    }\n    else{\n      if(this.state.user){\n        return (\n          <ThemeProvider theme={themeProvider}>\n              <Provider store={this.state.store}>\n                <HashRouter>\n                  <Switch>\n                    <Route exact path='/' component={Armario}/>\n                    <Route exact path='/Riego' component={Riego}/>\n                    <Route exact path='/Poda' component={Poda}/>\n                    <Route exact path='/Transplante' component={Transplante}/>\n                    <Route exact path='/Insecticida' component={Insecticida}/>\n                    <Route exact path='/Aplicables' component={Aplicables}/>\n                    <Route exact path='/Configuracion' render={(props) => <Configuracion {...props} setTheme={this.setTheme} />}/>\n                    <Route exact path='/Historial' component={Historial}/>\n                    <Route exact path='/Planta' component={Planta}/>\n                    <Route exact path='/Nueva-Planta' component={NuevaPlanta}/>\n                    <Route exact path='/Nuevo-Aditivo' component={NuevoAditivo}/>\n                    <Route exact path='/Historial/Planta' component={Planta}/>\n                    <Route exact path='/Planta/Riegos' component={PlantaRiegos}/>\n                    <Route exact path='/Planta/Podas' component={PlantaPodas}/>\n                    <Route exact path='/Planta/Transplantes' component={PlantaTransplantes}/>\n                    <Route exact path='/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                    <Route exact path='/Historial/Planta/Riegos' component={PlantaRiegos}/>\n                    <Route exact path='/Historial/Planta/Podas' component={PlantaPodas}/>\n                    <Route exact path='/Historial/Planta/Transplantes' component={PlantaTransplantes}/>\n                    <Route exact path='/Historial/Planta/Fumigaciones' component={PlantaFumigaciones}/>\n                    <Route exact path='/Deficiencias-Carencias' component={Aplicables}/>\n                  </Switch>\n                </HashRouter>\n              </Provider>\n            </ThemeProvider>\n        )\n      }\n      else{\n        return (\n          <ThemeProvider theme={themeProvider}>\n            <HashRouter>\n              <Switch>\n                <Route exact path='/' component={SignInPage}/>\n                <Route exact path='/Login' component={LogInPage}/>\n                <Route  component={NotFound}/>\n              </Switch>\n            </HashRouter>\n          </ThemeProvider>\n        )\n      }\n    }\n  }\n}\n\nexport default App;\n","import React , {useState} from 'react'\nimport {makeStyles,IconButton,Typography} from '@material-ui/core'\nimport {DeleteOutline,EditOutlined} from '@material-ui/icons'\n\nconst useStyles= makeStyles(theme=>({\n    editButton:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText,\n    },\n    deleteButton:{\n        color:theme.palette.error.main\n    },\n    editText:{\n        color:theme.palette.type==='dark'?theme.palette.primary.contrastText:theme.palette.secondary.contrastText,\n    },\n    deleteText:{\n        color:theme.palette.error.main\n    },\n    cosecharButton:{\n        color:theme.palette.success.main\n    },\n    cosecharText:{\n        color:theme.palette.success.main\n    },\n}))\n\nexport const BotoneraConfiguracionPlanta =({inicioFloracion,cosecharPlanta,eliminarPlanta,}) =>{\n    const classes = useStyles()\n    return(\n        <div className=\"row my-2 justify-content-around\">\n            {inicioFloracion &&\n                <div className='d-flex flex-column'>\n                    <IconButton\n                        variant=\"contained\"\n                        color='secondary'\n                        onClick={cosecharPlanta}\n                        className={classes.cosecharButton}\n                        >\n                        <DeleteOutline/>\n                    </IconButton>\n                    <Typography variant='caption' className={classes.cosecharText}>\n                        Cosechar\n                    </Typography>\n                </div>\n            }\n            <div className='d-flex flex-column'>\n                <IconButton\n                    variant=\"contained\"\n                    className={classes.editButton}\n                    >\n                    <EditOutlined/>\n                </IconButton>\n                <Typography variant='caption'className={classes.editText}>\n                    Editar\n                </Typography>\n            </div> \n            <div className='d-flex flex-column'>\n                <IconButton\n                    variant=\"contained\"\n                    className={classes.deleteButton}\n                    onClick={e=>{\n                        eliminarPlanta()\n                    }}\n                >\n                    <DeleteOutline/>\n                </IconButton>\n                <Typography variant='caption' className={classes.deleteText}>\n                Eliminar\n                </Typography>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {makeStyles,Typography,ExpansionPanel,ExpansionPanelSummary,ExpansionPanelDetails,TextField,InputAdornment,Button} from '@material-ui/core'\nimport {CheckCircle,ExpandMore} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        width:'100%',\n        display:'flex',\n        justifyContent:'center'\n    },\n    expansionPanel:{\n        width:'50%'\n    },\n    ExpansionPanelDetails:{\n        flexDirection:'column',\n        alignItems:'center',\n        justifyContent:'center'\n    },\n}))\nexport const InputCantidadCosechada = ({inputCantidad,setInputCantidad,guardarCantidadCosechada}) =>{\n    const classes = useStyles()\n    return(\n        <div className={classes.root}>\n            <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary\n                expandIcon={<ExpandMore />}\n                aria-controls=\"panel1a-content\"\n                id=\"panel1a-header\"\n                >\n                    <Typography className={classes.heading}>Ingresar Cantidad Cosechada</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.ExpansionPanelDetails}>\n                    <TextField id=\"outlined-basic\" \n                        value={inputCantidad}\n                        type='number'\n                        label=\"Cantidad Cosechada\"\n                        InputProps={{\n                            startAdornment: (\n                            <InputAdornment position=\"start\">\n                                gr\n                            </InputAdornment>\n                            ),\n                        }}\n                        variant=\"outlined\"\n                        onChange={e=>{\n                            setInputCantidad(e.target.value)\n                        }}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        onClick={e=>{\n                            guardarCantidadCosechada()\n                        }}\n                        endIcon={\n                            <CheckCircle/>\n                        }\n                        >\n                        Guardar \n                    </Button>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </div>\n    )\n}\n","import React,{useState}from 'react'\nimport {Layout} from './Layout'\nimport {DetallePlanta} from '../alert-components/DetallePlanta'\nimport {DetalleAcciones} from '../alert-components/DetalleAcciones'\nimport {Redirect} from 'react-router-dom'\nimport {DeleteOutline, EditOutlined, CheckCircle,ExpandMore} from '@material-ui/icons'\nimport {IconButton,Button,ButtonGroup,makeStyles,TextField,Paper,ExpansionPanel,ExpansionPanelSummary,Typography,ExpansionPanelDetails,GridList,GridListTile,CardMedia,InputAdornment} from '@material-ui/core'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport { BotoneraConfiguracionPlanta } from '../components/BotoneraConfiguracionPlanta'\nimport fotoPlanta from '../images/apple cookies.jpg'\nimport {InputCantidadCosechada} from '../components/InputCantidadCosechada'\n\n\nconst useStyles=makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space.around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonText:{\n        color:theme.palette.primary.contrastText,\n        textShadow:'1px 1px 10px black'\n    },\n    buttonDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    buttonTextDanger:{\n        color:theme.palette.primary.contrastText,\n        textShadow:`1px 1px 20px ${theme.palette.danger}`\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    paperPrimary:{\n        width:'100%',\n        height:'100%',\n        display:'flex',\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    gridList: {\n        flexWrap: 'nowrap',\n        width:'100%',\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n        transform: 'translateZ(0)',\n        '& .MuiGridListTile-root':{\n            width:'30% !important'\n        }\n    },\n    media: {\n        height:'100%'\n    },\n    rightPanel:{\n        display:'flex',\n        flexDirection:'column',\n        height:'100%',\n        justifyContent:'space-between',\n        padding:theme.spacing(1),\n    }\n}))\n\nexport const Planta =(props)=>{\n    const classes = useStyles()\n    let [collapseInputCantidad,setCollapseInputCantidad] = useState(false)\n    let [inputCantidad, setInputCantidad]= useState(undefined)\n    const cosecharPlanta=async ()=>{\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\n            nombre:props.location.props.nombre?props.location.props.nombre:null,\n            nacimiento:props.location.props.nacimiento?props.location.props.nacimiento:null,\n            genetica:props.location.props.genetica?props.location.props.genetica:null,\n            inicioVegetativo:props.location.props.inicioVegetativo?props.location.props.inicioVegetativo:null,\n            inicioFloracion:props.location.props.inicioFloracion?props.location.props.inicioFloracion:null,\n            podas:props.location.props.podas?props.location.props.podas:null,\n            riegos:props.location.props.riegos?props.location.props.riegos:null,\n            fumigaciones:props.location.props.fumigaciones?props.location.props.fumigaciones:null,\n            fechaDeCorte:moment().format('LLL')\n        })\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\n        props.location.props.history.goBack()\n    }\n    const guardarCantidadCosechada=async ()=>{\n        await database().ref().child(props.location.props.user).child('historial').child(props.location.props.id).update({\n            cantidadDeGramos:inputCantidad+' gr'\n        })\n        props.location.props.history.goBack()\n    }\n    const eliminarPlanta=async ()=>{\n        await database().ref().child(props.location.props.user).child('plantas').child(props.location.props.id).remove()\n        props.location.props.history.replace('/')\n    }\n    const tileData=[\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        },{\n            img:fotoPlanta,\n        }\n        ,{\n            img:fotoPlanta,\n        },\n        {\n            img:fotoPlanta,\n        }\n    ]\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid h-100\">\n                        <div className=\"row\">\n                            <div className=\"col-12\">\n                                <GridList className={classes.gridList} cols={2.5}>\n                                    {tileData.map(tile => (\n                                    <GridListTile key={tile.img} className={classes.tile}>\n                                        <CardMedia\n                                            className={classes.media}\n                                            image={fotoPlanta}\n                                        />\n                                    </GridListTile>\n                                    ))}\n                                </GridList>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <DetallePlanta \n                                genetica={props.location.props.genetica}\n                                cantidadDeGramos={props.location.props.cantidadDeGramos}\n                                plantaDelHistorial={props.location.props.plantaDelHistorial}\n                                edad={props.location.props.edad}\n                                nacimiento={props.location.props.nacimiento}\n                                inicioVegetativo={props.location.props.inicioVegetativo}\n                                inicioFloracion={props.location.props.inicioFloracion}\n                                fechaDeCorte={props.location.props.fechaDeCorte}\n                                volumenMaceta={props.location.props.volumenMaceta}\n                            />\n                            <DetalleAcciones\n                                {...props.location.props}\n                            />\n                            {props.location.props.plantaDelHistorial && !props.location.props.cantidadDeGramos &&\n                                <InputCantidadCosechada inputCantidad={inputCantidad} setInputCantidad={setInputCantidad} guardarCantidadCosechada={guardarCantidadCosechada} />\n                            }\n                            <div className=\"col-6 d-flex flex-column justify-content-around\">\n                                {!props.location.props.plantaDelHistorial &&\n                                    <BotoneraConfiguracionPlanta\n                                        inicioFloracion={props.location.props.inicioFloracion}\n                                        cosecharPlanta={cosecharPlanta}\n                                        eliminarPlanta={eliminarPlanta}\n                                    />\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faSortDown} from '@fortawesome/free-solid-svg-icons'\nimport * as firebase from 'firebase'\nimport {Accordion,Card} from 'react-bootstrap'\nimport {Grow, ListItem,List,ListItemText} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {DeleteOutline, EditOutlined} from '@material-ui/icons'\nimport {IconButton,ButtonGroup,ExpansionPanel,Divider} from '@material-ui/core'\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      color:theme.palette.primary.contrastText\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    paperMain: {\n        backgroundColor: theme.palette.secondary.light,\n        color:theme.palette.secondary.contrastText\n    },\n    paperDark: {\n        backgroundColor: theme.palette.primary.dark,\n        borderRadius:'0'\n    },\n    expansionPanel:{\n        backgroundColor:'transparent'\n    },\n    button:{\n        color:theme.palette.primary.contrastText,\n    },\n    buttonText:{\n        color:theme.palette.secondary.contrastText,\n    },\n    expandIcon:{\n        color:theme.palette.primary.contrastText\n    }\n  }));\nexport const AccionDetallada=(props)=>{\n    const classes= useStyles()\n    let [show,setShow] = useState(false)\n    \n    const eliminarAccion= async()=>{\n        await firebase.database().ref().child(props.user).child('plantas').child(props.idPlanta).child(props.tipoDeAccion).child(props.id).remove()\n    }\n    \n    useEffect(() => {\n        setTimeout(() => {\n            setShow(true)\n        }, 100);\n    })\n    return(\n        <div className=\"row\">\n            <div className=\"col-10 offset-1\">\n                <Grow in={true}\n                        {...(true ? { timeout: 1500 } : {})}>\n                    <ExpansionPanel expanded={props.expanded === 'panel'+props.index} className={classes.expansionPanel} onChange={props.handleChange('panel'+props.index)}>\n                        <Paper elevation={4} className={classes.paperDark}>\n                            <ExpansionPanelSummary\n                            expandIcon={<ExpandMoreIcon className={classes.expandIcon}/>}\n                            aria-controls=\"panel1bh-content\"\n                            id=\"panel1bh-header\"\n                            >\n                                <Typography className={classes.heading}>{props.accion.fecha}</Typography>\n                            </ExpansionPanelSummary>\n                        </Paper>\n                        <Paper elevation={4} className={classes.paperMain}>\n                            <ExpansionPanelDetails>\n                                <div className=\"container\">\n                                    {props.accion.agua &&\n                                        <div className=\"row\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.agua} L. De Agua \n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                    {props.accion.tipoDeRiego &&\n                                        <div className=\"row my-2\">\n                                            <div className=\"col-12 text-center\">\n                                                <Typography variant='h5'>\n                                                    {props.accion.tipoDeRiego==='Tierra'?' en Tierra':' Foliar'}\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                    {props.accion.tipoDePoda &&\n                                        <div className=\"col text-left\">\n                                            <Typography variant='h5'>\n                                                Poda {props.accion.tipoDePoda}\n                                            </Typography>\n                                        </div>\n                                    }\n                                    {props.accion.volumenMaceta &&\n                                        <div className=\"col text-left\">\n                                            <Typography variant='h5'>\n                                                Nuevo Volumen {props.accion.volumenMaceta} Lt\n                                            </Typography>\n                                        </div>\n                                    }\n                                    <Divider/>\n                                    {props.tipoDeAccion!=='podas' && props.tipoDeAccion!=='transplantes' && \n                                        <div className=\"row my-2\">\n                                            <div className=\"col-12 text-left\">\n                                                <Typography variant='h5'>\n                                                    Aditivos Usados\n                                                </Typography>\n                                            </div>\n                                            {props.accion.aditivos?\n                                                <List>\n                                                    {Object.keys(props.accion.aditivos).map((aditivo,i)=>(\n                                                        <>\n                                                            <Divider/>\n                                                            <ListItem>\n                                                                <ListItemText\n                                                                    primary={aditivo}\n                                                                    secondary={props.accion.aditivos[aditivo]+' ml'} \n                                                                />\n                                                            </ListItem>\n                                                        </>\n                                                    ))}\n                                                </List>\n                                                :\n                                                <div className=\"col-12 text-center\">\n                                                    <Typography>\n                                                        No se utilizaron Aditivos\n                                                    </Typography>\n                                                </div>\n                                            }\n                                        </div>\n                                    }\n                                    <Divider/>\n                                    {!props.plantaDelHistorial &&\n                                        <div className=\"row my-2 justify-content-around\">\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                >   \n                                                        <EditOutlined className={classes.buttonText}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                    Editar\n                                                </Typography>\n                                            </div>\n                                            <div className='d-flex flex-column justify-content-center align-items-center'>\n                                                <IconButton\n                                                    variant=\"contained\"\n                                                    color=\"inherit\"\n                                                    onClick={e=>{eliminarAccion()}}\n                                                >\n                                                        <DeleteOutline className={classes.buttonText}/>\n                                                </IconButton>\n                                                <Typography variant='caption' className={classes.buttonText} gutterBottom>\n                                                    Eliminar\n                                                </Typography>\n                                            </div>\n                                        </div>\n                                    }\n                                </div>\n                            </ExpansionPanelDetails>\n                        </Paper>\n                    </ExpansionPanel>\n                </Grow>\n            </div>\n        </div>\n    )\n}","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {makeStyles,Paper} from '@material-ui/core';\nimport {Layout} from './Layout'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaRiegos =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Riegos'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.location.props.riegos?\n                                Object.keys(props.location.props.riegos).reverse().map((id,i)=>(\n                                    <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.riegos[id]} tipoDeAccion='riegos' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta no ha sido regada!</h2>\n                                        </div>\n                                    </div>\n                                    {!props.location.props.plantaDelHistorial &&\n                                        <div className=\"row justify-content-center mt-4\">\n                                            <div className=\"col-auto\">\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                    props.history.push('/Riego')\n                                                }}>Riegala Ahora!</button>\n                                            </div>\n                                        </div>\n                                    }\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {Component} from 'react'\n\nclass BreadcrumbPlanta extends Component{\n    render(){\n        return(\n            <div className='breadcrumb bg-light text-dark mb-0'>\n                <div className={this.props.item? 'breadcrumb-item':'breadcrumb-item active'} onClick={e=>{\n                    this.props.return()\n                }}>\n                    {this.props.nombre}\n                </div>\n                {this.props.item?\n                    <div className=\"breadcrumb-item active\">\n                        {this.props.item}\n                    </div>\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\nexport default BreadcrumbPlanta","import React , {useState} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaPodas =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Podas'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                        {props.location.props.podas?\n                            Object.keys(props.location.props.podas).reverse().map((id,i)=>(\n                                <AccionDetallada user={props.location.props.user} index={i}  plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} handleChange={handleChange} accion={props.location.props.podas[id]} tipoDePoda={props.location.props.podas[id].tipoDePoda}tipoDeAccion='podas' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                <div className=\"row justify-content-center mt-4\">\n                                    <div className=\"col-auto\">\n                                        <h2 className='text-white'>Esta Planta no ha sido podada!</h2>\n                                    </div>\n                                </div>\n                                {!props.location.props.plantaDelHistorial &&\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                        <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                            props.history.push('/Poda')\n                                        }}>Podala Ahora!</button>\n                                        </div>\n                                    </div>\n                                }\n                            </>\n                        }\n                    </div>        \n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React , {useState} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaFumigaciones =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Fumigaciones'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.location.props.fumigaciones?\n                                Object.keys(props.location.props.fumigaciones).reverse().map((id,i)=>(\n                                    <AccionDetallada handleChange={handleChange} index={i} plantaDelHistorial={props.location.props.plantaDelHistorial} expanded={expanded} user={props.location.props.user}index={i} accion={props.location.props.fumigaciones[id]} tipoDeAccion='fumigaciones' idPlanta={props.location.props.id} id={id} key={id}/>\n                                    ))\n                                    :\n                                    <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta aun no ha sido fumigada!</h2>\n                                        </div>\n                                    </div>\n                                    {!props.location.props.plantaDelHistorial &&\n                                        <div className=\"row justify-content-center mt-4\">\n                                            <div className=\"col-auto\">\n                                            <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                    props.history.push('/Insecticida')\n                                                }}>Fumigala Ahora!</button>\n                                            </div>\n                                        </div>\n                                    }\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nexport const NotFound = () =>{\n    return(\n        <div className=\"container\">\n            <h1>la pagina no se encuentra disponible</h1>\n            <Link to='/'>\n                Vuelve al Home\n            </Link>\n        </div>\n    )\n}","import React , {Component} from 'react'\nimport {Row,Col,Container} from 'react-bootstrap'\nimport {TextField,makeStyles,InputAdornment} from '@material-ui/core'\n\nconst useStyles= makeStyles(theme=>({\n    radio:{\n        color:theme.palette.primary.contrastText,\n        '& .MuiIconButton-label':{\n            color: theme.palette.primary.contrastText\n        }\n    }\n}))\n\nexport const ElegirNuevaMaceta=(props)=>{\n    const classes = useStyles()\n    return(\n        <Container className='pt-4'>\n            <Row>\n                <Col sm={{span:8,offset:2}}>\n                    <div className=\"row my-2 justify-content-center\">\n                        <div className=\"col-4\">\n                            <TextField id=\"outlined-basic\" \n                            value={props.nuevoVolumen}\n                            className={classes.radio}\n                            type='number'\n                            InputProps={{\n                                startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    Lt\n                                </InputAdornment>\n                                ),\n                            }}\n                            label=\"Nueva Maceta\" \n                            variant=\"outlined\"\n                                onChange={e=>{\n                                    props.handleChange(e.target.value)\n                                }}\n                            />\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}","import React, {Component} from 'react'\nimport {Layout} from './Layout'\nimport {connect } from 'react-redux'\nimport {StepperAccion} from '../components/StepperAccion'\nimport {ElegirPlantaAccion} from '../components/ElegirPlantaAccion'\nimport {ElegirNuevaMaceta} from '../components/ElegirNuevaMaceta'\nimport {ResumenAccion} from '../components/ResumenAccion'\nimport {database} from 'firebase'\nimport moment from 'moment'\n class Transplante extends Component{\n    state={\n        tipoDeRiego:undefined,\n        cantidadDeAgua:undefined,\n        plantas: [],\n        expanded:'panel1',\n        nuevaMaceta:undefined,\n    }\n    seleccionarPlanta=(index)=>{\n        let newSelectedPlants=this.state.plantas\n        newSelectedPlants[index].selected=!newSelectedPlants[index].selected\n        this.setState({\n            plantas:newSelectedPlants\n        })\n    }\n    componentDidMount(){\n        let plantas=[]\n        if(this.props.plantas){\n            Object.keys(this.props.plantas).map(key=>(\n                plantas.push(\n                    {\n                    selected:false,\n                    nombre:this.props.plantas[key].nombre,\n                    id:key\n                    }\n                )\n            ))\n        }\n        this.setState({\n            plantas:plantas\n        })\n    }\n    confirmarAccion=()=>{\n        this.transplantar()\n        this.props.history.push('/')\n    }\n    setExpansionExpanded=(panel)=>{\n        this.setState({expanded:panel})\n    }\n    setNuevaMaceta=(nuevoVolumen)=>{\n        this.setState({nuevaMaceta:nuevoVolumen})\n    }\n    transplantar=()=>{\n        this.state.plantas.map(planta=>{\n            if(planta.selected){\n                this.guardarTransplanteDB(planta.id,this.state.nuevaMaceta)\n            }\n            return null\n        })\n    }\n    guardarTransplanteDB= async (idPlanta,nuevoVolumen)=>{\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).child('transplantes').push({\n            volumenMaceta:nuevoVolumen,\n            fecha:moment().format('LLL'),\n        })\n        await database().ref().child(this.props.user).child('plantas').child(idPlanta).update({\n            volumenMaceta:nuevoVolumen,\n        })\n    }\n    render(){\n    let selectedPlants=[]\n    if(this.state.plantas){\n        this.state.plantas.map(planta=>(\n            planta.selected?\n                selectedPlants.push(planta.nombre)\n                :\n                null\n        ))\n    }\n        return(\n        <Layout history={this.props.history} page='Transplante' user={this.props.user}>\n            <div className=\"container-fluid overflow-auto h-100\">\n                <div className=\"row h-100\">\n                    <div className=\"col-12 px-0\">\n                        <StepperAccion \n                            step1='Plantas'\n                            step2='Nuevo Volumen de tierra'\n                            selectedPlants={selectedPlants}\n                            confirmarAccion={this.confirmarAccion}\n                            nuevaMaceta={this.state.nuevaMaceta}\n                            resumenAccion={<ResumenAccion plantas={this.state.plantas} nuevaMaceta={this.state.nuevaMaceta}/>}\n                            tipoDeAccion='Transplante'\n                            steps={[\n                                    {\n                                    title:'Plantas',\n                                    content:(\n                                        <ElegirPlantaAccion\n                                            seleccionarPlanta={this.seleccionarPlanta}\n                                            plantas={this.state.plantas}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                                    {\n                                    title:'Nuevo Volumen de tierra',\n                                    content:(\n                                        <ElegirNuevaMaceta\n                                            handleChange={this.setNuevaMaceta}\n                                            nuevoVolumen={this.state.nuevaMaceta}\n                                            setExpansionExpanded={this.setExpansionExpanded}\n                                            expanded={this.state.expanded}\n                                        />\n                                    )},\n                            ]}\n                        />\n                    </div>\n                </div>\n            </div>\n        </Layout>\n        )\n    }\n }\n const mapStateToProps=state=>({\n     user:state.user,\n     plantas:state.data.plantas,\n\n })\n export default connect(mapStateToProps,null)(Transplante)","import React,{useState} from 'react'\nimport {Paper, TextField,makeStyles,Typography,FormControl,InputLabel,Select,MenuItem,Button} from '@material-ui/core'\nimport {Alert,AlertTitle} from '@material-ui/lab'\nimport {CheckCircleOutlineOutlined} from '@material-ui/icons'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100vh',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        alignItems:'center',\n    },\n    form:{\n        padding:theme.spacing(4),\n        marginTop:theme.spacing(2),\n        display:'flex',\n        flexDirection:'column',\n        alignItems:'center'\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    paper:{\n        backgroundColor:theme.palette.primary.main\n    }\n}))\n\n\nexport const FormNuevaPlanta =({guardarNuevaPlantaDB,periodoArmario})=>{\n    const getDate=()=>{\n        const date = new Date\n        const year = date.getFullYear()\n        let month = date.getMonth()+1\n        month = month<10?month=`0${month}`:month\n        const days = date.getDate()\n        return`${days}/${month}/${year}`\n    }\n    const classes = useStyles()\n    let [nombre,setNombre]=useState(undefined)\n    let [genetica,setGenetica]=useState(undefined)\n    let [etapa,setEtapa]=useState(undefined)\n    let [selectedDate,setSelectedDate]=useState(undefined)\n    let [inicioGerminacion,setInicioGerminacion]= useState(getDate())\n    let [inicioVegetativo,setInicioVegetativo]= useState(undefined)\n    let [inicioFloracion,setInicioFloracion]= useState(undefined)\n\n    const handleDateChange = date => {\n        setSelectedDate(date);\n    };\n    \n    const renderInputsEtapa=etapa=>{\n        const date = getDate()\n        switch (etapa) {\n            case 'Vegetativo':\n                if(periodoArmario===etapa ){\n                    return(\n                        <>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} disabled={date===inicioGerminacion&&true} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                        </>\n                    )\n                }\n                else{\n                    return(\n                        <>  \n                            <Alert variant='outlined' severity=\"warning\">\n                                <AlertTitle>Si ingresa esta planta al armario empezara el periodo de floracion</AlertTitle>\n                            </Alert>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} disabled={!inicioGerminacion&&true} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                        </>\n                    )\n                }\n                break;\n            case 'Floracion':\n                if(periodoArmario===etapa){\n                    return(\n                        <>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                            <TextField label=\"Incio Floracion\" value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\n                        </>\n                    )\n                }\n                else{\n                    return(\n                        <>\n                            <Alert variant='outlined' severity=\"error\">\n                                <AlertTitle>No es recomendable introducir una planta en periodo de floracion en un armario con periodo Vegetativo</AlertTitle>\n                            </Alert>\n                            <TextField label=\"Incio Germinacion\" value={inicioGerminacion} placeholder={date} onChange={e=>{setInicioGerminacion(e.target.value)}}/>\n                            <TextField label=\"Incio Vegetativo\" value={inicioVegetativo} placeholder={date} onChange={e=>{setInicioVegetativo(e.target.value)}}/>\n                            <TextField label=\"Incio Floracion\" value={inicioFloracion} placeholder={date} onChange={e=>{setInicioFloracion(e.target.value)}}/>\n                        </>\n                    )\n                }\n                break;\n            default:\n                break;\n        }\n    }\n    return(\n        <div className={classes.root}>\n            <Paper elevation={6} className={classes.paper}>\n                <form className={classes.form}>\n                    <Typography className={classes.title}>\n                        Ingresa los siguientes datos\n                    </Typography>\n                    <TextField label=\"Nombre\" value={nombre} onChange={e=>{setNombre(e.target.value)}}/>\n                    <TextField label=\"Genetica\" value={genetica} onChange={e=>{setGenetica(e.target.value)}}/>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"etapa-select-label\">Etapa</InputLabel>\n                        <Select\n                            labelId=\"etapa-select-label\"\n                            id=\"etapa-select\"\n                            value={etapa}\n                            onChange={e=>{\n                                const etapa = e.target.value\n                                if(etapa==='Vegetativo'){\n                                    setInicioGerminacion(getDate())\n                                    setEtapa(e.target.value)\n                                }\n                                else{\n                                    setInicioGerminacion(undefined)\n                                    setEtapa(e.target.value)}\n                                }\n                            }\n                        >\n                            <MenuItem value={'Vegetativo'}>Vegetativo</MenuItem>\n                            <MenuItem value={'Floracion'}>Floracion</MenuItem>\n                        </Select>\n                    </FormControl>\n                </form>\n            </Paper>\n            {etapa &&\n                <Paper elevation={6}>\n                    <form className={classes.form}>\n                        {renderInputsEtapa(etapa)}\n                    </form>\n                </Paper>\n            }\n\n            <Button\n                variant='contained'\n                color='primary'\n                disabled={!nombre&&true}\n                startIcon={<CheckCircleOutlineOutlined/>}\n                onClick={e=>{\n                    guardarNuevaPlantaDB(nombre,genetica,etapa,inicioGerminacion,inicioVegetativo,inicioFloracion)\n                }}\n            >\n                Agregar Planta!\n            </Button>\n        </div>\n    )\n}","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport {FormNuevaPlanta} from '../components/FormNuevaPlanta'\nimport addFile from '../images/addFile.svg'\nimport {makeStyles, Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\n\nconst  NuevaPlanta=(props)=>{\n    const classes = useStyles()\n    const guardarNuevaPlantaDB= async (nombre,genetica,etapa,inicioGerminacion,inicioVegetativo,inicioFloracion)=>{\n        await database().ref().child(props.user).child('plantas').push({\n            nombre:nombre,\n            genetica:genetica?genetica:null,\n            nacimiento:inicioGerminacion?inicioGerminacion:null,\n            inicioVegetativo:inicioVegetativo?inicioVegetativo:null,\n            inicioFloracion:inicioFloracion?inicioFloracion:null\n        })\n        props.history.replace('/')\n    }\n    return(\n        <Layout page='Nueva Planta' user={props.user} history={props.history}>\n            <Paper elevation={3} className={classes.root}>\n                <FormNuevaPlanta guardarNuevaPlantaDB={guardarNuevaPlantaDB} periodoArmario={props.periodo}/>\n            </Paper>\n        </Layout>\n    )\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    periodo:state.data.periodo\n})\nexport default connect(mapStateToProps,null)(NuevaPlanta)","import React,{Component} from 'react'\nimport {Layout} from './Layout'\nimport { connect } from 'react-redux'\nimport {database} from 'firebase'\nimport moment from 'moment'\nimport addFile from '../images/addFile.svg'\nimport { FormNuevoAditivo } from '../alert-components/FormNuevoAditivo'\nimport {Redirect} from 'react-router-dom'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'space-around',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nconst NuevoAditivo=(props)=>{\n    const classes = useStyles()\n    if(!props.location.props){\n        return(\n            <Redirect to='Aplicables'/>\n        )\n    }\n    else{\n        return(\n            <Layout page='Nuevo Aditivo' user={props.user} history={props.history}>\n                <Paper elevation={3} className={classes.root}>\n                    <FormNuevoAditivo  \n                        history={props.history}\n                        aditivos={props.location.props.tipoDeAditivo==='Fertilizantes'?props.fertilizantes:props.insecticidas}\n                        tipoDeAditivo={props.location.props.tipoDeAditivo}\n                        user={props.user}\n                    />\n                </Paper>\n            </Layout>\n        )\n    }\n}\nconst mapStateToProps=state=>({\n    user:state.user,\n    fertilizantes:state.data.fertilizantes,\n    insecticidas:state.data.insecticidas\n})\nexport default connect(mapStateToProps,null)(NuevoAditivo)","import React , {useState,useEffect} from 'react'\nimport {AccionDetallada} from '../alert-components/AccionDetallada'\nimport AlertNavBar from '../alert-components/AlertNavBar'\nimport BreadcrumbPlanta from '../alert-components/BreadcrumbPlanta'\nimport {Accordion} from 'react-bootstrap'\nimport { Redirect } from 'react-router'\nimport {Layout} from './Layout'\nimport {makeStyles,Paper} from '@material-ui/core'\nconst useStyles = makeStyles(theme=>({\n    root:{\n        height:'100%',\n        width:'100%',\n        display:'flex',\n        flexDirection:'column',\n        justifyContent:'flex-start',\n        backgroundColor:theme.palette.type==='dark'?theme.palette.secondary.main:theme.palette.primary.dark,\n        borderRadius:'0'\n    }\n}))\nexport const PlantaTransplantes =(props)=>{\n    let [expanded,setExpanded]= useState(false)\n\n    const handleChange = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n    const classes = useStyles()\n    return(\n        props.location.props?\n            <Layout history={props.history} page={props.location.props.nombre+'/Transplantes'} planta={props.location.props} user={props.location.props.user}>\n                <Paper elevation={3} className={classes.root}>\n                    <div className=\"container-fluid overflow-auto pt-4\">\n                            {props.location.props.transplantes?\n                                Object.keys(props.location.props.transplantes).reverse().map((id,i)=>(\n                                    <AccionDetallada handleChange={handleChange} index={i} expanded={expanded} plantaDelHistorial={props.location.props.plantaDelHistorial} user={props.location.props.user} accion={props.location.props.transplantes[id]} tipoDeAccion='transplantes' idPlanta={props.location.props.id} id={id} key={id}/>\n                                ))\n                                :\n                                <>\n                                    <div className=\"row justify-content-center mt-4\">\n                                        <div className=\"col-auto\">\n                                            <h2 className='text-white'>Esta Planta no ha sido transplantada!</h2>\n                                        </div>\n                                    </div>\n                                    {!props.location.props.plantaDelHistorial &&\n                                        <div className=\"row justify-content-center mt-4\">\n                                            <div className=\"col-auto\">\n                                                <button type='button' className=\"btn btn-link\" onClick={e=>{\n                                                    props.history.push('/Transplante')\n                                                }}>Transplatala Ahora!</button>\n                                            </div>\n                                        </div>\n                                    }\n                                </>\n                            }\n                    </div>\n                </Paper>\n            </Layout>\n            :\n            <Redirect to='/'/>\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n    <App />\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/apple cookies.7617cb20.jpg\";"],"sourceRoot":""}